#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Инициализирует параметры заполнения видов запасов дополнительных свойств документа, используемых при записи документа
// в режиме 'Проведения' или 'Отмены проведения'.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект.КорректировкаРеализации - документ, для которого выполняется инициализация параметров.
//	РежимЗаписи - РежимЗаписиДокумента - режим записи документа.
//
Процедура ИнициализироватьПараметрыЗаполненияВидовЗапасовДляПроведения(ДокументОбъект, РежимЗаписи = Неопределено) Экспорт
	
	ПараметрыЗаполнения = ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов();
	
	ДокументОбъект.ДополнительныеСвойства.Вставить("ПараметрыЗаполненияВидовЗапасов", ПараметрыЗаполнения);
	
КонецПроцедуры

// Заполняет реквизиты, хранящие информацию о видах запасов и аналитиках учета номенклатуры в табличной части
// 'Расхождения' документа, а также заполняет табличные части 'ВидыЗапасовОприходование', 'ВидыЗапасовСписание'
// и 'ВидыЗапасовКорректировкаВыручки'.
//
// Параметры:
//	Отказ - Булево - признак того, что не удалось заполнить данные.
//	ТаблицыДокумента - см. Документы.КорректировкаРеализации.КоллекцияТабличныхЧастейТоваров.
//
Процедура ЗаполнитьВидыЗапасовПриОбмене(Отказ, ТаблицыДокумента) Экспорт
	
	ЗаполнитьАналитикиУчетаНоменклатурыВТабличныхЧастяхТоваров();
	
	Если ТаблицыДокумента <> Неопределено Тогда
		ЗаполнитьАналитикиУчетаНоменклатурыВТабличныхЧастяхТоваров(ТаблицыДокумента);
		ДополнительныеСвойства.Вставить("ТаблицыЗаполненияВидовЗапасовПриОбмене", ТаблицыДокумента);
	Иначе
		ИмяПараметра = "ТаблицыДокумента";
		
		ТекстИсключения = НСтр("ru = 'Для заполнения видов запасов не передан параметр ""%1"".'");
		ТекстИсключения = СтрШаблон(ТекстИсключения, ИмяПараметра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	ЗаполнитьВидыЗапасов(Отказ);
	ДополнительныеСвойства.Удалить("ТаблицыЗаполненияВидовЗапасовПриОбмене");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ИсправлениеДокументов.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	НоменклатураСервер.ОкруглитьКоличествоШтучныхТоваров(ЭтотОбъект, РежимЗаписи);
	СуммаДокумента = ПолучитьСуммуДокумента();
	
	ОбщегоНазначенияУТ.ИзменитьПризнакСогласованностиДокумента(
		ЭтотОбъект,
		РежимЗаписи);
		
	ПараметрыРегистрации = Документы.КорректировкаРеализации.ПараметрыРегистрацииСчетовФактурПолученных(ЭтотОбъект);
	УчетНДСУП.АктуализироватьСчетаФактурыПолученныеПередЗаписью(ПараметрыРегистрации, РежимЗаписи, ПометкаУдаления, Проведен);
	
	ПараметрыРегистрации = Документы.КорректировкаРеализации.ПараметрыРегистрацииСчетовФактурВыданных(ЭтотОбъект);
	УчетНДСУП.АктуализироватьСчетаФактурыВыданныеПередЗаписью(ПараметрыРегистрации, РежимЗаписи, ПометкаУдаления, Проведен);
	
	ВзаиморасчетыСервер.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи);
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС Тогда
			Для Каждого Строка Из Товары Цикл
				Если Не ЗначениеЗаполнено(Строка.СтавкаНДС) Тогда
					Строка.СтавкаНДС = Справочники.СтавкиНДС.БезНДС;
				КонецЕсли;
			КонецЦикла;
			Для Каждого Строка Из Расхождения Цикл
				Если Не ЗначениеЗаполнено(Строка.СтавкаНДС) Тогда
					Строка.СтавкаНДС = Справочники.СтавкиНДС.БезНДС;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ЗаполнитьАналитикиУчетаНоменклатурыВТабличныхЧастяхТоваров();
		ЗаполнитьВидыЗапасов(Отказ);
		
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		
		ВидыЗапасовКорректировкаВыручки.Очистить();
		ВидыЗапасовОприходование.Очистить();
		ВидыЗапасовСписание.Очистить();
		
	КонецЕсли;
	
	СтрокаТЧ = "Расхождения,ВидыЗапасовКорректировкаВыручки,ВидыЗапасовОприходование,ВидыЗапасовСписание,КорректировкаЗадолженности";
	ОбщегоНазначенияУТ.ЗаполнитьИдентификаторыДокумента(ЭтотОбъект, СтрокаТЧ);
	
	// Очистим не используемые реквизиты документа.
	МассивВсехРеквизитов = Новый Массив;
	МассивРеквизитовОперации = Новый Массив;
	Документы.КорректировкаРеализации.ЗаполнитьИменаРеквизитовПоОснованию(
		ДокументОснование,
		МассивВсехРеквизитов,
		МассивРеквизитовОперации);
	ДенежныеСредстваСервер.ОчиститьНеиспользуемыеРеквизиты(
		ЭтотОбъект,
		МассивВсехРеквизитов,
		МассивРеквизитовОперации);
	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ЭтотОбъект,
															НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект,
																										Документы.КорректировкаРеализации));
	Для Каждого СтрокаТЧ Из Товары Цикл
		Если ВидКорректировки <> Перечисления.ХозяйственныеОперации.РеализацияПерепоставленногоТовара
			И ВидКорректировки <> Перечисления.ХозяйственныеОперации.ВозвратНедопоставленногоТовара Тогда
			
			СтрокаТЧ.ВариантОтражения = Перечисления.ВариантыОтраженияКорректировокРеализаций.ПустаяСсылка();

		КонецЕсли;
	КонецЦикла;
	
	ОтразитьНаПрочихДоходах = Ложь;
	СписатьНаРасходы  = Ложь;
	Если ВидКорректировки = Перечисления.ХозяйственныеОперации.КорректировкаРеализацииУвеличениеЗадолженностиСводно Тогда
		ОтразитьНаПрочихДоходах = Истина;
	ИначеЕсли ВидКорректировки = Перечисления.ХозяйственныеОперации.КорректировкаРеализацииУменьшениеЗадолженностиСводно Тогда
		СписатьНаРасходы = Истина;
	Иначе
		Для Каждого СтрокаТЧ Из Расхождения Цикл
			Если СтрокаТЧ.ВариантОтражения = Перечисления.ВариантыОтраженияКорректировокРеализаций.ОтразитьНаПрочихДоходах Тогда
				ОтразитьНаПрочихДоходах = Истина;
			ИначеЕсли СтрокаТЧ.ВариантОтражения = Перечисления.ВариантыОтраженияКорректировокРеализаций.СписатьНаРасходы
				ИЛИ СтрокаТЧ.ВариантОтражения = Перечисления.ВариантыОтраженияКорректировокРеализаций.УменьшитьРеализациюСписатьНаРасходы Тогда
				СписатьНаРасходы = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если НЕ ОтразитьНаПрочихДоходах Тогда
		ПодразделениеДоходы = Справочники.СтруктураПредприятия.ПустаяСсылка();
	КонецЕсли;
	
	Если НЕ СписатьНаРасходы Тогда
		ПодразделениеРасходы = Справочники.СтруктураПредприятия.ПустаяСсылка();
	КонецЕсли;
	
	ПараметрыДляВыбора = Новый Структура;
	ПараметрыДляВыбора.Вставить("ХозяйственнаяОперация", ВидКорректировки);
	ПараметрыДляВыбора.Вставить("ДокументОснование", ДокументОснование);
	ПараметрыДляВыбора.Вставить("ДатаДокумента", Дата);
	ПараметрыДляВыбора.Вставить("ОтразитьНаПрочихДоходах", ОтразитьНаПрочихДоходах);
	ПараметрыДляВыбора.Вставить("СписатьНаРасходы", СписатьНаРасходы);
	ПараметрыВыбораСтатейИАналитик = Документы.КорректировкаРеализации.ПараметрыВыбораСтатейИАналитик(ПараметрыДляВыбора);
	ДоходыИРасходыСервер.ПередЗаписью(ЭтотОбъект, ПараметрыВыбораСтатейИАналитик);
	
	ЗаполнитьВариантОформленияПродажи();
	
	Если ВидКорректировки = Перечисления.ХозяйственныеОперации.КорректировкаРеализацииУвеличениеЗадолженностиСводно
		ИЛИ ВидКорректировки = Перечисления.ХозяйственныеОперации.КорректировкаРеализацииУменьшениеЗадолженностиСводно Тогда
			ЦенаВключаетНДС = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Автор) И ЭтоНовый() Тогда
		Автор = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	КорректировкаРеализацииЛокализация.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		ЗаполнитьПоРеализацииТоваровУслуг(ДанныеЗаполнения, ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.АктВыполненныхРабот") Тогда
		
		ЗаполнитьПоАктуВыполненныхРабот(ДанныеЗаполнения, ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияУслугПрочихАктивов") Тогда
		
		ЗаполнитьПоРеализацииУслугПрочихАктивов(ДанныеЗаполнения, ДанныеЗаполнения);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
		И ДанныеЗаполнения.Свойство("АктОРасхождениях")
		И ДанныеЗаполнения.Свойство("Реализация")
		И ДанныеЗаполнения.Свойство("Операция") Тогда
		
		ЗаполнитьПоАктуОРасхожденияхПослеОтгрузки(ДанныеЗаполнения, ДанныеЗаполнения);
		
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура")И ДанныеЗаполнения.Свойство("ХозяйственнаяОперация") Тогда
		Если ДанныеЗаполнения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КорректировкаРеализацииУвеличениеЗадолженностиСводно Тогда
			ДанныеЗаполнения.Вставить("ВидКорректировки", Перечисления.ХозяйственныеОперации.КорректировкаРеализацииУвеличениеЗадолженностиСводно);
		ИначеЕсли ДанныеЗаполнения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КорректировкаРеализацииУменьшениеЗадолженностиСводно Тогда
			ДанныеЗаполнения.Вставить("ВидКорректировки", Перечисления.ХозяйственныеОперации.КорректировкаРеализацииУменьшениеЗадолженностиСводно);
		Иначе
			ДанныеЗаполнения.Вставить("ВидКорректировки", Перечисления.ХозяйственныеОперации.ИсправлениеОшибок);
		КонецЕсли;
	КонецЕсли;

	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	ДополнительныеСвойства.Вставить("НеобходимостьЗаполненияСчетаПриФОИспользоватьНесколькоСчетовЛожь", Ложь);
	
	КорректировкаРеализацииЛокализация.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);

	ПараметрДокументОснование = ДокументОснование;
	ПараметрДата = Дата;
	ПараметрВидКорректировки = ВидКорректировки;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если НЕ ЗначениеЗаполнено(ПараметрДокументОснование) Тогда
			ДанныеЗаполнения.Свойство("ДокументОснование", ПараметрДокументОснование);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ПараметрДата) И 
			 НЕ ДанныеЗаполнения.Свойство("Дата", ПараметрДата) Тогда
			ПараметрДата = ТекущаяДатаСеанса();
		КонецЕсли;	
		Если НЕ ЗначениеЗаполнено(ПараметрВидКорректировки) И 
			 НЕ ДанныеЗаполнения.Свойство("ВидКорректировки", ПараметрВидКорректировки)  Тогда
			 ПараметрВидКорректировки = Перечисления.ХозяйственныеОперации.ИсправлениеОшибок;
		КонецЕсли;
	КонецЕсли;		
	
	ПараметрыДляВыбора = Новый Структура;
	ПараметрыДляВыбора.Вставить("ХозяйственнаяОперация", ПараметрВидКорректировки);
	ПараметрыДляВыбора.Вставить("ДокументОснование", ПараметрДокументОснование);
	ПараметрыДляВыбора.Вставить("ДатаДокумента", ПараметрДата);
	
	ПараметрыВыбораСтатейИАналитик = Документы.КорректировкаРеализации.ПараметрыВыбораСтатейИАналитик(ПараметрыДляВыбора);
	ДоходыИРасходыСервер.ОбработкаЗаполнения(ЭтотОбъект, ПараметрыВыбораСтатейИАналитик);
	
	ВзаиморасчетыСервер.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	МассивВсехРеквизитов = Новый Массив;
	МассивРеквизитовОперации = Новый Массив;
	
	Если ВидКорректировки = Перечисления.ХозяйственныеОперации.КорректировкаРеализацииУвеличениеЗадолженностиСводно
		ИЛИ ВидКорректировки = Перечисления.ХозяйственныеОперации.КорректировкаРеализацииУменьшениеЗадолженностиСводно Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ДокументОснование");
	КонецЕсли;
	
	Документы.КорректировкаРеализации.ЗаполнитьИменаРеквизитовПоОснованию(
		ДокументОснование,
		МассивВсехРеквизитов,
		МассивРеквизитовОперации);
	
	Для Каждого ЭлементМассива Из МассивВсехРеквизитов Цикл
		
		Если МассивРеквизитовОперации.Найти(ЭлементМассива) = Неопределено Тогда
			МассивНепроверяемыхРеквизитов.Добавить(ЭлементМассива);
		КонецЕсли;
		
	КонецЦикла;
	
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Товары.СтавкаНДС");
		МассивНепроверяемыхРеквизитов.Добавить("Расхождения.СтавкаНДС");
	КонецЕсли;
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		ДокументОснованиеХозяйственнаяОперация = Документы.КорректировкаРеализации.ХозяйственнаяОперацияДокументаОснования(ДокументОснование);
		Если Не КомиссионнаяТорговляСервер.РеализацияЧерезКомиссионера(ДокументОснованиеХозяйственнаяОперация) Тогда
			МассивНепроверяемыхРеквизитов.Добавить("КлиентКонтрагент");
			МассивНепроверяемыхРеквизитов.Добавить("КлиентПартнер");
			МассивНепроверяемыхРеквизитов.Добавить("КлиентДоговор");
		КонецЕсли;
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.АктВыполненныхРабот") Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Товары.КоличествоУпаковок");
		МассивНепроверяемыхРеквизитов.Добавить("Расхождения.КоличествоУпаковок");
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияУслугПрочихАктивов") Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Товары.КоличествоУпаковок");
		МассивНепроверяемыхРеквизитов.Добавить("Расхождения.КоличествоУпаковок");
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Количество");
		МассивНепроверяемыхРеквизитов.Добавить("Расхождения.Количество");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	Если ТипЗнч(ДокументОснование) <> Тип("ДокументСсылка.РеализацияУслугПрочихАктивов") Тогда
		НоменклатураСервер.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ);
	КонецЕсли;
	
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, МассивНепроверяемыхРеквизитов, Отказ);
	
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.КорректировкаРеализации);
	НоменклатураСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект, ПараметрыУказанияСерий, Отказ, МассивНепроверяемыхРеквизитов);
												
	ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
	ПараметрыПроверки.ИмяТЧ = "Расхождения";
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, МассивНепроверяемыхРеквизитов, Отказ, ПараметрыПроверки);
	
	Если Не ЗначениеЗаполнено(Соглашение) Или 
		 Не ОбщегоНазначенияУТ.ЗначениеРеквизитаОбъектаТипаБулево(Соглашение, "ИспользуютсяДоговорыКонтрагентов") Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Договор");
	КонецЕсли;
	
	Если Не ПродажаПоЗаказам Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Товары.ЗаказКлиента");
		МассивНепроверяемыхРеквизитов.Добавить("Расхождения.ЗаказКлиента");
	КонецЕсли;
	
	МассивНепроверяемыхРеквизитов.Добавить("Товары.Склад");
	
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		
		ДатаОснования = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "Дата");
		ДатаДокумента = ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса());
		КорректировкаПрошлогоПериода = НачалоГода(ДатаДокумента) > НачалоГода(ДатаОснования);
		КорректировкаУслугПрочихАктивов = ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияУслугПрочихАктивов");
	
		Если КорректировкаУслугПрочихАктивов И Не КорректировкаПрошлогоПериода Тогда
			
			МассивНепроверяемыхРеквизитов.Добавить("ПодразделениеДоходы");
			МассивНепроверяемыхРеквизитов.Добавить("ПодразделениеРасходы");
				
		КонецЕсли;
		
	КонецЕсли;
	
	ПроверитьЗаполнениеТаблицыКорректировкаЗадолженности(Отказ);
	
	РезультатПроверкиПоРасхождениям = ПроверитьЗаполнениеПоРасхождениям(МассивНепроверяемыхРеквизитов, Отказ);
	
	ОтразитьНаПрочихДоходах = 
		РезультатПроверкиПоРасхождениям.ОтразитьНаПрочихДоходах
		ИЛИ ВидКорректировки = Перечисления.ХозяйственныеОперации.КорректировкаРеализацииУвеличениеЗадолженностиСводно;
	СписатьНаРасходы = РезультатПроверкиПоРасхождениям.СписатьНаРасходы
		ИЛИ ВидКорректировки = Перечисления.ХозяйственныеОперации.КорректировкаРеализацииУменьшениеЗадолженностиСводно;
			
	ПараметрыДляВыбора = Новый Структура;
	ПараметрыДляВыбора.Вставить("ХозяйственнаяОперация", ВидКорректировки);
	ПараметрыДляВыбора.Вставить("ДокументОснование", ДокументОснование);
	ПараметрыДляВыбора.Вставить("ДатаДокумента", Дата);
	ПараметрыДляВыбора.Вставить("ОтразитьНаПрочихДоходах", ОтразитьНаПрочихДоходах);
	ПараметрыДляВыбора.Вставить("СписатьНаРасходы", СписатьНаРасходы);
	ПараметрыВыбораСтатейИАналитик = Документы.КорректировкаРеализации.ПараметрыВыбораСтатейИАналитик(ПараметрыДляВыбора);
	ДоходыИРасходыСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, ПараметрыВыбораСтатейИАналитик);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	Если Не Отказ И ОбщегоНазначенияУТ.ПроверитьЗаполнениеРеквизитовОбъекта(ЭтотОбъект, ПроверяемыеРеквизиты) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	ПродажиСервер.ПроверитьКорректностьЗаполненияДокументаПродажи(ЭтотОбъект,Отказ);
		
	КорректировкаРеализацииЛокализация.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ИнициализироватьПараметрыЗаполненияВидовЗапасовДляПроведения(ЭтотОбъект);
	
	ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ);
	
	ПараметрыРегистрации = Документы.КорректировкаРеализации.ПараметрыРегистрацииСчетовФактурПолученных(ЭтотОбъект);
	УчетНДСУП.АктуализироватьСчетаФактурыПолученныеПриПроведении(ПараметрыРегистрации);
	
	ПараметрыРегистрации = Документы.КорректировкаРеализации.ПараметрыРегистрацииСчетовФактурВыданных(ЭтотОбъект);
	УчетНДСУП.АктуализироватьСчетаФактурыВыданныеПриПроведении(ПараметрыРегистрации);
	
	КорректировкаРеализацииЛокализация.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ИнициализироватьПараметрыЗаполненияВидовЗапасовДляПроведения(ЭтотОбъект);
	
	ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	
	ПараметрыРегистрации = Документы.КорректировкаРеализации.ПараметрыРегистрацииСчетовФактурПолученных(ЭтотОбъект);
	УчетНДСУП.АктуализироватьСчетаФактурыПолученныеПриУдаленииПроведения(ПараметрыРегистрации);
	
	ПараметрыРегистрации = Документы.КорректировкаРеализации.ПараметрыРегистрацииСчетовФактурВыданных(ЭтотОбъект);
	УчетНДСУП.АктуализироватьСчетаФактурыВыданныеПриУдаленииПроведения(ПараметрыРегистрации);
	
	КорректировкаРеализацииЛокализация.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Товары.Очистить();
	Расхождения.Очистить();
	Согласован = Ложь;
	
	ВидыЗапасовКорректировкаВыручки.Очистить();
	ВидыЗапасовОприходование.Очистить();
	ВидыЗапасовСписание.Очистить();
	
	ВзаиморасчетыСервер.ПриКопировании(ЭтотОбъект);
	
	СтрокаТЧ = "Расхождения,ВидыЗапасовКорректировкаВыручки,ВидыЗапасовОприходование,ВидыЗапасовСписание";
	ОбщегоНазначенияУТ.ОчиститьИдентификаторыДокумента(ЭтотОбъект, СтрокаТЧ);
	
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВТЧ(ЭтотОбъект);
	ПараметрыЗаполнитьСтавкуНДС = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыЗаполненияСтавкиНДС(ЭтотОбъект);
	
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		ПараметрыЗаполнитьСтавкуНДС.Дата = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "Дата");
	КонецЕсли;
	
	СтруктураДействий = Новый Структура;
	КэшРасхождения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
	КэшТовары = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
	СтруктураДействий.Вставить("СкорректироватьСтавкуНДС", ПараметрыЗаполнитьСтавкуНДС);
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Расхождения, СтруктураДействий, КэшРасхождения);
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Товары, СтруктураДействий, КэшТовары);
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(КэшРасхождения.ОбработанныеСтроки, СтруктураДействий, Неопределено);
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(КэшТовары.ОбработанныеСтроки, СтруктураДействий, Неопределено);
	
	КорректировкаРеализацииЛокализация.ПриКопировании(ЭтотОбъект, ОбъектКопирования);
	Автор = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);
	
	КорректировкаРеализацииЛокализация.ПриЗаписи(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Инициализация_и_Заполнение

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Автор = Пользователи.ТекущийПользователь();
	Склад = ЗначениеНастроекПовтИсп.ПолучитьСкладПоУмолчанию(Склад);
	
	Если ТипЗнч(ДанныеЗаполнения) <> Тип("Структура") Или НЕ ДанныеЗаполнения.Свойство("Валюта") Тогда
		Если НЕ ЗначениеЗаполнено(Валюта) Тогда
			Валюта = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Организация);
		КонецЕсли;
	КонецЕсли;
	Если ТипЗнч(ДанныеЗаполнения) <> Тип("Структура") Или НЕ ДанныеЗаполнения.Свойство("ВалютаВзаиморасчетов") Тогда
		Если НЕ ЗначениеЗаполнено(ВалютаВзаиморасчетов) Тогда
			ВалютаВзаиморасчетов = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Организация);
		КонецЕсли;
	КонецЕсли;
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьАктыНаПередачуПрав") ИЛИ НЕ ЗначениеЗаполнено(ВариантОформленияПродажи) Тогда
		ВариантОформленияПродажи = Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") 
		И ДанныеЗаполнения.Свойство("ПорядокРасчетов") 
		И ЗначениеЗаполнено(ДанныеЗаполнения.ПорядокРасчетов) Тогда
		ПорядокРасчетов = ДанныеЗаполнения.ПорядокРасчетов;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
		И ДанныеЗаполнения.Свойство("Организация") 
		И ЗначениеЗаполнено(ДанныеЗаполнения.Организация) Тогда
		Организация = ДанныеЗаполнения.Организация;
	Иначе
		Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") 
		И ДанныеЗаполнения.Свойство("ДокументОснование")
		И ЗначениеЗаполнено(ДанныеЗаполнения.ДокументОснование) Тогда
		ДатаКурса = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеЗаполнения.ДокументОснование,"Дата");
	Иначе
		ДатаКурса = ТекущаяДатаСеанса();
	КонецЕсли;
	
				ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
	РаботаСКурсамиВалютУТ.ЗаполнитьКурсДокументаПоУмолчанию(КурсЧислитель, КурсЗнаменатель, Валюта, ВалютаВзаиморасчетов, Организация, ДатаКурса);
	
	ОтветственныеЛицаСервер.ЗаполнитьМенеджера(ЭтотОбъект, Ложь);
	Если Не ЗначениеЗаполнено(Менеджер) Тогда
		Менеджер = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоРеализацииТоваровУслуг(Знач ДокументОснование, ДанныеЗаполнения)
	
	МетаданныеДокументОснование = ДокументОснование.Метаданные();
	Если НЕ ПравоДоступа("Изменение", МетаданныеДокументОснование) Тогда
		ТекстОшибки = НСтр("ru='У пользователя недостаточно прав на корректировку документа ""'")
			+ МетаданныеДокументОснование.Синоним + """.";
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ДокументОснование", ДокументОснование);
	
	Если НЕ ЗначениеЗаполнено(ДокументОснование) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка						   КАК ДокументОснование,
	|	ДанныеДокумента.Партнер						   КАК Партнер,
	|	ДанныеДокумента.Контрагент					   КАК Контрагент,
	|	ДанныеДокумента.Соглашение					   КАК Соглашение,
	|	ДанныеДокумента.Соглашение.ГрафикОплаты		   КАК ГрафикОплаты,
	|	ДанныеДокумента.Организация					   КАК Организация,
	|	ДанныеДокумента.Договор						   КАК Договор,
	|	ДанныеДокумента.Склад						   КАК Склад,
	|	ДанныеДокумента.Статус						   КАК Статус,
	|	ДанныеДокумента.Валюта						   КАК Валюта,
	|	ДанныеДокумента.ВалютаВзаиморасчетов		   КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.НалогообложениеНДС			   КАК НалогообложениеНДС,
	|	ДанныеДокумента.Подразделение				   КАК Подразделение,
	|	ДанныеДокумента.НаправлениеДеятельности		   КАК НаправлениеДеятельности,
	|	ДанныеДокумента.Сделка						   КАК Сделка,
	|	ДанныеДокумента.ЦенаВключаетНДС				   КАК ЦенаВключаетНДС,
	|	ДанныеДокумента.РеализацияПоЗаказам			   КАК ПродажаПоЗаказам,
	|	ДанныеДокумента.Отпустил					   КАК Отпустил,
	|	ДанныеДокумента.ОтпустилДолжность			   КАК ОтпустилДолжность,
	|	ДанныеДокумента.Грузополучатель				   КАК Грузополучатель,
	|	ДанныеДокумента.Грузоотправитель			   КАК Грузоотправитель,
	|	ДанныеДокумента.БанковскийСчетОрганизации	   КАК БанковскийСчетОрганизации,
	|	ДанныеДокумента.БанковскийСчетКонтрагента	   КАК БанковскийСчетКонтрагента,
	|	ДанныеДокумента.БанковскийСчетГрузоотправителя КАК БанковскийСчетГрузоотправителя,
	|	ДанныеДокумента.БанковскийСчетГрузополучателя  КАК БанковскийСчетГрузополучателя,
	|	ДанныеДокумента.АдресДоставки 				   КАК АдресДоставки,
	|	ДанныеДокумента.ДоверенностьНомер			   КАК ДоверенностьНомер,
	|	ДанныеДокумента.ДоверенностьДата			   КАК ДоверенностьДата,
	|	ДанныеДокумента.ДоверенностьВыдана			   КАК ДоверенностьВыдана,
	|	ДанныеДокумента.ДоверенностьЛицо			   КАК ДоверенностьЛицо,
	|	ДанныеДокумента.ФормаОплаты					   КАК ФормаОплаты,
	|	ДанныеДокумента.ПорядокРасчетов				   КАК ПорядокРасчетов,
	|	ДанныеДокумента.ВариантОформленияПродажи       КАК ВариантОформленияПродажи,
	|	ДанныеДокумента.Основание	 			       КАК Основание,
	|	ДанныеДокумента.ОснованиеДата	 			   КАК ОснованиеДата,
	|	ДанныеДокумента.ОснованиеНомер				   КАК ОснованиеНомер,
	|	ДанныеДокумента.КлиентКонтрагент			   КАК КлиентКонтрагент,
	|	ДанныеДокумента.КлиентПартнер				   КАК КлиентПартнер,
	|	ДанныеДокумента.КлиентДоговор				   КАК КлиентДоговор,
	|	ДанныеДокумента.ЭтапГосконтрактаЕИС			   КАК ЭтапГосконтрактаЕИС,
	|	
	|	НЕ ДанныеДокумента.Проведен КАК ЕстьОшибкиПроведен,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.Отгружено) ТОГДА
	|		ЛОЖЬ
	|	ИНАЧЕ
	|		ИСТИНА
	|	КОНЕЦ КАК ЕстьОшибкиСтатус,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионера),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности))
	|	ТОГДА
	|		ЛОЖЬ
	|	ИНАЧЕ
	|		ИСТИНА
	|	КОНЕЦ КАК ЕстьОшибкиОперация,
	|	
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперацияОснования
	|
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументОснование
	|");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не требуется вводить корректировку реализации на основании документа %1.'"),
			ДокументОснование);
		ВызватьИсключение Текст;
	КонецЕсли;
	
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		ДанныеЗаполнения.Вставить(Колонка.Имя);
	КонецЦикла;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Если Выборка.ЕстьОшибкиОперация Тогда
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Для реализации с операцией ""%1"" не требуется вводить корректировку.'"),
			Выборка.ХозяйственнаяОперацияОснования);
		ВызватьИсключение Текст;
	КонецЕсли;
	
	МассивДопустимыхСтатусов = Новый Массив();
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыРеализацийТоваровУслуг.Отгружено);
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		Выборка.ДокументОснование,
		Выборка.Статус,
		Выборка.ЕстьОшибкиПроведен,
		Выборка.ЕстьОшибкиСтатус,
		МассивДопустимыхСтатусов);
	
	ЗаполнитьЗначенияСвойств(ДанныеЗаполнения, Выборка);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка, 
		"Организация, Партнер, Контрагент, Склад, Валюта, ВалютаВзаиморасчетов, ВариантОформленияПродажи, ЭтапГосконтрактаЕИС,
		|Основание, ОснованиеДата, ОснованиеНомер");
	
	Документы.КорректировкаРеализации.ЗаполнитьТоварыПоИсходнымДанным(Выборка.ДокументОснование, Товары);
	
	// Заполнение статусов указания серий
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.КорректировкаРеализации);
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект, ПараметрыУказанияСерий);
	
	ПараметрыУказанияСерий.ИмяТЧТовары = "Расхождения";
	ПараметрыУказанияСерий.ИмяТЧСерии  = "Расхождения";
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект, ПараметрыУказанияСерий);
	
КонецПроцедуры

Процедура ЗаполнитьПоАктуВыполненныхРабот(Знач ДокументОснование, ДанныеЗаполнения)
	
	МетаданныеДокументОснование = ДокументОснование.Метаданные();
	Если НЕ ПравоДоступа("Изменение", МетаданныеДокументОснование) Тогда
		ТекстОшибки = НСтр("ru='У пользователя недостаточно прав на корректировку документа ""'")
			+ МетаданныеДокументОснование.Синоним + """.";
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ДокументОснование", ДокументОснование);
	
	Если НЕ ЗначениеЗаполнено(ДокументОснование) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка					КАК ДокументОснование,
	|	ДанныеДокумента.Партнер					КАК Партнер,
	|	ДанныеДокумента.Контрагент				КАК Контрагент,
	|	ДанныеДокумента.Соглашение				КАК Соглашение,
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДокумента.Соглашение.ГрафикОплаты	КАК ГрафикОплаты,
	|	ДанныеДокумента.Организация				КАК Организация,
	|	ДанныеДокумента.Договор					КАК Договор,
	|	ДанныеДокумента.Валюта					КАК Валюта,
	|	ДанныеДокумента.ВалютаВзаиморасчетов	КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.НалогообложениеНДС		КАК НалогообложениеНДС,
	|	ДанныеДокумента.Подразделение			КАК Подразделение,
	|	ДанныеДокумента.Сделка					КАК Сделка,
	|	ДанныеДокумента.ЦенаВключаетНДС			КАК ЦенаВключаетНДС,
	|	ДанныеДокумента.АктПоЗаказам			КАК ПродажаПоЗаказам,
	|	ДанныеДокумента.ФормаОплаты				КАК ФормаОплаты,
	|	ДанныеДокумента.ПорядокРасчетов			КАК ПорядокРасчетов,
	|	ДанныеДокумента.ЭтапГосконтрактаЕИС		КАК ЭтапГосконтрактаЕИС,
	|	НЕ ДанныеДокумента.Проведен				КАК ЕстьОшибкиПроведен
	|
	|ИЗ
	|	Документ.АктВыполненныхРабот КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументОснование
	|");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		ДанныеЗаполнения.Вставить(Колонка.Имя);
	КонецЦикла;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		Выборка.ДокументОснование,
		, // Статус
		Выборка.ЕстьОшибкиПроведен);
	
	ЗаполнитьЗначенияСвойств(ДанныеЗаполнения, Выборка);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка, "Организация, Контрагент, Партнер, Валюта, ВалютаВзаиморасчетов, ЭтапГосконтрактаЕИС");
	
	ДанныеЗаполнения.Вставить("ДатаПлатежа", ПродажиСервер.ПолучитьПоследнююДатуПоГрафику(ТекущаяДатаСеанса(), Выборка.ГрафикОплаты, Выборка.Соглашение));
	
	Документы.КорректировкаРеализации.ЗаполнитьТоварыПоИсходнымДанным(Выборка.ДокументОснование, Товары);
	
КонецПроцедуры

Процедура ЗаполнитьПоАктуОРасхожденияхПослеОтгрузки(Знач СтруктураПараметров, ДанныеЗаполнения)
	
	ДокументОснованиеРеализация       = СтруктураПараметров.Реализация;
	ДокументОснованиеАктОРасхождениях = СтруктураПараметров.АктОРасхождениях;
	ВидКорректировки             = СтруктураПараметров.Операция;
	
	МетаданныеДокументОснование = ДокументОснованиеРеализация.Метаданные();
	Если НЕ ПравоДоступа("Изменение", МетаданныеДокументОснование) Тогда
		ТекстОшибки = НСтр("ru='У пользователя недостаточно прав на корректировку документа ""'")
			+ МетаданныеДокументОснование.Синоним + """.";
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДокументОснованиеРеализация)
		ИЛИ НЕ ЗначениеЗаполнено(ДокументОснованиеАктОРасхождениях) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ДокументОснование", ДокументОснованиеРеализация);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК ДокументОснование,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Соглашение КАК Соглашение,
	|	ДанныеДокумента.Соглашение.ГрафикОплаты КАК ГрафикОплаты,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.Склад КАК Склад,
	|	ДанныеДокумента.Статус КАК Статус,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.Сделка КАК Сделка,
	|	ДанныеДокумента.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ДанныеДокумента.РеализацияПоЗаказам КАК ПродажаПоЗаказам,
	|	ДанныеДокумента.Отпустил КАК Отпустил,
	|	ДанныеДокумента.ОтпустилДолжность КАК ОтпустилДолжность,
	|	ДанныеДокумента.Грузополучатель КАК Грузополучатель,
	|	ДанныеДокумента.Грузоотправитель КАК Грузоотправитель,
	|	ДанныеДокумента.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	ДанныеДокумента.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента,
	|	ДанныеДокумента.БанковскийСчетГрузоотправителя КАК БанковскийСчетГрузоотправителя,
	|	ДанныеДокумента.БанковскийСчетГрузополучателя КАК БанковскийСчетГрузополучателя,
	|	ДанныеДокумента.АдресДоставки КАК АдресДоставки,
	|	ДанныеДокумента.ДоверенностьНомер КАК ДоверенностьНомер,
	|	ДанныеДокумента.ДоверенностьДата КАК ДоверенностьДата,
	|	ДанныеДокумента.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	ДанныеДокумента.ДоверенностьЛицо КАК ДоверенностьЛицо,
	|	ДанныеДокумента.ПорядокРасчетов КАК ПорядокРасчетов,
	|	ДанныеДокумента.ФормаОплаты КАК ФормаОплаты,
	|	НЕ ДанныеДокумента.Проведен КАК ЕстьОшибкиПроведен,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.Отгружено)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьОшибкиСтатус,
	|	ВЫБОР КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности))
	|	ТОГДА
	|		ЛОЖЬ
	|	ИНАЧЕ
	|		ИСТИНА
	|	КОНЕЦ КАК ЕстьОшибкиОперация,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперацияОснования,
	|	АктОРасхожденияхПослеОтгрузки.СпособОтраженияРасхождений КАК СпособОтраженияРасхождений,
	|	АктОРасхожденияхПослеОтгрузки.Ссылка КАК АктОРасхожденияхПослеОтгрузкиОснование,
	|	ВЫБОР
	|		КОГДА АктОРасхожденияхПослеОтгрузки.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению), ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьОшибкиСтатусАктОРасхождениях,
	|	НЕ АктОРасхожденияхПослеОтгрузки.Проведен КАК ЕстьОшибкиПроведенАктОРасхождениях,
	|	АктОРасхожденияхПослеОтгрузки.Статус КАК СтатусАктОРасхождениях
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктОРасхожденияхПослеОтгрузки КАК АктОРасхожденияхПослеОтгрузки
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументОснование
	|	И АктОРасхожденияхПослеОтгрузки.Ссылка = &АктОРасхожденияхПослеОтгрузкиОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснованиеРеализация);
	Запрос.УстановитьПараметр("АктОРасхожденияхПослеОтгрузкиОснование", ДокументОснованиеАктОРасхождениях);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не требуется вводить корректировку реализации на основании документа %1.'"),
			ДокументОснование);
		ВызватьИсключение Текст;
	КонецЕсли;
	
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		ДанныеЗаполнения.Вставить(Колонка.Имя);
	КонецЦикла;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Если Выборка.ЕстьОшибкиОперация Тогда
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Для реализации с операцией ""%1"" не требуется вводить корректировку.'"),
			Выборка.ХозяйственнаяОперацияОснования);
		ВызватьИсключение Текст;
	КонецЕсли;
	
	Если Выборка.СпособОтраженияРасхождений = Перечисления.СпособыОтраженияРасхожденийАктПриемкиКлиента.ИсправлениеПервичныхДокументов Тогда
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Для акта со способом отражения расхождений ""%1"" не требуется вводить корректировку.'"),
			Выборка.СпособОтраженияРасхождений);
		ВызватьИсключение Текст;
	КонецЕсли;
	
	МассивДопустимыхСтатусов = Новый Массив();
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыАктаОРасхождениях.КВыполнению);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыАктаОРасхождениях.Отработано);
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		Выборка.АктОРасхожденияхПослеОтгрузкиОснование,
		Выборка.СтатусАктОРасхождениях,
		Выборка.ЕстьОшибкиПроведенАктОРасхождениях,
		Выборка.ЕстьОшибкиСтатусАктОРасхождениях,
		МассивДопустимыхСтатусов);
	
	МассивДопустимыхСтатусов = Новый Массив();
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыРеализацийТоваровУслуг.Отгружено);
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		Выборка.ДокументОснование,
		Выборка.Статус,
		Выборка.ЕстьОшибкиПроведен,
		Выборка.ЕстьОшибкиСтатус,
		МассивДопустимыхСтатусов);
	
	ЗаполнитьЗначенияСвойств(ДанныеЗаполнения, Выборка);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка, 
		"Организация, Контрагент, Партнер, Склад, Валюта, ВалютаВзаиморасчетов, 
		|ДокументОснование, АктОРасхожденияхПослеОтгрузкиОснование, ЦенаВключаетНДС, НалогообложениеНДС");
	
	ДанныеЗаполнения.Вставить("ДатаПлатежа", ПродажиСервер.ПолучитьПоследнююДатуПоГрафику(ТекущаяДатаСеанса(), Выборка.ГрафикОплаты, Выборка.Соглашение));
	
	Документы.КорректировкаРеализации.ЗаполнитьТоварыПоАктуПриемки(ЭтотОбъект);
	
	// Заполнение статусов указания серий
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.КорректировкаРеализации);
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект, ПараметрыУказанияСерий);
	
	ПараметрыУказанияСерий.ИмяТЧТовары = "Расхождения";
	ПараметрыУказанияСерий.ИмяТЧСерии  = "Расхождения";
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект,ПараметрыУказанияСерий);
	
КонецПроцедуры

Процедура ЗаполнитьПоРеализацииУслугПрочихАктивов(Знач ДокументОснование, ДанныеЗаполнения)
	
	МетаданныеДокументОснование = ДокументОснование.Метаданные();
	Если НЕ ПравоДоступа("Изменение", МетаданныеДокументОснование) Тогда
		ТекстОшибки = НСтр("ru='У пользователя недостаточно прав на корректировку документа ""'")
			+ МетаданныеДокументОснование.Синоним + """.";
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ДокументОснование", ДокументОснование);
	
	Если НЕ ЗначениеЗаполнено(ДокументОснование) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка					КАК ДокументОснование,
	|	ДанныеДокумента.Партнер					КАК Партнер,
	|	ДанныеДокумента.Контрагент				КАК Контрагент,
	|	ДанныеДокумента.Соглашение				КАК Соглашение,
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДокумента.Соглашение.ГрафикОплаты	КАК ГрафикОплаты,
	|	ДанныеДокумента.Организация				КАК Организация,
	|	ДанныеДокумента.Договор					КАК Договор,
	|	ДанныеДокумента.Валюта					КАК Валюта,
	|	ДанныеДокумента.ВалютаВзаиморасчетов	КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.НалогообложениеНДС		КАК НалогообложениеНДС,
	|	ДанныеДокумента.Подразделение			КАК Подразделение,
	|	ДанныеДокумента.ЦенаВключаетНДС			КАК ЦенаВключаетНДС,
	|	ЛОЖЬ									КАК ПродажаПоЗаказам,
	|	ДанныеДокумента.ФормаОплаты				КАК ФормаОплаты,
	|	ДанныеДокумента.ПорядокРасчетов			КАК ПорядокРасчетов,
	|
	|	ДанныеДокумента.Основание				КАК Основание,
	|	ДанныеДокумента.ОснованиеДата			КАК ОснованиеДата,
	|	ДанныеДокумента.ОснованиеНомер			КАК ОснованиеНомер,
	|
	|	НЕ ДанныеДокумента.Проведен				КАК ЕстьОшибкиПроведен,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту) ТОГДА
	|		ЛОЖЬ
	|	ИНАЧЕ
	|		ИСТИНА
	|	КОНЕЦ КАК ЕстьОшибкиОперация,
	|	
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперацияОснования
	|
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументОснование
	|");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не требуется вводить корректировку реализации на основании документа %1.'"),
			ДокументОснование);
		ВызватьИсключение Текст;
	КонецЕсли;
	
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		ДанныеЗаполнения.Вставить(Колонка.Имя);
	КонецЦикла;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Если Выборка.ЕстьОшибкиОперация Тогда
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Для реализации с операцией ""%1"" не требуется вводить корректировку.'"),
			Выборка.ХозяйственнаяОперацияОснования);
		ВызватьИсключение Текст;
	КонецЕсли;
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		Выборка.ДокументОснование,
		, // Статус
		Выборка.ЕстьОшибкиПроведен);
	
	ЗаполнитьЗначенияСвойств(ДанныеЗаполнения, Выборка);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка, 
		"Организация, Контрагент, Партнер, Валюта, ВалютаВзаиморасчетов, Основание, ОснованиеДата, ОснованиеНомер");
	
	ДанныеЗаполнения.Вставить("ДатаПлатежа", ПродажиСервер.ПолучитьПоследнююДатуПоГрафику(ТекущаяДатаСеанса(), Выборка.ГрафикОплаты, Выборка.Соглашение));
	
	Документы.КорректировкаРеализации.ЗаполнитьТоварыПоИсходнымДанным(Выборка.ДокументОснование, Товары);
	
КонецПроцедуры


#КонецОбласти

#Область ВидыЗапасов

Процедура ЗаполнитьВидыЗапасов(Отказ)
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.АктВыполненныхРабот")
		Или ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияУслугПрочихАктивов")
		Тогда
		
		Возврат;
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПерезаполнитьВидыЗапасов = ЗапасыСервер.ПроверитьНеобходимостьПерезаполненияВидовЗапасовДокумента(ЭтотОбъект);
	
	// Виды запасов к оприходованию
	Если ВидКорректировки = Перечисления.ХозяйственныеОперации.РеализацияПерепоставленногоТовара
		ИЛИ ВидКорректировки = Перечисления.ХозяйственныеОперации.КорректировкаРеализацииУвеличениеЗадолженностиСводно
		ИЛИ ВидКорректировки = Перечисления.ХозяйственныеОперации.КорректировкаРеализацииУменьшениеЗадолженностиСводно Тогда
		ВидыЗапасовОприходование.Очистить();
	Иначе
		
		МассивВариантовОтражения = Новый Массив;
		МассивВариантовОтражения.Добавить(Перечисления.ВариантыОтраженияКорректировокРеализаций.УменьшитьРеализациюУчестьПриИнвентаризации);
		МассивВариантовОтражения.Добавить(Перечисления.ВариантыОтраженияКорректировокРеализаций.УменьшитьРеализациюУвеличитьСкладскиеОстатки);
		МассивВариантовОтражения.Добавить(Перечисления.ВариантыОтраженияКорректировокРеализаций.СписатьНаРасходы);
		МассивВариантовОтражения.Добавить(Перечисления.ВариантыОтраженияКорректировокРеализаций.УменьшитьРеализациюСписатьНаРасходы);
		
		МенеджерВременныхТаблиц = ВременныеТаблицыДанныхДокументаОприходование(МассивВариантовОтражения);
		
		ИзмененыРеквизитыДокумента = ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц);
		
		Если Не Проведен
			Или ПерезаполнитьВидыЗапасов
			Или ИзмененыРеквизитыДокумента
			Или ПроверитьИзменениеТоваровОприходование(МенеджерВременныхТаблиц) Тогда
			
			ПараметрыЗаполнения = ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов();
			ПараметрыЗаполнения.ИмяТаблицыОстатков = "РеализованныеТовары";
			ПараметрыЗаполнения.ИмяТЧВидыЗапасов = "ВидыЗапасовОприходование";
			ПараметрыЗаполнения.ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию = Ложь;
			ПараметрыЗаполнения.БезОтбораПоНомерамГТД = Истина;
			
			ЗапасыСервер.ЗаполнитьВидыЗапасовПоОстаткамКОформлению(ЭтотОбъект,
																	МенеджерВременныхТаблиц,
																	Отказ,
																	ПараметрыЗаполнения);
			
			ИменаКолонокГруппировки		= "АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД, Склад, СкладОтгрузки,
											|ВидЗапасовОтгрузки, СтавкаНДС, НоменклатураПартнера";
			ИменаКолонокСуммирования	= "Количество, КоличествоПоРНПТ, СуммаСНДС, СуммаНДС";
			
			ВидыЗапасовОприходование.Свернуть(ИменаКолонокГруппировки, ИменаКолонокСуммирования);
			
			ЗаполнитьДопКолонкиВидовЗапасов(ВидыЗапасовОприходование, МассивВариантовОтражения, Истина);
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Виды запасов к списанию
	Если ВидКорректировки = Перечисления.ХозяйственныеОперации.ВозвратНедопоставленногоТовара 
		ИЛИ ВидКорректировки = Перечисления.ХозяйственныеОперации.КорректировкаРеализацииУвеличениеЗадолженностиСводно
		ИЛИ ВидКорректировки = Перечисления.ХозяйственныеОперации.КорректировкаРеализацииУменьшениеЗадолженностиСводно Тогда
		ВидыЗапасовСписание.Очистить();
	Иначе
		
		МассивВариантовОтражения = Новый Массив;
		МассивВариантовОтражения.Добавить(Перечисления.ВариантыОтраженияКорректировокРеализаций.ОтразитьНаПрочихДоходах);
		
		МенеджерВременныхТаблиц = ВременныеТаблицыДанныхДокументаСписание(МассивВариантовОтражения);
		
		ВидЗапасовПоУмолчанию = Справочники.ВидыЗапасов.ПустаяСсылка();
		ЗапасыСервер.ЗаполнитьВидыЗапасовПоУмолчанию(МенеджерВременныхТаблиц, Неопределено, ВидЗапасовПоУмолчанию);
		
		ИзмененыТоварыОтразитьНаПрочихДоходах = Ложь;
		
		Если ПроверитьИзменениеТоваровОтразитьНаПрочихДоходах(МенеджерВременныхТаблиц) Тогда
			ИзмененыТоварыОтразитьНаПрочихДоходах = Истина;
		КонецЕсли;
		
		МассивВариантовОтражения = Новый Массив;
		МассивВариантовОтражения.Добавить(Перечисления.ВариантыОтраженияКорректировокРеализаций.УвеличитьРеализациюУчестьПриИнвентаризации);
		МассивВариантовОтражения.Добавить(Перечисления.ВариантыОтраженияКорректировокРеализаций.УвеличитьРеализациюУменьшитьСкладскиеОстатки);
		
		МенеджерВременныхТаблиц = ВременныеТаблицыДанныхДокументаСписание(МассивВариантовОтражения);
		
		ИзмененыРеквизитыДокумента = ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц);
		
		Если Не Проведен
			Или ПерезаполнитьВидыЗапасов
			Или ИзмененыРеквизитыДокумента
			Или ИзмененыТоварыОтразитьНаПрочихДоходах
			Или ПроверитьИзменениеТоваровСписание(МенеджерВременныхТаблиц) Тогда
			
			ПараметрыЗаполнения = ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов();
			ПараметрыЗаполнения.ИмяТЧВидыЗапасов = "ВидыЗапасовСписание";
			ПараметрыЗаполнения.ДокументДелаетИПриходИРасход = Истина;
			ПараметрыЗаполнения.БезОтбораПоНомерамГТД = Истина;
			ПараметрыЗаполнения.ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение = "Никогда";
			ПараметрыЗаполнения.ЕстьТаблицаПриходуемыхВидовЗапасов = Истина;
			ПараметрыЗаполнения.ИмяТаблицыПриходуемыхВидовЗапасов = "ВтВидыЗапасовОприходование";
			
			УчетНДСУП.ПараметрыЗаполненияВидовЗапасовПоНалогообложению(ПараметрыЗаполнения.ОтборыВидовЗапасов,
																		Организация,
																		Дата,
																		НалогообложениеНДС);
			
			ЗапасыСервер.ЗаполнитьВидыЗапасовПоТоварамОрганизаций(ЭтотОбъект,
																	МенеджерВременныхТаблиц,
																	Отказ,
																	ПараметрыЗаполнения);
			
			ОтборСтрок = Новый Структура("ВариантОтражения",
										Перечисления.ВариантыОтраженияКорректировокРеализаций.ОтразитьНаПрочихДоходах);
			СтрокиОтразитьНаПрочихДоходах = Расхождения.НайтиСтроки(ОтборСтрок);
				
			Если СтрокиОтразитьНаПрочихДоходах.Количество() Тогда
				
				Для Каждого Стр Из СтрокиОтразитьНаПрочихДоходах Цикл
					ВидыЗапасовСписаниеСтр = ВидыЗапасовСписание.Добавить();
					ЗаполнитьЗначенияСвойств(ВидыЗапасовСписаниеСтр, Стр);
					ВидыЗапасовСписаниеСтр.ВидЗапасов = ВидЗапасовПоУмолчанию;
				КонецЦикла;
				
				МассивВариантовОтражения.Добавить(Перечисления.ВариантыОтраженияКорректировокРеализаций.ОтразитьНаПрочихДоходах);
				
			КонецЕсли;
			
			ВидыЗапасовСписание.Свернуть("АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД, Склад, СтавкаНДС, НоменклатураПартнера",
										"Количество, КоличествоПоРНПТ, СуммаСНДС, СуммаНДС");
			
			ЗаполнитьДопКолонкиВидовЗапасов(ВидыЗапасовСписание, МассивВариантовОтражения);
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Виды запасов к корректировке выручки (без изменения количества)
	Если ВидКорректировки = Перечисления.ХозяйственныеОперации.РеализацияПерепоставленногоТовара
		ИЛИ ВидКорректировки = Перечисления.ХозяйственныеОперации.ВозвратНедопоставленногоТовара
		ИЛИ ВидКорректировки = Перечисления.ХозяйственныеОперации.КорректировкаРеализацииУвеличениеЗадолженностиСводно
		ИЛИ ВидКорректировки = Перечисления.ХозяйственныеОперации.КорректировкаРеализацииУменьшениеЗадолженностиСводно Тогда
		
		ВидыЗапасовКорректировкаВыручки.Очистить();
		
	Иначе
		
		МенеджерВременныхТаблиц = ВременныеТаблицыДанныхДокументаКорректировкаВыручки();
		ИзмененыРеквизитыДокумента = ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц);
		
		Если Не Проведен
			Или ПерезаполнитьВидыЗапасов
			Или ИзмененыРеквизитыДокумента
			Или ПроверитьИзменениеТоваровКорректировкаВыручки(МенеджерВременныхТаблиц) Тогда
			
			ЗаполнитьВидыЗапасовКорректировкаВыручки(МенеджерВременныхТаблиц);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.НалогообложениеНДС,
	|	ДанныеДокумента.Дата КАК Дата,
	|
	|	ВЫБОР КОГДА ДанныеДокумента.Подразделение.ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|		И &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|	ТОГДА
	|		ДанныеДокумента.Менеджер
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|	КОНЕЦ КАК Менеджер
	|
	|ПОМЕСТИТЬ СохраненныеДанныеДокумента
	|ИЗ
	|	Документ.КорректировкаРеализации КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА ДанныеДокумента.Менеджер <> СохраненныеДанные.Менеджер ТОГДА
	|		ИСТИНА
	|	КОГДА ДанныеДокумента.Дата <> СохраненныеДанные.Дата ТОГДА
	|		ИСТИНА
	|	КОГДА ДанныеДокумента.НалогообложениеНДС <> СохраненныеДанные.НалогообложениеНДС ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК РеквизитыИзменены
	|ИЗ
	|	ТаблицаДанныхДокумента КАК ДанныеДокумента
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СохраненныеДанныеДокумента КАК СохраненныеДанные
	|	ПО
	|		ИСТИНА
	|");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоПодразделениямМенеджерам", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоПодразделениямМенеджерам"));
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		РеквизитыИзменены = Выборка.РеквизитыИзменены;
	Иначе
		РеквизитыИзменены = Ложь;
	КонецЕсли;
	
	Возврат РеквизитыИзменены;
	
КонецФункции

Процедура ЗаполнитьДопКолонкиВидовЗапасов(ВидыЗапасов, МассивВариантовОтражения, ЗаполнятьВидЗапасовОтгрузки = Ложь) Экспорт
	
	ИменаКолонокГруппировки		= "АналитикаУчетаНоменклатуры, АналитикаУчетаНаборов, Склад, Упаковка, ЗаказКлиента,
									|КодТНВЭД, ОбъектРасчетов";
	ИменаКолонокСуммирования	= "Количество, КоличествоУпаковок, СуммаСНДС, СуммаНДС, СуммаВзаиморасчетов";
	ВыгружаемыеКолонки			= ИменаКолонокГруппировки + ", " + ИменаКолонокСуммирования;

	ТаблицаТовары = Расхождения.ВыгрузитьКолонки(ВыгружаемыеКолонки);
	ТаблицаТовары.Колонки.Добавить("НаДоходыРасходы");
	
	Для Каждого СтрокаРасхождений Из Расхождения Цикл
		
		УчитыватьСтроку = Ложь;
		
		Для Каждого ВариантОтражения Из МассивВариантовОтражения Цикл
			
			Если СтрокаРасхождений.ВариантОтражения = ВариантОтражения Тогда
				УчитыватьСтроку = Истина;
				
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		Если УчитыватьСтроку Тогда
			
			СтрокаТоваров = ТаблицаТовары.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТоваров, СтрокаРасхождений);
			
			Если СтрокаРасхождений.КоличествоУпаковок < 0 Тогда
				СтрокаТоваров.Количество			= -СтрокаРасхождений.Количество;
				СтрокаТоваров.КоличествоУпаковок	= -СтрокаРасхождений.КоличествоУпаковок;
				СтрокаТоваров.СуммаВзаиморасчетов	= -СтрокаРасхождений.СуммаВзаиморасчетов;
			КонецЕсли;
			СтрокаТоваров.НаДоходыРасходы =
				СтрокаРасхождений.ВариантОтражения = Перечисления.ВариантыОтраженияКорректировокРеализаций.СписатьНаРасходы
				Или СтрокаРасхождений.ВариантОтражения = Перечисления.ВариантыОтраженияКорректировокРеализаций.ОтразитьНаПрочихДоходах
				Или СтрокаРасхождений.ВариантОтражения = Перечисления.ВариантыОтраженияКорректировокРеализаций.УменьшитьРеализациюСписатьНаРасходы;
			СтрокаТоваров.АналитикаУчетаНаборов = СтрокаРасхождений.АналитикаУчетаНаборов;
		КонецЕсли;
		
	КонецЦикла;
	
	ИменаКолонокГруппировки = ИменаКолонокГруппировки + ", " + "НаДоходыРасходы";
	
	ТаблицаТовары.Свернуть(ИменаКолонокГруппировки , ИменаКолонокСуммирования);
	
	СтруктураПоиска = Новый Структура("АналитикаУчетаНоменклатуры");
	
	Для Каждого СтрокаТоваров Из ТаблицаТовары Цикл
		
		КоличествоТоваров			= СтрокаТоваров.Количество;
		КоличествоУпаковок			= СтрокаТоваров.КоличествоУпаковок;
		СуммаВзаиморасчетовТоваров	= СтрокаТоваров.СуммаВзаиморасчетов;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТоваров);
		
		Для Каждого СтрокаЗапасов Из ВидыЗапасов.НайтиСтроки(СтруктураПоиска) Цикл
			
			Если СтрокаЗапасов.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Количество = Мин(КоличествоТоваров, СтрокаЗапасов.Количество);
			
			НоваяСтрока = ВидыЗапасов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
			
			НоваяСтрока.Упаковка				= СтрокаТоваров.Упаковка;
			НоваяСтрока.ЗаказКлиента			= СтрокаТоваров.ЗаказКлиента;
			НоваяСтрока.ОбъектРасчетов			= СтрокаТоваров.ОбъектРасчетов;
			НоваяСтрока.КодТНВЭД				= СтрокаТоваров.КодТНВЭД;
			НоваяСтрока.НаДоходыРасходы			= СтрокаТоваров.НаДоходыРасходы;
			НоваяСтрока.АналитикаУчетаНаборов	= СтрокаТоваров.АналитикаУчетаНаборов;
			НоваяСтрока.КоличествоУпаковок		= ?(КоличествоТоваров <> 0,
													КоличествоУпаковок * Количество / КоличествоТоваров,
													0);
			НоваяСтрока.Количество				= Количество;
			НоваяСтрока.КоличествоПоРНПТ		= Количество * СтрокаЗапасов.КоличествоПоРНПТ
													/ СтрокаЗапасов.Количество;
			НоваяСтрока.СуммаСНДС				= ?(СтрокаЗапасов.Количество <> 0,
													Количество * СтрокаЗапасов.СуммаСНДС / СтрокаЗапасов.Количество,
													0);
			НоваяСтрока.СуммаНДС				= ?(СтрокаЗапасов.Количество <> 0,
													Количество * СтрокаЗапасов.СуммаНДС / СтрокаЗапасов.Количество,
													0);
			НоваяСтрока.СуммаВзаиморасчетов		= ?(КоличествоТоваров <> 0,
													Количество * СуммаВзаиморасчетовТоваров / КоличествоТоваров,
													0);
			
			СтрокаЗапасов.Количество		= СтрокаЗапасов.Количество - НоваяСтрока.Количество;
			СтрокаЗапасов.КоличествоПоРНПТ	= СтрокаЗапасов.КоличествоПоРНПТ - НоваяСтрока.КоличествоПоРНПТ;
			СтрокаЗапасов.СуммаСНДС			= СтрокаЗапасов.СуммаСНДС - НоваяСтрока.СуммаСНДС;
			СтрокаЗапасов.СуммаНДС			= СтрокаЗапасов.СуммаНДС - НоваяСтрока.СуммаНДС;
			
			// Для новых видов запасов ВидЗапасовОтгрузки = ВидЗапасов
			// поле оставлено для обратной совместимости со старыми документами.
			Если ЗаполнятьВидЗапасовОтгрузки
				И Не ЗначениеЗаполнено(НоваяСтрока.ВидЗапасовОтгрузки) Тогда
				
				НоваяСтрока.ВидЗапасовОтгрузки = СтрокаЗапасов.ВидЗапасов;
				
			КонецЕсли;
			
			КоличествоТоваров			= КоличествоТоваров - НоваяСтрока.Количество;
			КоличествоУпаковок			= КоличествоУпаковок - НоваяСтрока.КоличествоУпаковок;
			СуммаВзаиморасчетовТоваров	= СуммаВзаиморасчетовТоваров - НоваяСтрока.СуммаВзаиморасчетов;
			
			Если КоличествоТоваров = 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ПараметрыПоиска = Новый Структура("Количество", 0);
	МассивУдаляемыхСтрок = ВидыЗапасов.НайтиСтроки(ПараметрыПоиска);
	
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		ВидыЗапасов.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры

// Заполняет аналитики учета номенклатуры в табличных частях документа, хранящих информацию о товарах.
// Если параметр не передан, тогда будет выполнено заполнение данных в табличных частях документа.
//
// Параметры:
//	ТаблицыДокумента - см. Документы.КорректировкаРеализации.КоллекцияТабличныхЧастейТоваров.
//
Процедура ЗаполнитьАналитикиУчетаНоменклатурыВТабличныхЧастяхТоваров(ТаблицыДокумента = Неопределено)
	
	Если ТаблицыДокумента = Неопределено Тогда
		ТаблицыДокумента = Документы.КорректировкаРеализации.КоллекцияТабличныхЧастейТоваров();
		
		ЗаполнитьЗначенияСвойств(ТаблицыДокумента, ЭтотОбъект);
	КонецЕсли;
	
	ТаблицаРасхождения = ТаблицыДокумента.Расхождения;
	
	Если ТипЗнч(ДокументОснование) <> Тип("ДокументСсылка.РеализацияУслугПрочихАктивов") Тогда
		Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			ДокументОснованиеХозяйственнаяОперация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "ХозяйственнаяОперация");
			Если КомиссионнаяТорговляСервер.РеализацияЧерезКомиссионера(ДокументОснованиеХозяйственнаяОперация) Тогда
				МестаУчета = РегистрыСведений.АналитикаУчетаНоменклатуры.МестаУчета(
					ДокументОснованиеХозяйственнаяОперация,
					Склад,
					Подразделение,
					Партнер,
					Договор);
			Иначе
				МестаУчета = РегистрыСведений.АналитикаУчетаНоменклатуры.МестаУчета(
					ВидКорректировки,
					Склад,
					Подразделение,
					Партнер);
			КонецЕсли;
		Иначе
			МестаУчета = РегистрыСведений.АналитикаУчетаНоменклатуры.МестаУчета(ВидКорректировки,
																				Склад,
																				Подразделение,
																				Партнер);
		КонецЕсли;
		
		ИменаПолей = РегистрыСведений.АналитикаУчетаНоменклатуры.ИменаПолейКоллекцииПоУмолчанию();
		ИменаПолей.Вставить("Произвольный", "Склад");
		ИменаПолей.Вставить("Работа", "Подразделение");
		
		РегистрыСведений.АналитикаУчетаНоменклатуры.ЗаполнитьВКоллекции(ТаблицаРасхождения, МестаУчета, ИменаПолей);
		РегистрыСведений.АналитикаУчетаНаборов.ЗаполнитьВКоллекции(ТаблицаРасхождения);
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Списание

Функция ВременныеТаблицыДанныхДокументаСписание(МассивВариантовОтражения)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Дата														КАК Дата,
	|	&Организация												КАК Организация,
	|	НЕОПРЕДЕЛЕНО												КАК Партнер,
	|	НЕОПРЕДЕЛЕНО												КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка)	КАК Соглашение,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)		КАК Договор,
	|	&Валюта														КАК Валюта,
	|	&НалогообложениеНДС											КАК НалогообложениеНДС,
	|	&ХозяйственнаяОперация										КАК ХозяйственнаяОперация,
	|	ЛОЖЬ														КАК ЕстьСделкиВТабличнойЧасти,
	|	&ДеятельностьОблагаетсяЕНВД									КАК ДеятельностьОблагаетсяЕНВД,
	|	ВЫБОР
	|		КОГДА СтруктураПредприятия.ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|				И &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|			ТОГДА &Подразделение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	КОНЕЦ														КАК Подразделение,
	|	ВЫБОР
	|		КОГДА СтруктураПредприятия.ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|				И &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|			ТОГДА &Менеджер
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|	КОНЕЦ														КАК Менеджер,
	|	ВЫБОР
	|		КОГДА СделкиСКлиентами.ОбособленныйУчетТоваровПоСделке
	|				И &ФормироватьВидыЗапасовПоСделкам
	|			ТОГДА &Сделка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)
	|	КОНЕЦ														КАК Сделка,
	|	НЕОПРЕДЕЛЕНО												КАК ДокументРеализации,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)					КАК ТипЗапасов
	|ПОМЕСТИТЬ ТаблицаДанныхДокумента
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК СтруктураПредприятия
	|		ПО СтруктураПредприятия.Ссылка = &Подразделение
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СделкиСКлиентами КАК СделкиСКлиентами
	|		ПО СделкиСКлиентами.Ссылка = &Сделка
	|
	|ГДЕ
	|	Организации.Ссылка = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки											КАК НомерСтроки,
	|	ТаблицаТоваров.ВариантОтражения										КАК ВариантОтражения,
	|	ТаблицаТоваров.Номенклатура											КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика										КАК Характеристика,
	|	ТаблицаТоваров.Серия												КАК Серия,
	|	ТаблицаТоваров.СтатусУказанияСерий									КАК СтатусУказанияСерий,
	|	ТаблицаТоваров.Назначение											КАК Назначение,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры							КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.НоменклатураПартнера									КАК НоменклатураПартнера,
	|	ТаблицаТоваров.Количество											КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ &ТекстПоляТаблицаТоваровКоличествоПоРНПТ_
	|	КОНЕЦ																КАК КоличествоПоРНПТ,
	|	ТаблицаТоваров.Склад												КАК Склад,
	|	ТаблицаТоваров.КодТНВЭД												КАК КодТНВЭД,
	|	ТаблицаТоваров.СтавкаНДС											КАК СтавкаНДС,
	|	ТаблицаТоваров.Сумма + (ТаблицаТоваров.СуммаНДС * &ЦенаВключаетНДС)	КАК СуммаСНДС,
	|	ТаблицаТоваров.СуммаНДС												КАК СуммаНДС,
	|	&Сделка																КАК Сделка,
	|	ТаблицаТоваров.ЗаказКлиента											КАК ЗаказКлиента,
	|	ТаблицаТоваров.КодСтроки											КАК КодСтроки,
	|	&ТекстПоляТаблицаТоваровНомерГТД_									КАК НомерГТД
	|ПОМЕСТИТЬ ВтТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|
	|ГДЕ
	|	ТаблицаТоваров.ВариантОтражения В(&МассивВариантовОтражения)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки		КАК НомерСтроки,
	|	ТоварыЗаказа.Ссылка.Назначение	КАК Назначение
	|ПОМЕСТИТЬ ВтТоварыПодЗаказ
	|ИЗ
	|	ВтТаблицаТоваров КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ТоварыЗаказа
	|		ПО ТаблицаТоваров.ЗаказКлиента = ТоварыЗаказа.Ссылка
	|			И ТаблицаТоваров.КодСтроки = ТоварыЗаказа.КодСтроки
	|			И ТаблицаТоваров.Номенклатура = ТоварыЗаказа.Номенклатура
	|			И ТаблицаТоваров.Характеристика = ТоварыЗаказа.Характеристика
	|
	|ГДЕ
	|	&ПродажаПоЗаказам
	|	И ТаблицаТоваров.ЗаказКлиента <> Неопределено
	|	И ТоварыЗаказа.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить)
	|	И ТоварыЗаказа.Обособленно
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки		КАК НомерСтроки,
	|	ТоварыЗаказа.Ссылка.Назначение	КАК Назначение
	|ИЗ
	|	ВтТаблицаТоваров КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВозвратТоваровОтКлиента.ЗаменяющиеТовары КАК ТоварыЗаказа
	|		ПО ТаблицаТоваров.ЗаказКлиента = ТоварыЗаказа.Ссылка
	|			И ТаблицаТоваров.КодСтроки = ТоварыЗаказа.КодСтроки
	|			И ТаблицаТоваров.Номенклатура = ТоварыЗаказа.Номенклатура
	|			И ТаблицаТоваров.Характеристика = ТоварыЗаказа.Характеристика
	|
	|ГДЕ
	|	&ПродажаПоЗаказам
	|	И ТаблицаТоваров.ЗаказКлиента <> Неопределено
	|	И ТоварыЗаказа.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить)
	|	И ТоварыЗаказа.Обособленно
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки					КАК НомерСтроки,
	|	ТаблицаТоваров.ВариантОтражения				КАК ВариантОтражения,
	|	ТаблицаТоваров.Номенклатура					КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика				КАК Характеристика,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.НоменклатураПартнера 		КАК НоменклатураПартнера,
	|	ТаблицаТоваров.Серия						КАК Серия,
	|	ТаблицаТоваров.СтатусУказанияСерий			КАК СтатусУказанияСерий,
	|	ТаблицаТоваров.Количество					КАК Количество,
	|	ТаблицаТоваров.КоличествоПоРНПТ				КАК КоличествоПоРНПТ,
	|	ВЫБОР
	|		КОГДА &РеализацияЧерезКомиссионера
	|			ТОГДА Аналитика.МестоХранения
	|		ИНАЧЕ ТаблицаТоваров.Склад
	|	КОНЕЦ 										КАК Склад,
	|	ТаблицаТоваров.ЗаказКлиента					КАК ЗаказКлиента,
	|	ТаблицаТоваров.КодТНВЭД						КАК КодТНВЭД,
	|	ТаблицаТоваров.СтавкаНДС					КАК СтавкаНДС,
	|	ТаблицаТоваров.СуммаСНДС					КАК СуммаСНДС,
	|	ТаблицаТоваров.СуммаНДС						КАК СуммаНДС,
	|	0											КАК СуммаВознаграждения,
	|	0											КАК СуммаНДСВознаграждения,
	|	&Сделка										КАК Сделка,
	|	ТаблицаТоваров.Назначение					КАК Назначение,
	|	ИСТИНА										КАК ПодбиратьВидыЗапасов,
	|	ТаблицаТоваров.НомерГТД						КАК НомерГТД
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	ВтТаблицаТоваров КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыПодЗаказ КАК ТоварыПодЗаказ
	|		ПО ТаблицаТоваров.НомерСтроки = ТоварыПодЗаказ.НомерСтроки
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТоваров.Номенклатура = СправочникНоменклатура.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаТоваров.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|ГДЕ
	|	СправочникНоменклатура.ТипНоменклатуры В(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|											ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки					КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.НаДоходыРасходы				КАК НаДоходыРасходы,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.НоменклатураПартнера 		КАК НоменклатураПартнера,	
	|	ТаблицаВидыЗапасов.ВидЗапасов					КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД						КАК НомерГТД,
	|	ТаблицаВидыЗапасов.КодТНВЭД						КАК КодТНВЭД,
	|	ТаблицаВидыЗапасов.СтавкаНДС					КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)		КАК СкладОтгрузки,
	|	ТаблицаВидыЗапасов.Склад						КАК Склад,
	|	ТаблицаВидыЗапасов.ЗаказКлиента					КАК ЗаказКлиента,
	|	&Сделка											КАК Сделка,
	|	ТаблицаВидыЗапасов.Количество					КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаВидыЗапасов.КоличествоПоРНПТ
	|	КОНЕЦ											КАК КоличествоПоРНПТ,
	|	ТаблицаВидыЗапасов.СуммаСНДС					КАК СуммаСНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС						КАК СуммаНДС,
	|	ЛОЖЬ											КАК ВидыЗапасовУказаныВручную
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	&ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	99999 КАК НомерСтроки,
	|	&Дата КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаВидыЗапасов.НаДоходыРасходы КАК НаДоходыРасходы,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.НоменклатураПартнера КАК НоменклатураПартнера,	
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.КодТНВЭД КАК КодТНВЭД,
	|	ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ТаблицаВидыЗапасов.Склад КАК Склад,
	|	ТаблицаВидыЗапасов.ЗаказКлиента КАК ЗаказКлиента,
	|	&Сделка КАК Сделка,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаВидыЗапасов.КоличествоПоРНПТ
	|	КОНЕЦ КАК КоличествоПоРНПТ,
	|	ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДС
	|ПОМЕСТИТЬ ВтВидыЗапасовОприходование
	|ИЗ
	|	&ВидыЗапасовОприходование КАК ТаблицаВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки					КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.НаДоходыРасходы				КАК НаДоходыРасходы,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.НоменклатураПартнера 		КАК НоменклатураПартнера,	
	|	Аналитика.Номенклатура							КАК Номенклатура,
	|	Аналитика.Характеристика						КАК Характеристика,
	|	Аналитика.Серия									КАК Серия,
	|	ТаблицаВидыЗапасов.ВидЗапасов					КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД						КАК НомерГТД,
	|	ТаблицаВидыЗапасов.КодТНВЭД						КАК КодТНВЭД,
	|	ТаблицаВидыЗапасов.СтавкаНДС					КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.СкладОтгрузки				КАК СкладОтгрузки,
	|	ТаблицаВидыЗапасов.Склад						КАК Склад,
	|	ТаблицаВидыЗапасов.ЗаказКлиента					КАК ЗаказКлиента,
	|	ТаблицаВидыЗапасов.Сделка						КАК Сделка,
	|	ТаблицаВидыЗапасов.Количество					КАК Количество,
	|	ТаблицаВидыЗапасов.КоличествоПоРНПТ				КАК КоличествоПоРНПТ,
	|	ТаблицаВидыЗапасов.СуммаСНДС					КАК СуммаСНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС						КАК СуммаНДС,
	|	ЛОЖЬ											КАК ВидыЗапасовУказаныВручную
	|ПОМЕСТИТЬ ТаблицаВидыЗапасов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки					КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.НаДоходыРасходы				КАК НаДоходыРасходы,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.НоменклатураПартнера 		КАК НоменклатураПартнера,	
	|	Аналитика.Номенклатура							КАК Номенклатура,
	|	Аналитика.Характеристика						КАК Характеристика,
	|	Аналитика.Серия									КАК Серия,
	|	ТаблицаВидыЗапасов.ВидЗапасов					КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД						КАК НомерГТД,
	|	ТаблицаВидыЗапасов.КодТНВЭД						КАК КодТНВЭД,
	|	ТаблицаВидыЗапасов.СтавкаНДС					КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.СкладОтгрузки				КАК СкладОтгрузки,
	|	ТаблицаВидыЗапасов.Склад						КАК Склад,
	|	ТаблицаВидыЗапасов.ЗаказКлиента					КАК ЗаказКлиента,
	|	ТаблицаВидыЗапасов.Сделка						КАК Сделка,
	|	ТаблицаВидыЗапасов.Количество					КАК Количество,
	|	ТаблицаВидыЗапасов.КоличествоПоРНПТ				КАК КоличествоПоРНПТ,
	|	ТаблицаВидыЗапасов.СуммаСНДС					КАК СуммаСНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС						КАК СуммаНДС,
	|	ИСТИНА											КАК ВидыЗапасовУказаныВручную
	|ИЗ
	|	ВтВидыЗапасовОприходование КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	Аналитика.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.НоменклатураПартнера КАК НоменклатураПартнера,	
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ТекущийВидЗапасов,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|				И &ВернутьМногооборотнуюТару
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоВозвратнаяТара,
	|	ТаблицаДанныхДокумента.Организация КАК Организация,
	|	ТаблицаДанныхДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаДанныхДокумента.ТипЗапасов КАК ТипЗапасов,
	|	ТаблицаДанныхДокумента.Соглашение КАК Соглашение,
	|	ТаблицаДанныхДокумента.Валюта КАК Валюта,
	|	ТаблицаДанныхДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеОрганизации,
	|	НЕОПРЕДЕЛЕНО КАК ВладелецТовара,
	|	ТаблицаДанныхДокумента.Контрагент КАК Контрагент,
	|	ТаблицаДанныхДокумента.Договор КАК Договор
	|ПОМЕСТИТЬ ИсходнаяТаблицаТоваров
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|	ПО (ИСТИНА)
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО ТаблицаТоваров.Номенклатура = СпрНоменклатура.Ссылка";
	
	ВернутьМногооборотнуюТару = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование,"ВернутьМногооборотнуюТару");
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТаблицаРасхождения = ?(ДополнительныеСвойства.Свойство("ТаблицыЗаполненияВидовЗапасовПриОбмене")
								И ДополнительныеСвойства.ТаблицыЗаполненияВидовЗапасовПриОбмене <> Неопределено
								И ДополнительныеСвойства.ТаблицыЗаполненияВидовЗапасовПриОбмене.Свойство("Расхождения"),
							ДополнительныеСвойства.ТаблицыЗаполненияВидовЗапасовПриОбмене.Расхождения,
							Расхождения);
	
	Запрос.УстановитьПараметр("Ссылка",								Ссылка);
	Запрос.УстановитьПараметр("Дата",								Дата);
	Запрос.УстановитьПараметр("Валюта",								Валюта);
	Запрос.УстановитьПараметр("Организация",						Организация);
	Запрос.УстановитьПараметр("Менеджер",							Менеджер);
	Запрос.УстановитьПараметр("Подразделение",						Подразделение);
	Запрос.УстановитьПараметр("Сделка",								Сделка);
	Запрос.УстановитьПараметр("НалогообложениеНДС",					НалогообложениеНДС);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС",					?(ЦенаВключаетНДС, 0, 1));
	Запрос.УстановитьПараметр("ПродажаПоЗаказам",					ПродажаПоЗаказам);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",				Перечисления.ХозяйственныеОперации.РеализацияКлиенту);
	Запрос.УстановитьПараметр("ДеятельностьОблагаетсяЕНВД",			(НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД));
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоПодразделениямМенеджерам", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоПодразделениямМенеджерам"));
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоСделкам",	ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоСделкам"));
	Запрос.УстановитьПараметр("ТаблицаТоваров",						ТаблицаРасхождения);
	Запрос.УстановитьПараметр("ТаблицаВидыЗапасов",					ВидыЗапасовСписание);
	Запрос.УстановитьПараметр("МассивВариантовОтражения",			МассивВариантовОтражения);
	Запрос.УстановитьПараметр("ВидыЗапасовОприходование",			ВидыЗапасовОприходование);
	Запрос.УстановитьПараметр("ВернутьМногооборотнуюТару", 			ВернутьМногооборотнуюТару);
	Запрос.УстановитьПараметр("РеализацияЧерезКомиссионера", 
								КомиссионнаяТорговляСервер.РеализацияЧерезКомиссионера(
								Документы.КорректировкаРеализации.ХозяйственнаяОперацияДокументаОснования(ДокументОснование)));
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	ЗапасыСервер.ДополнитьВременныеТаблицыОбязательнымиКолонками(Запрос);
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляТаблицыЗначенийВТекстеЗапроса(
		ТаблицаРасхождения,
		Запрос.Текст,
		"&ТекстПоляТаблицаТоваровКоличествоПоРНПТ_",
		"ТаблицаТоваров",
		"КоличествоПоРНПТ",
		"ТаблицаТоваров.КоличествоПоРНПТ",
		"0");
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляТаблицыЗначенийВТекстеЗапроса(
		ТаблицаРасхождения,
		Запрос.Текст,
		"&ТекстПоляТаблицаТоваровНомерГТД_",
		"ТаблицаТоваров",
		"НомерГТД",
		"ТаблицаТоваров.НомерГТД",
		"ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)");
	
	Запрос.Выполнить();
	
	Возврат МенеджерВременныхТаблиц;
	
КонецФункции

Функция ПроверитьИзменениеТоваровСписание(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ИЗ (
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.Склад							КАК Склад,
	|		ТаблицаТоваров.ЗаказКлиента						КАК ЗаказКлиента,
	|		ТаблицаТоваров.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаТоваров.КодТНВЭД							КАК КодТНВЭД,
	|		ТаблицаТоваров.СтавкаНДС						КАК СтавкаНДС,
	|		ТаблицаТоваров.Количество						КАК Количество,
	|		ТаблицаТоваров.СуммаСНДС						КАК СуммаСНДС,
	|		ТаблицаТоваров.СуммаНДС							КАК СуммаНДС
	|	ИЗ
	|		ТаблицаТоваров КАК ТаблицаТоваров
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаВидыЗапасов.Склад						КАК Склад,
	|		ТаблицаВидыЗапасов.ЗаказКлиента					КАК ЗаказКлиента,
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаВидыЗапасов.КодТНВЭД						КАК КодТНВЭД,
	|		ТаблицаВидыЗапасов.СтавкаНДС					КАК СтавкаНДС,
	|		-ТаблицаВидыЗапасов.Количество					КАК Количество,
	|		-ТаблицаВидыЗапасов.СуммаСНДС					КАК СуммаСНДС,
	|		-ТаблицаВидыЗапасов.СуммаНДС					КАК СуммаНДС
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ГДЕ
	|		НЕ ТаблицаВидыЗапасов.НаДоходыРасходы
	|	) КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Склад,
	|	ТаблицаТоваров.ЗаказКлиента,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.КодТНВЭД,
	|	ТаблицаТоваров.СтавкаНДС
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаТоваров.Количество) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаСНДС) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаНДС) <> 0
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции

Функция ПроверитьИзменениеТоваровОтразитьНаПрочихДоходах(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ИЗ (
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.Склад							КАК Склад,
	|		ТаблицаТоваров.ЗаказКлиента						КАК ЗаказКлиента,
	|		ТаблицаТоваров.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаТоваров.СтавкаНДС						КАК СтавкаНДС,
	|		ТаблицаТоваров.Количество						КАК Количество,
	|		ТаблицаТоваров.СуммаСНДС						КАК СуммаСНДС,
	|		ТаблицаТоваров.СуммаНДС							КАК СуммаНДС
	|	ИЗ
	|		ТаблицаТоваров КАК ТаблицаТоваров
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаВидыЗапасов.Склад						КАК Склад,
	|		ТаблицаВидыЗапасов.ЗаказКлиента					КАК ЗаказКлиента,
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаВидыЗапасов.СтавкаНДС					КАК СтавкаНДС,
	|		-ТаблицаВидыЗапасов.Количество					КАК Количество,
	|		-ТаблицаВидыЗапасов.СуммаСНДС					КАК СуммаСНДС,
	|		-ТаблицаВидыЗапасов.СуммаНДС					КАК СуммаНДС
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ГДЕ
	|		ТаблицаВидыЗапасов.НаДоходыРасходы
	|	) КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Склад,
	|	ТаблицаТоваров.ЗаказКлиента,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.СтавкаНДС
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаТоваров.Количество) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаСНДС) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаНДС) <> 0
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// Оприходование

Функция ВременныеТаблицыДанныхДокументаОприходование(МассивВариантовОтражения)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Дата														КАК Дата,
	|	&Организация												КАК Организация,
	|	&Склад														КАК Склад,
	|	&Партнер													КАК Партнер,
	|	&Контрагент													КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка)	КАК Соглашение,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)		КАК Договор,
	|	&Валюта														КАК Валюта,
	|	&НалогообложениеНДС											КАК НалогообложениеНДС,
	|	&ХозяйственнаяОперация										КАК ХозяйственнаяОперация,
	|	ЛОЖЬ														КАК ЕстьСделкиВТабличнойЧасти,
	|	&ДеятельностьОблагаетсяЕНВД									КАК ДеятельностьОблагаетсяЕНВД,
	|	ВЫБОР
	|		КОГДА СтруктураПредприятия.ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|				И &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|			ТОГДА &Подразделение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	КОНЕЦ														КАК Подразделение,
	|	ВЫБОР
	|		КОГДА СтруктураПредприятия.ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|				И &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|			ТОГДА &Менеджер
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|	КОНЕЦ														КАК Менеджер,
	|	ВЫБОР
	|		КОГДА СделкиСКлиентами.ОбособленныйУчетТоваровПоСделке
	|				И &ФормироватьВидыЗапасовПоСделкам
	|			ТОГДА &Сделка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)
	|	КОНЕЦ														КАК Сделка,
	|	&ДокументРеализации											КАК ДокументРеализации,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)					КАК ТипЗапасов
	|ПОМЕСТИТЬ ТаблицаДанныхДокумента
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК СтруктураПредприятия
	|		ПО СтруктураПредприятия.Ссылка = &Подразделение
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СделкиСКлиентами КАК СделкиСКлиентами
	|		ПО СделкиСКлиентами.Ссылка = &Сделка
	|
	|ГДЕ
	|	Организации.Ссылка = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки												КАК НомерСтроки,
	|	ТаблицаТоваров.ВариантОтражения											КАК ВариантОтражения,
	|	ТаблицаТоваров.Номенклатура												КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика											КАК Характеристика,
	|	ТаблицаТоваров.Серия													КАК Серия,
	|	ТаблицаТоваров.СтатусУказанияСерий										КАК СтатусУказанияСерий,
	|	ТаблицаТоваров.НоменклатураПартнера										КАК НоменклатураПартнера,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры								КАК АналитикаУчетаНоменклатуры,
	|	-ТаблицаТоваров.Количество												КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ &ТекстПоляТаблицаТоваровКоличествоПоРНПТ_
	|	КОНЕЦ																	КАК КоличествоПоРНПТ,
	|	ТаблицаТоваров.Склад													КАК Склад,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.ИзДокументаПродажи) КАК СпособОпределенияСебестоимости,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)КАК АналитикаУчетаНоменклатурыОтгрузки,
	|	ТаблицаТоваров.ЗаказКлиента												КАК ЗаказКлиента,
	|	ТаблицаТоваров.ОбъектРасчетов											КАК ОбъектРасчетов,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)						КАК Сделка,
	|	ТаблицаТоваров.Назначение												КАК Назначение,
	|	ТаблицаТоваров.КодТНВЭД													КАК КодТНВЭД,
	|	ТаблицаТоваров.СтавкаНДС												КАК СтавкаНДС,
	|	-(ТаблицаТоваров.Сумма + (ТаблицаТоваров.СуммаНДС * &ЦенаВключаетНДС))	КАК СуммаСНДС,
	|	-ТаблицаТоваров.СуммаНДС												КАК СуммаНДС,
	|	0																		КАК СуммаВознаграждения,
	|	0																		КАК СуммаНДСВознаграждения,
	|	ЛОЖЬ																	ПодбиратьВидыЗапасов,
	|	ТаблицаТоваров.КодСтроки												КАК КодСтроки,
	|	&ТекстПоляТаблицаТоваровНомерГТД_										КАК НомерГТД
	|ПОМЕСТИТЬ ВтТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|
	|ГДЕ
	|	ТаблицаТоваров.ВариантОтражения В(&МассивВариантовОтражения)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки		КАК НомерСтроки,
	|	ТоварыЗаказа.Ссылка.Назначение	КАК Назначение
	|ПОМЕСТИТЬ ВтТоварыПодЗаказ
	|ИЗ
	|	ВтТаблицаТоваров КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ТоварыЗаказа
	|		ПО ТаблицаТоваров.ЗаказКлиента = ТоварыЗаказа.Ссылка
	|			И ТаблицаТоваров.КодСтроки = ТоварыЗаказа.КодСтроки
	|			И ТаблицаТоваров.Номенклатура = ТоварыЗаказа.Номенклатура
	|			И ТаблицаТоваров.Характеристика = ТоварыЗаказа.Характеристика
	|
	|ГДЕ
	|	&ПродажаПоЗаказам
	|	И ТаблицаТоваров.ЗаказКлиента <> Неопределено
	|	И ТоварыЗаказа.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить)
	|	И ТоварыЗаказа.Обособленно
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки		КАК НомерСтроки,
	|	ТоварыЗаказа.Ссылка.Назначение	КАК Назначение
	|ИЗ
	|	ВтТаблицаТоваров КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВозвратТоваровОтКлиента.ЗаменяющиеТовары КАК ТоварыЗаказа
	|		ПО ТаблицаТоваров.ЗаказКлиента = ТоварыЗаказа.Ссылка
	|			И ТаблицаТоваров.КодСтроки = ТоварыЗаказа.КодСтроки
	|			И ТаблицаТоваров.Номенклатура = ТоварыЗаказа.Номенклатура
	|			И ТаблицаТоваров.Характеристика = ТоварыЗаказа.Характеристика
	|
	|ГДЕ
	|	&ПродажаПоЗаказам
	|	И ТаблицаТоваров.ЗаказКлиента <> Неопределено
	|	И ТоварыЗаказа.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить)
	|	И ТоварыЗаказа.Обособленно
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки					 КАК НомерСтроки,
	|	ТаблицаТоваров.ВариантОтражения				 КАК ВариантОтражения,
	|	ТаблицаТоваров.Номенклатура					 КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика				 КАК Характеристика,
	|	ТаблицаТоваров.Назначение					 КАК Назначение,
	|	ТаблицаТоваров.Серия						 КАК Серия,	
	|	ТаблицаТоваров.СтатусУказанияСерий			 КАК СтатусУказанияСерий,
	|	ТаблицаТоваров.НоменклатураПартнера 		 КАК НоменклатураПартнера,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры	 КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Количество					 КАК Количество,
	|	ТаблицаТоваров.КоличествоПоРНПТ				 КАК КоличествоПоРНПТ,
	|	ТаблицаТоваров.Склад						 КАК Склад,
	|	&ДокументРеализации							 КАК ДокументРеализации,
	|	ТаблицаТоваров.СпособОпределенияСебестоимости КАК СпособОпределенияСебестоимости,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)КАК АналитикаУчетаНоменклатурыОтгрузки,
	|	ТаблицаТоваров.ЗаказКлиента					 КАК ЗаказКлиента,
	|	ТаблицаТоваров.ОбъектРасчетов				 КАК ОбъектРасчетов,
	|	ТаблицаТоваров.КодТНВЭД						 КАК КодТНВЭД,
	|	ТаблицаТоваров.СтавкаНДС					 КАК СтавкаНДС,
	|	ТаблицаТоваров.СуммаСНДС					 КАК СуммаСНДС,
	|	ТаблицаТоваров.СуммаНДС						 КАК СуммаНДС,
	|	0											 КАК СуммаВознаграждения,
	|	0											 КАК СуммаНДСВознаграждения,
	|	ТаблицаТоваров.Сделка						 КАК Сделка,
	|	ТаблицаТоваров.ПодбиратьВидыЗапасов			 КАК ПодбиратьВидыЗапасов,
	|	ТаблицаТоваров.НомерГТД						 КАК НомерГТД
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	ВтТаблицаТоваров КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыПодЗаказ КАК ТоварыПодЗаказ
	|		ПО ТаблицаТоваров.НомерСтроки = ТоварыПодЗаказ.НомерСтроки
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТоваров.Номенклатура = СправочникНоменклатура.Ссылка
	|
	|ГДЕ
	|	СправочникНоменклатура.ТипНоменклатуры В(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|											ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки						КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.НаДоходыРасходы					КАК НаДоходыРасходы,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов						КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД							КАК НомерГТД,
	|	ТаблицаВидыЗапасов.КодТНВЭД							КАК КодТНВЭД,
	|	ТаблицаВидыЗапасов.СтавкаНДС						КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.СкладОтгрузки					КАК СкладОтгрузки,
	|	ТаблицаВидыЗапасов.Склад							КАК Склад,
	|	ТаблицаВидыЗапасов.ЗаказКлиента						КАК ЗаказКлиента,
	|	ТаблицаВидыЗапасов.ОбъектРасчетов					КАК ОбъектРасчетов,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)	КАК Сделка,
	|	ТаблицаВидыЗапасов.НоменклатураПартнера 			КАК НоменклатураПартнера,	
	|	ТаблицаВидыЗапасов.Количество						КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаВидыЗапасов.КоличествоПоРНПТ
	|	КОНЕЦ												КАК КоличествоПоРНПТ,
	|	ТаблицаВидыЗапасов.СуммаСНДС						КАК СуммаСНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС							КАК СуммаНДС,
	|	ЛОЖЬ												КАК ВидыЗапасовУказаныВручную
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	&ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки						КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.НаДоходыРасходы					КАК НаДоходыРасходы,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура								КАК Номенклатура,
	|	Аналитика.Характеристика							КАК Характеристика,
	|	Аналитика.Серия										КАК Серия,
	|	ТаблицаВидыЗапасов.ВидЗапасов						КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО 										КАК ВидЗапасовПолучателя,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)КАК АналитикаУчетаНоменклатурыОтгрузки,
	|	&ДокументРеализации									КАК ДокументРеализации,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.ИзДокументаПродажи) КАК СпособОпределенияСебестоимости,
	|	ТаблицаВидыЗапасов.НомерГТД							КАК НомерГТД,
	|	ТаблицаВидыЗапасов.КодТНВЭД							КАК КодТНВЭД,
	|	ТаблицаВидыЗапасов.СтавкаНДС						КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.СкладОтгрузки					КАК СкладОтгрузки,
	|	ТаблицаВидыЗапасов.Склад							КАК Склад,
	|	ТаблицаВидыЗапасов.ЗаказКлиента						КАК ЗаказКлиента,
	|	ТаблицаВидыЗапасов.ОбъектРасчетов					КАК ОбъектРасчетов,
	|	ТаблицаВидыЗапасов.Сделка							КАК Сделка,
	|	ТаблицаВидыЗапасов.НоменклатураПартнера 			КАК НоменклатураПартнера,	
	|	ТаблицаВидыЗапасов.Количество						КАК Количество,
	|	ТаблицаВидыЗапасов.КоличествоПоРНПТ					КАК КоличествоПоРНПТ,
	|	ТаблицаВидыЗапасов.СуммаСНДС						КАК СуммаСНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС							КАК СуммаНДС,
	|	ТаблицаВидыЗапасов.ВидыЗапасовУказаныВручную		КАК ВидыЗапасовУказаныВручную
	|ПОМЕСТИТЬ ТаблицаВидыЗапасов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	Аналитика.Серия
	|";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТаблицаРасхождения = ?(ДополнительныеСвойства.Свойство("ТаблицыЗаполненияВидовЗапасовПриОбмене")
								И ДополнительныеСвойства.ТаблицыЗаполненияВидовЗапасовПриОбмене <> Неопределено
								И ДополнительныеСвойства.ТаблицыЗаполненияВидовЗапасовПриОбмене.Свойство("Расхождения"),
							ДополнительныеСвойства.ТаблицыЗаполненияВидовЗапасовПриОбмене.Расхождения,
							Расхождения);
	
	Запрос.УстановитьПараметр("Ссылка",								Ссылка);
	Запрос.УстановитьПараметр("Дата",								Дата);
	Запрос.УстановитьПараметр("Валюта",								Валюта);
	Запрос.УстановитьПараметр("Организация",						Организация);
	Запрос.УстановитьПараметр("Партнер",							Партнер);
	Запрос.УстановитьПараметр("Контрагент",							Контрагент);
	Запрос.УстановитьПараметр("Менеджер",							Менеджер);
	Запрос.УстановитьПараметр("Подразделение",						Подразделение);
	Запрос.УстановитьПараметр("Сделка",								Сделка);
	Запрос.УстановитьПараметр("Склад",								Склад);
	Запрос.УстановитьПараметр("НалогообложениеНДС",					НалогообложениеНДС);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС",					?(ЦенаВключаетНДС, 0, 1));
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",				ВидКорректировки);
	Запрос.УстановитьПараметр("ДеятельностьОблагаетсяЕНВД",			(НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД));
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоПодразделениямМенеджерам", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоПодразделениямМенеджерам"));
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоСделкам",	ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоСделкам"));
	Запрос.УстановитьПараметр("ТаблицаТоваров",						ТаблицаРасхождения);
	Запрос.УстановитьПараметр("ТаблицаВидыЗапасов",					ВидыЗапасовОприходование);
	Запрос.УстановитьПараметр("МассивВариантовОтражения",			МассивВариантовОтражения);
	Запрос.УстановитьПараметр("ДокументРеализации",					ДокументОснование);
	Запрос.УстановитьПараметр("ПродажаПоЗаказам",					ПродажаПоЗаказам);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	ЗапасыСервер.ДополнитьВременныеТаблицыОбязательнымиКолонками(Запрос);
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляТаблицыЗначенийВТекстеЗапроса(
		ТаблицаРасхождения,
		Запрос.Текст,
		"&ТекстПоляТаблицаТоваровКоличествоПоРНПТ_",
		"ТаблицаТоваров",
		"КоличествоПоРНПТ",
		"ТаблицаТоваров.КоличествоПоРНПТ",
		"0");
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляТаблицыЗначенийВТекстеЗапроса(
		ТаблицаРасхождения,
		Запрос.Текст,
		"&ТекстПоляТаблицаТоваровНомерГТД_",
		"ТаблицаТоваров",
		"НомерГТД",
		"ТаблицаТоваров.НомерГТД",
		"ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)");
	
	Запрос.Выполнить();
	
	Возврат МенеджерВременныхТаблиц;
	
КонецФункции

Функция ПроверитьИзменениеТоваровОприходование(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ИЗ (
	|	ВЫБРАТЬ
	|		ВЫБОР КОГДА ТаблицаТоваров.ВариантОтражения В (ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияКорректировокРеализаций.СписатьНаРасходы),
	|													   ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияКорректировокРеализаций.ОтразитьНаПрочихДоходах),
	|													   ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияКорректировокРеализаций.УменьшитьРеализациюСписатьНаРасходы)) ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|		КОНЕЦ											КАК НаДоходыРасходы,
	|		ТаблицаТоваров.Склад							КАК Склад,
	|		ТаблицаТоваров.ЗаказКлиента						КАК ЗаказКлиента,
	|		ТаблицаТоваров.ОбъектРасчетов					КАК ОбъектРасчетов,
	|		ТаблицаТоваров.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаТоваров.КодТНВЭД							КАК КодТНВЭД,
	|		ТаблицаТоваров.СтавкаНДС						КАК СтавкаНДС,
	|		ТаблицаТоваров.Количество						КАК Количество,
	|		ТаблицаТоваров.СуммаСНДС						КАК СуммаСНДС,
	|		ТаблицаТоваров.СуммаНДС							КАК СуммаНДС
	|	ИЗ
	|		ТаблицаТоваров КАК ТаблицаТоваров
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаВидыЗапасов.НаДоходыРасходы				КАК НаДоходыРасходы,
	|		ТаблицаВидыЗапасов.СкладОтгрузки				КАК Склад,
	|		ТаблицаВидыЗапасов.ЗаказКлиента					КАК ЗаказКлиента,
	|		ТаблицаВидыЗапасов.ОбъектРасчетов				КАК ОбъектРасчетов,
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаВидыЗапасов.КодТНВЭД						КАК КодТНВЭД,
	|		ТаблицаВидыЗапасов.СтавкаНДС					КАК СтавкаНДС,
	|		-ТаблицаВидыЗапасов.Количество					КАК Количество,
	|		-ТаблицаВидыЗапасов.СуммаСНДС					КАК СуммаСНДС,
	|		-ТаблицаВидыЗапасов.СуммаНДС					КАК СуммаНДС
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|	) КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Склад,
	|	ТаблицаТоваров.ЗаказКлиента,
	|	ТаблицаТоваров.ОбъектРасчетов,
	|	ТаблицаТоваров.НаДоходыРасходы,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.КодТНВЭД,
	|	ТаблицаТоваров.СтавкаНДС
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаТоваров.Количество) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаСНДС) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаНДС) <> 0
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// Корректировка выручки

Функция ВременныеТаблицыДанныхДокументаКорректировкаВыручки()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Дата КАК Дата,
	|	&Организация КАК Организация,
	|	&НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА СтруктураПредприятия.ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|				И &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|			ТОГДА &Менеджер
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|	КОНЕЦ КАК Менеджер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар) КАК ТипЗапасов
	|ПОМЕСТИТЬ ТаблицаДанныхДокумента
	|ИЗ
	|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
	|ГДЕ
	|	СтруктураПредприятия.Ссылка = &Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.Серия КАК Серия,
	|	ТаблицаТоваров.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	ТаблицаТоваров.НоменклатураПартнера	КАК НоменклатураПартнера,
	|	ТаблицаТоваров.АналитикаУчетаНаборов КАК АналитикаУчетаНаборов,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.КодСтроки = 0
	|			ТОГДА ТаблицаТоваров.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаТоваров.Упаковка КАК Упаковка,
	|	ТаблицаТоваров.ЗаказКлиента КАК ЗаказКлиента,
	|	ТаблицаТоваров.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ТаблицаТоваров.Склад КАК Склад,
	|	ТаблицаТоваров.КодТНВЭД КАК КодТНВЭД,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТоваров.Сумма + ТаблицаТоваров.СуммаНДС * &ЦенаВключаетНДС КАК СуммаСНДС,
	|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТоваров.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	&ТекстПоляТаблицаТоваровНомерГТД_ КАК НомерГТД
	|ПОМЕСТИТЬ ВтТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|ГДЕ
	|	(ТаблицаТоваров.ВариантОтражения = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияКорректировокРеализаций.УвеличитьРеализацию)
	|			ИЛИ ТаблицаТоваров.ВариантОтражения = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияКорректировокРеализаций.УменьшитьРеализацию))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.КодТНВЭД КАК КодТНВЭД,
	|	ТаблицаВидыЗапасов.НоменклатураПартнера КАК НоменклатураПартнера,	
	|	ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ТаблицаВидыЗапасов.Склад КАК Склад,
	|	ТаблицаВидыЗапасов.ЗаказКлиента КАК ЗаказКлиента,
	|	ТаблицаВидыЗапасов.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДС,
	|	ТаблицаВидыЗапасов.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ЛОЖЬ КАК ВидыЗапасовУказаныВручную
	|ПОМЕСТИТЬ ТаблицаВидыЗапасов
	|ИЗ
	|	&ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.Серия КАК Серия,
	|	ТаблицаТоваров.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	ТаблицаТоваров.НоменклатураПартнера КАК НоменклатураПартнера,	
	|	ТаблицаТоваров.АналитикаУчетаНаборов КАК АналитикаУчетаНаборов,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Назначение КАК Назначение,
	|	ТаблицаТоваров.Упаковка КАК Упаковка,
	|	ТаблицаТоваров.ЗаказКлиента КАК ЗаказКлиента,
	|	ТаблицаТоваров.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ТаблицаТоваров.Склад КАК Склад,
	|	ТаблицаТоваров.КодТНВЭД КАК КодТНВЭД,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТоваров.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТоваров.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	ВтТаблицаТоваров КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТоваров.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	СправочникНоменклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТаблицаРасхождения = ?(ДополнительныеСвойства.Свойство("ТаблицыЗаполненияВидовЗапасовПриОбмене")
							И ДополнительныеСвойства.ТаблицыЗаполненияВидовЗапасовПриОбмене <> Неопределено
								И ДополнительныеСвойства.ТаблицыЗаполненияВидовЗапасовПриОбмене.Свойство("Расхождения"),
							ДополнительныеСвойства.ТаблицыЗаполненияВидовЗапасовПриОбмене.Расхождения,
							Расхождения);
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Менеджер", Менеджер);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("НалогообложениеНДС", НалогообложениеНДС);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС", ?(ЦенаВключаетНДС, 0, 1));
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоПодразделениямМенеджерам", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоПодразделениямМенеджерам"));
	Запрос.УстановитьПараметр("ТаблицаТоваров", ТаблицаРасхождения);
	Запрос.УстановитьПараметр("ТаблицаВидыЗапасов", ВидыЗапасовКорректировкаВыручки);
	
	ЗапасыСервер.ДополнитьВременныеТаблицыОбязательнымиКолонками(Запрос);
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляТаблицыЗначенийВТекстеЗапроса(
		ТаблицаРасхождения,
		Запрос.Текст,
		"&ТекстПоляТаблицаТоваровНомерГТД_",
		"ТаблицаТоваров",
		"НомерГТД",
		"ТаблицаТоваров.НомерГТД",
		"ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)");
	
	Запрос.Выполнить();
	
	Возврат МенеджерВременныхТаблиц;
	
КонецФункции

Функция ПроверитьИзменениеТоваровКорректировкаВыручки(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ИЗ (
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.ЗаказКлиента КАК ЗаказКлиента,
	|		ТаблицаТоваров.КодТНВЭД КАК КодТНВЭД,
	|		ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|		ТаблицаТоваров.СуммаСНДС КАК СуммаСНДС,
	|		ТаблицаТоваров.СуммаНДС КАК СуммаНДС
	|	ИЗ
	|		ТаблицаТоваров КАК ТаблицаТоваров
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаВидыЗапасов.ЗаказКлиента КАК ЗаказКлиента,
	|		ТаблицаВидыЗапасов.КодТНВЭД КАК КодТНВЭД,
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|		-ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаСНДС,
	|		-ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДС
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|	) КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.ЗаказКлиента,
	|	ТаблицаТоваров.КодТНВЭД,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.СтавкаНДС
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаТоваров.СуммаСНДС) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаНДС) <> 0
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции

Процедура ЗаполнитьВидыЗапасовКорректировкаВыручки(МенеджерВременныхТаблиц)
	
	ВидыЗапасовКорректировкаВыручки.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.ВидКорректировки КАК ХозяйственнаяОперация
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.КорректировкаРеализации КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка = &Ссылка
	|;";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Выполнить();
	
	Запрос.Текст = Документы.КорректировкаРеализации.ТекстЗапросаВтВидыЗапасов();
	
	Документы.КорректировкаРеализации.УстановитьПараметрыВтВидыЗапасов(
		Запрос,
		Ложь, // ПересчитыватьВВалютуРегл
		Ложь, // ВключаяДоКорректировки
		ДокументОснование);
	
	Запрос.Выполнить();
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.АналитикаУчетаНаборов,
	|	ТаблицаТоваров.Упаковка,
	|	ТаблицаТоваров.СтавкаНДС,
	|	ТаблицаТоваров.Склад,
	|	ТаблицаТоваров.КодТНВЭД,
	|	ТаблицаТоваров.ЗаказКлиента,
	|	ТаблицаТоваров.ОбъектРасчетов,
	|	ТаблицаТоваров.НоменклатураПартнера	
	|ПОМЕСТИТЬ ТаблицаТоваровИтог
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.АналитикаУчетаНаборов,
	|	ТаблицаТоваров.Упаковка,
	|	ТаблицаТоваров.СтавкаНДС,
	|	ТаблицаТоваров.Склад,
	|	ТаблицаТоваров.КодТНВЭД,
	|	ТаблицаТоваров.ЗаказКлиента,
	|	ТаблицаТоваров.ОбъектРасчетов,
	|	ТаблицаТоваров.НоменклатураПартнера	
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.АналитикаУчетаНаборов,
	|	ТаблицаТоваров.Упаковка,
	|	ТаблицаТоваров.СтавкаНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.АналитикаУчетаНаборов,
	|	ВидыЗапасов.Упаковка,
	|	ВидыЗапасов.ВидЗапасов,
	|	ВидыЗапасов.НомерГТД,
	|	ВидыЗапасов.СтавкаНДС,
	|	ТаблицаТоваров.Склад,
	|	ТаблицаТоваров.КодТНВЭД,
	|	ТаблицаТоваров.ЗаказКлиента,
	|	ТаблицаТоваров.ОбъектРасчетов,
	|	ТаблицаТоваров.НоменклатураПартнера,	
	|	СУММА(ВидыЗапасов.Количество)
	|ИЗ
	|	ВтВидыЗапасов КАК ВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаТоваровИтог КАК ТаблицаТоваров
	|	ПО
	|		ВидыЗапасов.АналитикаУчетаНоменклатуры = ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|		И ВидыЗапасов.АналитикаУчетаНаборов = ТаблицаТоваров.АналитикаУчетаНаборов
	|		И ВидыЗапасов.Упаковка = ТаблицаТоваров.Упаковка
	|		И ВидыЗапасов.СтавкаНДС = ТаблицаТоваров.СтавкаНДС
	|
	|СГРУППИРОВАТЬ ПО
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.АналитикаУчетаНаборов,
	|	ВидыЗапасов.Упаковка,
	|	ВидыЗапасов.ВидЗапасов,
	|	ВидыЗапасов.НомерГТД,
	|	ВидыЗапасов.СтавкаНДС,
	|	ТаблицаТоваров.Склад,
	|	ТаблицаТоваров.КодТНВЭД,
	|	ТаблицаТоваров.ЗаказКлиента,
	|	ТаблицаТоваров.ОбъектРасчетов,
	|	ТаблицаТоваров.НоменклатураПартнера	
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВидыЗапасов.Количество) > 0
	|
	|ИТОГИ ПО
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.АналитикаУчетаНаборов,
	|	ВидыЗапасов.Упаковка,
	|	ВидыЗапасов.СтавкаНДС,
	|	ТаблицаТоваров.Склад,
	|	ТаблицаТоваров.НоменклатураПартнера,
	|	ТаблицаТоваров.КодТНВЭД,
	|	ТаблицаТоваров.ЗаказКлиента,
	|	ТаблицаТоваров.ОбъектРасчетов
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.АналитикаУчетаНаборов,
	|	ТаблицаТоваров.Упаковка,
	|	ТаблицаТоваров.СтавкаНДС,
	|	ТаблицаТоваров.Склад,
	|	ТаблицаТоваров.КодТНВЭД,
	|	ТаблицаТоваров.ЗаказКлиента,
	|	ТаблицаТоваров.ОбъектРасчетов,
	|	ТаблицаТоваров.НоменклатураПартнера,	
	|	СУММА(ТаблицаТоваров.СуммаСНДС),
	|	СУММА(ТаблицаТоваров.СуммаНДС),
	|	СУММА(ТаблицаТоваров.СуммаВзаиморасчетов)
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.Номенклатура.ТипНоменклатуры В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		 ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.АналитикаУчетаНаборов,
	|	ТаблицаТоваров.Упаковка,
	|	ТаблицаТоваров.СтавкаНДС,
	|	ТаблицаТоваров.Склад,
	|	ТаблицаТоваров.КодТНВЭД,
	|	ТаблицаТоваров.ЗаказКлиента,
	|	ТаблицаТоваров.ОбъектРасчетов,
	|	ТаблицаТоваров.НоменклатураПартнера	
	|;
	|";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ДеревоВидовЗапасов = МассивРезультатов[1].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам); // ТаблицаЗначений
	ТаблицаРасхождений = МассивРезультатов[2].Выгрузить();
	
	ДеревоВидовЗапасов.Колонки.Добавить("СуммаСНДС");
	ДеревоВидовЗапасов.Колонки.Добавить("СуммаНДС");
	ДеревоВидовЗапасов.Колонки.Добавить("СуммаВзаиморасчетов");
	
	СтруктураОтбора = Новый Структура("АналитикаУчетаНоменклатуры, АналитикаУчетаНаборов, Упаковка, СтавкаНДС, ЗаказКлиента, ОбъектРасчетов, КодТНВЭД, НоменклатураПартнера");
	
	Для Каждого СтрокиПоНоменклатуре Из ДеревоВидовЗапасов.Строки Цикл
		Для Каждого СтрокиПоНоменклатуреНабора Из СтрокиПоНоменклатуре.Строки Цикл
			Для Каждого СтрокиПоУпаковкам Из СтрокиПоНоменклатуреНабора.Строки Цикл
				Для Каждого СтрокиПоСтавкамНДС Из СтрокиПоУпаковкам.Строки Цикл
					Для Каждого СтрокиПоСкладам Из СтрокиПоСтавкамНДС.Строки Цикл
						Для Каждого СтрокиПоНоменклатуреПартнера Из СтрокиПоСкладам.Строки Цикл
							Для Каждого СтрокиПоКодамТНВЭД Из СтрокиПоНоменклатуреПартнера.Строки Цикл
								Для Каждого СтрокиПоЗаказам Из СтрокиПоКодамТНВЭД.Строки Цикл
									Для Каждого СтрокиПоОбъектамРасчета Из СтрокиПоЗаказам.Строки Цикл
										
										БазаРаспределения = СтрокиПоОбъектамРасчета.Строки.ВыгрузитьКолонку("Количество");
										
										ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокиПоОбъектамРасчета);
										СтрокиРасхождений = ТаблицаРасхождений.НайтиСтроки(СтруктураОтбора);
										Если СтрокиРасхождений.Количество() = 0 Тогда
											Продолжить;
										КонецЕсли;
										
										Если СтрокиРасхождений[0].СуммаСНДС <> 0 Тогда
											РаспределенныеСуммы = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокиРасхождений[0].СуммаСНДС, БазаРаспределения);
											СтрокиПоОбъектамРасчета.Строки.ЗагрузитьКолонку(РаспределенныеСуммы, "СуммаСНДС");
										КонецЕсли;
										
										Если СтрокиРасхождений[0].СуммаНДС <> 0 Тогда
											РаспределенныеСуммы = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокиРасхождений[0].СуммаНДС, БазаРаспределения);
											СтрокиПоОбъектамРасчета.Строки.ЗагрузитьКолонку(РаспределенныеСуммы, "СуммаНДС");
										КонецЕсли;
										
										Если СтрокиРасхождений[0].СуммаВзаиморасчетов <> 0 Тогда
											РаспределенныеСуммы = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокиРасхождений[0].СуммаВзаиморасчетов, БазаРаспределения);
											СтрокиПоОбъектамРасчета.Строки.ЗагрузитьКолонку(РаспределенныеСуммы, "СуммаВзаиморасчетов");
										КонецЕсли;
										
										Для Каждого ДанныеВидовЗапасов Из СтрокиПоОбъектамРасчета.Строки Цикл
												НоваяСтрока = ВидыЗапасовКорректировкаВыручки.Добавить();
												ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеВидовЗапасов);
										КонецЦикла;
										
									КонецЦикла;
								КонецЦикла;
							КонецЦикла;
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Функция ПроверитьЗаполнениеПоРасхождениям(МассивНепроверяемыхРеквизитов, Отказ)
	
	СуммаНаПрочиеДоходы		  = 0;
	СуммаНаПрочиеРасходы 	  = 0;
	ОтразитьНаПрочихДоходах = Ложь;
	СписатьНаРасходы  = Ложь;
	
	Для Каждого СтрокаРасхождений Из Расхождения Цикл
		
		Если СтрокаРасхождений.ВариантОтражения = Перечисления.ВариантыОтраженияКорректировокРеализаций.ОтразитьНаПрочихДоходах Тогда
			ОтразитьНаПрочихДоходах = Истина;
			СуммаНаПрочиеДоходы = СуммаНаПрочиеДоходы + ?(СтрокаРасхождений.СуммаСНДС<0, -СтрокаРасхождений.СуммаСНДС, СтрокаРасхождений.СуммаСНДС);
		ИначеЕсли СтрокаРасхождений.ВариантОтражения = Перечисления.ВариантыОтраженияКорректировокРеализаций.СписатьНаРасходы
			ИЛИ СтрокаРасхождений.ВариантОтражения = Перечисления.ВариантыОтраженияКорректировокРеализаций.УменьшитьРеализациюСписатьНаРасходы Тогда
			СписатьНаРасходы  = Истина;
			СуммаНаПрочиеРасходы = СуммаНаПрочиеРасходы + ?(СтрокаРасхождений.СуммаСНДС<0, -СтрокаРасхождений.СуммаСНДС, СтрокаРасхождений.СуммаСНДС);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ВидКорректировки = Перечисления.ХозяйственныеОперации.РеализацияПерепоставленногоТовара
		ИЛИ ВидКорректировки = Перечисления.ХозяйственныеОперации.ВозвратНедопоставленногоТовара Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("Расхождения.ВариантОтражения");
		
	Иначе
		
		МассивНепроверяемыхРеквизитов.Добавить("Товары.ВариантОтражения");
		
	КонецЕсли;
	
	Если СуммаНаПрочиеДоходы = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ПодразделениеДоходы");
	КонецЕсли;
	
	Если СуммаНаПрочиеРасходы = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ПодразделениеРасходы");
	КонецЕсли;
	
	Результат = Новый Структура("ОтразитьНаПрочихДоходах, СписатьНаРасходы", ОтразитьНаПрочихДоходах, СписатьНаРасходы);
	
	Возврат Результат;
КонецФункции

Процедура ПроверитьЗаполнениеТаблицыКорректировкаЗадолженности(Отказ)
	
	Если ВидКорректировки <> Перечисления.ХозяйственныеОперации.КорректировкаРеализацииУменьшениеЗадолженностиСводно Тогда
		Возврат;
	КонецЕсли;
	
	ШаблонОшибки = НСтр("ru = 'В строке ""%1"" сумма уменьшения больше суммы продажи'");
	КлючДанных = ОбщегоНазначенияУТ.КлючДанныхДляСообщенияПользователю(ЭтотОбъект);
	Для каждого СтрокаТаблицы Из КорректировкаЗадолженности Цикл
		Если СтрокаТаблицы.СуммаКорректировки > СтрокаТаблицы.СуммаСНДС Тогда
			СообщениеОбОшибке = СтрШаблон(ШаблонОшибки, СтрокаТаблицы.НомерСтроки);
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("КорректировкаЗадолженности",
																	СтрокаТаблицы.НомерСтроки,
																	"СуммаКорректировки");
			ОбщегоНазначения.СообщитьПользователю(СообщениеОбОшибке, КлючДанных, Поле, "Объект", Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьСуммуДокумента()
	
	Если ВидКорректировки = Перечисления.ХозяйственныеОперации.КорректировкаРеализацииУвеличениеЗадолженностиСводно
		ИЛИ ВидКорректировки = Перечисления.ХозяйственныеОперации.КорректировкаРеализацииУменьшениеЗадолженностиСводно Тогда
		СуммаИтого = КорректировкаЗадолженности.Итог("СуммаКорректировки");
	
	ИначеЕсли ЗначениеЗаполнено(ДокументОснование)
		И ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		ВернутьМногооборотнуюТару = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование,"ВернутьМногооборотнуюТару");
		ТребуетсяЗалогЗаТару = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование,"ТребуетсяЗалогЗаТару");
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.СуммаСНДС КАК СуммаСНДС
		|ПОМЕСТИТЬ
		|	Товары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(Товары.СуммаСНДС),0) КАК СуммаСНДС
		|ИЗ
		|	Товары КАК Товары
		|ГДЕ
		|	Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
		|	ИЛИ (Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара) 
		|		И (НЕ &ВернутьМногооборотнуюТару ИЛИ &ТребуетсяЗалогЗаТару))
		|");
		
		Запрос.УстановитьПараметр("Товары", Товары.Выгрузить(,"Номенклатура,СуммаСНДС"));
		Запрос.УстановитьПараметр("ВернутьМногооборотнуюТару", ВернутьМногооборотнуюТару);
		Запрос.УстановитьПараметр("ТребуетсяЗалогЗаТару", ТребуетсяЗалогЗаТару);
		
		Выгрузка = Запрос.Выполнить().Выгрузить();
		СуммаИтого = Выгрузка[0].СуммаСНДС;
	Иначе
		
		СуммаИтого = ЦенообразованиеКлиентСервер.ПолучитьСуммуДокумента(Товары, ЦенаВключаетНДС)
		
	КонецЕсли;
	
	Возврат СуммаИтого;
	
КонецФункции

Процедура ЗаполнитьВариантОформленияПродажи()
	
	Если НЕ ЗначениеЗаполнено(ВариантОформленияПродажи) Тогда
		Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьАктыНаПередачуПрав") Тогда
			ВариантОформленияПродажи = Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг;
		Иначе
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	Товары.Номенклатура КАК Номенклатура
			|ПОМЕСТИТЬ
			|	ВтТовары
			|ИЗ
			|	&Товары КАК Товары
			|;
			|ВЫБРАТЬ
			|	Товары.Номенклатура.Ссылка
			|ИЗ
			|	ВтТовары КАК Товары
			|ГДЕ
			|	Товары.Номенклатура.ВариантОформленияПродажи = ЗНАЧЕНИЕ(Перечисление.ВариантыОформленияПродажи.АктНаПередачуПрав)");
			
			Запрос.УстановитьПараметр("Товары", Товары.Выгрузить(,"Номенклатура"));
			РезультатЗапроса = Запрос.Выполнить();
			
			Если РезультатЗапроса.Пустой() Тогда
				ВариантОформленияПродажи = Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг;
			КонецЕсли;
			
			Если РезультатЗапроса.Выгрузить().Количество() = Товары.Количество() Тогда
				ВариантОформленияПродажи = Перечисления.ВариантыОформленияПродажи.АктНаПередачуПрав;
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ВариантОформленияПродажи) Тогда
			ВариантОформленияПродажи = Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////
// Заполнение расхождений

Функция ВариантОтраженияПоСтроке(СтрокаРасхождений, ТипНоменклатуры, КорректировкаУслугПрочихАктивов, КорректировкаПрошлогоПериода)
	
	ВариантОтражения = Неопределено;
	
	Если КорректировкаУслугПрочихАктивов Тогда
		
		Если КорректировкаПрошлогоПериода Тогда
		
			Если СтрокаРасхождений.СуммаСНДС < 0 Тогда
				ВариантОтражения = Перечисления.ВариантыОтраженияКорректировокРеализаций.УменьшитьРеализациюСписатьНаРасходы;
			Иначе
				ВариантОтражения = Перечисления.ВариантыОтраженияКорректировокРеализаций.ОтразитьНаПрочихДоходах;
			КонецЕсли;
			
		Иначе
			
			ВариантОтражения = Перечисления.ВариантыОтраженияКорректировокРеализаций.ОтразитьНаПрочихДоходах;
			
		КонецЕсли;
	
	ИначеЕсли (ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Товар
		И ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.МногооборотнаяТара)
		ИЛИ СтрокаРасхождений.КоличествоУпаковок = 0 Тогда
		
		Если СтрокаРасхождений.СуммаСНДС < 0
			И СтрокаРасхождений.КоличествоУпаковок = 0 Тогда
			ВариантОтражения = Перечисления.ВариантыОтраженияКорректировокРеализаций.УменьшитьРеализацию;
		ИначеЕсли СтрокаРасхождений.СуммаСНДС < 0 Тогда
			ВариантОтражения = Перечисления.ВариантыОтраженияКорректировокРеализаций.УменьшитьРеализациюСписатьНаРасходы;
		Иначе
			ВариантОтражения = Перечисления.ВариантыОтраженияКорректировокРеализаций.УвеличитьРеализацию;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ВариантОтражения;
	
КонецФункции

Процедура ЗаполнитьРасхождения() Экспорт
	
	Расхождения.Очистить();
	
	Если ВидКорректировки <> Перечисления.ХозяйственныеОперации.РеализацияПерепоставленногоТовара
		И ВидКорректировки <> Перечисления.ХозяйственныеОперации.ВозвратНедопоставленногоТовара Тогда
		
		ЗаполнитьРасхожденияПоРазнице();
		
	Иначе
		
		ЗаполнитьРасхожденияПоТоварам();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьРасхожденияПоРазнице()
	
	КлючевыеПоля = "
	|	НоменклатураНабора,
	|	ХарактеристикаНабора,
	|	Номенклатура,
	|	НоменклатураПартнера,
	|	Характеристика,
	|	Назначение,
	|	Серия,
	|	Содержание,
	|	Упаковка,
	|	ЗаказКлиента,
	|	Склад,
	|	Подразделение,
	|	СтавкаНДС,
	|	КодТНВЭД,
	|	СтатьяДоходов,
	|	АналитикаДоходов";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ДатаОснования = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "Дата");
	ДатаДокумента = ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса());
	КорректировкаПрошлогоПериода = НачалоГода(ДатаДокумента) > НачалоГода(ДатаОснования);
	КорректировкаУслугПрочихАктивов = ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияУслугПрочихАктивов");
	
	Документы.КорректировкаРеализации.СформироватьВременнуюТаблицуИсходныхДанных(МенеджерВременныхТаблиц, ДокументОснование);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("НовыеДанные", Товары.Выгрузить());
	Запрос.УстановитьПараметр("КорректировкаУслугПрочихАктивовПрошлогоПериода", КорректировкаУслугПрочихАктивов И КорректировкаПрошлогоПериода);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НовыеДанные.НомерСтроки КАК НомерСтроки,
	|	НовыеДанные.НоменклатураНабора КАК НоменклатураНабора,
	|	НовыеДанные.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	НовыеДанные.Номенклатура КАК Номенклатура,
	|	НовыеДанные.НоменклатураПартнера КАК НоменклатураПартнера,
	|	НовыеДанные.Характеристика КАК Характеристика,
	|	НовыеДанные.Назначение КАК Назначение,
	|	НовыеДанные.Серия КАК Серия,
	|	НовыеДанные.Содержание КАК Содержание,
	|	НовыеДанные.Упаковка КАК Упаковка,
	|	НовыеДанные.ЗаказКлиента КАК ЗаказКлиента,
	|	НовыеДанные.Склад КАК Склад,
	|	НовыеДанные.Подразделение КАК Подразделение,
	|	НовыеДанные.СтавкаНДС КАК СтавкаНДС,
	|	НовыеДанные.КодТНВЭД КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА
	|			&КорректировкаУслугПрочихАктивовПрошлогоПериода
	|		ТОГДА
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|		ИНАЧЕ
	|			НовыеДанные.СтатьяДоходов
	|	КОНЕЦ КАК СтатьяДоходов,
	|	ВЫБОР
	|		КОГДА
	|			&КорректировкаУслугПрочихАктивовПрошлогоПериода
	|		ТОГДА
	|			Неопределено
	|		ИНАЧЕ
	|			НовыеДанные.АналитикаДоходов
	|	КОНЕЦ КАК АналитикаДоходов,
	|	ВЫБОР
	|		КОГДА НовыеДанные.КоличествоУпаковок = 0
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА НовыеДанные.Количество = 0
	|				ТОГДА 1
	|				ИНАЧЕ НовыеДанные.Количество
	|			КОНЕЦ
	|		ИНАЧЕ НовыеДанные.КоличествоУпаковок
	|	КОНЕЦ КАК КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА НовыеДанные.Количество = 0
	|			ТОГДА 1
	|		ИНАЧЕ НовыеДанные.Количество
	|	КОНЕЦ КАК Количество,
	|	НовыеДанные.Сумма КАК Сумма,
	|	НовыеДанные.СуммаНДС КАК СуммаНДС,
	|	НовыеДанные.СуммаСНДС КАК СуммаСНДС
	|ПОМЕСТИТЬ НовыеДанныеИзТаблицы
	|ИЗ
	|	&НовыеДанные КАК НовыеДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НовыеДанныеИзТаблицы.НоменклатураНабора,
	|	НовыеДанныеИзТаблицы.ХарактеристикаНабора,
	|	НовыеДанныеИзТаблицы.Номенклатура,
	|	НовыеДанныеИзТаблицы.НоменклатураПартнера,
	|	НовыеДанныеИзТаблицы.Характеристика,
	|	НовыеДанныеИзТаблицы.Назначение,
	|	НовыеДанныеИзТаблицы.Серия,
	|	НовыеДанныеИзТаблицы.Содержание,
	|	НовыеДанныеИзТаблицы.Упаковка,
	|	НовыеДанныеИзТаблицы.ЗаказКлиента,
	|	НовыеДанныеИзТаблицы.Склад,
	|	НовыеДанныеИзТаблицы.Подразделение,
	|	НовыеДанныеИзТаблицы.СтавкаНДС,
	|	НовыеДанныеИзТаблицы.КодТНВЭД,
	|	НовыеДанныеИзТаблицы.СтатьяДоходов,
	|	НовыеДанныеИзТаблицы.АналитикаДоходов,
	|	СУММА(НовыеДанныеИзТаблицы.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(НовыеДанныеИзТаблицы.Количество) КАК Количество,
	|	СУММА(НовыеДанныеИзТаблицы.Сумма) КАК Сумма,
	|	СУММА(НовыеДанныеИзТаблицы.СуммаНДС) КАК СуммаНДС,
	|	СУММА(НовыеДанныеИзТаблицы.СуммаСНДС) КАК СуммаСНДС
	|ПОМЕСТИТЬ НовыеДанные
	|ИЗ
	|	НовыеДанныеИзТаблицы КАК НовыеДанныеИзТаблицы
	|
	|СГРУППИРОВАТЬ ПО
	|	НовыеДанныеИзТаблицы.НоменклатураНабора,
	|	НовыеДанныеИзТаблицы.ХарактеристикаНабора,
	|	НовыеДанныеИзТаблицы.Номенклатура,
	|	НовыеДанныеИзТаблицы.НоменклатураПартнера,
	|	НовыеДанныеИзТаблицы.Характеристика,
	|	НовыеДанныеИзТаблицы.Назначение,
	|	НовыеДанныеИзТаблицы.Серия,
	|	НовыеДанныеИзТаблицы.Содержание,
	|	НовыеДанныеИзТаблицы.Упаковка,
	|	НовыеДанныеИзТаблицы.ЗаказКлиента,
	|	НовыеДанныеИзТаблицы.Склад,
	|	НовыеДанныеИзТаблицы.Подразделение,
	|	НовыеДанныеИзТаблицы.СтавкаНДС,
	|	НовыеДанныеИзТаблицы.КодТНВЭД,
	|	НовыеДанныеИзТаблицы.СтатьяДоходов,
	|	НовыеДанныеИзТаблицы.АналитикаДоходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ИсходныеДанные.НоменклатураНабора КАК Справочник.Номенклатура) КАК НоменклатураНабора,
	|	ВЫРАЗИТЬ(ИсходныеДанные.ХарактеристикаНабора КАК Справочник.ХарактеристикиНоменклатуры) КАК ХарактеристикаНабора,
	|	ВЫРАЗИТЬ(ИсходныеДанные.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ВЫРАЗИТЬ(ИсходныеДанные.НоменклатураПартнера КАК Справочник.НоменклатураКонтрагентов) КАК НоменклатураПартнера,
	|	ВЫРАЗИТЬ(ИсходныеДанные.Характеристика КАК Справочник.ХарактеристикиНоменклатуры) КАК Характеристика,
	|	ВЫРАЗИТЬ(ИсходныеДанные.Назначение КАК Справочник.Назначения) КАК Назначение,
	|	ВЫРАЗИТЬ(ИсходныеДанные.Серия КАК Справочник.СерииНоменклатуры) КАК Серия,
	|	ВЫБОР
	|		КОГДА ИсходныеДанные.Содержание <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ИсходныеДанные.Содержание
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Содержание,
	|	ВЫРАЗИТЬ(ИсходныеДанные.Упаковка КАК Справочник.УпаковкиЕдиницыИзмерения) КАК Упаковка,
	|	ИсходныеДанные.ЗаказКлиента,
	|	ВЫРАЗИТЬ(ИсходныеДанные.Склад КАК Справочник.Склады) КАК Склад,
	|	ВЫРАЗИТЬ(ИсходныеДанные.Подразделение КАК Справочник.СтруктураПредприятия) КАК Подразделение,
	|	ВЫРАЗИТЬ(ИсходныеДанные.КодТНВЭД КАК Справочник.КлассификаторТНВЭД) КАК КодТНВЭД,
	|	ВЫРАЗИТЬ(ИсходныеДанные.СтавкаНДС КАК Справочник.СтавкиНДС) КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА
	|			&КорректировкаУслугПрочихАктивовПрошлогоПериода
	|		ТОГДА
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|		ИНАЧЕ
	|			ВЫРАЗИТЬ(ИсходныеДанные.СтатьяДоходов КАК ПланВидовХарактеристик.СтатьиДоходов)
	|	КОНЕЦ КАК СтатьяДоходов,
	|	ВЫБОР
	|		КОГДА
	|			&КорректировкаУслугПрочихАктивовПрошлогоПериода
	|		ТОГДА
	|			Неопределено
	|		ИНАЧЕ
	|			ИсходныеДанные.АналитикаДоходов
	|	КОНЕЦ КАК АналитикаДоходов,
	|	СУММА(ВЫБОР КОГДА ИсходныеДанные.КоличествоУпаковок <> НЕОПРЕДЕЛЕНО ТОГДА
	|		ВЫБОР КОГДА ИсходныеДанные.КоличествоУпаковок = 0 ТОГДА
	|			1
	|		ИНАЧЕ
	|			ВЫРАЗИТЬ(ИсходныеДанные.КоличествоУпаковок КАК Число(15, 3))
	|		КОНЕЦ
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ) КАК КоличествоУпаковок,
	|	СУММА(ВЫБОР КОГДА ИсходныеДанные.Количество <> НЕОПРЕДЕЛЕНО ТОГДА
	|		ВЫБОР КОГДА ИсходныеДанные.Количество = 0 ТОГДА
	|			1
	|		ИНАЧЕ
	|			ВЫРАЗИТЬ(ИсходныеДанные.Количество КАК Число(15, 3))
	|		КОНЕЦ
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ) КАК Количество,
	|	СУММА(ВЫБОР
	|			КОГДА ИсходныеДанные.Сумма <> НЕОПРЕДЕЛЕНО
	|				ТОГДА ВЫРАЗИТЬ(ИсходныеДанные.Сумма КАК ЧИСЛО(31,2))
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Сумма,
	|	СУММА(ВЫБОР
	|			КОГДА ИсходныеДанные.СуммаНДС <> НЕОПРЕДЕЛЕНО
	|				ТОГДА ВЫРАЗИТЬ(ИсходныеДанные.СуммаНДС КАК ЧИСЛО(31,2))
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаНДС,
	|	СУММА(ВЫБОР
	|			КОГДА ИсходныеДанные.СуммаСНДС <> НЕОПРЕДЕЛЕНО
	|				ТОГДА ВЫРАЗИТЬ(ИсходныеДанные.СуммаСНДС КАК ЧИСЛО(31,2))
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаСНДС
	|ПОМЕСТИТЬ ИсходныеДанныеДляРасхождений
	|ИЗ
	|	ИсходныеДанные КАК ИсходныеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсходныеДанные.НоменклатураНабора,
	|	ИсходныеДанные.ХарактеристикаНабора,
	|	ИсходныеДанные.Номенклатура,
	|	ИсходныеДанные.НоменклатураПартнера,
	|	ИсходныеДанные.Характеристика,
	|	ИсходныеДанные.Назначение,
	|	ИсходныеДанные.Серия,
	|	ИсходныеДанные.Содержание,
	|	ИсходныеДанные.Упаковка,
	|	ИсходныеДанные.ЗаказКлиента,
	|	ИсходныеДанные.Склад,
	|	ИсходныеДанные.Подразделение,
	|	ИсходныеДанные.КодТНВЭД,
	|	ИсходныеДанные.СтавкаНДС,
	|	ИсходныеДанные.СтатьяДоходов,
	|	ИсходныеДанные.АналитикаДоходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИсходныеДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НовыеДанные.НоменклатураНабора КАК НоменклатураНабора,
	|	НовыеДанные.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	НовыеДанные.Номенклатура КАК Номенклатура,
	|	НовыеДанные.НоменклатураПартнера КАК НоменклатураПартнера,
	|	НовыеДанные.Характеристика КАК Характеристика,
	|	НовыеДанные.Назначение КАК Назначение,
	|	НовыеДанные.Серия КАК Серия,
	|	НовыеДанные.Содержание КАК Содержание,
	|	НовыеДанные.Упаковка КАК Упаковка,
	|	НовыеДанные.ЗаказКлиента КАК ЗаказКлиента,
	|	НовыеДанные.Склад КАК Склад,
	|	НовыеДанные.Подразделение КАК Подразделение,
	|	НовыеДанные.СтавкаНДС КАК СтавкаНДС,
	|	НовыеДанные.КодТНВЭД КАК КодТНВЭД,
	|	НовыеДанные.СтатьяДоходов КАК СтатьяДоходов,
	|	НовыеДанные.АналитикаДоходов КАК АналитикаДоходов,
	|	НовыеДанные.Сумма КАК Сумма,
	|	НовыеДанные.СуммаНДС КАК СуммаНДС,
	|	НовыеДанные.СуммаСНДС КАК СуммаСНДС
	|ПОМЕСТИТЬ ДанныеРасхождений
	|ИЗ
	|	НовыеДанные КАК НовыеДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИсходныеДанныеДляРасхождений КАК ИсходныеДанные
	|		ПО    НовыеДанные.Номенклатура = ИсходныеДанные.Номенклатура
	|			И НовыеДанные.НоменклатураПартнера = ИсходныеДанные.НоменклатураПартнера
	|			И НовыеДанные.Характеристика = ИсходныеДанные.Характеристика
	|			И НовыеДанные.Назначение = ИсходныеДанные.Назначение
	|			И НовыеДанные.НоменклатураНабора = ИсходныеДанные.НоменклатураНабора
	|			И НовыеДанные.ХарактеристикаНабора = ИсходныеДанные.ХарактеристикаНабора
	|			И НовыеДанные.Серия = ИсходныеДанные.Серия
	|			И НовыеДанные.Содержание = ИсходныеДанные.Содержание
	|			И НовыеДанные.Упаковка = ИсходныеДанные.Упаковка
	|			И НовыеДанные.ЗаказКлиента = ИсходныеДанные.ЗаказКлиента
	|			И НовыеДанные.Склад = ИсходныеДанные.Склад
	|			И НовыеДанные.Подразделение = ИсходныеДанные.Подразделение
	|			И НовыеДанные.СтавкаНДС = ИсходныеДанные.СтавкаНДС
	|			И НовыеДанные.КодТНВЭД = ИсходныеДанные.КодТНВЭД
	|			И НовыеДанные.СтатьяДоходов = ИсходныеДанные.СтатьяДоходов
	|			И НовыеДанные.АналитикаДоходов = ИсходныеДанные.АналитикаДоходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИсходныеДанные.НоменклатураНабора,
	|	ИсходныеДанные.ХарактеристикаНабора,
	|	ИсходныеДанные.Номенклатура,
	|	ИсходныеДанные.НоменклатураПартнера,
	|	ИсходныеДанные.Характеристика,
	|	ИсходныеДанные.Назначение,
	|	ИсходныеДанные.Серия,
	|	ИсходныеДанные.Содержание,
	|	ИсходныеДанные.Упаковка,
	|	ИсходныеДанные.ЗаказКлиента,
	|	ИсходныеДанные.Склад,
	|	ИсходныеДанные.Подразделение,
	|	ИсходныеДанные.СтавкаНДС,
	|	ИсходныеДанные.КодТНВЭД,
	|	ИсходныеДанные.СтатьяДоходов,
	|	ИсходныеДанные.АналитикаДоходов,
	|	-ИсходныеДанные.Сумма,
	|	-ИсходныеДанные.СуммаНДС,
	|	-ИсходныеДанные.СуммаСНДС
	|ИЗ
	|	ИсходныеДанныеДляРасхождений КАК ИсходныеДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НовыеДанные КАК НовыеДанные
	|		ПО ИсходныеДанные.Номенклатура = НовыеДанные.Номенклатура
	|			И ИсходныеДанные.НоменклатураПартнера = НовыеДанные.НоменклатураПартнера
	|			И ИсходныеДанные.Характеристика = НовыеДанные.Характеристика
	|			И ИсходныеДанные.Назначение = НовыеДанные.Назначение
	|			И ИсходныеДанные.НоменклатураНабора = НовыеДанные.НоменклатураНабора
	|			И ИсходныеДанные.ХарактеристикаНабора = НовыеДанные.ХарактеристикаНабора
	|			И ИсходныеДанные.Серия = НовыеДанные.Серия
	|			И ИсходныеДанные.Содержание = НовыеДанные.Содержание
	|			И ИсходныеДанные.Упаковка = НовыеДанные.Упаковка
	|			И ИсходныеДанные.ЗаказКлиента = НовыеДанные.ЗаказКлиента
	|			И ИсходныеДанные.Склад = НовыеДанные.Склад
	|			И ИсходныеДанные.Подразделение = НовыеДанные.Подразделение
	|			И ИсходныеДанные.СтавкаНДС = НовыеДанные.СтавкаНДС
	|			И ИсходныеДанные.КодТНВЭД = НовыеДанные.КодТНВЭД
	|			И ИсходныеДанные.СтатьяДоходов = НовыеДанные.СтатьяДоходов
	|			И ИсходныеДанные.АналитикаДоходов = НовыеДанные.АналитикаДоходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеРасхождений.НоменклатураНабора,
	|	ДанныеРасхождений.ХарактеристикаНабора,
	|	ДанныеРасхождений.Номенклатура,
	|	ДанныеРасхождений.НоменклатураПартнера,
	|	ДанныеРасхождений.Характеристика,
	|	ДанныеРасхождений.Назначение,
	|	ДанныеРасхождений.Серия,
	|	ДанныеРасхождений.Содержание,
	|	ДанныеРасхождений.Упаковка,
	|	ДанныеРасхождений.ЗаказКлиента,
	|	ДанныеРасхождений.Склад,
	|	ДанныеРасхождений.Подразделение,
	|	ДанныеРасхождений.СтавкаНДС,
	|	ДанныеРасхождений.КодТНВЭД,
	|	ДанныеРасхождений.СтатьяДоходов,
	|	ДанныеРасхождений.АналитикаДоходов,
	|	СУММА(ДанныеРасхождений.Сумма) КАК Сумма,
	|	СУММА(ДанныеРасхождений.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ДанныеРасхождений.СуммаСНДС) КАК СуммаСНДС,
	|	ВЫРАЗИТЬ(ДанныеРасхождений.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры КАК ТипНоменклатуры
	|ПОМЕСТИТЬ ДанныеРасхожденийПромежуточные
	|ИЗ
	|	ДанныеРасхождений КАК ДанныеРасхождений
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРасхождений.НоменклатураНабора,
	|	ДанныеРасхождений.ХарактеристикаНабора,
	|	ДанныеРасхождений.Номенклатура,
	|	ДанныеРасхождений.НоменклатураПартнера,
	|	ДанныеРасхождений.Характеристика,
	|	ДанныеРасхождений.Назначение,
	|	ДанныеРасхождений.Серия,
	|	ДанныеРасхождений.Содержание,
	|	ДанныеРасхождений.Упаковка,
	|	ДанныеРасхождений.ЗаказКлиента,
	|	ДанныеРасхождений.Склад,
	|	ДанныеРасхождений.Подразделение,
	|	ДанныеРасхождений.СтавкаНДС,
	|	ДанныеРасхождений.КодТНВЭД,
	|	ДанныеРасхождений.СтатьяДоходов,
	|	ДанныеРасхождений.АналитикаДоходов
	|
	|ИМЕЮЩИЕ
	|	ВЫРАЗИТЬ(СУММА(ДанныеРасхождений.СуммаСНДС) КАК ЧИСЛО(31,2)) <> 0
	|	ИЛИ ВЫРАЗИТЬ(СУММА(ДанныеРасхождений.СуммаНДС) КАК ЧИСЛО(31,2)) <> 0;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеРасхождений.НоменклатураНабора КАК НоменклатураНабора,
	|	ДанныеРасхождений.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ДанныеРасхождений.Номенклатура КАК Номенклатура,
	|	ДанныеРасхождений.НоменклатураПартнера КАК НоменклатураПартнера,
	|	ДанныеРасхождений.Характеристика КАК Характеристика,
	|	ДанныеРасхождений.Назначение КАК Назначение,
	|	ДанныеРасхождений.Серия КАК Серия,
	|	ДанныеРасхождений.Содержание КАК Содержание,
	|	ДанныеРасхождений.Упаковка КАК Упаковка,
	|	ДанныеРасхождений.ЗаказКлиента КАК ЗаказКлиента,
	|	ДанныеРасхождений.Склад КАК Склад,
	|	ДанныеРасхождений.Подразделение КАК Подразделение,
	|	ДанныеРасхождений.СтавкаНДС КАК СтавкаНДС,
	|	ДанныеРасхождений.КодТНВЭД КАК КодТНВЭД,
	|	ДанныеРасхождений.СтатьяДоходов КАК СтатьяДоходов,
	|	ДанныеРасхождений.АналитикаДоходов КАК АналитикаДоходов,
	|	ДанныеРасхождений.Сумма КАК Сумма,
	|	ДанныеРасхождений.СуммаНДС КАК СуммаНДС,
	|	ДанныеРасхождений.СуммаСНДС КАК СуммаСНДС,
	|	ДанныеРасхождений.ТипНоменклатуры КАК ТипНоменклатуры,
	|	МИНИМУМ(ДанныеТаблицы.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	ДанныеРасхожденийПромежуточные КАК ДанныеРасхождений
	|		ЛЕВОЕ СОЕДИНЕНИЕ НовыеДанныеИзТаблицы КАК ДанныеТаблицы
	|		ПО ДанныеРасхождений.Номенклатура = ДанныеТаблицы.Номенклатура
	|			И ДанныеРасхождений.НоменклатураПартнера = ДанныеТаблицы.НоменклатураПартнера
	|			И ДанныеРасхождений.Характеристика = ДанныеТаблицы.Характеристика
	|			И ДанныеРасхождений.Назначение = ДанныеТаблицы.Назначение
	|			И ДанныеРасхождений.НоменклатураНабора = ДанныеТаблицы.НоменклатураНабора
	|			И ДанныеРасхождений.ХарактеристикаНабора = ДанныеТаблицы.ХарактеристикаНабора
	|			И ДанныеРасхождений.Серия = ДанныеТаблицы.Серия
	|			И ДанныеРасхождений.Содержание = ДанныеТаблицы.Содержание
	|			И ДанныеРасхождений.Упаковка = ДанныеТаблицы.Упаковка
	|			И ДанныеРасхождений.ЗаказКлиента = ДанныеТаблицы.ЗаказКлиента
	|			И ДанныеРасхождений.Склад = ДанныеТаблицы.Склад
	|			И ДанныеРасхождений.Подразделение = ДанныеТаблицы.Подразделение
	|			И ДанныеРасхождений.СтавкаНДС = ДанныеТаблицы.СтавкаНДС
	|			И ДанныеРасхождений.КодТНВЭД = ДанныеТаблицы.КодТНВЭД
	|			И ДанныеРасхождений.СтатьяДоходов = ДанныеТаблицы.СтатьяДоходов
	|			И ДанныеРасхождений.АналитикаДоходов = ДанныеТаблицы.АналитикаДоходов
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРасхождений.НоменклатураНабора,
	|	ДанныеРасхождений.ХарактеристикаНабора,
	|	ДанныеРасхождений.Номенклатура,
	|	ДанныеРасхождений.НоменклатураПартнера,
	|	ДанныеРасхождений.Характеристика,
	|	ДанныеРасхождений.Назначение,
	|	ДанныеРасхождений.Серия,
	|	ДанныеРасхождений.Содержание,
	|	ДанныеРасхождений.Упаковка,
	|	ДанныеРасхождений.ЗаказКлиента,
	|	ДанныеРасхождений.Склад,
	|	ДанныеРасхождений.Подразделение,
	|	ДанныеРасхождений.СтавкаНДС,
	|	ДанныеРасхождений.КодТНВЭД,
	|	ДанныеРасхождений.СтатьяДоходов,
	|	ДанныеРасхождений.АналитикаДоходов,
	|	ДанныеРасхождений.Сумма,
	|	ДанныеРасхождений.СуммаНДС,
	|	ДанныеРасхождений.СуммаСНДС,
	|	ДанныеРасхождений.ТипНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТаблицаРасхожденийВСуммах = Запрос.Выполнить().Выгрузить();
	
	Для Каждого ДанныеРасхождения Из ТаблицаРасхожденийВСуммах Цикл
		
		НовоеРасхождение = Расхождения.Добавить();
		ЗаполнитьЗначенияСвойств(НовоеРасхождение, ДанныеРасхождения);
		НовоеРасхождение.ВариантОтражения = ВариантОтраженияПоСтроке(
			НовоеРасхождение,
			ДанныеРасхождения.ТипНоменклатуры,
			КорректировкаУслугПрочихАктивов,
			КорректировкаПрошлогоПериода);
		
	КонецЦикла;
	
	Запрос.Текст = "
	|УНИЧТОЖИТЬ ДанныеРасхождений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчтенныеРасхождения.НоменклатураНабора КАК НоменклатураНабора,
	|	УчтенныеРасхождения.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	УчтенныеРасхождения.Номенклатура КАК Номенклатура,
	|	УчтенныеРасхождения.НоменклатураПартнера КАК НоменклатураПартнера,
	|	УчтенныеРасхождения.Характеристика КАК Характеристика,
	|	УчтенныеРасхождения.Назначение КАК Назначение,
	|	УчтенныеРасхождения.Серия КАК Серия,
	|	УчтенныеРасхождения.Содержание КАК Содержание,
	|	УчтенныеРасхождения.Упаковка КАК Упаковка,
	|	УчтенныеРасхождения.ЗаказКлиента КАК ЗаказКлиента,
	|	УчтенныеРасхождения.Склад КАК Склад,
	|	УчтенныеРасхождения.Подразделение КАК Подразделение,
	|	УчтенныеРасхождения.СтавкаНДС КАК СтавкаНДС,
	|	УчтенныеРасхождения.КодТНВЭД КАК КодТНВЭД,
	|	УчтенныеРасхождения.СтатьяДоходов КАК СтатьяДоходов,
	|	УчтенныеРасхождения.АналитикаДоходов КАК АналитикаДоходов,
	|	УчтенныеРасхождения.Сумма КАК Сумма,
	|	УчтенныеРасхождения.СуммаНДС КАК СуммаНДС,
	|	УчтенныеРасхождения.СуммаСНДС КАК СуммаСНДС
	|ПОМЕСТИТЬ УчтенныеРасхождения
	|ИЗ
	|	&УчтенныеРасхождения КАК УчтенныеРасхождения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НовыеДанные.НоменклатураНабора КАК НоменклатураНабора,
	|	НовыеДанные.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	НовыеДанные.Номенклатура КАК Номенклатура,
	|	НовыеДанные.НоменклатураПартнера КАК НоменклатураПартнера,
	|	НовыеДанные.Характеристика КАК Характеристика,
	|	НовыеДанные.Назначение КАК Назначение,
	|	НовыеДанные.Серия КАК Серия,
	|	НовыеДанные.Содержание КАК Содержание,
	|	НовыеДанные.Упаковка КАК Упаковка,
	|	НовыеДанные.ЗаказКлиента КАК ЗаказКлиента,
	|	НовыеДанные.Склад КАК Склад,
	|	НовыеДанные.Подразделение КАК Подразделение,
	|	НовыеДанные.СтавкаНДС КАК СтавкаНДС,
	|	НовыеДанные.КодТНВЭД КАК КодТНВЭД,
	|	НовыеДанные.СтатьяДоходов КАК СтатьяДоходов,
	|	НовыеДанные.АналитикаДоходов КАК АналитикаДоходов,
	|	НовыеДанные.КоличествоУпаковок КАК КоличествоУпаковок,
	|	НовыеДанные.Количество КАК Количество,
	|	НовыеДанные.Сумма КАК Сумма,
	|	НовыеДанные.СуммаНДС КАК СуммаНДС,
	|	НовыеДанные.СуммаСНДС КАК СуммаСНДС
	|ПОМЕСТИТЬ ДанныеРасхождений
	|ИЗ
	|	НовыеДанные КАК НовыеДанные
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИсходныеДанные.НоменклатураНабора,
	|	ИсходныеДанные.ХарактеристикаНабора,
	|	ИсходныеДанные.Номенклатура,
	|	ИсходныеДанные.НоменклатураПартнера,
	|	ИсходныеДанные.Характеристика,
	|	ИсходныеДанные.Назначение,
	|	ИсходныеДанные.Серия,
	|	ИсходныеДанные.Содержание,
	|	ИсходныеДанные.Упаковка,
	|	ИсходныеДанные.ЗаказКлиента,
	|	ИсходныеДанные.Склад,
	|	ИсходныеДанные.Подразделение,
	|	ИсходныеДанные.СтавкаНДС,
	|	ИсходныеДанные.КодТНВЭД,
	|	ИсходныеДанные.СтатьяДоходов,
	|	ИсходныеДанные.АналитикаДоходов,
	|	-ИсходныеДанные.КоличествоУпаковок,
	|	-ИсходныеДанные.Количество,
	|	-ИсходныеДанные.Сумма,
	|	-ИсходныеДанные.СуммаНДС,
	|	-ИсходныеДанные.СуммаСНДС
	|ИЗ
	|	ИсходныеДанныеДляРасхождений КАК ИсходныеДанные
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УчтенныеРасхождения.НоменклатураНабора,
	|	УчтенныеРасхождения.ХарактеристикаНабора,
	|	УчтенныеРасхождения.Номенклатура,
	|	УчтенныеРасхождения.НоменклатураПартнера,
	|	УчтенныеРасхождения.Характеристика,
	|	УчтенныеРасхождения.Назначение,
	|	УчтенныеРасхождения.Серия,
	|	УчтенныеРасхождения.Содержание,
	|	УчтенныеРасхождения.Упаковка,
	|	УчтенныеРасхождения.ЗаказКлиента,
	|	УчтенныеРасхождения.Склад,
	|	УчтенныеРасхождения.Подразделение,
	|	УчтенныеРасхождения.СтавкаНДС,
	|	УчтенныеРасхождения.КодТНВЭД,
	|	УчтенныеРасхождения.СтатьяДоходов,
	|	УчтенныеРасхождения.АналитикаДоходов,
	|	0,
	|	0,
	|	-УчтенныеРасхождения.Сумма,
	|	-УчтенныеРасхождения.СуммаНДС,
	|	-УчтенныеРасхождения.СуммаСНДС
	|ИЗ
	|	УчтенныеРасхождения КАК УчтенныеРасхождения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеРасхождений.НоменклатураНабора,
	|	ДанныеРасхождений.ХарактеристикаНабора,
	|	ДанныеРасхождений.Номенклатура,
	|	ДанныеРасхождений.НоменклатураПартнера,
	|	ДанныеРасхождений.Характеристика,
	|	ДанныеРасхождений.Назначение,
	|	ДанныеРасхождений.Серия,
	|	ДанныеРасхождений.Содержание,
	|	ДанныеРасхождений.Упаковка,
	|	ДанныеРасхождений.ЗаказКлиента,
	|	ДанныеРасхождений.Склад,
	|	ДанныеРасхождений.Подразделение,
	|	ДанныеРасхождений.СтавкаНДС,
	|	ДанныеРасхождений.КодТНВЭД,
	|	ДанныеРасхождений.СтатьяДоходов,
	|	ДанныеРасхождений.АналитикаДоходов,
	|	СУММА(ДанныеРасхождений.КоличествоУпаковок),
	|	СУММА(ДанныеРасхождений.Количество),
	|	СУММА(ДанныеРасхождений.Сумма),
	|	СУММА(ДанныеРасхождений.СуммаНДС),
	|	СУММА(ДанныеРасхождений.СуммаСНДС),
	|	ВЫРАЗИТЬ(ДанныеРасхождений.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры КАК ТипНоменклатуры
	|ИЗ
	|	ДанныеРасхождений КАК ДанныеРасхождений
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРасхождений.НоменклатураНабора,
	|	ДанныеРасхождений.ХарактеристикаНабора,
	|	ДанныеРасхождений.Номенклатура,
	|	ДанныеРасхождений.НоменклатураПартнера,
	|	ДанныеРасхождений.Характеристика,
	|	ДанныеРасхождений.Назначение,
	|	ДанныеРасхождений.Серия,
	|	ДанныеРасхождений.Содержание,
	|	ДанныеРасхождений.Упаковка,
	|	ДанныеРасхождений.ЗаказКлиента,
	|	ДанныеРасхождений.Склад,
	|	ДанныеРасхождений.Подразделение,
	|	ДанныеРасхождений.СтавкаНДС,
	|	ДанныеРасхождений.КодТНВЭД,
	|	ДанныеРасхождений.СтатьяДоходов,
	|	ДанныеРасхождений.АналитикаДоходов
	|
	|ИМЕЮЩИЕ
	|	ВЫРАЗИТЬ(СУММА(ДанныеРасхождений.КоличествоУпаковок) КАК ЧИСЛО(15,3)) <> 0
	|	ИЛИ ВЫРАЗИТЬ(СУММА(ДанныеРасхождений.Количество) КАК ЧИСЛО(15,3)) <> 0
	|
	|УПОРЯДОЧИТЬ ПО 
	|	ДанныеРасхождений.Номенклатура,
	|	ДанныеРасхождений.Характеристика
	|";
	Запрос.УстановитьПараметр("УчтенныеРасхождения", Расхождения.Выгрузить());
	
	ДанныеРасхождения = Запрос.Выполнить().Выбрать();
	Пока ДанныеРасхождения.Следующий() Цикл
		
		ПараметрыПоиска = Новый Структура(КлючевыеПоля);
		ЗаполнитьЗначенияСвойств(ПараметрыПоиска, ДанныеРасхождения);
		
		НайденныеСтроки = Расхождения.НайтиСтроки(ПараметрыПоиска);
		Если НайденныеСтроки.Количество() = 0 Тогда
			НовоеРасхождение = Расхождения.Добавить();
			ЗаполнитьЗначенияСвойств(НовоеРасхождение, ДанныеРасхождения);
		Иначе
			НовоеРасхождение = НайденныеСтроки.Получить(0);
			НовоеРасхождение.Количество = НовоеРасхождение.Количество + ДанныеРасхождения.Количество;
			НовоеРасхождение.КоличествоУпаковок = НовоеРасхождение.КоличествоУпаковок + ДанныеРасхождения.КоличествоУпаковок;
		КонецЕсли;
		
		НовоеРасхождение.Сумма = НовоеРасхождение.СуммаСНДС - ?(ЦенаВключаетНДС, 0, НовоеРасхождение.СуммаНДС);
		НовоеРасхождение.ВариантОтражения = ВариантОтраженияПоСтроке(
			НовоеРасхождение,
			ДанныеРасхождения.ТипНоменклатуры,
			КорректировкаУслугПрочихАктивов,
			КорректировкаПрошлогоПериода);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьРасхожденияПоТоварам()
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ТаблицаТоваров", Товары.Выгрузить());
	Запрос.УстановитьПараметр("ЭтоВозврат", ВидКорректировки = Перечисления.ХозяйственныеОперации.ВозвратНедопоставленногоТовара);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС", ЦенаВключаетНДС);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.НоменклатураНабора КАК НоменклатураНабора,
	|	ТаблицаТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.Назначение КАК Назначение,
	|	ТаблицаТоваров.Серия КАК Серия,
	|	ТаблицаТоваров.Содержание КАК Содержание,
	|	ТаблицаТоваров.Упаковка КАК Упаковка,
	|	ТаблицаТоваров.ЗаказКлиента КАК ЗаказКлиента,
	|	ТаблицаТоваров.КодСтроки КАК КодСтроки,
	|	ТаблицаТоваров.Склад КАК Склад,
	|	ТаблицаТоваров.Подразделение КАК Подразделение,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТоваров.ВариантОтражения КАК ВариантОтражения,
	|	
	|	ВЫБОР КОГДА &ЭтоВозврат ТОГДА
	|		-ТаблицаТоваров.КоличествоУпаковок
	|	ИНАЧЕ
	|		ТаблицаТоваров.КоличествоУпаковок
	|	КОНЕЦ КАК КоличествоУпаковок,
	|	
	|	ВЫБОР КОГДА &ЭтоВозврат ТОГДА
	|		-ТаблицаТоваров.Количество
	|	ИНАЧЕ
	|		ТаблицаТоваров.Количество
	|	КОНЕЦ КАК Количество,
	|	
	|	ВЫБОР КОГДА &ЭтоВозврат ТОГДА
	|		-ТаблицаТоваров.Сумма
	|	ИНАЧЕ
	|		ТаблицаТоваров.Сумма
	|	КОНЕЦ КАК Сумма,
	|	
	|	ВЫБОР КОГДА &ЭтоВозврат ТОГДА
	|		-ТаблицаТоваров.СуммаНДС
	|	ИНАЧЕ
	|		ТаблицаТоваров.СуммаНДС
	|	КОНЕЦ КАК СуммаНДС,
	|	
	|	ВЫБОР КОГДА &ЭтоВозврат ТОГДА
	|		-ТаблицаТоваров.СуммаСНДС
	|	ИНАЧЕ
	|		ТаблицаТоваров.СуммаСНДС
	|	КОНЕЦ КАК СуммаСНДС
	|
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеРасхождений.НоменклатураНабора,
	|	ДанныеРасхождений.ХарактеристикаНабора,
	|	ДанныеРасхождений.Номенклатура,
	|	ДанныеРасхождений.Характеристика,
	|	ДанныеРасхождений.Назначение,
	|	ДанныеРасхождений.Серия,
	|	ДанныеРасхождений.Содержание,
	|	ДанныеРасхождений.Упаковка,
	|	ДанныеРасхождений.ЗаказКлиента,
	|	ДанныеРасхождений.КодСтроки,
	|	ДанныеРасхождений.Склад,
	|	ДанныеРасхождений.Подразделение,
	|	ДанныеРасхождений.СтавкаНДС,
	|	ДанныеРасхождений.ВариантОтражения,
	|	СУММА(ДанныеРасхождений.КоличествоУпаковок),
	|	СУММА(ДанныеРасхождений.Количество),
	|	СУММА(ДанныеРасхождений.СуммаНДС),
	|	СУММА(ДанныеРасхождений.СуммаСНДС),
	|	
	|	ВЫБОР КОГДА &ЦенаВключаетНДС ТОГДА
	|		СУММА(ДанныеРасхождений.СуммаСНДС)
	|	ИНАЧЕ
	|		СУММА(ДанныеРасхождений.СуммаСНДС) - СУММА(ДанныеРасхождений.СуммаНДС)
	|	КОНЕЦ КАК Сумма,
	|	
	|	ВЫРАЗИТЬ(ДанныеРасхождений.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры КАК ТипНоменклатуры
	|ИЗ
	|	ТаблицаТоваров КАК ДанныеРасхождений
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРасхождений.НоменклатураНабора,
	|	ДанныеРасхождений.ХарактеристикаНабора,
	|	ДанныеРасхождений.Номенклатура,
	|	ДанныеРасхождений.Характеристика,
	|	ДанныеРасхождений.Назначение,
	|	ДанныеРасхождений.Серия,
	|	ДанныеРасхождений.Содержание,
	|	ДанныеРасхождений.Упаковка,
	|	ДанныеРасхождений.ЗаказКлиента,
	|	ДанныеРасхождений.КодСтроки,
	|	ДанныеРасхождений.Склад,
	|	ДанныеРасхождений.Подразделение,
	|	ДанныеРасхождений.СтавкаНДС,
	|	ДанныеРасхождений.ВариантОтражения
	|";
	
	ДанныеРасхождения = Запрос.Выполнить().Выгрузить();
	Расхождения.Загрузить(ДанныеРасхождения);
	
КонецПроцедуры


#КонецОбласти

#КонецОбласти

#КонецЕсли
