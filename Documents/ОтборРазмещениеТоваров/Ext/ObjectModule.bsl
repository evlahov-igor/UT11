#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Подбирает ячейки для размещения товаров на адресном складе.
//
// Параметры:
// 		ИмяИсточника - Строка - Имя табличной части.
//
Процедура РазместитьТовары(ИмяИсточника) Экспорт
	
	ЗаполнитьПараметрыПроверки(ИмяИсточника);
	
	Если ПроверитьЗаполнение() Тогда
		
		Менеджер = Новый МенеджерВременныхТаблиц;
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Менеджер;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаНоменклатурыДляЗапроса.Номенклатура КАК Номенклатура,
		|	ТаблицаНоменклатурыДляЗапроса.Упаковка КАК Упаковка,
		|	ТаблицаНоменклатурыДляЗапроса.Характеристика КАК Характеристика,
		|	ТаблицаНоменклатурыДляЗапроса.Назначение КАК Назначение,
		|	ВЫРАЗИТЬ(ТаблицаНоменклатурыДляЗапроса.Серия КАК Справочник.СерииНоменклатуры) КАК Серия,
		|	ТаблицаНоменклатурыДляЗапроса.КоличествоУпаковок КАК КоличествоУпаковок
		|ПОМЕСТИТЬ ТаблицаНоменклатурыДляЗапроса
		|ИЗ
		|	&Товары КАК ТаблицаНоменклатурыДляЗапроса
		|;
		// << 07.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
		// Выборка из ИсторияИзмененияФорматовМагазинов временная до новой ФДР.
		// Потом будет убрана
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(Т.ФорматМагазина) КАК Ссылка
		|ПОМЕСТИТЬ КР_ФорматМагазина
		|ИЗ
		|	РегистрСведений.ИсторияИзмененияФорматовМагазинов.СрезПоследних(&ДатаДокумента, Склад = &Склад) КАК Т
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.Номенклатура КАК Номенклатура,
		|	Т.РазрешеныПродажи КАК Разрешены
		|ПОМЕСТИТЬ КР_ДоступностьПродажиПоНоменклатуре
		|ИЗ
		|	РегистрСведений.Ассортимент.СрезПоследних(
		|		&ДатаДокумента, 
		|		ОбъектПланирования В (ВЫБРАТЬ Ссылка ИЗ КР_ФорматМагазина)) КАК Т
		|;
		// >> 07.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаНоменклатурыДляЗапроса.Номенклатура КАК Номенклатура,
		|	ТаблицаНоменклатурыДляЗапроса.Упаковка КАК Упаковка,
		|	ТаблицаНоменклатурыДляЗапроса.Серия,
		|	ТаблицаНоменклатурыДляЗапроса.Характеристика КАК Характеристика,
		|	ТаблицаНоменклатурыДляЗапроса.Назначение КАК Назначение,   
		// << 07.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
		|	ЕСТЬNULL(ДоступностьПродажиПоНоменклатуре.Разрешены, ЛОЖЬ) КАК КР_РазрешеныПродажи,
		// >> 07.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
		|	СУММА(ТаблицаНоменклатурыДляЗапроса.КоличествоУпаковок) КАК КоличествоУпаковок
		|ПОМЕСТИТЬ ТаблицаНоменклатуры
		|ИЗ
		|	ТаблицаНоменклатурыДляЗапроса КАК ТаблицаНоменклатурыДляЗапроса
		// << 07.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
		|	ЛЕВОЕ СОЕДИНЕНИЕ КР_ДоступностьПродажиПоНоменклатуре КАК ДоступностьПродажиПоНоменклатуре   
		|	ПО ТаблицаНоменклатурыДляЗапроса.Номенклатура = ДоступностьПродажиПоНоменклатуре.Номенклатура
		// >> 07.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаНоменклатурыДляЗапроса.Номенклатура,
		|	ТаблицаНоменклатурыДляЗапроса.Упаковка,
		|	ТаблицаНоменклатурыДляЗапроса.Характеристика,
		|	ТаблицаНоменклатурыДляЗапроса.Назначение,
		// << 07.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
		|	ЕСТЬNULL(ДоступностьПродажиПоНоменклатуре.Разрешены, ЛОЖЬ),
		// >> 07.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
		|	ТаблицаНоменклатурыДляЗапроса.Серия
		|;
		// << 07.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КР_ДоступностьПродажиПоНоменклатуре
		|;
		// >> 07.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаНоменклатурыДляЗапроса";
	
		ТаблицаКРазмещению = ЭтотОбъект[ИмяИсточника].Выгрузить(,"Номенклатура,Упаковка,Характеристика,Назначение,Серия,КоличествоУпаковок");
		Запрос.УстановитьПараметр("Товары",ТаблицаКРазмещению);
		Запрос.УстановитьПараметр("Склад",Склад);
		// << 07.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
		Запрос.УстановитьПараметр("ДатаДокумента", Дата);
		// >> 07.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
		
		Запрос.Выполнить();
		
		ОшибкаПроверки = Ложь;
		
		СтруктураВозврата = СкладыСервер.РазместитьТоварВЯчейках(
			Менеджер,
			Склад,
			Помещение,
			?(ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Размещение, 
				РабочийУчасток, 
				Справочники.РабочиеУчастки.ПустаяСсылка()),
			Справочники.СкладскиеЯчейки.ПустаяСсылка(),
			ОшибкаПроверки);
		
		Менеджер.Закрыть();
		
		Если Не ОшибкаПроверки Тогда
			
			ТоварыРазмещение.Очистить();
			
			Для Каждого СтрТабл Из СтруктураВозврата.ТаблицаОшибок Цикл
				
				Если СтрТабл.КоличествоУпаковок > 0 Тогда
					
					НоваяСтрока = ТоварыРазмещение.Добавить();
					
					ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрТабл);
					
				КонецЕсли;
				
			КонецЦикла;
			
			Для Каждого СтрТабл Из СтруктураВозврата.ТаблицаРезультатов Цикл
				
				Если СтрТабл.КоличествоУпаковок > 0 Тогда
					
					НоваяСтрока = ТоварыРазмещение.Добавить();
					
					ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрТабл);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
	КонецЕсли;
	
	// << 21.06.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1499
	КР_РазместитьТовары(ИмяИсточника);
	// >> 21.06.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1499
	
	ДополнительныеСвойства.Удалить("ПараметрыПроверки");
КонецПроцедуры

// Подбирает ячейки для отбора товаров с адресного склада.
//
// Параметры:
// 		ИмяИсточника - Строка - Имя табличной части.
//
Процедура ОтобратьТовары(ИмяИсточника
		// << 29.11.2023 Марченко С.Н., КРОК, JIRA№A2105505-2540
		, ДополнительныеПараметры = Неопределено
		// >> 29.11.2023 Марченко С.Н., КРОК, JIRA№A2105505-2540
	) Экспорт
	
	ЗаполнитьПараметрыПроверки(ИмяИсточника);
	
	Если ПроверитьЗаполнение() Тогда
		
		Менеджер = Новый МенеджерВременныхТаблиц;
		
		Если ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Перемещение
			// << 08.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
			Или Склад.КР_ВидСклада = Перечисления.КР_ВидыСкладов.Магазин
			// >> 08.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
			Тогда
			
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = Менеджер;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	Таблица.Номенклатура КАК Номенклатура,
			|	Таблица.Характеристика КАК Характеристика,
			|	Таблица.Назначение КАК Назначение,
			|	Таблица.Серия КАК Серия,
			|	Таблица.Количество КАК Количество
			|ПОМЕСТИТЬ ТаблицаНоменклатурыДляЗапроса
			|ИЗ
			|	&Товары КАК Таблица
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаНоменклатурыДляЗапроса.Номенклатура,
			|	ТаблицаНоменклатурыДляЗапроса.Характеристика,
			|	ТаблицаНоменклатурыДляЗапроса.Назначение,
			|	ТаблицаНоменклатурыДляЗапроса.Серия,
			|	СУММА(ТаблицаНоменклатурыДляЗапроса.Количество) КАК Количество,
			|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаОтгрузки,
			|	0 КАК Приоритет,
			|	&Распоряжение КАК Распоряжение,
			|	ВЫРАЗИТЬ(ТаблицаНоменклатурыДляЗапроса.Номенклатура КАК Справочник.Номенклатура).СкладскаяГруппа КАК СкладскаяГруппаНоменклатуры
			|ПОМЕСТИТЬ ТаблицаНоменклатуры
			|ИЗ
			|	ТаблицаНоменклатурыДляЗапроса КАК ТаблицаНоменклатурыДляЗапроса
			|
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаНоменклатурыДляЗапроса.Номенклатура,
			|	ТаблицаНоменклатурыДляЗапроса.Характеристика,
			|	ТаблицаНоменклатурыДляЗапроса.Назначение,
			|	ТаблицаНоменклатурыДляЗапроса.Серия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ТаблицаНоменклатурыДляЗапроса";
			
			ТаблицаКРазмещению = ЭтотОбъект[ИмяИсточника].Выгрузить(,"Номенклатура,Характеристика,Назначение,Серия,Количество");
			
			Запрос.УстановитьПараметр("Товары",ТаблицаКРазмещению);
			Запрос.УстановитьПараметр("Распоряжение",?(ЗначениеЗаполнено(Распоряжение),Распоряжение,""));
			
			Запрос.Выполнить();
			
			ОшибкаПроверки = Ложь;
			
			СтруктураВозврата = СкладыСервер.ОтобратьТоварИзЯчеек(Менеджер,Склад,Помещение);
			
			// << 29.11.2023 Марченко С.Н., КРОК, JIRA№A2105505-2540 
			ЯчейкиОднозначноеРазмещение = Неопределено;
			Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") 
				И ДополнительныеПараметры.Свойство("ЯчейкиОднозначноеРазмещение", ЯчейкиОднозначноеРазмещение)
				И ЯчейкиОднозначноеРазмещение = Истина Тогда 
				
				КР_ПроверитьОчиститьЗаполнениеЯчеекОднозначноеРазмещение(СтруктураВозврата);
				
			КонецЕсли;	
			// >> 29.11.2023 Марченко С.Н., КРОК, JIRA№A2105505-2540
			
		Иначе
			
			СкладыСервер.ОстаткиТоваровКОтбору(Менеджер, Распоряжение, Склад, Помещение);
			
			ОшибкаПроверки = Ложь;
			
			СтруктураВозврата = СкладыСервер.ОтобратьТоварИзЯчеек(Менеджер,Склад,Помещение);
			
		КонецЕсли;
		
		Менеджер.Закрыть();
		
		ТоварыОтбор.Очистить();
		
		Для Каждого СтрТабл Из СтруктураВозврата.ТаблицаОшибок Цикл
			
			Если СтрТабл.Количество > 0 Тогда
				
				НоваяСтрока = ТоварыОтбор.Добавить();
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрТабл);
				
				Если НоваяСтрока.КоличествоУпаковок = 0 Тогда
					НоваяСтрока.КоличествоУпаковок = НоваяСтрока.Количество;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Для Каждого СтрТабл Из СтруктураВозврата.ТаблицаРезультатов Цикл
			
			Если СтрТабл.Количество > 0 Тогда
				
				НоваяСтрока = ТоварыОтбор.Добавить();
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрТабл);
				
			КонецЕсли;
			
		КонецЦикла;
			
	КонецЕсли;
	
	ДополнительныеСвойства.Удалить("ПараметрыПроверки");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
		
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
	Если Не (ДанныеЗаполнения <> Неопределено
		И Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ДанныеЗаполнения))) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ДанныеЗаполнения.Проведен Тогда
		ТекстСообщения = НСтр("ru='Ввод на основании возможен только по проведенным документам!'");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриходныйОрдерНаТовары") Тогда
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения,
			Новый Структура("Статус,Склад,Помещение,ЗонаПриемки,Дата"));
		
		Если РеквизитыОснования.Статус <> Перечисления.СтатусыПриходныхОрдеров.Принят  Тогда
			ТекстСообщения = НСтр("ru='Ввод заданий на размещение допускается на основании приходных ордеров в статусе ""%СтатусОрдера%"".'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"%СтатусОрдера%", Перечисления.СтатусыПриходныхОрдеров.Принят);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;

		Если Не СкладыСервер.ИспользоватьАдресноеХранение(РеквизитыОснования.Склад, РеквизитыОснования.Помещение, РеквизитыОснования.Дата) Тогда
			ТекстСообщения = НСтр("ru='На складе ""%Склад%"" не используется адресное хранение остатков'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Склад%", СкладыСервер.ПолучитьПредставлениеСклада(РеквизитыОснования.Склад, РеквизитыОснования.Помещение));
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
		
		ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Размещение;
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект,РеквизитыОснования, "ЗонаПриемки, Склад, Помещение");
		
		Запрос = Новый Запрос;
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ТаблицаТовары.Характеристика КАК Характеристика,
		|	ТаблицаТовары.Назначение КАК Назначение,
		|	ТаблицаТовары.Упаковка КАК Упаковка,
		|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
		|	ТаблицаТовары.Количество КАК Количество,
		|	ТаблицаТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	ВЫБОР
		|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10, 14)
		|			ТОГДА ТаблицаТовары.Серия
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|	КОНЕЦ КАК Серия,
		|	ТаблицаТовары.Номенклатура.Наименование КАК НоменклатураНаименование,
		|	ТаблицаТовары.Характеристика.Наименование КАК ХарактеристикаНаименование
		|ПОМЕСТИТЬ ВтТаблицаТовары
		|ИЗ
		|	Документ.ПриходныйОрдерНаТовары.Товары КАК ТаблицаТовары
		|ГДЕ
		|	ТаблицаТовары.Ссылка = &Ссылка
		|	И ТаблицаТовары.Количество <> 0
		|	И НЕ ТаблицаТовары.ЭтоУпаковочныйЛист
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ВтТаблицаТовары.Характеристика КАК Характеристика,
		|	ВтТаблицаТовары.Назначение КАК Назначение,
		|	ВтТаблицаТовары.Упаковка КАК Упаковка,
		|	СУММА(ВтТаблицаТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	СУММА(ВтТаблицаТовары.Количество) КАК Количество,
		|	ВтТаблицаТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	ВтТаблицаТовары.Серия КАК Серия,
		|	&ТекстЗапросаВес КАК Вес,
		|	&ТекстЗапросаОбъем КАК Объем,
		|	ВтТаблицаТовары.НоменклатураНаименование КАК НоменклатураНаименование,
		|	ВтТаблицаТовары.ХарактеристикаНаименование КАК ХарактеристикаНаименование
		|ИЗ
		|	ВтТаблицаТовары КАК ВтТаблицаТовары
		|
		|СГРУППИРОВАТЬ ПО
		|	ВтТаблицаТовары.Серия,
		|	ВтТаблицаТовары.НоменклатураНаименование,
		|	ВтТаблицаТовары.ХарактеристикаНаименование,
		|	ВтТаблицаТовары.Номенклатура,
		|	ВтТаблицаТовары.Характеристика,
		|	ВтТаблицаТовары.Назначение,
		|	ВтТаблицаТовары.Упаковка,
		|	ВтТаблицаТовары.СтатусУказанияСерий,
		|	&ТекстЗапросаВес,
		|	&ТекстЗапросаОбъем
		|УПОРЯДОЧИТЬ ПО
		|	НоменклатураНаименование,
		|	ХарактеристикаНаименование";
		
		ТекстЗапроса = СтрЗаменить(
			ТекстЗапроса, 
			"&ТекстЗапросаВес", 
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки("ВтТаблицаТовары.Упаковка", "ВтТаблицаТовары.Номенклатура", Ложь));
			
		ТекстЗапроса = СтрЗаменить(
			ТекстЗапроса, 
			"&ТекстЗапросаОбъем", 
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаОбъемУпаковки("ВтТаблицаТовары.Упаковка", "ВтТаблицаТовары.Номенклатура", Ложь));
		
		Запрос.Текст = ТекстЗапроса;
		
		Запрос.УстановитьПараметр("Ссылка",ДанныеЗаполнения);
		
		ТоварыРазмещение.Загрузить(Запрос.Выполнить().Выгрузить());
			
		ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ОтборРазмещениеТоваров);
		НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект,ПараметрыУказанияСерий.Размещение);
		
		РазместитьТовары("ТоварыРазмещение");
		
		НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект,ПараметрыУказанияСерий.Размещение);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РасходныйОрдерНаТовары") Тогда
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения,
			Новый Структура("Статус,Склад,Помещение,ЗонаОтгрузки,ДатаОтгрузки"));
		
		Если СкладыСервер.ИспользоватьАдресноеХранение(РеквизитыОснования.Склад, РеквизитыОснования.Помещение, РеквизитыОснования.ДатаОтгрузки) Тогда
		
			ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Отбор;
			Распоряжение = ДанныеЗаполнения; 
			
			ЗаполнитьЗначенияСвойств(ЭтотОбъект,РеквизитыОснования, "ЗонаОтгрузки, Склад, Помещение");
			
			ЗаполнитьТоварыОтборПоРаспоряжению();
			
			ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ОтборРазмещениеТоваров);
			НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект,ПараметрыУказанияСерий.Отбор);
			
			ОтобратьТовары("ТоварыОтбор");
			
			НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект,ПараметрыУказанияСерий.Отбор);		
		Иначе
			ТекстСообщения = НСтр("ru='На складе ""%Склад%"" не используется адресное хранение остатков'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Склад%", СкладыСервер.ПолучитьПредставлениеСклада(РеквизитыОснования.Склад, РеквизитыОснования.Помещение));
			ВызватьИсключение ТекстСообщения;
			
		КонецЕсли;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОрдерНаПеремещениеТоваров") Тогда 
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения,
			Новый Структура("Статус,Склад,ПомещениеОтправитель,ПомещениеПолучатель,ЗонаОтгрузки,ЗонаПриемки,ДатаОтгрузки"));
		
		Если РеквизитыОснования.Статус = Перечисления.СтатусыОрдеровНаПеремещение.КОтбору Тогда
			Если СкладыСервер.ИспользоватьАдресноеХранение(РеквизитыОснования.Склад, РеквизитыОснования.ПомещениеОтправитель, РеквизитыОснования.ДатаОтгрузки) Тогда
				
				ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Отбор;
				Распоряжение = ДанныеЗаполнения; 
				Помещение = РеквизитыОснования.ПомещениеОтправитель;
				
				ЗаполнитьЗначенияСвойств(ЭтотОбъект,РеквизитыОснования, "ЗонаОтгрузки, Склад");
				
				ЗаполнитьТоварыОтборПоРаспоряжению();
				
				ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ОтборРазмещениеТоваров);
				НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект,ПараметрыУказанияСерий.Отбор);
				
				ОтобратьТовары("ТоварыОтбор");
				
				НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект,ПараметрыУказанияСерий.Отбор);
			Иначе
				ТекстСообщения = НСтр("ru='На складе ""%Склад%"" не используется адресное хранение остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Склад%", СкладыСервер.ПолучитьПредставлениеСклада(РеквизитыОснования.Склад, РеквизитыОснования.ПомещениеОтправитель));
				ВызватьИсключение ТекстСообщения;
			КонецЕсли;
		ИначеЕсли РеквизитыОснования.Статус = Перечисления.СтатусыОрдеровНаПеремещение.Принят Тогда
			Если СкладыСервер.ИспользоватьАдресноеХранение(РеквизитыОснования.Склад, РеквизитыОснования.ПомещениеПолучатель, РеквизитыОснования.ДатаОтгрузки) Тогда
				ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Размещение;
				Помещение = РеквизитыОснования.ПомещениеПолучатель;
				
				ЗаполнитьЗначенияСвойств(ЭтотОбъект,РеквизитыОснования, "ЗонаПриемки, Склад");
				
				Запрос = Новый Запрос;
				Запрос.Текст =
				"ВЫБРАТЬ
				|	ТаблицаТовары.Номенклатура,
				|	ТаблицаТовары.Характеристика,
				|	ТаблицаТовары.Назначение,
				|	ТаблицаТовары.Упаковка,
				|	ТаблицаТовары.Серия КАК Серия,
				|	СУММА(ТаблицаТовары.Количество) КАК Количество,
				|	СУММА(ТаблицаТовары.КоличествоУпаковок) КАК КоличествоУпаковок
				|ИЗ
				|	Документ.ОрдерНаПеремещениеТоваров.ОтгружаемыеТовары КАК ТаблицаТовары
				|ГДЕ
				|	ТаблицаТовары.Ссылка = &Ссылка
				|
				|СГРУППИРОВАТЬ ПО
				|	ТаблицаТовары.Упаковка,
				|	ТаблицаТовары.Номенклатура,
				|	ТаблицаТовары.Назначение,
				|	ТаблицаТовары.Серия,
				|	ТаблицаТовары.Характеристика
				|
				|УПОРЯДОЧИТЬ ПО
				|	ТаблицаТовары.Номенклатура.Наименование,
				|	ТаблицаТовары.Характеристика.Наименование";
				
				Запрос.УстановитьПараметр("Ссылка",ДанныеЗаполнения);
				
				ТоварыРазмещение.Загрузить(Запрос.Выполнить().Выгрузить());
								
				ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ОтборРазмещениеТоваров);
				НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект,ПараметрыУказанияСерий.Размещение);
				
				РазместитьТовары("ТоварыРазмещение");
				
				НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект,ПараметрыУказанияСерий.Размещение);				
			Иначе
				ТекстСообщения = НСтр("ru='На складе ""%Склад%"" не используется адресное хранение остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Склад%", СкладыСервер.ПолучитьПредставлениеСклада(РеквизитыОснования.Склад, РеквизитыОснования.ПомещениеПолучатель));
				ВызватьИсключение ТекстСообщения;
			КонецЕсли;
		Иначе
			ТекстСообщения = НСтр("ru='Ввод заданий на отбор (размещение) товаров возможен, когда документ находится
			|статусах ""К отбору"" или ""Принят""'");
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОтборРазмещениеТоваров") Тогда 
		
		// Если внутрискладское перемещение, то копируем из ТЧ размещение источника в ТЧ Отбор приемника
		// для вида операции "Отбор" источника вызываем исключение
		// источник должен быть в статусе "Выполнено".
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения,Новый Структура("Статус,ВидОперации,Склад,Помещение,ЗонаОтгрузки,ЗонаПриемки"));
		
		Если РеквизитыОснования.ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Отбор Тогда
			ТекстСообщения = НСтр("ru='Для вида операции %ВидОперации% ввод на основании внутрискладского перемещения не предусмотрен.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ВидОперации%", РеквизитыОснования.ВидОперации);
			ВызватьИсключение ТекстСообщения;
		ИначеЕсли РеквизитыОснования.Статус <> Перечисления.СтатусыОтборовРазмещенийТоваров.ВыполненоБезОшибок
			И РеквизитыОснования.Статус <> Перечисления.СтатусыОтборовРазмещенийТоваров.ВыполненоСОшибками Тогда
			ТекстСообщения = НСтр("ru='Для статуса документа %СтатусДокумента% ввод на основании внутрискладского перемещения не предусмотрен.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"%СтатусДокумента%", РеквизитыОснования.Статус);
			ВызватьИсключение ТекстСообщения;
		Иначе
			
			ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Перемещение;
			
			ЗаполнитьЗначенияСвойств(ЭтотОбъект,РеквизитыОснования, "Склад, Помещение");
			
			Для Каждого СтрТабл Из ДанныеЗаполнения.ТоварыРазмещение Цикл
				
				НоваяСтрока = ТоварыОтбор.Добавить();
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрТабл,"Номенклатура,Характеристика,Назначение,Ячейка,Упаковка,Серия");
				
				НоваяСтрока.Количество = СтрТабл.КоличествоРазмещено;
				НоваяСтрока.КоличествоУпаковок = СтрТабл.КоличествоУпаковокРазмещено;
				
			КонецЦикла;
			
			ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ОтборРазмещениеТоваров);
			
			НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект,ПараметрыУказанияСерий.Отбор);
			
			РазместитьТовары("ТоварыОтбор");
			
			НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект,ПараметрыУказанияСерий.Отбор);
			НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект,ПараметрыУказанияСерий.Размещение);
			
		КонецЕсли;
		
	// << 03.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказНаПеремещение") Тогда 
		
		КР_ЗаполнитьНаОснованииДокументаЗаказНаПеремещение(ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда 
		
		КР_ЗаполнитьНаОснованииДокументаПеремещениеТоваров(ДанныеЗаполнения);
	// >> 03.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751	            
	
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	// << 19.10.2023 Марченко С.Н., КРОК, JIRA№A2105505-2404	
	Если Склад.КР_АдресныйСкладБезордернойОтгрузки
		И (ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Отбор 
		Или ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Перемещение) Тогда    
		
        Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.ВыполненоБезОшибок;
		
	КонецЕсли;	
    // >> 19.10.2023 Марченко С.Н., КРОК, JIRA№A2105505-2404
	
	Если ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Отбор Тогда
		
		ТоварыРазмещение.Очистить();
		
		ЗонаПриемки = Справочники.СкладскиеЯчейки.ПустаяСсылка();
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Размещение Тогда
		
		ТоварыОтбор.Очистить();
		
		// << 03.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
		Если Не Склад.КР_ИспользоватьРазмещениеКакПриходныйОрдер Тогда 
		// >> 03.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751   
		Распоряжение = Неопределено;   		
		// << 03.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
		КонецЕсли; 
		// >> 03.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751   

		ЗонаОтгрузки = Справочники.СкладскиеЯчейки.ПустаяСсылка();
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Перемещение Тогда
		
		// << 03.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
		Если Не Склад.КР_АдресныйСкладБезордернойОтгрузки Тогда 
		// >> 03.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751   		
		Распоряжение = Неопределено;   
		// << 03.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
		КонецЕсли; 
		// >> 03.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751  
		
		ЗонаПриемки		= Справочники.СкладскиеЯчейки.ПустаяСсылка();
		ЗонаОтгрузки	= Справочники.СкладскиеЯчейки.ПустаяСсылка();
		
	КонецЕсли;
	
	Выполнено = (Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.ВыполненоБезОшибок
				Или Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.ВыполненоСОшибками);
	
	Если ЗначениеЗаполнено(Ссылка) Тогда
		
		СтатусДоЗаписи = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Статус");
		
		Если Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.ВРаботе
			И СтатусДоЗаписи <> Перечисления.СтатусыОтборовРазмещенийТоваров.ВРаботе Тогда
			
			Если Не ЗначениеЗаполнено(ДатаНачалаВыполнения) Тогда
				ДатаНачалаВыполнения = ТекущаяДатаСеанса();
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ДатаОкончанияВыполнения)
				И ДатаНачалаВыполнения > ДатаОкончанияВыполнения Тогда
				
				ДатаОкончанияВыполнения = ДатаНачалаВыполнения + 1;
				
			КонецЕсли;
			
		ИначеЕсли Выполнено
			И (Не ЗначениеЗаполнено(СтатусДоЗаписи)
				Или СтатусДоЗаписи = Перечисления.СтатусыОтборовРазмещенийТоваров.Подготовлено
				Или СтатусДоЗаписи = Перечисления.СтатусыОтборовРазмещенийТоваров.ВРаботе) Тогда
			
			Если Не ЗначениеЗаполнено(ДатаНачалаВыполнения) Тогда
				ДатаНачалаВыполнения = ТекущаяДатаСеанса();
			КонецЕсли;
			
			ДатаОкончанияВыполнения = ТекущаяДатаСеанса();
			
			Если ДатаНачалаВыполнения > ДатаОкончанияВыполнения Тогда
				ДатаНачалаВыполнения = ДатаОкончанияВыполнения - 1;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ОтборРазмещениеТоваров);
	
	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ЭтотОбъект, ПараметрыУказанияСерий.Отбор);
	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ЭтотОбъект, ПараметрыУказанияСерий.Размещение);
	
	ВесРазмещение	= 0;
	ОбъемРазмещение	= 0;
	
	Для Каждого СтрТабл Из ТоварыРазмещение Цикл
		
		Если Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.ВыполненоБезОшибок Тогда
			
			СтрТабл.КоличествоРазмещено			= СтрТабл.Количество;
			СтрТабл.КоличествоУпаковокРазмещено	= СтрТабл.КоличествоУпаковок;
			
		ИначеЕсли Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.ВРаботе
			Или Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.Подготовлено Тогда
			
			СтрТабл.КоличествоРазмещено			= 0;
			СтрТабл.КоличествоУпаковокРазмещено	= 0;
			
		КонецЕсли;
		
		КоличествоКРазмещению = ?(Выполнено, СтрТабл.КоличествоУпаковокРазмещено, СтрТабл.КоличествоУпаковок);
		
		ВесРазмещение	= ВесРазмещение + СтрТабл.ВесУпаковки * КоличествоКРазмещению;
		ОбъемРазмещение	= ОбъемРазмещение + СтрТабл.ОбъемУпаковки * КоличествоКРазмещению;
		
		Если СтрТабл.СтатусУказанияСерий = 0 Тогда
			СтрТабл.Серия = Справочники.СерииНоменклатуры.ПустаяСсылка();
		КонецЕсли;
		
	КонецЦикла;
	
	ВесОтбор	= 0;
	ОбъемОтбор	= 0;
	
	Для Каждого СтрТабл Из ТоварыОтбор Цикл
		
		Если Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.ВыполненоБезОшибок Тогда
			
			СтрТабл.КоличествоОтобрано			= СтрТабл.Количество;
			СтрТабл.КоличествоУпаковокОтобрано	= СтрТабл.КоличествоУпаковок;
			
		ИначеЕсли Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.ВРаботе
			Или Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.Подготовлено Тогда
			
			СтрТабл.КоличествоОтобрано			= 0;
			СтрТабл.КоличествоУпаковокОтобрано	= 0;
			
		КонецЕсли;
		
		КоличествоКОтбору = ?(Выполнено, СтрТабл.КоличествоУпаковокОтобрано, СтрТабл.КоличествоУпаковок);
		
		ВесОтбор	= ВесОтбор + СтрТабл.ВесУпаковки * КоличествоКОтбору;
		ОбъемОтбор	= ОбъемОтбор + СтрТабл.ОбъемУпаковки * КоличествоКОтбору;
		
		Если СтрТабл.СтатусУказанияСерий = 0 Тогда
			СтрТабл.Серия = Справочники.СерииНоменклатуры.ПустаяСсылка();
		КонецЕсли;
		
	КонецЦикла;

	// << 01.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
	КР_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения);
	// >> 01.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);

	// << 07.12.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
	КР_ПриЗаписи(Отказ);
	// >> 07.12.2022 Марченко С.Н., КРОК, JIRA№A2105505-751

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроверитьБлокировкуЯчеек(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ);
	
	СкладыСервер.ОтразитьСостоянияПересчетовЯчеек(ЭтотОбъект.Ссылка, ЭтотОбъект.Статус, Отказ);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроверитьБлокировкуЯчеек(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИнициализироватьДокумент();
	ОчиститьФактическоеКоличествоВТЧ();
	
	// << 10.02.2023 Марченко С.Н., КРОК, JIRA№A2105505-487
	КР_ПриКопировании(ОбъектКопирования);
	// >> 10.02.2023 Марченко С.Н., КРОК, JIRA№A2105505-487

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ДополнительныеСвойства.Свойство("ПараметрыПроверки") Тогда	
		ПараметрыПроверки = ДополнительныеСвойства.ПараметрыПроверки;
		НепроверяемыеРеквизитыМассив = ПараметрыПроверки.НепроверяемыеРеквизиты;
		Для Каждого СтрМас Из НепроверяемыеРеквизитыМассив Цикл
			МассивНепроверяемыхРеквизитов.Добавить(СтрМас);
		КонецЦикла;
	Иначе  
				
		Если Не Проведен
			// << 03.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
			И Не Склад.КР_АдресныйСкладБезордернойОтгрузки 
			И Не Склад.КР_ИспользоватьРазмещениеКакПриходныйОрдер
			// >> 03.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751   
			И Статус <> Перечисления.СтатусыОтборовРазмещенийТоваров.ВРаботе
			И Статус <> Перечисления.СтатусыОтборовРазмещенийТоваров.Подготовлено Тогда
			
			ТекстСообщения = НСтр("ru = 'Документ должен быть проведен сначала в статусе ""В работе"" или ""Подготовлено""'");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,ЭтотОбъект,"Статус","Объект",Отказ);
		КонецЕсли;

		Если ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Перемещение Тогда
			СверитьКоличествоВБазовыхЕдиницах(Отказ);	
		КонецЕсли;
	КонецЕсли;
	
	Если Не СкладыСервер.ИспользоватьСкладскиеПомещения(Склад,Дата) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Помещение");
	КонецЕсли;
	
	Если ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Отбор Тогда
		
		ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
		ПараметрыПроверки.ИмяТЧ = "ТоварыОтбор";
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ,ПараметрыПроверки);
		
		МассивНепроверяемыхРеквизитов.Добавить("ЗонаПриемки");
		МассивНепроверяемыхРеквизитов.Добавить("ТоварыРазмещение");
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Размещение Тогда
		
		ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
		ПараметрыПроверки.ИмяТЧ = "ТоварыРазмещение";
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ,ПараметрыПроверки);
		
		МассивНепроверяемыхРеквизитов.Добавить("ЗонаОтгрузки");
		МассивНепроверяемыхРеквизитов.Добавить("ТоварыОтбор");
		МассивНепроверяемыхРеквизитов.Добавить("Распоряжение");
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Перемещение  Тогда
		
		ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
		ПараметрыПроверки.ИмяТЧ = "ТоварыОтбор";
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ,ПараметрыПроверки);
		
		ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
		ПараметрыПроверки.ИмяТЧ = "ТоварыРазмещение";
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ,ПараметрыПроверки);
		
		МассивНепроверяемыхРеквизитов.Добавить("ЗонаПриемки");
		МассивНепроверяемыхРеквизитов.Добавить("ЗонаОтгрузки");
		МассивНепроверяемыхРеквизитов.Добавить("Распоряжение");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры") Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ТоварыРазмещение.Упаковка");
		МассивНепроверяемыхРеквизитов.Добавить("ТоварыОтбор.Упаковка");
		ТекстСообщения = НСтр("ru='В настройках программы не включено использование упаковок номенклатуры, 
		|поэтому нельзя оформить документ по складу с адресным хранением остатков. Обратитесь к администратору'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
	КонецЕсли;

	// << 03.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751   
	// п71 задачи. Убран типовой контроль. Кастомный (построчный) добавлен в кастомном методе
	//ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияУпаковок();
	//ПараметрыПроверки.ИмяТЧ = "ТоварыОтбор";
	//НоменклатураСервер.ПроверитьЗаполнениеУпаковок(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ, ПараметрыПроверки);
	//ПараметрыПроверки.ИмяТЧ = "ТоварыРазмещение";
	//НоменклатураСервер.ПроверитьЗаполнениеУпаковок(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ, ПараметрыПроверки);
	// >> 03.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751   
	
	ПараметрыПроверкиУказанияМногооборотнойТары = МногооборотнаяТараСервер.ПараметрыПроверкиУказанияМногооборотнойТары();
	ПараметрыПроверкиУказанияМногооборотнойТары.ИмяТЧ = "ТоварыОтбор";
	МногооборотнаяТараСервер.ПроверитьУказаниеМногооборотнойТары(ЭтотОбъект, ПараметрыПроверкиУказанияМногооборотнойТары, Отказ);
	ПараметрыПроверкиУказанияМногооборотнойТары.ИмяТЧ = "ТоварыРазмещение";
	МногооборотнаяТараСервер.ПроверитьУказаниеМногооборотнойТары(ЭтотОбъект, ПараметрыПроверкиУказанияМногооборотнойТары, Отказ);
	
	СкладыСервер.ПроверитьИспользованиеЯчеекПоПравиламОбособления(ЭтотОбъект, Отказ, "ТоварыРазмещение");
	
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ОтборРазмещениеТоваров);
	
	НоменклатураСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект,ПараметрыУказанияСерий.Отбор,Отказ, МассивНепроверяемыхРеквизитов);
	НоменклатураСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект,ПараметрыУказанияСерий.Размещение,Отказ, МассивНепроверяемыхРеквизитов);

	// << 03.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
	КР_ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	// >> 03.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751   
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияКоличества();
	ПараметрыПроверки.ИмяТЧ = "ТоварыОтбор";
	Если Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.ВыполненоСОшибками Тогда
		ПараметрыПроверки.ИменаПолейССуффиксом.Вставить("Количество", "КоличествоОтобрано");
		ПараметрыПроверки.ИменаПолейССуффиксом.Вставить("КоличествоУпаковок", "КоличествоУпаковокОтобрано");
	КонецЕсли;
	ПараметрыПроверки.ПроверитьВозможностьОкругления = Ложь;
	НоменклатураСервер.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ,ПараметрыПроверки);

	ПараметрыПроверки.ИмяТЧ = "ТоварыРазмещение";
	Если Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.ВыполненоСОшибками Тогда
		ПараметрыПроверки.ИменаПолейССуффиксом.Вставить("Количество", "КоличествоРазмещено");
		ПараметрыПроверки.ИменаПолейССуффиксом.Вставить("КоличествоУпаковок", "КоличествоУпаковокРазмещено");
	КонецЕсли;
	ПараметрыПроверки.ПроверитьВозможностьОкругления = Ложь;
	НоменклатураСервер.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ,ПараметрыПроверки);
	
	Если ВидОперации <> Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Размещение 
		// << 03.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
		И Склад.КР_ВидСклада <> Перечисления.КР_ВидыСкладов.Магазин 
		// >> 03.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751   
		Тогда
		СкладыСервер.ПроверитьОрдерностьСклада(Склад, Дата, "ПриОтгрузке", Отказ);
	КонецЕсли;
	
	Если ВидОперации <> Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Отбор Тогда
		СкладыСервер.ПроверитьОрдерностьСклада(Склад, Дата, "ПриПоступлении", Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнение

Процедура ЗаполнитьТоварыОтборПоРаспоряжению() Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварыКОтборуОстатки.Номенклатура КАК Номенклатура,
	|	ТоварыКОтборуОстатки.Характеристика КАК Характеристика,
	|	ТоварыКОтборуОстатки.Назначение КАК Назначение,
	|	ТоварыКОтборуОстатки.Серия КАК Серия,
	|	ТоварыКОтборуОстатки.КОтборуОстаток КАК КОтборуОстаток,
	|	ТоварыКОтборуОстатки.ОтбираетсяОстаток КАК ОтбираетсяОстаток,
	|	ТоварыКОтборуОстатки.ОтобраноОстаток КАК ОтобраноОстаток,
	|	ТоварыКОтборуОстатки.ТоварноеМесто КАК ТоварноеМесто
	|ПОМЕСТИТЬ ТоварыКОтборуОстатки
	|ИЗ
	|	РегистрНакопления.ТоварыКОтбору.Остатки(, Распоряжение = &Распоряжение) КАК ТоварыКОтборуОстатки
	|;	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОтборуОстатки.Номенклатура,
	|	ТоварыКОтборуОстатки.Характеристика,
	|	ТоварыКОтборуОстатки.Назначение,
	|	ТоварыКОтборуОстатки.Серия,
	|	ТоварыКОтборуОстатки.ТоварноеМесто КАК Упаковка,
	|	СУММА(ТоварыКОтборуОстатки.КОтборуОстаток) - СУММА(ТоварыКОтборуОстатки.ОтбираетсяОстаток) - СУММА(ТоварыКОтборуОстатки.ОтобраноОстаток) КАК Количество,
	|	СУММА(ТоварыКОтборуОстатки.КОтборуОстаток) - СУММА(ТоварыКОтборуОстатки.ОтбираетсяОстаток) - СУММА(ТоварыКОтборуОстатки.ОтобраноОстаток) КАК КоличествоУпаковок
	|ИЗ
	|	ТоварыКОтборуОстатки КАК ТоварыКОтборуОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОтборуОстатки.Номенклатура,
	|	ТоварыКОтборуОстатки.Характеристика,
	|	ТоварыКОтборуОстатки.Назначение,
	|	ТоварыКОтборуОстатки.Серия,
	|	ТоварыКОтборуОстатки.ТоварноеМесто
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОтборуОстатки.КОтборуОстаток) - СУММА(ТоварыКОтборуОстатки.ОтбираетсяОстаток) - СУММА(ТоварыКОтборуОстатки.ОтобраноОстаток) > 0";
	
	
	Запрос.УстановитьПараметр("Распоряжение", Распоряжение);
	
	ТоварыОтбор.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура ЗаполнитьКоличествоВыполнено(ИмяТЧ) Экспорт
	
	Если СтрНайти(ИмяТЧ,"Отбор") <> 0 Тогда
		ИмяКоличество 			= "КоличествоОтобрано";
		ИмяКоличествоУпаковок 	= "КоличествоУпаковокОтобрано";
	Иначе
		ИмяКоличество 			= "КоличествоРазмещено";
		ИмяКоличествоУпаковок 	= "КоличествоУпаковокРазмещено";
	КонецЕсли;
	
	Для каждого СтрТабл Из ЭтотОбъект[ИмяТЧ] Цикл
		
		СтрТабл[ИмяКоличество] 			= СтрТабл.Количество;
		СтрТабл[ИмяКоличествоУпаковок] 	= СтрТабл.КоличествоУпаковок;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Дата					= ТекущаяДатаСеанса();
	Статус					= Метаданные().Реквизиты.Статус.ЗначениеЗаполнения;
	ДатаНачалаВыполнения	= Дата(1, 1, 1);
	ДатаОкончанияВыполнения	= Дата(1, 1, 1);
	Склад					= ЗначениеНастроекПовтИсп.ПолучитьСкладПоУмолчанию(Склад);
	Ответственный			= Пользователи.ТекущийПользователь();
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура ЗаполнитьПараметрыПроверки(Источник)
	
	ПараметрыПроверки = Новый Структура;	
	НепроверяемыеРеквизиты = Новый Массив;
	ПараметрыПроверки.Вставить("НепроверяемыеРеквизиты",НепроверяемыеРеквизиты);
	
	ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("Распоряжение");
	ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ЗонаОтгрузки");
	ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ЗонаПриемки");
	
	Если Источник = "ТоварыРазмещение" Тогда
		
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыОтбор");
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыОтбор.Ячейка");
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыОтбор.Номенклатура");
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыОтбор.Характеристика");
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыОтбор.Назначение");
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыОтбор.Упаковка");
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыОтбор.Количество");
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыОтбор.КоличествоУпаковок");
		
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыРазмещение.Ячейка");
		
	ИначеЕсли Источник = "ТоварыОтбор" Тогда
		
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыРазмещение");
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыРазмещение.Ячейка");
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыРазмещение.Номенклатура");
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыРазмещение.Характеристика");
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыОтбор.Назначение");
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыРазмещение.Упаковка");
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыРазмещение.Количество");
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыРазмещение.КоличествоУпаковок");
		
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыОтбор.Ячейка");
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыОтбор.Упаковка");   
		
		// << 09.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
		Если Склад.КР_ВидСклада = Перечисления.КР_ВидыСкладов.Магазин Тогда 
			ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("КР_Короб");
		КонецЕсли;	
		// >> 09.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751   
		
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ПараметрыПроверки",ПараметрыПроверки);

КонецПроцедуры

Процедура СверитьКоличествоВБазовыхЕдиницах(Отказ)
	
	Если ТоварыОтбор.Количество() = 0
		Или ТоварыРазмещение.Количество() = 0 Тогда
		
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;
	
	ТаблицаПроверки = Новый ТаблицаЗначений;
	ТаблицаПроверки.Колонки.Добавить("Номенклатура");
	ТаблицаПроверки.Колонки.Добавить("Характеристика");
	ТаблицаПроверки.Колонки.Добавить("Назначение");
	ТаблицаПроверки.Колонки.Добавить("Серия");
	ТаблицаПроверки.Колонки.Добавить("Количество");
	ТаблицаПроверки.Колонки.Добавить("КоличествоВыполнено");
	
	ТаблицаОтобраноРазмещено = Новый ТаблицаЗначений;
	ТаблицаОтобраноРазмещено.Колонки.Добавить("Номенклатура");
	ТаблицаОтобраноРазмещено.Колонки.Добавить("Характеристика");
	ТаблицаОтобраноРазмещено.Колонки.Добавить("Назначение");
	ТаблицаОтобраноРазмещено.Колонки.Добавить("Серия");
	ТаблицаОтобраноРазмещено.Колонки.Добавить("КоличествоОтобрано");
	ТаблицаОтобраноРазмещено.Колонки.Добавить("КоличествоРазмещено");
	
	Для Каждого СтрТабл Из ТоварыРазмещение Цикл
		
		// Добавить запись в таблицу проверки.
		НоваяСтрока = ТаблицаПроверки.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрТабл);
		НоваяСтрока.Количество = СтрТабл.Количество;
		НоваяСтрока.КоличествоВыполнено = СтрТабл.КоличествоРазмещено;
		
		// Добавить запись в таблицу проверки "Отобрано = Размещено"
		НоваяСтрока = ТаблицаОтобраноРазмещено.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрТабл);
		НоваяСтрока.КоличествоОтобрано = 0;
		НоваяСтрока.КоличествоРазмещено = СтрТабл.КоличествоРазмещено;
		
	КонецЦикла;
	
	Для Каждого СтрТабл Из ТоварыОтбор Цикл
		
		// Добавить запись в таблицу проверки.
		НоваяСтрока = ТаблицаПроверки.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрТабл);
		НоваяСтрока.Количество = -СтрТабл.Количество;
		НоваяСтрока.КоличествоВыполнено = -СтрТабл.КоличествоОтобрано;
		
		// Добавить запись в таблицу проверки "Отобрано = Размещено"
		НоваяСтрока = ТаблицаОтобраноРазмещено.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрТабл);
		НоваяСтрока.КоличествоОтобрано = СтрТабл.КоличествоОтобрано;
		НоваяСтрока.КоличествоРазмещено = 0;
		
	КонецЦикла;
	
	ТаблицаПроверки.Свернуть("Номенклатура, Характеристика, Назначение, Серия", "Количество, КоличествоВыполнено");
	ТаблицаОтобраноРазмещено.Свернуть("Номенклатура, Характеристика, Назначение, Серия", "КоличествоОтобрано, КоличествоРазмещено");
	
	//<< 31.10.2023 Фомичев А.Е., КРОК, JIRA№A2105505-2464
	ТипСтрока = Новый ОписаниеТипов("Строка");
	
	ТаблицаПроверки.Колонки.Добавить("Артикул",ТипСтрока);
	ТаблицаПроверки.Колонки.Добавить("Штрихкод",ТипСтрока); 
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	втДанныеТаблицыПроверки.Номенклатура КАК СтрНоменклатура,
		|	втДанныеТаблицыПроверки.Характеристика КАК СтрХарактеристика
		|ПОМЕСТИТЬ втТаблица
		|ИЗ
		|	&втДанныеТаблицыПроверки КАК втДанныеТаблицыПроверки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втТаблица.СтрНоменклатура КАК Номенклатура,
		|	втТаблица.СтрХарактеристика КАК Характеристика,
		|	спрНоменклатура.Артикул КАК Артикул,
		|	спрХарактеристикиНоменклатуры.КР_Штрихкод КАК Штрихкод
		|ИЗ
		|	втТаблица КАК втТаблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК спрНоменклатура
		|		ПО втТаблица.СтрНоменклатура = спрНоменклатура.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК спрХарактеристикиНоменклатуры
		|		ПО втТаблица.СтрХарактеристика = спрХарактеристикиНоменклатуры.Ссылка";
	
	Запрос.УстановитьПараметр("втДанныеТаблицыПроверки",ТоварыРазмещение); 
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Отбор = Новый Структура("Номенклатура, Характеристика",ВыборкаДетальныеЗаписи.Номенклатура, ВыборкаДетальныеЗаписи.Характеристика);
		МассивНайденныйСтрок = ТаблицаПроверки.НайтиСтроки(Отбор);
		Для Каждого СтрокаМассива Из МассивНайденныйСтрок Цикл
			ЗаполнитьЗначенияСвойств(СтрокаМассива,ВыборкаДетальныеЗаписи);	
		КонецЦикла;
	КонецЦикла;
	//>> 31.10.2023 Фомичев А.Е., КРОК, JIRA№A2105505-2464
	
	Если Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.ВыполненоСОшибками Тогда
		
		// Проверить, что размещенное количество равно отобранному.
		
		Для Каждого СтрТабл Из ТаблицаОтобраноРазмещено Цикл
			
			// Если номенклатура не заполнена, все равно будет ошибка проверки.
			Если Не ЗначениеЗаполнено(СтрТабл.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;
			
			Количество = 0;
			
			Если СтрТабл.КоличествоОтобрано > СтрТабл.КоличествоРазмещено Тогда
				ТекстСообщения = НСтр("ru='Отобранное количество номенклатуры ""%ПредставлениеНоменклатуры%"" больше, чем размещенное на %Количество% единиц хранения'");
				Количество = СтрТабл.КоличествоОтобрано - СтрТабл.КоличествоРазмещено;
			ИначеЕсли СтрТабл.КоличествоОтобрано < СтрТабл.КоличествоРазмещено Тогда
				ТекстСообщения = НСтр("ru='Отобранное количество номенклатуры ""%ПредставлениеНоменклатуры%"" меньше, чем размещенное на %Количество% единиц хранения'");
				Количество = СтрТабл.КоличествоРазмещено - СтрТабл.КоличествоОтобрано;
			КонецЕсли;
			
			Если Количество <> 0 Тогда
				
				ПредставлениеНоменклатуры = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрТабл.Номенклатура,
																								СтрТабл.Характеристика,
																								,
																								СтрТабл.Серия,
																								СтрТабл.Назначение);
				
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ПредставлениеНоменклатуры%", ПредставлениеНоменклатуры);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Количество%", Количество);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
				
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		Для Каждого СтрТабл Из ТаблицаПроверки Цикл
			
			// Если номенклатура не заполнена, все равно будет ошибка проверки.
			Если Не ЗначениеЗаполнено(СтрТабл.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;
			
			Количество = 0;
			
			Если СтрТабл.Количество > 0 Тогда
				//ТекстСообщения = НСтр("ru='Запланированное к отбору количество номенклатуры ""%ПредставлениеНоменклатуры%"" меньше, чем размещенное на %Количество% единиц хранения'"); 
				//<< 31.10.2023 Фомичев А.Е., КРОК, JIRA№A2105505-2464
				ТекстСообщения = НСтр("ru='Запланированное к отбору количество номенклатуры ""%Артикул% / %Штрихкод% %ПредставлениеНоменклатуры%"" меньше, чем размещенное на %Количество% единиц хранения'");
				//>> 31.10.2023 Фомичев А.Е., КРОК, JIRA№A2105505-2464
				Количество = СтрТабл.Количество;
			ИначеЕсли СтрТабл.Количество < 0 Тогда
				//ТекстСообщения = НСтр("ru='Запланированное к отбору количество номенклатуры ""%ПредставлениеНоменклатуры%"" больше, чем размещенное на %Количество% единиц хранения'");
				//<< 31.10.2023 Фомичев А.Е., КРОК, JIRA№A2105505-2464
				ТекстСообщения = НСтр("ru='Запланированное к отбору количество номенклатуры ""%Артикул% / %Штрихкод% %ПредставлениеНоменклатуры%"" больше, чем размещенное на %Количество% единиц хранения'");
				//>> 31.10.2023 Фомичев А.Е., КРОК, JIRA№A2105505-2464
				Количество = - СтрТабл.Количество;
			КонецЕсли;
			
			Если Количество <> 0 Тогда
				
				ПредставлениеНоменклатуры = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(
					СтрТабл.Номенклатура,
					СтрТабл.Характеристика,
					,
					СтрТабл.Серия, 
					СтрТабл.Назначение);
				
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ПредставлениеНоменклатуры%", ПредставлениеНоменклатуры);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Количество%", Количество);
				//<< 31.10.2023 Фомичев А.Е., КРОК, JIRA№A2105505-2464
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Артикул%", СтрТабл.Артикул);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Штрихкод%", СтрТабл.Штрихкод);
				//>> 31.10.2023 Фомичев А.Е., КРОК, JIRA№A2105505-2464
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьБлокировкуЯчеек(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЯчеек.Ячейка КАК Ячейка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОтборРазмещениеТоваровТоварыОтбор.Ячейка КАК Ячейка
	|	ИЗ
	|		Документ.ОтборРазмещениеТоваров.ТоварыОтбор КАК ОтборРазмещениеТоваровТоварыОтбор
	|	ГДЕ
	|		ОтборРазмещениеТоваровТоварыОтбор.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОтборРазмещениеТоваровТоварыРазмещение.Ячейка
	|	ИЗ
	|		Документ.ОтборРазмещениеТоваров.ТоварыРазмещение КАК ОтборРазмещениеТоваровТоварыРазмещение
	|	ГДЕ
	|		ОтборРазмещениеТоваровТоварыРазмещение.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ОтборРазмещениеТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтбораРазмещенияТоваров.Размещение)
	|				ТОГДА ОтборРазмещениеТоваров.ЗонаПриемки
	|			КОГДА ОтборРазмещениеТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтбораРазмещенияТоваров.Отбор)
	|				ТОГДА ОтборРазмещениеТоваров.ЗонаОтгрузки
	|		КОНЕЦ
	|	ИЗ
	|		Документ.ОтборРазмещениеТоваров КАК ОтборРазмещениеТоваров
	|	ГДЕ
	|		ОтборРазмещениеТоваров.Ссылка = &Ссылка
	|		И (ОтборРазмещениеТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтбораРазмещенияТоваров.Размещение)
	|				ИЛИ ОтборРазмещениеТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтбораРазмещенияТоваров.Отбор))) КАК ТаблицаЯчеек
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЯчеек.Ячейка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	ТаблицаЯчеек = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.БлокировкиСкладскихЯчеек");
	ЭлементБлокировки.Режим          = РежимБлокировкиДанных.Разделяемый;
	ЭлементБлокировки.ИсточникДанных = ТаблицаЯчеек;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Ячейка", "Ячейка");
	
	Блокировка.Заблокировать();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаблокированныеЯчейки.Ячейка КАК Ячейка,
	|	ЗаблокированныеЯчейки.ТипБлокировки
	|ИЗ
	|	(ВЫБРАТЬ
	|		БлокировкиСкладскихЯчеек.Ячейка КАК Ячейка,
	|		БлокировкиСкладскихЯчеек.ТипБлокировки КАК ТипБлокировки
	|	ИЗ
	|		РегистрСведений.БлокировкиСкладскихЯчеек КАК БлокировкиСкладскихЯчеек
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтборРазмещениеТоваров.ТоварыОтбор КАК ОтборРазмещениеТоваровТоварыОтбор
	|			ПО БлокировкиСкладскихЯчеек.Ячейка = ОтборРазмещениеТоваровТоварыОтбор.Ячейка
	|	ГДЕ
	|		ОтборРазмещениеТоваровТоварыОтбор.Ссылка = &Ссылка
	|		И (БлокировкиСкладскихЯчеек.ТипБлокировки = ЗНАЧЕНИЕ(Перечисление.ТипыБлокировокСкладскихЯчеек.Полная)
	|				ИЛИ БлокировкиСкладскихЯчеек.ТипБлокировки = ЗНАЧЕНИЕ(Перечисление.ТипыБлокировокСкладскихЯчеек.Отбор))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БлокировкиСкладскихЯчеек.Ячейка,
	|		БлокировкиСкладскихЯчеек.ТипБлокировки
	|	ИЗ
	|		РегистрСведений.БлокировкиСкладскихЯчеек КАК БлокировкиСкладскихЯчеек
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтборРазмещениеТоваров.ТоварыРазмещение КАК ОтборРазмещениеТоваровТоварыРазмещение
	|			ПО БлокировкиСкладскихЯчеек.Ячейка = ОтборРазмещениеТоваровТоварыРазмещение.Ячейка
	|	ГДЕ
	|		ОтборРазмещениеТоваровТоварыРазмещение.Ссылка = &Ссылка
	|		И (БлокировкиСкладскихЯчеек.ТипБлокировки = ЗНАЧЕНИЕ(Перечисление.ТипыБлокировокСкладскихЯчеек.Полная)
	|				ИЛИ БлокировкиСкладскихЯчеек.ТипБлокировки = ЗНАЧЕНИЕ(Перечисление.ТипыБлокировокСкладскихЯчеек.Размещение))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ОтборРазмещениеТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтбораРазмещенияТоваров.Отбор)
	|				ТОГДА ОтборРазмещениеТоваров.ЗонаОтгрузки
	|			ИНАЧЕ ОтборРазмещениеТоваров.ЗонаПриемки
	|		КОНЕЦ,
	|		БлокировкиСкладскихЯчеек.ТипБлокировки
	|	ИЗ
	|		Документ.ОтборРазмещениеТоваров КАК ОтборРазмещениеТоваров
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БлокировкиСкладскихЯчеек КАК БлокировкиСкладскихЯчеек
	|			ПО (ВЫБОР
	|					КОГДА ОтборРазмещениеТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтбораРазмещенияТоваров.Отбор)
	|						ТОГДА ОтборРазмещениеТоваров.ЗонаОтгрузки = БлокировкиСкладскихЯчеек.Ячейка
	|					КОГДА ОтборРазмещениеТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтбораРазмещенияТоваров.Размещение)
	|						ТОГДА ОтборРазмещениеТоваров.ЗонаПриемки = БлокировкиСкладскихЯчеек.Ячейка
	|				КОНЕЦ)
	|	ГДЕ
	|		ОтборРазмещениеТоваров.Ссылка = &Ссылка
	|		И (ОтборРазмещениеТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтбораРазмещенияТоваров.Размещение)
	|				ИЛИ ОтборРазмещениеТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтбораРазмещенияТоваров.Отбор))) КАК ЗаблокированныеЯчейки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаблокированныеЯчейки.Ячейка,
	|	ЗаблокированныеЯчейки.ТипБлокировки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ячейка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ТекстСообщения = НСтр("ru='Ячейка %Ячейка% заблокирована: тип блокировки ""%ТипБлокировки%""'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ячейка%", Выборка.Ячейка);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТипБлокировки%", Выборка.ТипБлокировки);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
	КонецЦикла;
	
КонецПроцедуры

Процедура ОчиститьФактическоеКоличествоВТЧ()
	
	Для Каждого СтрокаТЧ Из ТоварыОтбор Цикл
		СтрокаТЧ.КоличествоОтобрано 		= 0;
		СтрокаТЧ.КоличествоУпаковокОтобрано = 0;
	КонецЦикла;
	
	Для Каждого СтрокаТЧ Из ТоварыРазмещение Цикл
		СтрокаТЧ.КоличествоРазмещено 		 = 0;
		СтрокаТЧ.КоличествоУпаковокРазмещено = 0;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область КР_ДобавленныеПроцедурыИФункции

// << 31.10.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
Процедура КР_ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов)
	
	Статусы = Перечисления.СтатусыОтборовРазмещенийТоваров;
	СтатусПринятТовар = (Статус = Статусы.КР_ПринятТовар); 
	СтатусПринятКороб = (Статус = Статусы.КР_ПринятКороб);   
	СтатусТоварРазмещен = (Статус = Статусы.КР_ТоварРазмещен);

	ВидыОпераций = Перечисления.ВидыОперацийОтбораРазмещенияТоваров;
	ЭтоОтбор = (ВидОперации = ВидыОпераций.Отбор);
	ЭтоРазмещение = (ВидОперации = ВидыОпераций.Размещение);
	ЭтоПеремещение = (ВидОперации = ВидыОпераций.Перемещение);
	
	СкладМагазин = (Склад.КР_ВидСклада = Перечисления.КР_ВидыСкладов.Магазин); 
	
	МетаданныеОбъекта = Метаданные();
		
	СкладскиеГруппыБезУпаковок = КР_ДополнительныеНастройкиПовтИсп.МассивЗначений(
		"СкладскиеГруппыНоменклатурыБезУпаковок", Ложь);     
	//ШаблонОшибки = НСтр("ru = 'Не заполнена колонка ""Упаковка"" в строке %НомерСтроки% списка ""%ПредставлениеТЧ%""'");
	ШаблонОшибки = НСтр("ru = '%1 %2. Не заполнена колонка ""Упаковка"" в строке %3 списка ""%4""'"); //06.02.2024 Фомичев А.Е. КРОК JIRA№A2105505-2627
	
	Для Каждого ИмяТабличнойЧасти Из СтрРазделить("ТоварыОтбор,ТоварыРазмещение", ",") Цикл 
		
		МассивНепроверяемыхРеквизитов.Добавить(ИмяТабличнойЧасти +  ".Упаковка");
		ПредставлениеТЧ = МетаданныеОбъекта.ТабличныеЧасти[ИмяТабличнойЧасти].Синоним;
		
		// << 06.02.2024 Фомичев А.Е. КРОК JIRA№A2105505-2627
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТоварыОтбор.НомерСтроки КАК НомерСтроки,
		               |	ТоварыОтбор.Номенклатура КАК Номенклатура
		               |ПОМЕСТИТЬ T
		               |ИЗ
		               |	&ИсходнаяТаблица КАК ТоварыОтбор
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	T.НомерСтроки КАК НомерСтроки,
		               |	СпрНоменклатура.Наименование КАК Наименование,
		               |	СпрНоменклатура.Артикул КАК Артикул
		               |ИЗ
		               |	T КАК T
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		               |		ПО T.Номенклатура = СпрНоменклатура.Ссылка
		               |ГДЕ
		               |	НЕ СпрНоменклатура.СкладскаяГруппа В (&СкладскаяГруппа)";
		Запрос.УстановитьПараметр("ИсходнаяТаблица", ЭтотОбъект[ИмяТабличнойЧасти]);
		Запрос.УстановитьПараметр("СкладскаяГруппа", СкладскиеГруппыБезУпаковок);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонОшибки, Выборка.Артикул,
					Выборка.Наименование, Строка(Выборка.НомерСтроки), ПредставлениеТЧ);   
					
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
					ИмяТабличнойЧасти, Выборка.НомерСтроки, "Упаковка");
				
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , Поле, , Отказ);	
			
		КонецЦикла;	
		// >> 06.02.2024 Фомичев А.Е. КРОК JIRA№A2105505-2627
	КонецЦикла;
			
	Если Склад.КР_АдресныйСкладБезордернойОтгрузки
		И ЭтоОтбор Тогда 
		МассивНепроверяемыхРеквизитов.Добавить("ТоварыОтбор.КОтбору");	
		ПроверяемыеРеквизиты.Добавить("КоличествоОтобрано");
	КонецЕсли;	

	Если (СтатусПринятТовар Или СтатусПринятКороб)
		И ЭтоРазмещение Тогда 
		МассивНепроверяемыхРеквизитов.Добавить("ТоварыОтбор.Ячейка");	
		МассивНепроверяемыхРеквизитов.Добавить("ТоварыРазмещение.Ячейка");	
	КонецЕсли;	

	Если Не КР_ИспользоватьКороб
		// При следующих параметрах короб болжен создаться автомарически
		Или (ЭтоОтбор И СкладМагазин)	
		//
		Тогда 
		МассивНепроверяемыхРеквизитов.Добавить("КР_Короб");
	КонецЕсли;	
	
	Если Не Склад.ИспользоватьСкладскиеПомещения 
		Или СкладМагазин И ЭтоПеремещение Тогда 
		МассивНепроверяемыхРеквизитов.Добавить("Помещение");
	КонецЕсли;    
		
	Если Склад.НастройкаАдресногоХранения = Перечисления.НастройкиАдресногоХранения.НеИспользовать
		Или Склад.НастройкаАдресногоХранения = Перечисления.НастройкиАдресногоХранения.ОпределяетсяНастройкамиПомещения
		И Помещение.НастройкаАдресногоХранения <> Перечисления.НастройкиАдресногоХранения.ОпределяетсяНастройкамиПомещения
		Тогда 
		
		МассивНепроверяемыхРеквизитов.Добавить("ЗонаПриемки");
		
	КонецЕсли;
	
	Если ЭтоРазмещение
		И СтатусПринятКороб 
		И Не КР_ПотоварнаяПриемкаБезВскрытияКороба Тогда 

		МассивНепроверяемыхРеквизитов.Добавить("ТоварыРазмещение");
		
	КонецЕсли;
	
КонецПроцедуры // >> 31.10.2022 Марченко С.Н., КРОК, JIRA№A2105505-751

// << 31.10.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
Процедура КР_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)   
	
	Если Отказ
		Или Не КР_ПройденыПроверкиНаОграниченияПоПравам(Отказ, РежимЗаписи)
		Тогда    
		
		Возврат;
	КонецЕсли;	
	
	// << 01.06.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1499
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		КонтрольАссортиментаПройденУспешно = КР_ВыполнитьКонтрольАссортимента();
		Если Не КонтрольАссортиментаПройденУспешно Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	// >> 01.06.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1499
	
	Если ДополнительныеСвойства.Свойство("КР_СоздатьКороб") Тогда 
		КР_СоздатьКороб(РежимЗаписи);//	// << 07.02.2024 Фомичев А.Е., КРОК, JIRA№A2105505-2633	
	КонецЕсли;
	
	КР_УстановитьДатыПериодаВыполнения(РежимЗаписи);
	
	Если ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Отбор Тогда   
		
		Если Склад.КР_АдресныйСкладБезордернойОтгрузки Тогда 
			Для Каждого СтрокаДанных Из ТоварыОтбор Цикл  
				СтрокаДанных.КоличествоОтобрано = СтрокаДанных.Количество;
				СтрокаДанных.КоличествоУпаковокОтобрано = СтрокаДанных.КоличествоУпаковок;
			КонецЦикла;	
		КонецЕсли;
		
		КР_СинхронизироватьУдалениеКороба(РежимЗаписи);      
		
	КонецЕсли;
	
	Если ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Размещение Тогда    
		
		Если Склад.КР_АдресныйСкладБезордернойОтгрузки
			Или Склад.КР_ИспользоватьРазмещениеКакПриходныйОрдер Тогда 
			Для Каждого СтрокаДанных Из ТоварыРазмещение Цикл  
				СтрокаДанных.КоличествоРазмещено = СтрокаДанных.Количество;
				СтрокаДанных.КоличествоУпаковокРазмещено = СтрокаДанных.КоличествоУпаковок;
			КонецЦикла;	
		КонецЕсли;                             
		
		Если РежимЗаписи = РежимЗаписиДокумента.Проведение 
			И Не Ссылка.Проведен Тогда 
			
			КР_ЕслиПриемкаЗавершенаВызватьИсключение();	
			
		КонецЕсли;
		
	КонецЕсли;

	КР_ПроверитьНаСоответствиеИнформацииВКоробеИДокументе(Отказ, РежимЗаписи);
	
	// --> Евлахов Игорь Николаевич (Начало) 17.11.2023
	// Задача #3354 
	злКонтрольЗаполененияТаблицыТоварыРазмещение(Отказ, РежимЗаписи)
	// <-- Евлахов Игорь Николаевич (Конец) 17.11.2023
	
КонецПроцедуры // >> 31.10.2022 Марченко С.Н., КРОК, JIRA№A2105505-751

// << 07.12.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
Процедура КР_ПриЗаписи(Отказ)
	
КонецПроцедуры // >> 07.12.2022 Марченко С.Н., КРОК, JIRA№A2105505-751

// << 08.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
Функция КР_ЗапретИзмененияКоличестваРазмещенияПослеПриемки(Отказ)
	
	Запрос = Новый Запрос(КР_ТекстЗапросаЗапретИзмененияКоличестваРазмещенияПослеПриемки());
	Запрос.УстановитьПараметр("ТоварыРазмещение", ТоварыРазмещение);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Накладная", Распоряжение);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда 
		Возврат Истина;
	КонецЕсли;
	
	ШаблонОшибки = 
		НСтр("ru = 'Для номенклатуры %1, %2, %3, %4 указано количество %5 принятого на %6 %7. "
			+ "После установки даты завершения потоварной приемки, изменение товарного состава документов "
			+ """Размещение товаров"" запрещено'");
		
	ВыборкаОшибки = РезультатЗапроса.Выбрать();
	Пока ВыборкаОшибки.Следующий() Цикл   
		
		ТекстОшибки = СтрШаблон(ШаблонОшибки, 
			ВыборкаОшибки.Артикул, ВыборкаОшибки.Штрихкод, 
			ВыборкаОшибки.Номенклатура, ВыборкаОшибки.Характеристика,
			Формат(ВыборкаОшибки.БольшеЧемБыло, "БЛ=меньше; БИ=больше"), ВыборкаОшибки.Количество, 
			ВыборкаОшибки.ЕдиницаИзмерения);    
			
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, , , , Отказ);	
			
	КонецЦикла;	 
	
	Возврат Ложь;
	
КонецФункции // >> 08.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751

// << 08.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
Процедура КР_ЗаполнитьНаОснованииДокументаЗаказНаПеремещение(Основание)
	
	СкладОтправитель = Основание.СкладОтправитель;
	Если Не СкладОтправитель.КР_АдресныйСкладБезордернойОтгрузки
		Или Не Основание.Статус = Перечисления.СтатусыВнутреннихЗаказов.КВыполнению Тогда
		ТекстСообщения = НСтр("ru = 'Ввод на основании не возможен'");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Отбор;
	Распоряжение = Основание;
	Склад = СкладОтправитель;
	Помещение = Справочники.СкладскиеПомещения.КР_СкладскоеПомещениеСкладМагазина(Склад);
	ЗонаОтгрузки = Справочники.СкладскиеЯчейки.КР_СкладскаяЯчейкаОтгрузкиПоУмолчанию(Склад, Помещение);
	Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.ВыполненоБезОшибок;
	КР_ИспользоватьКороб = Истина;
	
КонецПроцедуры // >> 08.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751

// << 03.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
Процедура КР_ЗаполнитьНаОснованииДокументаПеремещениеТоваров(Основание)

	СкладПолучатель = Основание.СкладПолучатель;
	Если Не СкладПолучатель.КР_ИспользоватьРазмещениеКакПриходныйОрдер
		Или Не Основание.Статус = Перечисления.СтатусыПеремещенийТоваров.Принято Тогда
		ТекстСообщения = НСтр("ru = 'Ввод на основании не возможен'");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Распоряжение = Основание;
	
	КР_ЕслиПриемкаЗавершенаВызватьИсключение();	
	
	ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Размещение;
	Склад = СкладПолучатель;
	Помещение = Справочники.СкладскиеПомещения.КР_СкладскоеПомещениеСкладМагазина(Склад);
	ЗонаПриемки = Справочники.СкладскиеЯчейки.КР_СкладскаяЯчейкаПриемкиПоУмолчанию(Склад, Помещение);
	Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.КР_ПринятКороб;
	КР_ИспользоватьКороб = Истина;
	
КонецПроцедуры // >> 03.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751	

// << 03.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
Процедура КР_СинхронизироватьУдалениеКороба(РежимЗаписи)
	
	// Синхронизируем только отмену проведения и пометку удаления
	// При этом не берем во внимание то что короб может быть 
	//	сначала очищен (реквизит) а потом документ помечен на удаление  
	//	и другие крайние ситуации
	Если Не ЗначениеЗаполнено(КР_Короб) Тогда 
		Возврат;
	КонецЕсли;	  
	
	ДокументОбъект = КР_Короб.ПолучитьОбъект();
	Если ПометкаУдаления Тогда 
		ДокументОбъект.УстановитьПометкуУдаления(Истина);    
		ТекстСообщения = НСтр("ru = '%1 помечен на удаление'");
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда 
		ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);	
		ТекстСообщения = НСтр("ru = 'Отменено проведение документа %1'");
	Иначе
		Возврат;
	КонецЕсли;	                                                     
	
	ТекстСообщения = СтрШаблон(ТекстСообщения, КР_Короб);
	ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры // >> 03.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751	

// << 03.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
Процедура КР_ЕслиПриемкаЗавершенаВызватьИсключение()                       
	
	Отбор = Новый Структура("Накладная", Распоряжение);
	ЗначенияРесурсов = РегистрыСведений.КР_ПриемкаПеремещенийТоваров.Получить(Отбор);
	Если ЗначениеЗаполнено(ЗначенияРесурсов.ДатаПотоварнойПриемки)
		И Не Пользователи.ЭтоПолноправныйПользователь() Тогда 
		ТекстСообщения = НСтр("ru = 'Приемка товаров по документу %1 завершена %2. "
			+ "Изменение документов приемки заблокирован'"); 
		ТекстСообщения = СтрШаблон(ТекстСообщения,
			Распоряжение, ЗначенияРесурсов.ДатаПотоварнойПриемки);
		ВызватьИсключение ТекстСообщения;   
	КонецЕсли;		 
	
КонецПроцедуры // >> 03.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751	

// << 07.12.2022 Марченко С.Н., КРОК, JIRA№A2105505-751       
// вызывается из СкладыСервер.ПараметрыДляПроведенияДокумента
Функция КР_ДополнительныеУсловияДляКонтроляРегистраВыполняются(ИмяРегистра) Экспорт 
	
	Если ИмяРегистра = "ТоварыВЯчейках" Тогда 
		Возврат
			ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Отбор 
				И Склад.КР_АдресныйСкладБезордернойОтгрузки
			Или ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Размещение
				И Склад.КР_ИспользоватьРазмещениеКакПриходныйОрдер
			Или ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Перемещение
				И Склад.КР_АдресныйСкладБезордернойОтгрузки;
	КонецЕсли;
		
	Возврат Истина;
	
КонецФункции // >> 07.12.2022 Марченко С.Н., КРОК, JIRA№A2105505-751 

// << 03.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
Процедура КР_УстановитьДатыПериодаВыполнения(РежимЗаписи)                       
	
	// ДатаНачалаВыполнения
	Если Не ЗначениеЗаполнено(ДатаНачалаВыполнения) Тогда 
		
		Если ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Отбор Тогда   
			
			Если РежимЗаписи = РежимЗаписиДокумента.Запись
				И Склад.КР_АдресныйСкладБезордернойОтгрузки Тогда 
				
				ДатаНачалаВыполнения = ТекущаяДатаСеанса();
				
			КонецЕсли;
			
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Размещение Тогда   
			
			Если РежимЗаписи = РежимЗаписиДокумента.Проведение
				И Склад.КР_ИспользоватьРазмещениеКакПриходныйОрдер Тогда 
				
				ДатаНачалаВыполнения = ТекущаяДатаСеанса();
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;    
	
	// ДатаОкончанияВыполнения
	Если Не ЗначениеЗаполнено(ДатаОкончанияВыполнения)
		И РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда 
		
		Если ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Отбор Тогда   
			
			Если Склад.КР_АдресныйСкладБезордернойОтгрузки Тогда 
				
				ДатаОкончанияВыполнения = ТекущаяДатаСеанса();
				
			КонецЕсли;
			
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Размещение Тогда   
				
			Если Склад.КР_ИспользоватьРазмещениеКакПриходныйОрдер 
				И Не КР_ПотоварнаяПриемкаБезВскрытияКороба   
				И Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.КР_ТоварРазмещен	
				И (Склад.НастройкаАдресногоХранения = Перечисления.НастройкиАдресногоХранения.ЯчейкиОстатки
					Или (Склад.НастройкаАдресногоХранения = Перечисления.НастройкиАдресногоХранения.ОпределяетсяНастройкамиПомещения
					 И Помещение.НастройкаАдресногоХранения = Перечисления.НастройкиАдресногоХранения.ЯчейкиОстатки))			
				Тогда  

				ДатаОкончанияВыполнения = ТекущаяДатаСеанса();
				
			ИначеЕсли Склад.КР_ИспользоватьРазмещениеКакПриходныйОрдер 
				И Не КР_ПотоварнаяПриемкаБезВскрытияКороба   
				И Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.КР_ПринятТовар	
				И Не (Склад.НастройкаАдресногоХранения = Перечисления.НастройкиАдресногоХранения.ЯчейкиОстатки
					Или (Склад.НастройкаАдресногоХранения = Перечисления.НастройкиАдресногоХранения.ОпределяетсяНастройкамиПомещения
					 И Помещение.НастройкаАдресногоХранения = Перечисления.НастройкиАдресногоХранения.ЯчейкиОстатки))			
				Тогда 
				
				ДатаОкончанияВыполнения = ТекущаяДатаСеанса();
				
			ИначеЕсли КР_ПотоварнаяПриемкаБезВскрытияКороба 
				И Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.КР_ПринятКороб 
				Тогда 
				
				ДатаОкончанияВыполнения = ТекущаяДатаСеанса();
				
			КонецЕсли;
			
		КонецЕсли;
				
	КонецЕсли;
	
КонецПроцедуры // >> 03.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751	

// << 07.12.2022 Марченко С.Н., КРОК, JIRA№A2105505-751       
// вызывается из СкладыСервер.ПараметрыДляПроведенияДокумента
Функция КР_ПройденыПроверкиНаОграниченияПоПравам(Отказ, РежимЗаписи) 

	Если ВидОперации <> Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Размещение Тогда 
		Возврат Истина;
	КонецЕсли;	
	
	ЕстьОграничениеПоДобавлениюДокумента = РольДоступна("КР_ОграниченноеДобавлениеОтборовРазмещенийТоваров")
		И Не Пользователи.РолиДоступны("ДобавлениеИзменениеОтборовРазмещенийТоваров");   
		
	Если Не ЕстьОграничениеПоДобавлениюДокумента Тогда 
		Возврат Истина;
	КонецЕсли;	
	
	Если РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		ТекстСообщения = НСтр("ru = 'Не достаточно прав для отмены проведения документа'");	
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , , Отказ);
		Возврат Ложь;
	КонецЕсли;		
	
	Статусы = Перечисления.СтатусыОтборовРазмещенийТоваров;

	ПредыдущееСостояние = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "Статус, Проведен"); 
	ПредыдущееСостояниеПроведен = ЗначениеЗаполнено(Ссылка) И ПредыдущееСостояние.Проведен;
	
	Если Не ПредыдущееСостояниеПроведен 
		И РежимЗаписи = РежимЗаписиДокумента.Проведение
		И Не (Статус = Статусы.КР_ПринятКороб
			Или Статус = Статусы.КР_ПринятТовар) Тогда 
			
		ТекстСообщения = НСтр("ru = 'Первое проведение документа должно выполняться "
			+ "в статусе ""Принят короб"" или ""Принят товар""'");	
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , , Отказ);
		Возврат Ложь;
			
	КонецЕсли;	
	
	ПорядокСтатусов = Новый Массив;
	ПорядокСтатусов.Добавить(Статусы.КР_ПринятКороб);
	ПорядокСтатусов.Добавить(Статусы.КР_ПринятТовар);
	ПорядокСтатусов.Добавить(Статусы.КР_ТоварРазмещен);
	
	Если ПредыдущееСостояниеПроведен
		И ПорядокСтатусов.Найти(Статус) < ПорядокСтатусов.Найти(ПредыдущееСостояние.Статус) Тогда 
			
		ТекстСообщения = НСтр("ru = 'Не достаточно прав на понижение статуса документа'");	
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , , Отказ);
		Возврат Ложь;
		
	КонецЕсли;	
	
	Возврат КР_ЗапретИзмененияКоличестваРазмещенияПослеПриемки(Отказ);
	
КонецФункции // >> 07.12.2022 Марченко С.Н., КРОК, JIRA№A2105505-751 

// << 07.12.2022 Марченко С.Н., КРОК, JIRA№A2105505-751       
Процедура КР_ПроверитьНаСоответствиеИнформацииВКоробеИДокументе(Отказ, РежимЗаписи) 

	// Проверяем на соответствие информации в коробе и в ТЧ
	ЭтоОтбор = (ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Отбор);
	ЭтоРазмещение = (ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Размещение);  
	СтатусПринятТовар = (Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.КР_ПринятТовар);
	// << 26.10.2023 Марченко С.Н., КРОК, JIRA№A2105505-2449
	СтатусТоварРазмещен = (Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.КР_ТоварРазмещен);
	// >> 26.10.2023 Марченко С.Н., КРОК, JIRA№A2105505-2449
	
	Если Проведен 
		И КР_ИспользоватьКороб
		И ЗначениеЗаполнено(КР_Короб)                          
		И (ЭтоОтбор 
			Или (ЭтоРазмещение 
				И (СтатусПринятТовар 
					Или СтатусТоварРазмещен // A2105505-2449  
				)	
		)) Тогда 
		
		ТекстЗапроса = КР_ТекстЗапросаПроверитьСоответствиеТоварногоНаполеннияКоробу();
		Если ЭтоОтбор Тогда         
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИмяПоляКоличество%", "КоличествоОтобрано");
			ТоварыДокумента = ТоварыОтбор;
			ПредставлениеСписка = "Товары (отбор)";  
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИмяПоляКоличество%", "КоличествоРазмещено");
			ТоварыДокумента = ТоварыРазмещение;
			ПредставлениеСписка = "Товары (размещение)";
		КонецЕсли;

		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("ТоварыДокумента", ТоварыДокумента);
		Запрос.УстановитьПараметр("Короб", КР_Короб);
		РезультатЗапроса = Запрос.Выполнить();
		
		ШаблонОшибки = 
			НСтр("ru = 'В списке %1 для номенклатуры %2, %3, %4, %5 указано количество %6 чем в коробе на %7 %8'");
		
		ВыборкаОшибки = РезультатЗапроса.Выбрать();
		Пока ВыборкаОшибки.Следующий() Цикл   
			
			ТекстОшибки = СтрШаблон(ШаблонОшибки, 
				ПредставлениеСписка, ВыборкаОшибки.Артикул, ВыборкаОшибки.Штрихкод, 
				ВыборкаОшибки.Номенклатура, ВыборкаОшибки.Характеристика,
				Формат(ВыборкаОшибки.БольшеЧемВКоробе, "БЛ=меньше; БИ=больше"), ВыборкаОшибки.Количество, 
				ВыборкаОшибки.ЕдиницаИзмерения);    
				
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);	
			
		КонецЦикла;	 
		
	КонецЕсли;
	
КонецПроцедуры // >> 07.12.2022 Марченко С.Н., КРОК, JIRA№A2105505-751 

// << 31.10.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
Процедура КР_СоздатьКороб(РежимЗаписи)  

	// << 07.02.2024 Фомичев А.Е., КРОК, JIRA№A2105505-2633
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение И НЕ ЗначениеЗаполнено(Ссылка) Тогда
		ГУИД_ОтборРазмещениеТоваров = (Новый УникальныйИдентификатор());
		Ссылка_ОтборРазмещениеТоваров = Документы.ОтборРазмещениеТоваров.ПолучитьСсылку(ГУИД_ОтборРазмещениеТоваров);
		УстановитьСсылкуНового(Ссылка_ОтборРазмещениеТоваров);
		// --> Евлахов Игорь Николаевич (Начало) 02.04.2024
		// Задача #3947
		УстановитьНовыйНомер();
		// <-- Евлахов Игорь Николаевич (Конец) 02.04.2024
	Иначе 
		ГУИД_ОтборРазмещениеТоваров = Ссылка.УникальныйИдентификатор(); 
	КонецЕсли; 
	
	ДокументОбъект = Документы.УпаковочныйЛист.СоздатьДокумент(); 
	КР_Короб = Документы.УпаковочныйЛист.ПолучитьСсылку(Новый УникальныйИдентификатор(ГУИД_ОтборРазмещениеТоваров));
	ДокументОбъект.УстановитьСсылкуНового(КР_Короб); 
	//ДокументОбъект = Документы.УпаковочныйЛист.СоздатьДокумент(); 
	//ДокументОбъект.УстановитьСсылкуНового(КР_Короб); 
	// >> 07.02.2024 Фомичев А.Е., КРОК, JIRA№A2105505-2633

	// --> Евлахов Игорь Николаевич (Начало) 02.04.2024
	// Задача #3947 
	Если ЗначениеЗаполнено(ЭтотОбъект.Дата) Тогда
		СтрокаГод = Формат(ЭтотОбъект.Дата, "ДФ=гггг");
	Иначе
		СтрокаГод = Формат(ТекущаяДатаСеанса(), "ДФ=гггг");
	КонецЕсли;
	
	ДокументОбъект.злНомерОтбора = ЭтотОбъект.Номер + " " + СтрокаГод;
	// <-- Евлахов Игорь Николаевич (Конец) 02.04.2024
	ДокументОбъект.Дата = ТекущаяДатаСеанса();
	ДокументОбъект.Вид = Перечисления.ВидыУпаковочныхЛистов.Исходящий;
	ДокументОбъект.СкладУпаковки = Склад;  
	
	//A2105505-1736
	ДокументОбъект.КР_ДокументОснование = Распоряжение;
	//
	
	ТоварыСвернуто = ТоварыОтбор.Выгрузить( , "Номенклатура,Характеристика,Серия,Назначение,Количество,КоличествоУпаковок"); 
	ТоварыСвернуто.Свернуть("Номенклатура,Характеристика,Серия,Назначение", "Количество,КоличествоУпаковок");
	Для Каждого СтрокаДанных Из ТоварыСвернуто Цикл 
		
		НоваяСтрока = ДокументОбъект.Товары.Добавить(); 
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных);
		НоваяСтрока.Количество = СтрокаДанных.Количество;
		НоваяСтрока.КоличествоУпаковок = СтрокаДанных.КоличествоУпаковок;    
		НоваяСтрока.Упаковка = Неопределено;    

	КонецЦикла;	

	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры // >> 31.10.2022 Марченко С.Н., КРОК, JIRA№A2105505-751

// << 01.06.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1499
Функция КР_ВыполнитьКонтрольАссортимента()
	
	ТребуетсяВыполнитьКонтрольАссортиментаПоСкладу = КР_ТребуетсяВыполнитьКонтрольАссортиментаПоСкладу();
	Если Не ТребуетсяВыполнитьКонтрольАссортиментаПоСкладу Тогда
		Возврат Истина;
	КонецЕсли;
	ТаблицаДляАнализа = КР_ПолучитьТаблицуДляАнализаКонтрольАссортимента();
	
	Если ТаблицаДляАнализа.Количество() = 0 Тогда
		// Нет данных для анализа - контроль пройден
		Возврат Истина;
	КонецЕсли;
	
	ДанныеАссортиментДокумента = КР_ФорматыМагазиновИАналогиНоменклатуры.ПолучитьАссортиментМагазина(Склад,
		Дата, Ложь, Ложь, ТаблицаДляАнализа);
		
	ЕстьЗапрещеннаяКОтрузкеПозиции = Ложь;
	Шаблон = НСтр("ru='%1, %2%3 не разрешены к продаже, %4.'");
	КомментарийИзменененияПостоянныйАссортимент		= НСтр("ru='и сотрудник магазина не может этого изменить'");
	КомментарийИзменененияНеПостоянныйАссортимент	= НСтр("ru='но сотрудник магазина может установить такое разрешение'");
	
	Для Каждого СтрокаАнализа Из ТаблицаДляАнализа Цикл
		
		СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаАнализа);
		МассивСтрок = ДанныеАссортиментДокумента.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрок.Количество() = 0 Тогда
			// Если данных по строке нет, выводим ошибку аналогичную, если бы продажи были запрещены
			// и ассортимент являлся бы постоянным
			ТекущаяРольАссортимента = Перечисления.РолиАссортимента.ПостоянныйАссортимент;
			ТекущийАртикул			= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаАнализа.Номенклатура, "Артикул");
		Иначе
			СтрокаДанных = МассивСтрок[0];
			Если СтрокаДанных.РазрешеныПродажи Тогда
				Продолжить;
			КонецЕсли;
			ТекущийАртикул			= СтрокаДанных.Артикул;
			ТекущаяРольАссортимента = СтрокаДанных.РольАссортимента;
		КонецЕсли;
		
		Если ТекущаяРольАссортимента = Перечисления.РолиАссортимента.ПостоянныйАссортимент Тогда
			КомментарийИзмененения = КомментарийИзменененияПостоянныйАссортимент;
		Иначе
			КомментарийИзмененения = КомментарийИзменененияНеПостоянныйАссортимент;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаАнализа.Характеристика) Тогда
			ПредставлениеХарактеристики = ", " + СтрокаАнализа.Характеристика;
		Иначе
			ПредставлениеХарактеристики = "";
		КонецЕсли;
		Сообщение = СтрШаблон(Шаблон, СтрокаАнализа.Номенклатура, ТекущийАртикул, ПредставлениеХарактеристики, КомментарийИзмененения);
		ОбщегоНазначения.СообщитьПользователю(Сообщение, , , , ЕстьЗапрещеннаяКОтрузкеПозиции);
	КонецЦикла;
	
	Если Не ЕстьЗапрещеннаяКОтрузкеПозиции Тогда
		Возврат Истина;
	КонецЕсли;
	
	ЭтоПолноправныйПользователь = Пользователи.ЭтоПолноправныйПользователь();
	РезультатКонтроля = ЭтоПолноправныйПользователь;
	
	Возврат РезультатКонтроля;
	
КонецФункции // >> 01.06.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1499

// << 01.06.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1499
Функция КР_ТребуетсяВыполнитьКонтрольАссортиментаПоСкладу()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИсторияФорматов.КонтролироватьАссортимент КАК КонтролироватьАссортимент
		|ИЗ
		|	РегистрСведений.ИсторияИзмененияФорматовМагазинов.СрезПоследних(, Склад = &Склад) КАК ИсторияФорматов";
	
	Запрос.УстановитьПараметр("Склад", Склад);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();
	Возврат ВыборкаДетальныеЗаписи.КонтролироватьАссортимент;
	
КонецФункции // >> 01.06.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1499

// << 01.06.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1499
Функция КР_ПолучитьТаблицуДляАнализаКонтрольАссортимента()
	
	ТаблицаДляАнализа = Новый ТаблицаЗначений;
	ТаблицаДляАнализа.Колонки.Добавить("Номенклатура",
		Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаДляАнализа.Колонки.Добавить("Характеристика",
		Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	
	Для Каждого СтрокаТоварРазмещение Из ТоварыРазмещение Цикл
		
		ТипПомещения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТоварРазмещение.Ячейка, "Помещение.КР_ТипСкладскогоПомещения");
		Если ТипПомещения <> Перечисления.КР_ТипыСкладскихПомещений.ТорговыйЗал Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрока = ТаблицаДляАнализа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТоварРазмещение);
		
	КонецЦикла;
	
	ТаблицаДляАнализа.Свернуть("Номенклатура, Характеристика");
	
	Возврат ТаблицаДляАнализа;
	
КонецФункции // >> 01.06.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1499

// << 21.06.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1499
Процедура КР_РазместитьТовары(ИмяИсточника)
	
	Если ИмяИсточника <> "ТоварыРазмещение" Тогда
		Возврат;
	КонецЕсли;
	
	СкладМагазина = Справочники.СкладскиеПомещения.КР_СкладскоеПомещениеСкладМагазина(Склад, Дата);
	
	Если Не Помещение = СкладМагазина Тогда
		Возврат;
	КонецЕсли;
	
	ЯчейкаТорговогоЗала = Справочники.СкладскиеЯчейки.КР_ПолучитьЯчейкуТорговогоЗала(Склад, Истина);
	Если Не ЗначениеЗаполнено(ЯчейкаТорговогоЗала) Тогда
		Возврат;
	КонецЕсли;
	
	ДеревоРезультат = Неопределено;
	КР_ФорматыМагазиновИАналогиНоменклатуры.ПолучитьОсновныеДанные(ДеревоРезультат, Склад, , ,
		// << 04.08.2023 Марченко С.Н., КРОК, JIRA№A2105505-2068
		, Ложь   
		// >> 04.08.2023 Марченко С.Н., КРОК, JIRA№A2105505-2068
	);
	
	ВыгрузкаТоварыРазмещение = ТоварыРазмещение.Выгрузить(, "Номенклатура, Характеристика, Количество");
	ВыгрузкаТоварыРазмещение.Свернуть("Номенклатура, Характеристика", "Количество");
	
	Для Каждого СтрокаРазмещения Из ВыгрузкаТоварыРазмещение Цикл
		
		Если СтрокаРазмещения.Количество <= 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Номенклатура", 	СтрокаРазмещения.Номенклатура);
		СтруктураПоиска.Вставить("Характеристика", 	СтрокаРазмещения.Характеристика);
		МассивСтрок = ДеревоРезультат.Строки.НайтиСтроки(СтруктураПоиска, Истина);
		ПотребностьВЗалеПоПозиции = 0;
		Для Каждого НайденнаяСтрока Из МассивСтрок Цикл
			ПотребностьВЗалеПоПозиции = ПотребностьВЗалеПоПозиции + НайденнаяСтрока.ПереместитьВЗал;
		КонецЦикла;
		
		Если ПотребностьВЗалеПоПозиции > 0 Тогда
			
			КР_ОбработатьСтрокуРазмещения(СтруктураПоиска, ПотребностьВЗалеПоПозиции, ЯчейкаТорговогоЗала);
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Возможна ситуация, когда несколько строк с разными ячейками, после смены ячейки на ячейку торгового зала, 
	// стали полностью идентичными. Поэтому дополнительно свернем ТЧ.
	СтрокаНечисловыхРеквизитовТЧ = "Номенклатура, Упаковка, Характеристика, Назначение, Ячейка, ОбъемУпаковки, "
	+ "ВесУпаковки, Серия, СтатусУказанияСерий";
	СтрокаЧисловыхРеквизитовТЧ = "Количество, КоличествоРазмещено, КоличествоУпаковок, КоличествоУпаковокРазмещено";
	ТоварыРазмещение.Свернуть(СтрокаНечисловыхРеквизитовТЧ, СтрокаЧисловыхРеквизитовТЧ);
	
КонецПроцедуры // >> 21.06.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1499

// << 21.06.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1499
Процедура КР_ОбработатьСтрокуРазмещения(СтруктураПоиска, ПотребностьВЗалеПоПозиции, ЯчейкаТорговогоЗала)
	
	МассивСтрок 		= ТоварыРазмещение.НайтиСтроки(СтруктураПоиска);
	КоличествоСтрок		= МассивСтрок.Количество();
	ИндексТекущейСтроки = КоличествоСтрок - 1;
	
	// Обойдем таблицу с конца, чтобы в первую очередь сменить ячейку для позиций более низкого приоритета
	Пока ИндексТекущейСтроки >= 0 Цикл
		
		ТекущаяСтрокаРазмещение = МассивСтрок[ИндексТекущейСтроки];
		ИндексТекущейСтроки = ИндексТекущейСтроки - 1;
		
		Если ПотребностьВЗалеПоПозиции = 0 Тогда
			Прервать;
		КонецЕсли;
		
		Если ТекущаяСтрокаРазмещение.Количество <= ПотребностьВЗалеПоПозиции Тогда
			
			ТекущаяСтрокаРазмещение.Ячейка 	= ЯчейкаТорговогоЗала;
			ПотребностьВЗалеПоПозиции 		= ПотребностьВЗалеПоПозиции - ТекущаяСтрокаРазмещение.Количество;
			
		Иначе
			
			// Если строка имеет количество больше, чем потребность, то разобьем её на две части
			НоваяСтрока = ТоварыРазмещение.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрокаРазмещение);
			НоваяСтрока.Ячейка 	= ЯчейкаТорговогоЗала;
			
			// Обработаем возможный случай, когда упаковка имеет коээфициент не равный 1
			КоэффициентУпаковки = Окр(ТекущаяСтрокаРазмещение.Количество / ТекущаяСтрокаРазмещение.КоличествоУпаковок, 3);
			КоличествоУпаковокДляУменьшения = Цел(ПотребностьВЗалеПоПозиции / КоэффициентУпаковки);
			КоличествоДляУменьшения			= КоличествоУпаковокДляУменьшения * КоэффициентУпаковки;
			
			ТекущаяСтрокаРазмещение.КоличествоУпаковок 	= ТекущаяСтрокаРазмещение.КоличествоУпаковок 
				- КоличествоУпаковокДляУменьшения;
			ТекущаяСтрокаРазмещение.Количество 			= ТекущаяСтрокаРазмещение.Количество 
				- КоличествоДляУменьшения;
			НоваяСтрока.КоличествоУпаковок				= КоличествоУпаковокДляУменьшения;
			НоваяСтрока.Количество						= КоличествоДляУменьшения;
			ПотребностьВЗалеПоПозиции 					= ПотребностьВЗалеПоПозиции - КоличествоДляУменьшения;
			
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры // >> 21.06.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1499

#Область ТекстыЗапросов

// << 07.12.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
Функция КР_ТекстЗапросаПроверитьСоответствиеТоварногоНаполеннияКоробу()
	
	Возврат
	"ВЫБРАТЬ
	|	Т.Номенклатура КАК Номенклатура,
	|	Т.Характеристика КАК Характеристика,
	|	Т.%ИмяПоляКоличество% КАК Количество
	|ПОМЕСТИТЬ ТоварыДокумента
	|ИЗ
	|	&ТоварыДокумента КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Номенклатура КАК Номенклатура,
	|	Т.Характеристика КАК Характеристика,
	|	Т.Количество КАК Количество
	|ПОМЕСТИТЬ ИсходныеДанные
	|ИЗ
	|	ТоварыДокумента КАК Т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Т.Номенклатура,
	|	Т.Характеристика,
	|	-Т.Количество
	|ИЗ
	|	Документ.УпаковочныйЛист.Товары КАК Т
	|ГДЕ
	|	Т.Ссылка = &Короб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Номенклатура КАК Номенклатура,
	|	Т.Характеристика КАК Характеристика,
	|	СУММА(Т.Количество) КАК Разница
	|ПОМЕСТИТЬ Расхождения
	|ИЗ
	|	ИсходныеДанные КАК Т
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Номенклатура,
	|	Т.Характеристика
	|
	|ИМЕЮЩИЕ
	|	СУММА(Т.Количество) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура,
	|	ШтрихкодыНоменклатуры.Характеристика КАК Характеристика,
	|	МАКСИМУМ(ШтрихкодыНоменклатуры.Штрихкод) КАК Штрихкод
	|ПОМЕСТИТЬ Штрихкоды
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Расхождения КАК Расхождения
	|		ПО ШтрихкодыНоменклатуры.Номенклатура = Расхождения.Номенклатура
	|			И ШтрихкодыНоменклатуры.Характеристика = Расхождения.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	ШтрихкодыНоменклатуры.Номенклатура,
	|	ШтрихкодыНоменклатуры.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Расхождения.Номенклатура КАК Номенклатура,
	|	Расхождения.Номенклатура.Артикул КАК Артикул,
	|	ЕСТЬNULL(Штрихкоды.Штрихкод, """") КАК Штрихкод,
	|	Расхождения.Характеристика КАК Характеристика,
	|	Расхождения.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Расхождения.Разница > 0 КАК БольшеЧемВКоробе,
	|	ВЫБОР
	|		КОГДА Расхождения.Разница > 0
	|			ТОГДА Расхождения.Разница
	|		ИНАЧЕ -Расхождения.Разница
	|	КОНЕЦ КАК Количество
	|ИЗ
	|	Расхождения КАК Расхождения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Штрихкоды КАК Штрихкоды
	|		ПО Расхождения.Номенклатура = Штрихкоды.Номенклатура
	|			И Расхождения.Характеристика = Штрихкоды.Характеристика";
	
КонецФункции // >> 07.12.2022 Марченко С.Н., КРОК, JIRA№A2105505-751 

// << 07.12.2023 Марченко С.Н., КРОК, JIRA№A2105505-751
Функция КР_ТекстЗапросаЗапретИзмененияКоличестваРазмещенияПослеПриемки()
	
	Возврат
	"ВЫБРАТЬ
	|	Т.Номенклатура КАК Номенклатура,
	|	Т.Характеристика КАК Характеристика,
	|	Т.Серия КАК Серия,
	|	Т.Назначение КАК Назначение,
	|	Т.Количество КАК Количество
	|ПОМЕСТИТЬ ТоварыРазмещение
	|ИЗ
	|	&ТоварыРазмещение КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИСТИНА КАК Значение
	|ПОМЕСТИТЬ ЕстьПриемка
	|ИЗ
	|	РегистрСведений.КР_ПриемкаПеремещенийТоваров КАК Т
	|ГДЕ
	|	Т.Накладная = &Накладная 
	|	И Т.ДатаПотоварнойПриемки <> ДАТАВРЕМЯ(1, 1, 1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Номенклатура КАК Номенклатура,
	|	Т.Характеристика КАК Характеристика,
	|	Т.Серия КАК Серия,
	|	Т.Назначение КАК Назначение,
	|	Т.Количество КАК Количество
	|ПОМЕСТИТЬ ИсходныеДанные
	|ИЗ
	|	ТоварыРазмещение КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЕстьПриемка КАК Отбор
	|		ПО (Отбор.Значение)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Т.Номенклатура,
	|	Т.Характеристика,
	|	Т.Серия,
	|	Т.Назначение,
	|	-Т.Количество
	|ИЗ
	|	Документ.ОтборРазмещениеТоваров.ТоварыРазмещение КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЕстьПриемка КАК Отбор
	|		ПО (Отбор.Значение)
	|ГДЕ
	|	Т.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Номенклатура КАК Номенклатура,
	|	Т.Характеристика КАК Характеристика,
	|	Т.Серия КАК Серия,
	|	Т.Назначение КАК Назначение,
	|	СУММА(Т.Количество) КАК Разница
	|ПОМЕСТИТЬ Расхождения
	|ИЗ
	|	ИсходныеДанные КАК Т
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Номенклатура,
	|	Т.Характеристика,
	|	Т.Серия,
	|	Т.Назначение
	|
	|ИМЕЮЩИЕ
	|	СУММА(Т.Количество) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура,
	|	ШтрихкодыНоменклатуры.Характеристика КАК Характеристика,
	|	МАКСИМУМ(ШтрихкодыНоменклатуры.Штрихкод) КАК Штрихкод
	|ПОМЕСТИТЬ Штрихкоды
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Расхождения КАК Расхождения
	|		ПО ШтрихкодыНоменклатуры.Номенклатура = Расхождения.Номенклатура
	|			И ШтрихкодыНоменклатуры.Характеристика = Расхождения.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	ШтрихкодыНоменклатуры.Номенклатура,
	|	ШтрихкодыНоменклатуры.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Номенклатура КАК Номенклатура,
	|	Т.Номенклатура.Артикул КАК Артикул,
	|	ЕСТЬNULL(Штрихкоды.Штрихкод, """") КАК Штрихкод,
	|	Т.Характеристика КАК Характеристика,
	|	Т.Серия КАК Серия,
	|	Т.Назначение КАК Назначение,
	|	Т.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Т.Разница > 0 КАК БольшеЧемБыло,
	|	ВЫБОР
	|		КОГДА Т.Разница > 0
	|			ТОГДА Т.Разница
	|		ИНАЧЕ -Т.Разница
	|	КОНЕЦ КАК Количество
	|ИЗ
	|	Расхождения КАК Т
	|		ЛЕВОЕ СОЕДИНЕНИЕ Штрихкоды КАК Штрихкоды
	|		ПО Т.Номенклатура = Штрихкоды.Номенклатура
	|			И Т.Характеристика = Штрихкоды.Характеристика";
	
КонецФункции // >> 07.12.2022 Марченко С.Н., КРОК, JIRA№A2105505-751 

// << 10.02.2022 Марченко С.Н., КРОК, JIRA№A2105505-487
Процедура КР_ПриКопировании(ОбъектКопирования)    
	
	КР_ИдентификаторСистемыИсточника = Неопределено;
	
КонецПроцедуры // >> 10.02.2023 Марченко С.Н., КРОК, JIRA№A2105505-487

// << 29.11.2023 Марченко С.Н., КРОК, JIRA№A2105505-2540
Процедура КР_ПроверитьОчиститьЗаполнениеЯчеекОднозначноеРазмещение(СтруктураВозврата)
	
	// Заполним группировки чтоб потом запросом можно было по ним сгруппировать
	// При этом в этом списке будут все поля кроме суммовых и поля "Ячейка, код"
	ИменаКолонокГруппировки = Новый Массив;    
	
	// Суммовые колонки (начинаются с "Количество..") 
	ПрефиксИмениКолонкиКоличество = "Количество";
	ИменаСуммовыхКолонок = Новый Массив;
	
	СуммированиеСуммовыхКолонок = Новый Массив;
	
	ШаблонПоля = "Т.%1";
	ШаблонСуммирования = "СУММА(Т.%1) КАК %1";
	Для Каждого Колонка Из СтруктураВозврата.ТаблицаРезультатов.Колонки Цикл 
		
		ИмяКолонки = Колонка.Имя;
		Если ИмяКолонки = "Ячейка"
			Или ИмяКолонки = "Код" Тогда 
			Продолжить;
		ИначеЕсли Не СтрНачинаетсяС(ИмяКолонки, ПрефиксИмениКолонкиКоличество) Тогда 
			ИменаКолонокГруппировки.Добавить(СтрШаблон(ШаблонПоля, ИмяКолонки));
		Иначе 	
			ИменаСуммовыхКолонок.Добавить(СтрШаблон(ШаблонПоля, ИмяКолонки));   
			СуммированиеСуммовыхКолонок.Добавить(СтрШаблон(ШаблонСуммирования, ИмяКолонки));
		КонецЕсли;	
		
	КонецЦикла;	
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Т.Ячейка КАК Ячейка,
	|	%ИменаКолонокГруппировки%,
	|	%ИменаСуммовыхКолонок%
	|ПОМЕСТИТЬ ИсходныеДанные
	|ИЗ
	|	&ИсходныеДанные КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Выберем данные по Номенкратура/Характеристика количеству ячеек > 1
	|
	|ВЫБРАТЬ
	|	Т.Номенклатура,
	|	Т.Характеристика
	|ПОМЕСТИТЬ НесколькоЯчеек
	|ИЗ
	|	ИсходныеДанные КАК Т
	|
	|СГРУППИРОВАТЬ ПО 
	|	Т.Номенклатура,
	|	Т.Характеристика
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Т.Ячейка) > 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Очистим ячейки номенклатуры у которой несколько ячеек
	|
	|ВЫБРАТЬ
	|	ВЫБОР 
	|		КОГДА НЯ.Номенклатура ЕСТЬ NULL
	|			ТОГДА Т.Ячейка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СкладскиеЯчейки.ПустаяСсылка)
	|	КОНЕЦ КАК Ячейка,
	|	%ИменаКолонокГруппировки%,
	|	%ИменаСуммовыхКолонок%
	|ПОМЕСТИТЬ ОчисткаЯчеекОтДублей
	|ИЗ
	|	ИсходныеДанные КАК Т
	|		ЛЕВОЕ СОЕДИНЕНИЕ НесколькоЯчеек НЯ
	|		ПО Т.Номенклатура = НЯ.Номенклатура
	|		И Т.Характеристика = НЯ.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Сгруппируем данные
	|
	|ВЫБРАТЬ
	|	Т.Ячейка,
	|	%ИменаКолонокГруппировки%,
	|	%СуммированиеСуммовыхКолонок%
	|ИЗ
	|	ОчисткаЯчеекОтДублей КАК Т
	|
	|СГРУППИРОВАТЬ ПО 
	|	Т.Ячейка,
	|	%ИменаКолонокГруппировки%";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
		"%ИменаКолонокГруппировки%", СтрСоединить(ИменаКолонокГруппировки, "," + Символы.ПС + Символы.Таб));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
		"%ИменаСуммовыхКолонок%", СтрСоединить(ИменаСуммовыхКолонок, "," + Символы.ПС + Символы.Таб));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
		"%СуммированиеСуммовыхКолонок%", СтрСоединить(СуммированиеСуммовыхКолонок, "," + Символы.ПС + Символы.Таб));
	Запрос = Новый Запрос(ТекстЗапроса); 
	Запрос.УстановитьПараметр("ИсходныеДанные", СтруктураВозврата.ТаблицаРезультатов);
	РезультатЗапроса = Запрос.Выполнить();            
	
	СтруктураВозврата.ТаблицаРезультатов.Очистить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
		
		ИсключитьИзЗаполненияКолонки = Неопределено;
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Ячейка) Тогда 
			НоваяСтрока = СтруктураВозврата.ТаблицаРезультатов.Добавить();
		Иначе
			НоваяСтрока = СтруктураВозврата.ТаблицаОшибок.Добавить();  
			Если Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Упаковка) Тогда 
				ИсключитьИзЗаполненияКолонки = "КоличествоУпаковок"; 
			КонецЕсли;	
		КонецЕсли;	
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи, , ИсключитьИзЗаполненияКолонки);
		
	КонецЦикла;
	
	СтруктураВозврата.ТаблицаОшибок.Свернуть(
		"Распоряжение,Номенклатура,Характеристика,Серия,Назначение,Упаковка", "Количество,КоличествоУпаковок");
	
КонецПроцедуры // >> 29.11.2023 Марченко С.Н., КРОК, JIRA№A2105505-2540

#КонецОбласти

#КонецОбласти

#Область злСлужебныеПроцедурыИФункции

// --> Евлахов Игорь Николаевич (Начало) 17.11.2023
// Задача #3354
Процедура злКонтрольЗаполененияТаблицыТоварыРазмещение(Отказ, РежимЗаписи)
			
	Если РежимЗаписи <> РежимЗаписиДокумента.Проведение Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтотОбъект.ВидОперации <> Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Перемещение Тогда
		Возврат;
	КонецЕсли; 
	
	МассивЯчеек = ЭтотОбъект.ТоварыРазмещение.ВыгрузитьКолонку("Ячейка"); 
	
	Запрос = Новый Запрос;
	
	#Область ТекстЗапроса
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА СкладскиеПомещения.КР_ТипСкладскогоПомещения ЕСТЬ NULL
	               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.КР_ТипыСкладскихПомещений.ПустаяСсылка)
	               |		ИНАЧЕ СкладскиеПомещения.КР_ТипСкладскогоПомещения
	               |	КОНЕЦ КАК ТипПомещения
	               |ИЗ
	               |	Справочник.СкладскиеЯчейки КАК СкладскиеЯчейки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СкладскиеПомещения КАК СкладскиеПомещения
	               |		ПО СкладскиеЯчейки.Помещение = СкладскиеПомещения.Ссылка
	               |ГДЕ
	               |	СкладскиеЯчейки.Ссылка В(&МассивЯчеек)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВЫБОР
	               |		КОГДА СкладскиеПомещения.КР_ТипСкладскогоПомещения ЕСТЬ NULL
	               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.КР_ТипыСкладскихПомещений.ПустаяСсылка)
	               |		ИНАЧЕ СкладскиеПомещения.КР_ТипСкладскогоПомещения
	               |	КОНЕЦ";
	
	#КонецОбласти
	
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("МассивЯчеек", МассивЯчеек);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() > 1 Тогда
		Если ЭтотОбъект.ЭтоНовый() Тогда
			ТекстСообщения = НСтр("ru = 'Документ содержит ячейки из разных помещений. Документ не будет проведен.'");
		Иначе
			ТекстШаблона = НСтр("ru = '%1 содержит ячейки из разных помещений. Документ не будет проведен.'");
			ТекстСообщения = СтрШаблон(ТекстШаблона, СокрЛП(ЭтотОбъект.Ссылка));
		КонецЕсли;
		
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры
// <-- Евлахов Игорь Николаевич (Конец) 17.11.2023

#КонецОбласти

#КонецЕсли