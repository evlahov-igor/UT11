#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("СуммыДокументовВВалютахУчета");
	МеханизмыДокумента.Добавить("УчетНДС");
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка - ссылка на документ, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов:
//     * Таблица<ИмяРегистра> - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Запрос			= Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		////////////////////////////////////////////////////////////////////////////
		// Создадим запрос инициализации движений
		
		ЗаполнитьПараметрыИнициализации(Запрос, Документ);
		
		////////////////////////////////////////////////////////////////////////////
		// Сформируем текст запроса
		СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса, Регистры);
		
		ТекстЗапросаТаблицаНДСЗаписиКнигиПокупок(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДвиженияПоНДС(Запрос, ТекстыЗапроса, Регистры);
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	БизнесПроцессы.Задание.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Запись книги покупок".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.ЗаписьКнигиПокупок) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ЗаписьКнигиПокупок.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ЗаписьКнигиПокупок);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ФормироватьОтчетностьПоНДС";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

КонецПроцедуры


// Возвращает представление счета-фактуры с учетом состояния проведения.
//
// Параметры:
// 	Номер - Строка - Номер счета-фактуры.
// 	Дата - Дата - Дата счета-фактуры.
// 	Проведен - Булево - Признак проведения документа.
//
Функция ПредставлениеЗаписиКнигиПокупок(Номер, Дата, Проведен) Экспорт
	
	МассивПодстрок = Новый Массив;
	МассивПодстрок.Добавить(СтрШаблон(НСтр("ru='Запись книги покупок № %1 от %2 г.'"), СокрЛП(Номер), Формат(Дата, "ДЛФ=D")));
	Если Не Проведен Тогда
		МассивПодстрок.Добавить(НСтр("ru='(не проведен)'"));
	КонецЕсли;
	
	Возврат СтрСоединить(МассивПодстрок, " ");
	
КонецФункции

// Функция находит записи книги покупок, созданные на основании документа.
//
// Параметры:
//	ДокументОснование - ДокументСсылка - Документ, для которого необходимо найти запись книги покупок;
//	Организация - СправочникСсылка.Организации - Организация, для которой формируется запись книги покупок;
//	Проведен - Булево - Поиск только проведенных документов.
//
// Возвращаемое значение:
//	ТаблицаДокументов - Таблица найденных документов.
//
Функция ЗаписиКнигиПокупокПоОснованию(ДокументОснование, Организация = Неопределено, Проведен = Истина) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаписьКнигиПокупок.Ссылка КАК Ссылка,
	|	ЗаписьКнигиПокупок.Дата КАК Дата,
	|	ЗаписьКнигиПокупок.Номер КАК Номер,
	|	ЗаписьКнигиПокупок.Проведен КАК Проведен
	|
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок КАК ЗаписьКнигиПокупок
	|ГДЕ
	|	ЗаписьКнигиПокупок.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И ЗаписьКнигиПокупок.ДокументОснование = &ДокументОснование
	|	И (ЗаписьКнигиПокупок.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|";
	Запрос.УстановитьПараметр("ДокументОснование",   ДокументОснование);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Если Проведен Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПометкаУдаления = ЛОЖЬ", "Проведен");
	КонецЕсли;
	
	ТаблицаДокументов = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаДокументов;
	
КонецФункции


#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Документы.ЗаписьКнигиПокупок.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.5.6.25";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("6140ec47-ac40-4459-b909-62b28725f0cb");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаписьКнигиПокупок.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Заполняет реквизит ""Ставка НДС""
	|Заполняет реквизит табличных частей ""Настройка счетов учета"".'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.ЗаписьКнигиПокупок.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Справочники.СтавкиНДС.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Документы.ЗаписьКнигиПокупок.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.Документы.ЗаписьКнигиПокупок.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");

КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаОбъектов = "Документ.ЗаписьКнигиПокупок";
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Дата УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Дата УБЫВ");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиСсылки();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаписьКнигиПокупок.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок КАК ЗаписьКнигиПокупок
	|ГДЕ
	|	ИСТИНА В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				Документ.ЗаписьКнигиПокупок.Ценности КАК ЗаписьКнигиПокупокЦенности
	|			ГДЕ
	|				ЗаписьКнигиПокупок.Ссылка = ЗаписьКнигиПокупокЦенности.Ссылка
	|				И (ЗаписьКнигиПокупокЦенности.УдалитьСтавкаНДС <> &ПустаяСтавкаНДС
	|						И ЗаписьКнигиПокупокЦенности.СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|				))";
	
	УчетНДСЛокализация.УстановитьПараметрЗапросаПустаяСтавкаНДСПеречислением(Запрос);
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта        = "Документ.ЗаписьКнигиПокупок";
	
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Для Каждого Документ Из ОбновляемыеДанные Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Документ.Ссылка);
			Блокировка.Заблокировать();
			
			ДокументОбъект = Документ.Ссылка.ПолучитьОбъект();
			
			ОбъектИзменен = Ложь;
			
			Если ДокументОбъект <> Неопределено Тогда
				
				МассивТЧ = Новый Массив();
				МассивТЧ.Добавить("Ценности");
				
				УчетНДСЛокализация.ЗаполнитьКолонкуТЧСтавкаНДС(ДокументОбъект, МассивТЧ, ОбъектИзменен);
				
				
			КонецЕсли;
			
			Если ОбъектИзменен Или ДокументОбъект <> Неопределено И ДокументОбъект.Модифицированность() Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Документ.Ссылка);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), Документ.Ссылка);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                 КАК Ссылка,
	|	ДанныеДокумента.Дата                   КАК Период,
	|	ДанныеДокумента.Организация            КАК Организация,
	|	ДанныеДокумента.Контрагент             КАК Контрагент,
	|	ДанныеДокумента.Валюта                 КАК Валюта,
	|	ДанныеДокумента.ДокументРасчетов       КАК ДокументРасчетов,
	|	ДанныеДокумента.РучнаяКорректировкаЖурналаСФ КАК РучнаяКорректировкаЖурналаСФ,
	|	ДанныеДокумента.ЗаписьДополнительногоЛиста   КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЗаписьДополнительногоЛиста
	|			ТОГДА ДанныеДокумента.КорректируемыйПериод
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ                                      КАК КорректируемыйПериод,
	|	ДанныеДокумента.КодВидаОперации            КАК КодВидаОперации,
	|	ДанныеДокумента.ПредъявленСчетФактура      КАК ПредъявленСчетФактура,
	|	ДанныеДокумента.ДатаСчетаФактуры           КАК ДатаСчетаФактуры,
	|	ДанныеДокумента.НомерСчетаФактуры          КАК НомерСчетаФактуры,
	|	ДанныеДокумента.ДатаПолучения              КАК ДатаПолучения,
	|	ДанныеДокумента.ПолученВЭлектронномВиде    КАК ПолученВЭлектронномВиде,
	|	ДанныеДокумента.СпособКорректировкиНДС     КАК СпособКорректировкиНДС,
	|	ДанныеДокумента.КППКонтрагента             КАК КППКонтрагента,
	|	ДанныеДокумента.ИННКонтрагента             КАК ИННКонтрагента,
	|	ДанныеДокумента.Организация.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",                          Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация",                     Реквизиты.Организация);
	Запрос.УстановитьПараметр("Поставщик",                       Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("Валюта",                          Реквизиты.Валюта);
	Запрос.УстановитьПараметр("СчетФактура",                     ?(ЗначениеЗаполнено(Реквизиты.ДокументРасчетов), Реквизиты.ДокументРасчетов, ДокументСсылка));
	Запрос.УстановитьПараметр("ЗаписьДополнительногоЛиста",      Реквизиты.ЗаписьДополнительногоЛиста);
	Запрос.УстановитьПараметр("КорректируемыйПериод",            Реквизиты.КорректируемыйПериод);
	Запрос.УстановитьПараметр("КодВидаОперации",                 Реквизиты.КодВидаОперации);
	Запрос.УстановитьПараметр("ПредъявленСчетФактура",           Реквизиты.ПредъявленСчетФактура);
	Запрос.УстановитьПараметр("ДатаСчетаФактуры",                Реквизиты.ДатаСчетаФактуры);
	Запрос.УстановитьПараметр("НомерСчетаФактуры",               Реквизиты.НомерСчетаФактуры);
	Запрос.УстановитьПараметр("ДатаПолучения",                   Реквизиты.ДатаПолучения);
	Запрос.УстановитьПараметр("ПолученВЭлектронномВиде",         ?(Реквизиты.ПолученВЭлектронномВиде,2,1));
	Запрос.УстановитьПараметр("СпособКорректировкиНДС",          Реквизиты.СпособКорректировкиНДС);
	Запрос.УстановитьПараметр("ЭтоТаможеннаяДекларация",         ЗначениеЗаполнено(Реквизиты.ДокументРасчетов) 
	                                                               И ТипЗнч(Реквизиты.ДокументРасчетов) = Тип("ДокументСсылка.ТаможеннаяДекларацияИмпорт"));
	Запрос.УстановитьПараметр("ВалютаРеглУчета",                 Реквизиты.ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("КППКонтрагента",                  Реквизиты.КППКонтрагента);
	Запрос.УстановитьПараметр("ИННКонтрагента",                  Реквизиты.ИННКонтрагента);
	Запрос.УстановитьПараметр("РучнаяКорректировкаЖурналаСФ",    Реквизиты.РучнаяКорректировкаЖурналаСФ);
	
	ВидыЦенностиНалоговыйАгент = Новый Массив;
	ВидыЦенностиНалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентАренда);
	ВидыЦенностиНалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентИностранцы);
	ВидыЦенностиНалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентЭлектронныеУслуги);
	ВидыЦенностиНалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентКомитент);
	ВидыЦенностиНалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентРеализацияИмущества);
	Запрос.УстановитьПараметр("ВидыЦенностиНалоговыйАгент", ВидыЦенностиНалоговыйАгент);
	
	Запрос.УстановитьПараметр("ИдентификаторНеиспользуемойФинЗаписи", ПроведениеДокументов.ИдентификаторНеиспользуемойФинЗаписи());
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПокупок(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСЗаписиКнигиПокупок";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&СчетФактура КАК СчетФактура,
	|	ВЫБОР 
	|		КОГДА &ЗаписьДополнительногоЛиста
	|			ТОГДА &Период
	|		КОГДА &ПредъявленСчетФактура
	|			ТОГДА &ДатаПолучения
	|		ИНАЧЕ &Период
	|	КОНЕЦ КАК Период,
	|	&Организация КАК Организация,
	|	&Поставщик КАК Поставщик,
	|	&ЗаписьДополнительногоЛиста КАК ЗаписьДополнительногоЛиста,
	|	&КорректируемыйПериод КАК КорректируемыйПериод,
	|	ВЫБОР
	|		КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|			ТОГДА ТаблицаЦенности.ВидЦенности
	|		КОГДА ТаблицаЦенности.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|														ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	ВЫБОР
	|		КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|			ТОГДА ТаблицаЦенности.Событие
	|		ИНАЧЕ 
	|			ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету)
	|	КОНЕЦ КАК Событие,
	|	&Период КАК ДатаСобытия,
	|	ТаблицаЦенности.СтавкаНДС.ПеречислениеСтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА &ЭтоТаможеннаяДекларация
	|			ТОГДА 0
	|		КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|			ТОГДА Суммы.СуммаБезНДСРегл
	|		ИНАЧЕ -Суммы.СуммаБезНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|			ТОГДА Суммы.СуммаНДСРегл
	|		ИНАЧЕ -Суммы.СуммаНДСРегл
	|	КОНЕЦ КАК НДС,
	|	ВЫБОР
	|		КОГДА ТаблицаЦенности.ВидЦенности В (&ВидыЦенностиНалоговыйАгент)
	|			ТОГДА &Период
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ДатаОплаты,
	|	ВЫБОР
	|		КОГДА ТаблицаЦенности.ВидЦенности В (&ВидыЦенностиНалоговыйАгент)
	|			ТОГДА &Ссылка
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ДокументОплаты,
	|	NULL КАК НомерДокументаОплаты,
	|	NULL КАК ДатаДокументаОплаты,
	|	&КодВидаОперации КАК КодВидаОперации
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок.Ценности КАК ТаблицаЦенности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК Суммы
	|	ПО
	|		ТаблицаЦенности.Ссылка = Суммы.Ссылка
	|		И ТаблицаЦенности.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|
	|ГДЕ
	|	ТаблицаЦенности.Ссылка = &Ссылка
	|	И (ВЫБОР
	|		КОГДА &ПредъявленСчетФактура
	|			ТОГДА &ДатаПолучения <> ДАТАВРЕМЯ(1,1,1)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ)
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&СчетФактура КАК СчетФактура,
	|	ВЫБОР 
	|		КОГДА &ЗаписьДополнительногоЛиста
	|			ТОГДА &Период
	|		КОГДА &ПредъявленСчетФактура
	|			ТОГДА &ДатаПолучения
	|		ИНАЧЕ &Период
	|	КОНЕЦ КАК Период,
	|	&Организация КАК Организация,
	|	&Поставщик КАК Поставщик,
	|	&ЗаписьДополнительногоЛиста КАК ЗаписьДополнительногоЛиста,
	|	&КорректируемыйПериод КАК КорректируемыйПериод,
	|	ВЫБОР
	|		КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|			ТОГДА ТаблицаЦенности.ВидЦенности
	|		КОГДА ТаблицаЦенности.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|														ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	ВЫБОР
	|		КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|			ТОГДА ТаблицаЦенности.Событие
	|		ИНАЧЕ 
	|			ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету)
	|	КОНЕЦ КАК Событие,
	|	&Период КАК ДатаСобытия,
	|	ТаблицаЦенности.СтавкаНДС.ПеречислениеСтавкаНДС КАК СтавкаНДС,
	|	0 КАК СуммаБезНДС,
	|	0 КАК НДС,
	|	ВЫБОР
	|		КОГДА ТаблицаЦенности.ВидЦенности В (&ВидыЦенностиНалоговыйАгент)
	|			ТОГДА &Период
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ДатаОплаты,
	|	ВЫБОР
	|		КОГДА ТаблицаЦенности.ВидЦенности В (&ВидыЦенностиНалоговыйАгент)
	|			ТОГДА &Ссылка
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ДокументОплаты,
	|	ДанныеПервичныхДокументов.Номер КАК НомерДокументаОплаты,
	|	ДанныеПервичныхДокументов.Дата КАК ДатаДокументаОплаты,
	|	&КодВидаОперации КАК КодВидаОперации
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок.Ценности КАК ТаблицаЦенности
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ЗаписьКнигиПокупок.ДокументыОплаты КАК ТаблицаДокументыОплаты
	|	ПО
	|		ТаблицаЦенности.Ссылка = ТаблицаДокументыОплаты.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ПО
	|		ДанныеПервичныхДокументов.Организация = &Организация
	|		И ТаблицаДокументыОплаты.ДокументОплаты = ДанныеПервичныхДокументов.Документ
	|	
	|ГДЕ
	|	ТаблицаЦенности.Ссылка = &Ссылка
	|	И (ВЫБОР
	|		КОГДА &ПредъявленСчетФактура
	|			ТОГДА &ДатаПолучения <> ДАТАВРЕМЯ(1,1,1)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ)
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЖурналУчетаСчетовФактур";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЖурналУчетаСчетовФактур.Период КАК Период,
	|	ЖурналУчетаСчетовФактур.Организация КАК Организация,
	|	ЖурналУчетаСчетовФактур.Контрагент КАК Контрагент,
	|	ЖурналУчетаСчетовФактур.СчетФактура КАК СчетФактура,
	|	ЖурналУчетаСчетовФактур.ЧастьЖурнала КАК ЧастьЖурнала,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.КодВидаОперации КАК КодВидаОперации,
	|	ЖурналУчетаСчетовФактур.КодВидаСделки КАК КодВидаСделки,
	|	ЖурналУчетаСчетовФактур.КодСпособаВыставленияПолучения КАК КодСпособаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.Валюта КАК Валюта,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре КАК СуммаПоСчетуФактуре,
	|	ЖурналУчетаСчетовФактур.СуммаНДС КАК СуммаНДС,
	|	ЖурналУчетаСчетовФактур.ИндексСтроки КАК ИндексСтроки,
	|	ЖурналУчетаСчетовФактур.Сторно КАК Сторно,
	|	ЖурналУчетаСчетовФактур.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ЖурналУчетаСчетовФактур.СчетФактураВыданныйПокупателю КАК СчетФактураВыданныйПокупателю,
	|	ЖурналУчетаСчетовФактур.СчетФактураПолученныйОтПродавца КАК СчетФактураПолученныйОтПродавца,
	|	ЖурналУчетаСчетовФактур.ИсправлениеСобственнойОшибки КАК ИсправлениеСобственнойОшибки,
	|	ЖурналУчетаСчетовФактур.ДатаВыставленияПолучения КАК ДатаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ЖурналУчетаСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшение КАК СуммаНДСРазницаУменьшение,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличение КАК СуммаНДСРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.ПоСтавкеБезНДС КАК ПоСтавкеБезНДС,
	|	ЖурналУчетаСчетовФактур.СчетФактураНеВыставляется КАК СчетФактураНеВыставляется,
	|	ЖурналУчетаСчетовФактур.Продавец КАК Продавец,
	|	ЖурналУчетаСчетовФактур.КППКонтрагента КАК КППКонтрагента,
	|	ЖурналУчетаСчетовФактур.Посредник КАК Посредник,
	|	ЖурналУчетаСчетовФактур.УдалитьСчетФактураВыданныйПокупателю КАК УдалитьСчетФактураВыданныйПокупателю,
	|	ЖурналУчетаСчетовФактур.Субкомиссионер КАК Субкомиссионер,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактурыПродавца КАК НомерСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаНДСКомиссия КАК СуммаНДСКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.КодВидаОперацииКомиссия КАК КодВидаОперацииКомиссия,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактурыПродавца КАК ДатаСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ИННКонтрагента КАК ИННКонтрагента,
	|	ЖурналУчетаСчетовФактур.ИННПродавца КАК ИННПродавца,
	|	ЖурналУчетаСчетовФактур.КПППродавца КАК КПППродавца,
	|	ЖурналУчетаСчетовФактур.ИННСубкомиссионера КАК ИННСубкомиссионера,
	|	ЖурналУчетаСчетовФактур.КППСубкомиссионера КАК КППСубкомиссионера
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактур
	|ГДЕ
	|	ЖурналУчетаСчетовФактур.Регистратор = &Ссылка
	|	И &РучнаяКорректировкаЖурналаСФ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ДатаПолучения,
	|	&Организация,
	|	&Поставщик,
	|	ТаблицаЦенности.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры),
	|	&НомерСчетаФактуры,
	|	&ДатаСчетаФактуры,
	|	&КодВидаОперации,
	|	NULL,
	|	&ПолученВЭлектронномВиде,
	|	&Валюта,
	|	СУММА(ВЫБОР
	|			КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|					И Суммы.СуммаСНДСРегл < 0
	|				ТОГДА -Суммы.СуммаСНДСРегл
	|			ИНАЧЕ Суммы.СуммаСНДСРегл
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|					И Суммы.СуммаНДСРегл < 0
	|				ТОГДА -Суммы.СуммаНДСРегл
	|			ИНАЧЕ Суммы.СуммаНДСРегл
	|		КОНЕЦ),
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	&ДатаПолучения,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	&КППКонтрагента,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	&ИННКонтрагента,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок.Ценности КАК ТаблицаЦенности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК Суммы
	|		ПО ТаблицаЦенности.Ссылка = Суммы.Ссылка
	|			И ТаблицаЦенности.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|ГДЕ
	|	ТаблицаЦенности.Ссылка = &Ссылка
	|	И НЕ &РучнаяКорректировкаЖурналаСФ
	|	И &ПредъявленСчетФактура
	|	И &ДатаПолучения <> ДАТАВРЕМЯ(1, 1, 1)
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЦенности.Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияПоНДС(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияПоНДС";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫБОР 
	|		КОГДА &ЗаписьДополнительногоЛиста
	|			ТОГДА &Период
	|		КОГДА &ПредъявленСчетФактура
	|			ТОГДА &ДатаПолучения
	|		ИНАЧЕ &Период
	|	КОНЕЦ КАК Период,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейДвиженийПоНДС.Входящий) КАК ТипЗаписи,
	|	&Поставщик КАК Контрагент,
	|	&СчетФактура КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|			ТОГДА ТаблицаЦенности.ВидЦенности
	|		КОГДА ТаблицаЦенности.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|														ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	ТаблицаЦенности.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА &ЭтоТаможеннаяДекларация
	|			ТОГДА 0
	|		КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|			ТОГДА Суммы.СуммаБезНДСРегл
	|		ИНАЧЕ -Суммы.СуммаБезНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|			ТОГДА Суммы.СуммаНДСРегл
	|		ИНАЧЕ -Суммы.СуммаНДСРегл
	|	КОНЕЦ КАК НДС,
	|	ВЫБОР
	|		КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|			ТОГДА Суммы.СуммаНДСУпр
	|		ИНАЧЕ -Суммы.СуммаНДСУпр
	|	КОНЕЦ КАК НДСУпр,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	&ИдентификаторНеиспользуемойФинЗаписи КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации,
	|	ЛОЖЬ КАК Сторно
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок.Ценности КАК ТаблицаЦенности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК Суммы
	|	ПО
	|		ТаблицаЦенности.Ссылка = Суммы.Ссылка
	|		И ТаблицаЦенности.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|
	|ГДЕ
	|	ТаблицаЦенности.Ссылка = &Ссылка
	|	И (ВЫБОР
	|		КОГДА &ПредъявленСчетФактура
	|			ТОГДА &ДатаПолучения <> ДАТАВРЕМЯ(1,1,1)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ)
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|";
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса, Регистры = Неопределено) Экспорт
	
	ТекстЗапросаДанных = "
	|ВЫБРАТЬ
	|	""Ценности"" КАК ИсточникДанных,
	|	ЛОЖЬ КАК РаспределятьОбщуюСумму,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Ссылка.Дата КАК Дата,
	|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
	|	ТаблицаДокумента.Ссылка.Валюта КАК ВалютаДокумента,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаВзаиморасчетов,
	|	ТаблицаДокумента.Ссылка.Дата КАК ПериодБазыНДС,
	|
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.Сумма КАК СуммаБезНДС,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	0 КАК СуммаВзаиморасчетов,
	|	0 КАК СуммаНДСВзаиморасчетов,
	|
	|	ЛОЖЬ КАК ОтражаетсяВРасчетах,
	|	НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	ЛОЖЬ КАК ПересчитыватьПоДаннымРасчетов
	|
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок.Ценности КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&Ссылка)
	|";
	
	РегистрыСведений.СуммыДокументовВВалютахУчета.СформироватьПоДаннымДокумента(
		Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаДанных);

КонецПроцедуры


#КонецОбласти

#КонецОбласти

#КонецЕсли
