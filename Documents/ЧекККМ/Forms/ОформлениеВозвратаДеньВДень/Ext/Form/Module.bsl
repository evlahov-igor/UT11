
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	КассаККМ = Параметры.КассаККМ;
	Кассир = Параметры.Кассир;
	СтруктураСостояниеКассовойСмены = РозничныеПродажи.ПолучитьСостояниеКассовойСмены(КассаККМ);
	КассоваяСмена = СтруктураСостояниеКассовойСмены.КассоваяСмена;
	
	Период = Новый СтандартныйПериод(ВариантСтандартногоПериода.Сегодня);
	
	Если ЗначениеЗаполнено(КассоваяСмена) Тогда
		ИспользуетсяККТФЗ54 = РозничныеПродажиВызовСервера.ИспользуетсяККТФЗ54(КассоваяСмена);
	Иначе
		ИспользуетсяККТФЗ54 = Ложь;
	КонецЕсли;
		
	ЗаполнитьТаблицуТоваров();
	
	Склад = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КассаККМ, "Склад");
	
	Элементы.Период.Видимость                  = ИспользуетсяККТФЗ54;
	Элементы.ТаблицаТоваровПомещение.Видимость = СкладыСервер.ИспользоватьСкладскиеПомещения(Склад, ТекущаяДатаСеанса());
	
	ИспользоватьНаборы                     = ПолучитьФункциональнуюОпцию("ИспользоватьНаборы");
	ИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры");
	
	Элементы.ТаблицаТоваровНоменклатураНабора.Видимость   = ИспользоватьНаборы;
	Элементы.ТаблицаТоваровХарактеристикаНабора.Видимость = ИспользоватьНаборы И ИспользоватьХарактеристикиНоменклатуры;
	
	ЗаполнитьПредставленияЗаголовкаКнопкиОформитьВозвратНаСервере();
	Элементы.ФормаОформитьВозврат.Заголовок = ПредставленияЗаголовкаКнопкиОформитьВозврат.ОформитьВозврат;
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОформитьВозврат(Команда)
	
	ОчиститьСообщения();
	Если ПодобраноПозиций = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Необходимо выбрать чек для оформления возврата по чеку.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);		
		Возврат;
	Иначе
		ОткрытьФормуРМКДляОформленияЧекаККМВозврат();	
		Закрыть();
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуРМКДляОформленияЧекаККМВозврат()
	
	ПараметрыФормы = Новый Структура;	
	Строки = ТаблицаТоваров.НайтиСтроки(Новый Структура("Выбран", Истина));	
	ОтложенныйЧекККМВозврат = Строки[0].ОтложенныйЧекККМВозврат;	
	Если ЗначениеЗаполнено(ОтложенныйЧекККМВозврат) Тогда
		ПараметрыФормы.Вставить("Ключ", ОтложенныйЧекККМВозврат);
	Иначе
		ПодобранныйЧек = Строки[0].ЧекККМ;
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("Товары", АдресВоВременномХранилище(ПодобранныйЧек, ВладелецФормы.УникальныйИдентификатор));
		ПараметрыОткрытия.Вставить("ЧекККМ", ПодобранныйЧек);
		ПараметрыОткрытия.Вставить("Кассир", Кассир);
	
		ПараметрыФормы.Вставить("Основание", ПараметрыОткрытия);
	 КонецЕсли;
	
	ОткрытьФорму("Документ.ЧекККМВозврат.Форма.ФормаДокументаРМК", ПараметрыФормы, ВладелецФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТаблицаТоваровВыбранПриИзменении(Элемент)
	
	ПодобраноПозиций = 0;
	Всего            = 0;
	
	ТекущиеДанные = Элементы.ТаблицаТоваров.ТекущиеДанные;
	
	НоменклатураНабора   = ТекущиеДанные.НоменклатураНабора;
	ХарактеристикаНабора = ТекущиеДанные.ХарактеристикаНабора;
	
	ЧекККМ        = ТекущиеДанные.ЧекККМ;
	ОплаченКартой = ТекущиеДанные.ОплаченКартой;
	ЦенаЗадаетсяЗаНабор = ТекущиеДанные.ВариантРасчетаЦеныНабора = ПредопределенноеЗначение("Перечисление.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоДолям")
						ИЛИ ТекущиеДанные.ВариантРасчетаЦеныНабора = ПредопределенноеЗначение("Перечисление.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоЦенам");
	
	Для Каждого СтрокаТЧ Из ТаблицаТоваров Цикл
		Если СтрокаТЧ.ЧекККМ = ЧекККМ
			И (ОплаченКартой
				ИЛИ (СтрокаТЧ.НоменклатураНабора = НоменклатураНабора
				И СтрокаТЧ.ХарактеристикаНабора = ХарактеристикаНабора)) Тогда
			СтрокаТЧ.Выбран = ТекущиеДанные.Выбран;
		КонецЕсли;
		Если НЕ СтрокаТЧ.ЧекККМ = ЧекККМ Тогда
			СтрокаТЧ.Выбран = Ложь;
		КонецЕсли;
		Если СтрокаТЧ.Выбран Тогда
			ПодобраноПозиций = ПодобраноПозиций + 1;
			Всего = Всего + СтрокаТЧ.Сумма;
		КонецЕсли;			
	КонецЦикла;
	
	ОтложенныйЧекККМВозврат = ТекущиеДанные.ОтложенныйЧекККМВозврат;
	Если ЗначениеЗаполнено(ОтложенныйЧекККМВозврат) Тогда
		Элементы.ФормаОформитьВозврат.Заголовок = ПредставленияЗаголовкаКнопкиОформитьВозврат.ОткрытьОтложенныйВозврат;
	Иначе
		Элементы.ФормаОформитьВозврат.Заголовок = ПредставленияЗаголовкаКнопкиОформитьВозврат.ОформитьВозврат;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

&НаСервере
Процедура ЗаполнитьПредставленияЗаголовкаКнопкиОформитьВозвратНаСервере()
// psv
	ПредставленияЗаголовкаКнопкиОформитьВозврат = Новый Структура;
	ПредставленияЗаголовкаКнопкиОформитьВозврат.Вставить("ОформитьВозврат", Команды.Найти(Элементы.ФормаОформитьВозврат.ИмяКоманды).Заголовок);
	ПредставленияЗаголовкаКнопкиОформитьВозврат.Вставить("ОткрытьОтложенныйВозврат", НСтр("ru = 'Открыть отложенный возврат'"));	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция АдресВоВременномХранилище(ПодобранныйЧек, УникальныйИдентификатор)
	
	ПараметрыОтбора = ПараметрыДляЗаполненияТаблицыТоваров();
	ПараметрыОтбора.ЧекККМ = ПодобранныйЧек;
	ПараметрыОтбора.ИспользуетсяККТФЗ54 = Истина;

	ДанныеДляЗаполнения = ПолучитьДанныеДляЗаполненияТаблицыТоваров(ПараметрыОтбора);	
	Товары = ДанныеДляЗаполнения.Выгрузить();	
	Возврат ПоместитьВоВременноеХранилище(Товары, УникальныйИдентификатор);
	
КонецФункции

&НаСервереБезКонтекста
Функция ТекстЗапросаДляЗаполненияТаблицыТоваров(ПараметрыОтбора)
	
	ТекстУсловияЧекККМ					   = "И Т.Ссылка = &ЧекККМ";
	ТекстУсловияЧекККМВозврат			   = "И Т.ЧекККМ = &ЧекККМ";
	ТекстУсловияИспользуетсяККТФЗ54        = "И Т.Дата >= &ДатаНачала И (Т.Дата <= &ДатаОкончания ИЛИ &БезОграниченияОкончанияПериода)";
	ТекстУсловияИспользуетсяККТФЗ54Возврат = "И Т.Дата >= &ДатаНачала";
	ТекстУсловияНеИспользуетсяККТФЗ54      = "И Т.КассоваяСмена = &КассоваяСмена";
	ТекстУсловияНомерЧека                  = "И ЕСТЬNULL(ФискальныеОперации.НомерЧекаККМ, 0) = &НомерЧекаККМ";
	ТекстУсловияКартаЛояльности            = "И Т.КартаЛояльности = &КартаЛояльности";
	
	// Более одного параметра слева от "В", заменяет IN на EXISTS.		
	Если ПараметрыОтбора.ИспользуетсяККТФЗ54 Тогда
		ТекстУсловияНоменклатура =
		"И (Т.Ссылка, ИСТИНА) В (
		|	ВЫБРАТЬ 
		|		Т.Ссылка,
		|		ИСТИНА
		|ИЗ
		|	Документ.ЧекККМ.Товары КАК Т
		|ГДЕ
		|	Т.Ссылка.Дата >= &ДатаНачала
		|	" + ?(ЗначениеЗаполнено(ПараметрыОтбора.ЧекККМ),    ТекстУсловияЧекККМ,        "") + "
		|	И Т.Номенклатура = &Номенклатура 
		|	И (Т.Ссылка.Дата <= &ДатаОкончания ИЛИ &БезОграниченияОкончанияПериода))
		|";
		
	Иначе
		ТекстУсловияНоменклатура =
		"И (Т.Ссылка, ИСТИНА) В (
		|	ВЫБРАТЬ 
		|		Т.Ссылка, 
		|		ИСТИНА
		|ИЗ
		|	Документ.ЧекККМ.Товары КАК Т
		|ГДЕ
		|	Т.Ссылка.КассоваяСмена = &КассоваяСмена
		|	" + ?(ЗначениеЗаполнено(ПараметрыОтбора.ЧекККМ),    ТекстУсловияЧекККМ,        "") + "			
		|	И Т.Номенклатура = &Номенклатура)
		|";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Т.Ссылка КАК Ссылка,
	|	Т.Ссылка КАК ЧекККМ,
	|	Т.Дата КАК Дата,
	|	Т.КартаЛояльности КАК КартаЛояльности,
	|	Т.Партнер КАК Партнер,
	|	ЕСТЬNULL(ФискальныеОперации.НомерЧекаККМ, 0) КАК НомерЧекаККМ
	|ПОМЕСТИТЬ ЧекиККМ
	|ИЗ
	|	Документ.ЧекККМ КАК Т
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФискальныеОперации КАК ФискальныеОперации
	|		ПО Т.Ссылка = ФискальныеОперации.ДокументОснование
	|ГДЕ
	|	Т.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит)
	|	И НЕ (Т.Ссылка, ИСТИНА) В
	|			(ВЫБРАТЬ
	|				ЧекККМКоррекции.ЧекККМ, ИСТИНА
	|			ИЗ
	|				Документ.ЧекККМКоррекции КАК ЧекККМКоррекции
	|			ГДЕ 
	|				ЧекККМКоррекции.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит))
	|	" + ?(ЗначениеЗаполнено(ПараметрыОтбора.ЧекККМ),    	  ТекстУсловияЧекККМ,        "") + "
	|	" + ?(ПараметрыОтбора.ИспользуетсяККТФЗ54,                ТекстУсловияИспользуетсяККТФЗ54, ТекстУсловияНеИспользуетсяККТФЗ54) + "
	|	" + ?(ЗначениеЗаполнено(ПараметрыОтбора.НомерЧекаККМ),    ТекстУсловияНомерЧека,           "")                                + "
	|	" + ?(ЗначениеЗаполнено(ПараметрыОтбора.КартаЛояльности), ТекстУсловияКартаЛояльности,     "")                                + "
	|	" + ?(ЗначениеЗаполнено(ПараметрыОтбора.Номенклатура),    ТекстУсловияНоменклатура,        "")                                + "
	|
	|ИНДЕКСИРОВАТЬ ПО Ссылка
	|;
	|
	|ВЫБРАТЬ
	|	Т.Ссылка КАК Ссылка,
	|	Т.ЧекККМ КАК ЧекККМ,
	|	Т.ЧекККМ.Дата КАК Дата,
	|	Т.ЧекККМ.КартаЛояльности КАК КартаЛояльности,
	|	Т.ЧекККМ.Партнер КАК Партнер,	
	|	0 КАК НомерЧекаККМ
	|ПОМЕСТИТЬ ЧекиККМВозврат	
	|ИЗ
	|	Документ.ЧекККМВозврат КАК Т
	|ГДЕ
	|	Т.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит)
	|	И НЕ Т.ЧекККМ = ЗНАЧЕНИЕ(Документ.ЧекККМ.ПустаяСсылка)
	|	" + ?(ЗначениеЗаполнено(ПараметрыОтбора.ЧекККМ),    	  ТекстУсловияЧекККМВозврат,        "") + "
	|	" + ?(ПараметрыОтбора.ИспользуетсяККТФЗ54, ТекстУсловияИспользуетсяККТФЗ54Возврат, ТекстУсловияНеИспользуетсяККТФЗ54) + "
	|
	|ИНДЕКСИРОВАТЬ ПО Ссылка
	|;
	|
	|///////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(Т.Ссылка, ЗНАЧЕНИЕ(Документ.ЧекККМВозврат.ПустаяСсылка))) КАК Ссылка,
	|	ЧекиККМ.ЧекККМ КАК ЧекККМ
	|ПОМЕСТИТЬ ОтложенныеЧекиККМВозврат	
	|ИЗ
	|	ЧекиККМ КАК ЧекиККМ
	|ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЧекККМВозврат КАК Т
	|	ПО Т.ЧекККМ = ЧекиККМ.Ссылка
	|ГДЕ
	|	Т.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Отложен)
	|СГРУППИРОВАТЬ ПО
	|	ЧекиККМ.ЧекККМ
	|ИНДЕКСИРОВАТЬ ПО ЧекККМ
	|;
	|
	|///////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЧекиККМ.Ссылка КАК Ссылка,
	|	ИСТИНА КАК ОплаченКартой
	|ПОМЕСТИТЬ ЧекиККМОплаченныеКартами
	|ИЗ
	|	ЧекиККМ КАК ЧекиККМ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.ОплатаПлатежнымиКартами КАК ОплатаПлатежнымиКартами
	|		ПО ЧекиККМ.Ссылка = ОплатаПлатежнымиКартами.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.ЧекККМ КАК ЧекККМ,
	|	МАКСИМУМ(Товары.Дата) КАК Дата,
	|	МАКСИМУМ(Товары.КартаЛояльности) КАК КартаЛояльности,
	|	МАКСИМУМ(Товары.Партнер) КАК Партнер,
	|	МАКСИМУМ(Товары.НомерЧекаККМ) КАК НомерЧекаККМ,
	|	Товары.НоменклатураЕГАИС КАК НоменклатураЕГАИС,
	|	Товары.НоменклатураНабора КАК НоменклатураНабора,
	|	Товары.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	Товары.Цена КАК Цена,
	|	Товары.Помещение КАК Помещение,
	|	Товары.Продавец КАК Продавец,
	|	СУММА(Товары.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(Товары.Количество) КАК Количество,
	|	СУММА(Товары.Сумма) КАК Сумма,
	|	СУММА(Товары.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.Ссылка КАК ЧекККМ,
	|		ЧекиККМ.Дата КАК Дата,
	|		ЧекиККМ.КартаЛояльности КАК КартаЛояльности,
	|		ЧекиККМ.Партнер КАК Партнер,
	|		ЧекиККМ.НомерЧекаККМ КАК НомерЧекаККМ,
	|		Товары.НоменклатураЕГАИС КАК НоменклатураЕГАИС,
	|		Товары.НоменклатураНабора КАК НоменклатураНабора,
	|		Товары.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|		Товары.Номенклатура КАК Номенклатура,
	|		Товары.Характеристика КАК Характеристика,
	|		Товары.Серия КАК Серия,
	|		Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|		Товары.Упаковка КАК Упаковка,
	|		Товары.КоличествоУпаковок КАК КоличествоУпаковок,
	|		Товары.Количество КАК Количество,
	|		ВЫРАЗИТЬ(ВЫБОР
	|				КОГДА Товары.СуммаРучнойСкидки + Товары.СуммаАвтоматическойСкидки + Товары.СуммаБонусныхБалловКСписаниюВВалюте = 0
	|						ИЛИ Товары.КоличествоУпаковок = 0
	|					ТОГДА Товары.Цена
	|				ИНАЧЕ Товары.Сумма / Товары.КоличествоУпаковок
	|			КОНЕЦ КАК ЧИСЛО(31, 2)) КАК Цена,
	|		Товары.Сумма КАК Сумма,
	|		Товары.СтавкаНДС КАК СтавкаНДС,
	|		Товары.СуммаНДС КАК СуммаНДС,
	|		Товары.Помещение КАК Помещение,
	|		Товары.Продавец КАК Продавец
	|	ИЗ
	|		ЧекиККМ КАК ЧекиККМ
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.Товары КАК Товары
	|			ПО ЧекиККМ.Ссылка = Товары.Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЧекиККМ.ЧекККМ,
	|       ЧекиККМ.Дата,
	|		ЧекиККМ.КартаЛояльности КАК КартаЛояльности,
	|		ЧекиККМ.Партнер КАК Партнер,
	|		ЧекиККМ.НомерЧекаККМ КАК НомерЧекаККМ,
	|		Товары.НоменклатураЕГАИС,
	|		Товары.НоменклатураНабора,
	|		Товары.ХарактеристикаНабора,
	|		Товары.Номенклатура,
	|		Товары.Характеристика,
	|		Товары.Серия,
	|		Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|		Товары.Упаковка,
	|		-Товары.КоличествоУпаковок,
	|		-Товары.Количество,
	|		Товары.Цена,
	|		-Товары.Сумма,
	|		Товары.СтавкаНДС,
	|		-Товары.СуммаНДС,
	|		Товары.Помещение,
	|		Товары.Продавец
	|	ИЗ
	|		ЧекиККМВозврат КАК ЧекиККМ
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМВозврат.Товары КАК Товары
	|			ПО ЧекиККМ.Ссылка = Товары.Ссылка) КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.ЧекККМ,
	|	Товары.НоменклатураЕГАИС,
	|	Товары.НоменклатураНабора,
	|	Товары.ХарактеристикаНабора,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия,
	|	Товары.СтатусУказанияСерий,
	|	Товары.Упаковка,
	|	Товары.Помещение,
	|	Товары.Продавец,
	|	Товары.СтавкаНДС,
	|	Товары.Цена
	|
	|ИМЕЮЩИЕ
	|	СУММА(Товары.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ 
	|	Таблица.НоменклатураНабора, 
	|	Таблица.ХарактеристикаНабора,
	|	ВариантыКомплектацииНоменклатуры.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора
	|ПОМЕСТИТЬ ТаблицаНаборовСВариантомРасчетаЦеныНабора
	|ИЗ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			Таблица.НоменклатураНабора, 
	|			Таблица.ХарактеристикаНабора
	|		ИЗ Результат КАК Таблица
	|		ГДЕ Таблица.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)	
	|	) КАК Таблица
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
	|	ПО (ВариантыКомплектацииНоменклатуры.Владелец = Таблица.НоменклатураНабора)
	|		И (ВариантыКомплектацииНоменклатуры.Характеристика = Таблица.ХарактеристикаНабора)
	|		И (ВариантыКомплектацииНоменклатуры.Основной)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.ЧекККМ КАК ЧекККМ,
	|	Таблица.НомерЧекаККМ КАК НомерЧекаККМ,	
	|	Таблица.КартаЛояльности КАК КартаЛояльности,
	|	Таблица.Партнер КАК Клиент,
	|	ЕСТЬNULL(ЧекиККМОплаченныеКартами.ОплаченКартой, ЛОЖЬ) КАК ОплаченКартой,
	|	ВЫБОР
	|		КОГДА Таблица.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИндексНабора,
	|	ЕСТЬNULL(ВариантыКомплектацииНоменклатуры.ВариантРасчетаЦеныНабора, НЕОПРЕДЕЛЕНО) КАК ВариантРасчетаЦеныНабора,
	|	Таблица.НоменклатураЕГАИС КАК НоменклатураЕГАИС,
	|	Таблица.НоменклатураНабора КАК НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	Таблица.Номенклатура КАК Номенклатура,
	|	СправочникНоменклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	Таблица.Характеристика КАК Характеристика,
	|	Таблица.Серия КАК Серия,
	|	Таблица.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	Таблица.Упаковка КАК Упаковка,
	|	Таблица.СтавкаНДС КАК СтавкаНДС,
	|	Таблица.Цена КАК Цена,
	|	Таблица.КоличествоУпаковок КАК КоличествоУпаковок,
	|	Таблица.Количество КАК Количество,
	|	Таблица.Сумма КАК Сумма,
	|	Таблица.СуммаНДС КАК СуммаНДС,
	|	Таблица.Помещение КАК Помещение,
	|	Таблица.Продавец КАК Продавец,
	|	ЕСТЬNULL(ОтложенныеЧекиККМВозврат.Ссылка, ЗНАЧЕНИЕ(Документ.ЧекККМВозврат.ПустаяСсылка)) КАК ОтложенныйЧекККМВозврат
	|
	|ИЗ
	|	Результат КАК Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО СправочникНоменклатура.Ссылка = Таблица.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЧекиККМОплаченныеКартами КАК ЧекиККМОплаченныеКартами
	|		ПО Таблица.ЧекККМ = ЧекиККМОплаченныеКартами.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаНаборовСВариантомРасчетаЦеныНабора КАК ВариантыКомплектацииНоменклатуры
	|		ПО (ВариантыКомплектацииНоменклатуры.НоменклатураНабора = Таблица.НоменклатураНабора)
	|			И (ВариантыКомплектацииНоменклатуры.ХарактеристикаНабора = Таблица.ХарактеристикаНабора)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОтложенныеЧекиККМВозврат КАК ОтложенныеЧекиККМВозврат
	|		ПО ОтложенныеЧекиККМВозврат.ЧекККМ = Таблица.ЧекККМ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Таблица.Дата УБЫВ
	|";	
	
	Возврат ТекстЗапроса;
КонецФункции

&НаСервереБезКонтекста
Функция ПараметрыДляЗаполненияТаблицыТоваров()
	
	Результат = Новый Структура;
	Результат.Вставить("ЧекККМ", ПредопределенноеЗначение("Документ.ЧекККМ.ПустаяСсылка"));		
	Результат.Вставить("ИспользуетсяККТФЗ54", Ложь);	
	Результат.Вставить("КассоваяСмена", ПредопределенноеЗначение("Документ.КассоваяСмена.ПустаяСсылка"));
	Результат.Вставить("НомерЧекаККМ", 0);
	Результат.Вставить("Номенклатура", ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"));
	Результат.Вставить("КартаЛояльности", ПредопределенноеЗначение("Справочник.КартыЛояльности.ПустаяСсылка"));
	Результат.Вставить("Период", Новый СтандартныйПериод);
		
	Возврат Результат;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДанныеДляЗаполненияТаблицыТоваров(ПараметрыОтбора)
	
	Запрос = Новый Запрос(ТекстЗапросаДляЗаполненияТаблицыТоваров(ПараметрыОтбора));
	
	Если ЗначениеЗаполнено(ПараметрыОтбора.ЧекККМ) Тогда
		Запрос.Параметры.Вставить("ЧекККМ", ПараметрыОтбора.ЧекККМ);
	КонецЕсли;
	Если ЗначениеЗаполнено(ПараметрыОтбора.НомерЧекаККМ) Тогда
		Запрос.Параметры.Вставить("НомерЧекаККМ", ПараметрыОтбора.НомерЧекаККМ);
	КонецЕсли;
	Если ЗначениеЗаполнено(ПараметрыОтбора.Номенклатура) Тогда
		Запрос.Параметры.Вставить("Номенклатура", ПараметрыОтбора.Номенклатура);
	КонецЕсли;
	Если ЗначениеЗаполнено(ПараметрыОтбора.КартаЛояльности) Тогда
		Запрос.Параметры.Вставить("КартаЛояльности", ПараметрыОтбора.КартаЛояльности);
	КонецЕсли;
	Если ПараметрыОтбора.ИспользуетсяККТФЗ54 Тогда
		Запрос.Параметры.Вставить("ДатаНачала",     ПараметрыОтбора.Период.ДатаНачала);
		Запрос.Параметры.Вставить("ДатаОкончания",  ПараметрыОтбора.Период.ДатаОкончания);
		Запрос.Параметры.Вставить("БезОграниченияОкончанияПериода", НЕ ЗначениеЗаполнено(ПараметрыОтбора.Период.ДатаОкончания));
	ИначеЕсли ЗначениеЗаполнено(ПараметрыОтбора.КассоваяСмена) Тогда
		Запрос.Параметры.Вставить("КассоваяСмена", ПараметрыОтбора.КассоваяСмена);
	КонецЕсли;
	
	Возврат Запрос.Выполнить();
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуТоваров()
	
	ТаблицаТоваров.Очистить();
	
	ПараметрыОтбора = ПараметрыДляЗаполненияТаблицыТоваров();
	ПараметрыОтбора.ИспользуетсяККТФЗ54 = ИспользуетсяККТФЗ54;	
	ПараметрыОтбора.КассоваяСмена = КассоваяСмена;	
	ПараметрыОтбора.НомерЧекаККМ = НомерЧекаККМ;
	ПараметрыОтбора.Номенклатура = Номенклатура;
	ПараметрыОтбора.КартаЛояльности = КартаЛояльности;
	ПараметрыОтбора.Период = Период;
	
	ПодобраноПозиций = 0;
	Всего = 0;
	ПодобранныйЧек = Неопределено;
	
	ДанныеДляЗаполнения = ПолучитьДанныеДляЗаполненияТаблицыТоваров(ПараметрыОтбора);
	Выборка = ДанныеДляЗаполнения.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокаТЧ = ТаблицаТоваров.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, Выборка);
		
		Если ПодобранныйЧек = Неопределено Тогда
			Если ЗначениеЗаполнено(Номенклатура) Или ЗначениеЗаполнено(НомерЧекаККМ) Или ЗначениеЗаполнено(КартаЛояльности) Тогда
				ПодобранныйЧек = СтрокаТЧ.ЧекККМ;
			КонецЕсли;			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПодобранныйЧек) И СтрокаТЧ.ЧекККМ = ПодобранныйЧек Тогда
			СтрокаТЧ.Выбран = Истина;
			ПодобраноПозиций = ПодобраноПозиций + 1;
			Всего = Всего + СтрокаТЧ.Сумма; 			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиТовары(Команда)
	
	ТаблицаТоваров.Очистить();
	ЗаполнитьТаблицуТоваров();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
