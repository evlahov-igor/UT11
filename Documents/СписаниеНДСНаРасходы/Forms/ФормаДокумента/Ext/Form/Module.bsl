#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	УстановитьУсловноеОформление();
	
	ОписаниеТиповСчетФактура = Метаданные.ОпределяемыеТипы.СчетФактура.Тип;
	ОписаниеТиповОснованиеСчетФактураВыданныйАванс = Метаданные.ОпределяемыеТипы.ОснованиеСчетФактураВыданныйАванс.Тип;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ПриЧтенииСозданииНаСервере();
		
	КонецЕсли;
	
	ПараметрыВыбораСтатейИАналитик = Документы.СписаниеНДСНаРасходы.ПараметрыВыбораСтатейИАналитик();
	ДоходыИРасходыСервер.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыВыбораСтатейИАналитик);
	
	Элементы.ЦенностиВидДеятельностиНДС.СписокВыбора.ЗагрузитьЗначения(
		УчетНДСУП.ВидыДеятельностиНДСПринимаетсяКВозмещению());

	// Обработчик механизма "ВерсионированиеОбъектов"
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом

	УчетНДСУПСлужебный.НастроитьСовместныйВыборКонтрагентовОрганизаций(Элементы.Поставщик);
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	Если Объект.Исправление Тогда
		Элементы.ЦенностиЗаполнитьЦенности.Видимость = Ложь;
	КонецЕсли;
	
	ИсправлениеДокументов.ПриСозданииНаСервере(ЭтаФорма, Элементы.СтрокаИсправление);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

	// Обработчик механизма "ДатыЗапретаИзменения"
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);

	ПараметрыВыбораСтатейИАналитик = Документы.СписаниеНДСНаРасходы.ПараметрыВыбораСтатейИАналитик();
	ДоходыИРасходыСервер.ПриЧтенииНаСервере(ЭтотОбъект, ПараметрыВыбораСтатейИАналитик);
	
	ПриЧтенииСозданииНаСервере();

	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);

	СобытияФорм.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ИсправлениеДокументов.ПриЧтенииНаСервере(ЭтаФорма, Элементы.СтрокаИсправление);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)

	СобытияФормКлиент.ПередЗаписью(ЭтотОбъект, Отказ, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);

	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	// Конец ИнтеграцияС1СДокументооборотом
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ДоходыИРасходыСервер.ПослеЗаписиНаСервере(ЭтотОбъект);
	
	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	Оповестить("Запись_СписаниеНДСНаРасходы", ПараметрыЗаписи, Объект.Ссылка);
	
	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);
	
	ИсправлениеДокументовКлиент.ПослеЗаписи(Объект);

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ИсправлениеДокументовКлиент.ОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры


&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры


// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец ИнтеграцияС1СДокументооборотом

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДокумент(Команда)
	
	ОбщегоНазначенияУТКлиент.Записать(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЦенности(Команда)
	
	ПараметрыПроверки = РаботаСТабличнымиЧастямиКлиент.ПараметрыПроверкиЗаполнения();
	ПараметрыПроверки.ТабличнаяЧасть            = Объект.Ценности;
	ПараметрыПроверки.ЗаголовокТабличнойЧасти   = НСтр("ru = 'Ценности'");
	ПараметрыПроверки.ПроверятьРаспроведенность = Ложь;
	ПараметрыПроверки.ПроверяемыеРеквизиты.Вставить("Организация",  НСтр("ru = 'Организация'"));
	ПараметрыПроверки.ПроверяемыеРеквизиты.Вставить("Контрагент",   НСтр("ru = 'Контрагент'"));
	ПараметрыПроверки.ПроверяемыеРеквизиты.Вставить("СчетФактура",  НСтр("ru = 'Документ-основание'"));
	Оповещение = Новый ОписаниеОповещения("ЗаполнитьЦенностиНажатиеПослеПроверки", ЭтотОбъект);
	РаботаСТабличнымиЧастямиКлиент.ПроверитьВозможностьЗаполнения(ЭтаФорма, Оповещение, ПараметрыПроверки);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЦенностиНажатиеПослеПроверки(Результат, ДополнительныеПараметры) Экспорт 
	
	ЗаполнитьЦенностиСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиДокумент(Команда)
	
	ОбщегоНазначенияУТКлиент.Провести(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	
	ОбщегоНазначенияУТКлиент.ПровестиИЗакрыть(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьАвансыПолученные(Команда)
	
	ПараметрыПроверки = РаботаСТабличнымиЧастямиКлиент.ПараметрыПроверкиЗаполнения();
	ПараметрыПроверки.ТабличнаяЧасть            = Объект.АвансыПолученные;
	ПараметрыПроверки.ЗаголовокТабличнойЧасти   = НСтр("ru = 'Авансы полученные'");
	ПараметрыПроверки.ПроверятьРаспроведенность = Ложь;
	ПараметрыПроверки.ПроверяемыеРеквизиты.Вставить("Организация", НСтр("ru = 'Организация'"));
	ПараметрыПроверки.ПроверяемыеРеквизиты.Вставить("Контрагент",   НСтр("ru = 'Контрагент'"));
	ПараметрыПроверки.ПроверяемыеРеквизиты.Вставить("ДокументОплаты", НСтр("ru = 'Документ оплаты'"));
	Оповещение = Новый ОписаниеОповещения("ЗаполнитьАвансыПолученныеНажатиеПослеПроверки", ЭтотОбъект);
	РаботаСТабличнымиЧастямиКлиент.ПроверитьВозможностьЗаполнения(ЭтаФорма, Оповещение, ПараметрыПроверки);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьАвансыПолученныеНажатиеПослеПроверки(Результат, ДополнительныеПараметры) Экспорт 
	
	ЗаполнитьАвансыПолученныеСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ХозяйственнаяОперацияПриИзменении(Элемент)
	
	ХозяйственнаяОперацияПриИзмененииСервер();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЦенностиПриИзменении(Элемент)
	
	Объект.СуммаНДС = Объект.Ценности.Итог("НДС");
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДоходыИРасходыКлиент.НачалоВыбораСтатьи(ЭтотОбъект, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовПриИзменении(Элемент)
	
	ДоходыИРасходыКлиентСервер.СтатьяПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДоходыИРасходыКлиент.НачалоВыбораАналитикиРасходов(ЭтотОбъект, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ДоходыИРасходыКлиент.АвтоПодборАналитикиРасходов(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ДоходыИРасходыКлиент.ОкончаниеВводаТекстаАналитикиРасходов(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СчетФактураПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.СчетФактура) Тогда
		ПоказатьВопросОчисткаЦенности();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СчетФактураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Объект.СчетФактура = Неопределено Тогда
	
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ДоступныеТипы", ОписаниеТиповСчетФактура);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыборТипаСчетаФактуры", ЭтотОбъект);
		ОткрытьФорму("ОбщаяФорма.ВыборТипаИзСписка", ПараметрыФормы, ЭтаФорма, , , , ОписаниеОповещения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументОплатыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Объект.ДокументОплаты = Неопределено Тогда
	
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ДоступныеТипы", ОписаниеТиповОснованиеСчетФактураВыданныйАванс);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыборТипаДокументаОплаты", ЭтотОбъект);
		ОткрытьФорму("ОбщаяФорма.ВыборТипаИзСписка", ПараметрыФормы, ЭтаФорма, , , , ОписаниеОповещения);
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СчетФактураОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Объект.СчетФактура = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументОплатыПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.ДокументОплаты) Тогда
		ПоказатьВопросОчисткаАвансыПолученные();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДокументОплатыОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Объект.ДокументОплаты = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура СтрокаИсправлениеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
		
		ИсправлениеДокументовКлиент.СтрокаИсправлениеОбработкаНавигационныйСсылки(
			ЭтотОбъект, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
			
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	УстановитьВидимостьЭлементовФормы();
	УстановитьСвязиПараметровВыбораСчетаФактуры();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементовФормы()
	
	Элементы.ГруппаЦенности.Видимость = (Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеНДСПоПриобретеннымЦенностям);
	Элементы.ГруппаАвансыПолученные.Видимость = (Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеНДССПолученногоАванса);
	
	Элементы.СчетФактура.Видимость = (Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеНДСПоПриобретеннымЦенностям);
	Элементы.ДокументОплаты.Видимость = (Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеНДССПолученногоАванса);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЦенностиСервер() 
	
	Документы.СписаниеНДСНаРасходы.ЗаполнитьТаблицуЦенности(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросОчисткаЦенности()
	
	Если Объект.Ценности.Количество() > 0 Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ОчисткаЦенностиЗавершение", ЭтотОбъект),
				НСтр("ru='Список ""Ценности"" будет очищен. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
	Иначе
		ЗаполнитьЦенностиСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчисткаЦенностиЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ОтветНаВопрос = РезультатВопроса;
	
	Если ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Ценности.Очистить();
	ЗаполнитьЦенностиСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыборТипаСчетаФактуры(Результат, ДополнительныеПараметры) Экспорт
	
	ПараметрыФормы = ПараметрыОткрытияФормыВыбораДокумента(Результат);
	
	Если ПараметрыФормы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораСчетаФактуры", ЭтотОбъект);
	ОткрытьФорму(ПараметрыФормы.ИмяФормыВыбора, ПараметрыФормы.ПараметрыОткрытия, ЭтаФорма, , , , ОписаниеОповещения); 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыборТипаДокументаОплаты(Результат, ДополнительныеПараметры) Экспорт
	
	ПараметрыФормы = ПараметрыОткрытияФормыВыбораДокумента(Результат);
	
	Если ПараметрыФормы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораДокументаОплаты", ЭтотОбъект);
	ОткрытьФорму(ПараметрыФормы.ИмяФормыВыбора, ПараметрыФормы.ПараметрыОткрытия, ЭтаФорма, , , , ОписаниеОповещения); 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораСчетаФактуры(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда 
		Объект.СчетФактура = Результат;
		УстановитьСвязиПараметровВыбораСчетаФактуры();
		ПоказатьВопросОчисткаЦенности();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораДокументаОплаты(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда 
		Объект.ДокументОплаты = Результат;
		ПоказатьВопросОчисткаАвансыПолученные();
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Функция ПараметрыОткрытияФормыВыбораДокумента(ТипЗначения)
	
	Если ТипЗначения = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ИмяФормыВыбора = Метаданные.НайтиПоТипу(ТипЗначения).ПолноеИмя() + ".ФормаВыбора";
	
	Результат = Новый Структура;
	Результат.Вставить("ИмяФормыВыбора", ИмяФормыВыбора);
	
	Отбор = Новый Структура;
	Для каждого Параметр Из СвязиПараметрыОтбора(ТипЗначения) Цикл
		Если Параметр.Ключ = "Партнер" Тогда
			Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
				Отбор.Вставить(Параметр.Ключ, Объект.Контрагент.Партнер);
			КонецЕсли;
		Иначе
			Отбор.Вставить(Параметр.Ключ, Объект[Параметр.Значение]);
		КонецЕсли;	
	КонецЦикла;
	
	Результат.Вставить("ПараметрыОткрытия", Новый Структура("Отбор", Отбор));
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция СвязиПараметрыОтбора(ТипЗначения)
	
	СвязиПараметрыОтбора = Новый Структура;
	Если ТипЗначения = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
		СвязиПараметрыОтбора.Вставить("Организация", "Контрагент");
		СвязиПараметрыОтбора.Вставить("ОрганизацияПолучатель", "Организация");
	ИначеЕсли ТипЗначения = Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями") Тогда
		СвязиПараметрыОтбора.Вставить("ОрганизацияПолучатель", "Организация");
		СвязиПараметрыОтбора.Вставить("Организация", "Контрагент");
	Иначе
		Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда
			СвязиПараметрыОтбора.Вставить("Организация", "Организация");
			СвязиПараметрыОтбора.Вставить("Контрагент", "Контрагент");
		Иначе
			СвязиПараметрыОтбора.Вставить("Организация", "Организация");
			СвязиПараметрыОтбора.Вставить("Партнер", "Партнер");
		КонецЕсли;
	КонецЕсли;
		
	Возврат СвязиПараметрыОтбора;
	
КонецФункции

&НаСервере
Процедура УстановитьСвязиПараметровВыбораСчетаФактуры()
	
	ПараметрыОтбора = СвязиПараметрыОтбора(ТипЗнч(Объект.СчетФактура));
	
	МассивОтборов = Новый Массив;
	Для каждого Отбор Из ПараметрыОтбора Цикл
		Если Отбор.Ключ = "Партнер" Тогда
			Если ЗначениеЗаполнено(Объект.Контрагент)
				И ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
					Партнер =  Объект.Контрагент.Партнер;
					МассивОтборов.Добавить(Новый СвязьПараметраВыбора("Отбор." + Отбор.Ключ, "Партнер"));
			КонецЕсли;
		Иначе
			МассивОтборов.Добавить(Новый СвязьПараметраВыбора("Отбор." + Отбор.Ключ, "Объект." + Отбор.Значение));
		КонецЕсли;
	КонецЦикла;
	
	СчетФактураПараметрыВыбора = Новый ФиксированныйМассив(МассивОтборов);
	Элементы.СчетФактура.СвязиПараметровВыбора = СчетФактураПараметрыВыбора;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьАвансыПолученныеСервер() 
	
	Документы.СписаниеНДСНаРасходы.ЗаполнитьТаблицуАвансыПолученные(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросОчисткаАвансыПолученные()
	
	Если Объект.Ценности.Количество() > 0 Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ОчисткаАвансыПолученныеЗавершение", ЭтотОбъект),
				НСтр("ru='Список ""Авансы полученные"" будет очищен. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
	Иначе
		ЗаполнитьЦенностиСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчисткаАвансыПолученныеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ОтветНаВопрос = РезультатВопроса;
	
	Если ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Объект.АвансыПолученные.Очистить();
	ЗаполнитьАвансыПолученныеСервер();
	
КонецПроцедуры

&НаСервере
Процедура ХозяйственнаяОперацияПриИзмененииСервер()
	
	Если Объект.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.СписаниеНДСПоПриобретеннымЦенностям Тогда
		Объект.СчетФактура = Неопределено;
		Если Объект.Ценности.Количество() > 0 Тогда
			Объект.Ценности.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.СписаниеНДССПолученногоАванса Тогда
		Объект.ДокументОплаты = Неопределено;
		Если Объект.АвансыПолученные.Количество() > 0 Тогда
			Объект.АвансыПолученные.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	УстановитьВидимостьЭлементовФормы();
	
КонецПроцедуры

#КонецОбласти
