#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("Партнер") Тогда
			Если НЕ (ДанныеЗаполнения.Свойство("Контрагент") И ЗначениеЗаполнено(ДанныеЗаполнения.Контрагент)) Тогда
				ДанныеЗаполнения.Вставить("Контрагент", ПартнерыИКонтрагенты.ПолучитьКонтрагентаПартнераПоУмолчанию(ДанныеЗаполнения.Партнер));
			КонецЕсли;
			Если ДанныеЗаполнения.Свойство("Организация") И ЗначениеЗаполнено(ДанныеЗаполнения.Организация) Тогда
				ДанныеЗаполнения.Вставить("Валюта", ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(ДанныеЗаполнения.Организация));
			КонецЕсли;
		КонецЕсли;

		Если ДанныеЗаполнения.Свойство("ВалютаДоговора") Тогда
			ДанныеЗаполнения.Вставить("Валюта", ДанныеЗаполнения.ВалютаДоговора);
		КонецЕсли;
		
		
		Если ДанныеЗаполнения.Свойство("ПорядокРасчетов") Тогда
			Если ТипЗнч(ДанныеЗаполнения.ПорядокРасчетов) = Тип("ФиксированныйМассив")
				ИЛИ ТипЗнч(ДанныеЗаполнения.ПорядокРасчетов) = Тип("Массив") Тогда
				Если ДанныеЗаполнения.ПорядокРасчетов.Найти(Перечисления.ПорядокРасчетов.ПоНакладным) <> Неопределено Тогда
					ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПоНакладным;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата              = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	ДокументОснование = Неопределено;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ПараметрыРегистрации = Документы.ПервичныйДокумент.ПараметрыРегистрацииСчетовФактурПолученных(ЭтотОбъект);
	УчетНДСУП.АктуализироватьСчетаФактурыПолученныеПередЗаписью(ПараметрыРегистрации, РежимЗаписи, ПометкаУдаления, Проведен);
	
	Если ЭтоНовый() И НЕ ЗначениеЗаполнено(Номер) Тогда
		УстановитьНовыйНомер();
	КонецЕсли;
	
	Если Не ЭтоНовый() 
	И Модифицированность() Тогда
		
		Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			|	ВводОстатковВзаиморасчетовРасчетыСПартнерами.Ссылка 
			|ИЗ
			|	Документ.ВводОстатковВзаиморасчетов.РасчетыСПартнерами КАК ВводОстатковВзаиморасчетовРасчетыСПартнерами
			|ГДЕ
			|	ВводОстатковВзаиморасчетовРасчетыСПартнерами.ДокументРасчетов = &ДокументРасчетов");
		Запрос.УстановитьПараметр("ДокументРасчетов", ЭтотОбъект.Ссылка);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			Отказ = Истина;
			ОбщегоНазначения.СообщитьПользователю("Документ уже использован в документах ввода остатков, именение невозможно");
		КонецЕсли;
		
	КонецЕсли;
	
	ВзаиморасчетыСервер.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Реквизиты = Документы.ПервичныйДокумент.МассивРеквизитовПоТипуПервичногоДокумента(ТипПервичногоДокумента);
	ОбщегоНазначенияУТКлиентСервер.ЗаполнитьМассивНепроверяемыхРеквизитов(
		Реквизиты.МассивВсехРеквизитов,
		Реквизиты.МассивРеквизитовДляТипа,
		МассивНепроверяемыхРеквизитов);
	
	Если ПорядокРасчетов <> Перечисления.ПорядокРасчетов.ПоДоговорамКонтрагентов Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Договор");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НомерВходящегоДокумента)
		И НЕ ЗначениеЗаполнено(ДатаВходящегоДокумента) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НомерВходящегоДокумента");
		МассивНепроверяемыхРеквизитов.Добавить("ДатаВходящегоДокумента");
	КонецЕсли; 

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(
		ПроверяемыеРеквизиты,
		МассивНепроверяемыхРеквизитов);
	
	Если ЗначениеЗаполнено(Организация) И Организация = Контрагент Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Организация и контрагент не должны совпадать'"),
			ЭтотОбъект,
			"Контрагент",
			,
			Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ);
	
	ПараметрыРегистрации = Документы.ПервичныйДокумент.ПараметрыРегистрацииСчетовФактурПолученных(ЭтотОбъект);
	УчетНДСУП.АктуализироватьСчетаФактурыПолученныеПриПроведении(ПараметрыРегистрации);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	
	ПараметрыРегистрации = Документы.ПервичныйДокумент.ПараметрыРегистрацииСчетовФактурПолученных(ЭтотОбъект);
	УчетНДСУП.АктуализироватьСчетаФактурыПолученныеПриУдаленииПроведения(ПараметрыРегистрации);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьДокумент(ДанныеЗаполнения)
	
	ДанныеЗаполненияЭтоСтруктура = (ТипЗнч(ДанныеЗаполнения) = Тип("Структура"));
	
	Если НЕ ДанныеЗаполненияЭтоСтруктура ИЛИ НЕ ДанныеЗаполнения.Свойство("Организация") Тогда
		Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	КонецЕсли;
	
	Если НЕ ДанныеЗаполненияЭтоСтруктура ИЛИ НЕ ДанныеЗаполнения.Свойство("Контрагент") Тогда
		Контрагент = Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;
	
	Если НЕ ДанныеЗаполненияЭтоСтруктура ИЛИ НЕ ДанныеЗаполнения.Свойство("Договор") Тогда
		Если ДанныеЗаполненияЭтоСтруктура 
			И ДанныеЗаполнения.Свойство("Партнер")
			И ДанныеЗаполнения.Партнер = Справочники.Партнеры.НашеПредприятие Тогда
			Договор = Справочники.ДоговорыМеждуОрганизациями.ПустаяСсылка();
		Иначе
			Договор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ДанныеЗаполненияЭтоСтруктура ИЛИ НЕ ДанныеЗаполнения.Свойство("Валюта") Тогда
		Если Не ЗначениеЗаполнено(Валюта) Тогда
			Валюта = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Организация);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
