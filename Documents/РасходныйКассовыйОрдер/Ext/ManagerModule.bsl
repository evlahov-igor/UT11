#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Формирует описание реквизитов объекта, заполняемых по статистике их использования.
//
// Параметры:
//  ОписаниеРеквизитов - Структура - описание реквизитов, для которых необходимо получить значения по статистике
//
//
Процедура ЗадатьОписаниеЗаполняемыхРеквизитовПоСтатистике(ОписаниеРеквизитов) Экспорт
	
	Параметры = ЗаполнениеОбъектовПоСтатистике.ПараметрыЗаполняемыхРеквизитов();
	Параметры.РазрезыСбораСтатистики.ИспользоватьВсегда = "Кассир";
	Параметры.ЗаполнятьПриУсловии.ПоляОбъектаЗаполнены = "Кассир";
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(ОписаниеРеквизитов,
		"Подразделение", Параметры);
	
	Параметры = ЗаполнениеОбъектовПоСтатистике.ПараметрыЗаполняемыхРеквизитов();
	Параметры.РазрезыСбораСтатистики.ИспользоватьВсегда = "Касса";
	Параметры.ЗаполнятьПриУсловии.ПоляОбъектаЗаполнены = "Касса, Автор";
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(ОписаниеРеквизитов, "Кассир", Параметры);
	
КонецПроцедуры

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("Взаиморасчеты");
	МеханизмыДокумента.Добавить("ОборотныеРегистрыУправленческогоУчета");
	МеханизмыДокумента.Добавить("ПланированиеКонтрольДенежныхСредств");
	МеханизмыДокумента.Добавить("РасчетыСПодотчетниками");
	МеханизмыДокумента.Добавить("РеестрДокументов");
	МеханизмыДокумента.Добавить("СебестоимостьИПартионныйУчет");
	МеханизмыДокумента.Добавить("СуммыДокументовВВалютахУчета");
	МеханизмыДокумента.Добавить("УчетДенежныхСредств");
	МеханизмыДокумента.Добавить("УчетДоходовРасходов");
	МеханизмыДокумента.Добавить("УчетПрочихАктивовПассивов");
	МеханизмыДокумента.Добавить("ФинансовыеИнструменты");
	
	РасходныйКассовыйОрдерЛокализация.ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента);
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка - ссылка на документ, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов - таблиц значений - данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Запрос			= Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		////////////////////////////////////////////////////////////////////////////
		// Создадим запрос инициализации движений
		
		ЗаполнитьПараметрыИнициализации(Запрос, Документ);
		
		////////////////////////////////////////////////////////////////////////////
		// Сформируем текст запроса
		СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса, Регистры);
		
		ТекстЗапросаТаблицаДенежныеСредстваНаличные(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДенежныеСредстваБезналичные(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаДенежныеСредстваВПути(Запрос, ТекстыЗапроса, Регистры);
		
		ТекстЗапросаТаблицаДенежныеСредстваУПодотчетныхЛиц(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДенежныеСредстваКВыплате(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаРасчетыПоФинансовымИнструментам(Запрос, ТекстыЗапроса, Регистры);
		
		ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДенежныеСредстваВКассахККМ(Запрос, ТекстыЗапроса, Регистры);
		
		ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДвиженияДенежныхСредств(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДвиженияДенежныеСредстваДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДвиженияДенежныеСредстваКонтрагент(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДвиженияКонтрагентКонтрагент(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаЛимитыРасходаДенежныхСредств(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
		
		// Выполение запроса и выгрузка полученных таблиц для формирования движений
		РасходныйКассовыйОрдерЛокализация.ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры);
	КонецЕсли;
	
	ДобавитьТекстыОтраженияВзаиморасчетов(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеДокументов.ДобавитьЗапросыСторноДвижений(Запрос, ТекстыЗапроса, Регистры, ПустаяСсылка().Метаданные());
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

// Возвращает структуру параметров для заполнения налогообложения НДС продажи.
//
// Параметры:
//  Объект - ДокументОбъект.РасходныйКассовыйОрдер - документ, по которому необходимо сформировать параметры.
//
// Возвращаемое значение:
//  Структура - см. УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи
//
Функция ПараметрыЗаполненияНалогообложенияНДСПродажи(Объект) Экспорт
	
	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи();
	
	ПараметрыЗаполнения.Организация = Объект.Организация;
	ПараметрыЗаполнения.Дата = Объект.Дата;
	ПараметрыЗаполнения.Договор = Объект.Договор;
	ПараметрыЗаполнения.НаправлениеДеятельности = Объект.НаправлениеДеятельности;
	ПараметрыЗаполнения.Подразделение = Объект.Подразделение;
	
	ПараметрыЗаполнения.РеализацияТоваров = Истина;
	ПараметрыЗаполнения.РеализацияРаботУслуг = Истина;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Возвращает структуру параметров для заполнения налогообложения НДС закупки.
//
// Параметры:
//  Объект - ДокументОбъект.РасходныйКассовыйОрдер - документ, по которому необходимо сформировать параметры.
//
// Возвращаемое значение:
//  Структура - Параметры заполнения, описание параметров см. УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСЗакупки();
//
Функция ПараметрыЗаполненияНалогообложенияНДСЗакупки(Объект) Экспорт
	
	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСЗакупки();
	
	ПараметрыЗаполнения.Контрагент = Объект.Контрагент;
	ПараметрыЗаполнения.Договор = Объект.Договор;
	
	ПараметрыЗаполнения.ПриобретениеТоваров = Истина;
	ПараметрыЗаполнения.ПриобретениеРабот = Истина;
	ПараметрыЗаполнения.ПриобретениеНаСтатьи = Истина;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.АвансовыйОтчет.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.ОтражениеРасхожденийПриИнкассацииДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.ПоступлениеБезналичныхДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.ПриходныйКассовыйОрдер.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	БизнесПроцессы.Задание.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетНДС") Тогда
		Документы.СчетФактураПолученныйАванс.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	КонецЕсли;
	
	ХозяйственныеОперацииДляИсправления = Новый Массив;
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.СдачаДенежныхСредствВБанк);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ИнкассацияДенежныхСредствВБанк);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствВКассуККМ);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ОплатаПоКредитам);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ВыдачаЗаймов);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ОплатаАрендодателю);
	ИсправлениеДокументов.ДобавитьКомандыСозданияНаОсновании(
		КомандыСозданияНаОсновании, ПустаяСсылка().Метаданные(), ХозяйственныеОперацииДляИсправления, Ложь);
	
	РасходныйКассовыйОрдерЛокализация.ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры);

КонецПроцедуры

// Добавляет команду создания документа "Расходный кассовый ордер".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Порядок - Число - Порядок команды.
//
// Возвращаемое значение:
//	ТаблицаЗначений, Неопределено - сформированные команды для вывода в подменю.
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании, Порядок = 0) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.РасходныйКассовыйОрдер) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.РасходныйКассовыйОрдер.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.РасходныйКассовыйОрдер);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.Порядок = Порядок;
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	РасходныйКассовыйОрдерЛокализация.ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры);

КонецПроцедуры

// Возвращает параметры механизма взаиморасчетов.
//
// Параметры:
// 	ДанныеЗаполнения - ДокументОбъект, СправочникОбъект, ДокументСсылка, СправочникСсылка, Структура, ДанныеФормыСтруктура - Объект или коллекция для
//              расчета параметров взаиморасчетов.
//
// Возвращаемое значение:
// 	Массив из См. ВзаиморасчетыСервер.ПараметрыМеханизма - Массив параметров функций механизма взаиморасчетов.
//
Функция ПараметрыВзаиморасчеты(ДанныеЗаполнения = Неопределено) Экспорт
	
	Если ОбщегоНазначения.ЗначениеСсылочногоТипа(ДанныеЗаполнения) Тогда
		СтруктураДанныеЗаполнения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			ДанныеЗаполнения, 
			"ХозяйственнаяОперация");
		ХозяйственнаяОперация = СтруктураДанныеЗаполнения.ХозяйственнаяОперация;
	ИначеЕсли ДанныеЗаполнения = Неопределено Тогда
		ХозяйственнаяОперация = Неопределено;
	Иначе
		ХозяйственнаяОперация = ДанныеЗаполнения.ХозяйственнаяОперация;
	КонецЕсли;
	
	МассивСтруктур = Новый Массив();
	
	#Область ВсеОстальныеФункции
	
	СтруктураПараметров = ВзаиморасчетыСервер.ПараметрыМеханизма();
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию Тогда
		СтруктураПараметров.ТипРасчетов                      = Перечисления.ТипыРасчетовСПартнерами.РасчетыСКлиентом;
		СтруктураПараметров.ОбъектРасчетов                   = "Объект.ОбъектРасчетов";
	ИначеЕсли ХозяйственнаяОперация =Перечисления.ХозяйственныеОперации.ОплатаПоставщику
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию Тогда
		СтруктураПараметров.ТипРасчетов                      = Перечисления.ТипыРасчетовСПартнерами.РасчетыСПоставщиком;
	КонецЕсли;
	
	СтруктураПараметров.ИзменяетПланОплаты = ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию;
	СтруктураПараметров.ИзменяетРасчетыСтрокой                = 
		"ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику)
		|	ИЛИ ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию)
		|	ИЛИ
		|//Условие возврата начало
		|	ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту)
		|	ИЛИ ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
		|//Условие возврата окончание";
	
	СтруктураПараметров.ИзменяетПланОтгрузкиПоставки = Ложь;
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию Тогда
		СтруктураПараметров.Контрагент                             = "Объект.КассаПолучатель.Владелец";
		СтруктураПараметров.Партнер                                = Справочники.Партнеры.НашеПредприятие;
	Иначе
		СтруктураПараметров.Контрагент                             = "Объект.Контрагент";
		СтруктураПараметров.Партнер                          = "Объект.РасшифровкаПлатежа.Партнер";
	КонецЕсли;
	
	СтруктураПараметров.ВалютаВзаиморасчетов             = "Объект.РасшифровкаПлатежа.ВалютаВзаиморасчетов";
	СтруктураПараметров.КурсЧислитель                    = "";
	СтруктураПараметров.КурсЗнаменатель                  = "";
	СтруктураПараметров.ПорядокРасчетов                  = "";
	
	СтруктураПараметров.ФормаОплаты                      = "";
	СтруктураПараметров.ОплатаВВалюте                    = "";
	 
	СтруктураПараметров.ПутьКДаннымТЧРасшифровкаПлатежа  = "Объект.РасшифровкаПлатежа";
	СтруктураПараметров.Организация                      = "Объект.Организация";
	СтруктураПараметров.Соглашение                       = "";
	СтруктураПараметров.Договор                          = "Объект.Договор";
	СтруктураПараметров.БанковскийСчетОрганизации        = "";
	СтруктураПараметров.БанковскийСчетКонтрагента        = "";
	СтруктураПараметров.Касса                            = "Объект.Касса";
	СтруктураПараметров.Дата                             = "Объект.Дата";
	СтруктураПараметров.ИдентификаторПлатежа             = "";
	
	СтруктураПараметров.НомерВходящегоДокумента          = "";
	СтруктураПараметров.ДатаВходящегоДокумента           = "";
	СтруктураПараметров.НалогообложениеНДС               = "Объект.НалогообложениеНДС";
	
	СтруктураПараметров.ЭлементыФормы.РасшифровкаПлатежа               = "РасшифровкаПлатежа";
	СтруктураПараметров.ЭлементыФормы.ПодборВРасшифровкуПлатежа        = "РасшифровкаПлатежаПодборПоОстаткам";
	
	СтруктураПараметров.ПартнерПрочиеОтношения           = Ложь;
	
	СтруктураПараметров.ПодборТолькоБезусловнойЗадолженности =
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию;
		
	МассивСтруктур.Добавить(СтруктураПараметров);
	
	#КонецОбласти
	
	#Область ОбъектРасчетовВозврат
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию Тогда
		
		СтруктураПараметров = ВзаиморасчетыСервер.ПараметрыМеханизма();
	
		СтруктураПараметров.ТипРасчетов                      = Перечисления.ТипыРасчетовСПартнерами.РасчетыСКлиентом;
		СтруктураПараметров.ОбъектРасчетов                   = "Объект.ОбъектРасчетов";
		
		СтруктураПараметров.ИзменяетПланОплаты               = ИСТИНА;
		СтруктураПараметров.ИзменяетРасчетыСтрокой           = 
			"ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику)
			|	ИЛИ ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию)
			|	ИЛИ
			|//Условие возврата начало
			|	ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту)
			|	ИЛИ ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
			|//Условие возврата окончание";
		
		СтруктураПараметров.ИзменяетПланОтгрузкиПоставки     = ЛОЖЬ;
		
		Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию Тогда
			СтруктураПараметров.Контрагент                             = "Объект.КассаПолучатель.Владелец";
			СтруктураПараметров.Партнер                                = Справочники.Партнеры.НашеПредприятие;
		Иначе
			СтруктураПараметров.Контрагент                             = "Объект.Контрагент";
			СтруктураПараметров.Партнер                                = "Объект.РасшифровкаПлатежа.Партнер";
		КонецЕсли;
		
		СтруктураПараметров.ВалютаВзаиморасчетов             = "Объект.РасшифровкаПлатежа.ВалютаВзаиморасчетов";
		СтруктураПараметров.КурсЧислитель                    = "";
		СтруктураПараметров.КурсЗнаменатель                  = "";
		СтруктураПараметров.ПорядокРасчетов                  = "";
		
		СтруктураПараметров.ФормаОплаты                      = "";
		СтруктураПараметров.ОплатаВВалюте                    = "";
		 
		СтруктураПараметров.ПутьКДаннымТЧРасшифровкаПлатежа  = "Объект.РасшифровкаПлатежа";
		СтруктураПараметров.Организация                      = "Объект.Организация";
		СтруктураПараметров.Соглашение                       = "";
		СтруктураПараметров.Договор                          = "Объект.Договор";
		СтруктураПараметров.БанковскийСчетОрганизации        = "";
		СтруктураПараметров.БанковскийСчетКонтрагента        = "";
		СтруктураПараметров.Касса                            = "Объект.Касса";
		СтруктураПараметров.Дата                             = "Объект.Дата";
		СтруктураПараметров.ИдентификаторПлатежа             = "";
		
		СтруктураПараметров.НомерВходящегоДокумента          = "";
		СтруктураПараметров.ДатаВходящегоДокумента           = "";
		СтруктураПараметров.НалогообложениеНДС               = "Объект.НалогообложениеНДС";
		
		МассивСтруктур.Добавить(СтруктураПараметров);
		
	КонецЕсли;
	
	#КонецОбласти
	
	Возврат МассивСтруктур;
	
КонецФункции


#Область Прочее

// Функция получает реквизиты документа для обмена с конфигурацией "Бухгалтерия предприятия".
//
// Параметры:
//	ДокументСсылка - ДокументСсылка - Документ, для которого необходимо получить реквизиты.
//
// Возвращаемое значение:
//	Структура - Структура реквизитов документа.
//
Функция РеквизитыДокументаДляОбменаСБухгалтерией(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств.КорреспондирующийСчет КАК КорреспондирующийСчет,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.СтатьяДвиженияДенежныхСредств.КорреспондирующийСчет <> """"
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДанныеДокумента.СтатьяРасходов.КорреспондирующийСчет КАК КорреспондирующийСчет,
	|	ДанныеДокумента.СтатьяРасходов КАК СтатьяРасходов
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеРасходы)
	|	И ДанныеДокумента.СтатьяРасходов.КорреспондирующийСчет <> """"
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДокумента.НомерСтроки
	|");
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	Выборка = МассивРезультатов[0].Выбрать();
	Если Выборка.Следующий() Тогда
		КорреспондирующийСчет = Выборка.КорреспондирующийСчет;
		ХозяйственнаяОперация = Выборка.ХозяйственнаяОперация;
	Иначе
		КорреспондирующийСчет = "";
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПустаяСсылка();
	КонецЕсли;
	
	Выборка = МассивРезультатов[1].Выбрать();
	Если Выборка.Следующий() Тогда
		КорреспондирующийСчет = Выборка.КорреспондирующийСчет;
		СтатьяРасходов = Выборка.СтатьяРасходов;
	Иначе
		СтатьяРасходов = Неопределено;
	КонецЕсли;
	
	ВидОперации = "ПрочийРасход";
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочиеРасходы Тогда
		
		Если СтрНайти(КорреспондирующийСчет, "70") <> 0 Тогда
			ВидОперации = "ВыплатаЗаработнойПлатыПоВедомостям";
		КонецЕсли;
	
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств Тогда
		
		Если СтрНайти(КорреспондирующийСчет, "66") <> 0
		 ИЛИ СтрНайти(КорреспондирующийСчет, "67") <> 0 Тогда
			ВидОперации = "РасчетыПоКредитамИЗаймам";
			
		ИначеЕсли СтрНайти(КорреспондирующийСчет, "70") <> 0 Тогда
			ВидОперации = "ВыплатаЗаработнойПлатыПоВедомостям";
			
		КонецЕсли;
		
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("ВидОперации, Счет, СтатьяРасходов",
		ВидОперации,
		КорреспондирующийСчет,
		СтатьяРасходов);
	
	Возврат СтруктураРеквизитов;
		
КонецФункции

// Процедура заполняет массивы реквизитов, зависимых от хозяйственной операции документа.
//
// Параметры:
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Выбранная хозяйственная операция
//	МассивВсехРеквизитов - Массив - Массив всех имен реквизитов, зависимых от хозяйственной операции
//	МассивРеквизитовОперации - Массив - Массив имен реквизитов, используемых в выбранной хозяйственной операции.
//
Процедура ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(ХозяйственнаяОперация, МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("БанковскийСчет");
	МассивВсехРеквизитов.Добавить("ВалютаКонвертации");
	МассивВсехРеквизитов.Добавить("Ведомость");
	МассивВсехРеквизитов.Добавить("ВыплатаЗаработнойПлаты");
	МассивВсехРеквизитов.Добавить("ДатаАвансовогоОтчета");
	МассивВсехРеквизитов.Добавить("ДатаВедомостиНаВыплатуЗарплаты");
	МассивВсехРеквизитов.Добавить("ЗаявкаНаРасходованиеДенежныхСредств");
	МассивВсехРеквизитов.Добавить("КассаККМ");
	МассивВсехРеквизитов.Добавить("КассаПолучатель");
	МассивВсехРеквизитов.Добавить("Контрагент");
	МассивВсехРеквизитов.Добавить("КурсКонвертации");
	МассивВсехРеквизитов.Добавить("КратностьКурсаКонвертации");
	МассивВсехРеквизитов.Добавить("НомерВедомостиНаВыплатуЗарплаты");
	МассивВсехРеквизитов.Добавить("ОплатаПоЗаявкам");
	МассивВсехРеквизитов.Добавить("ПодотчетноеЛицо");
	МассивВсехРеквизитов.Добавить("Подразделение");
	МассивВсехРеквизитов.Добавить("СтатьяДвиженияДенежныхСредств");
	МассивВсехРеквизитов.Добавить("СуммаКонвертации");
	МассивВсехРеквизитов.Добавить("СтрокаФизическиеЛица");
	
	МассивВсехРеквизитов.Добавить("ГруппаФинансовогоУчета");
	МассивВсехРеквизитов.Добавить("НаправлениеДеятельности");
	МассивВсехРеквизитов.Добавить("Договор");
	МассивВсехРеквизитов.Добавить("НалогообложениеНДС");
	
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа");
	МассивВсехРеквизитов.Добавить("РаспоряжениеНаПеремещениеДенежныхСредств");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ДоговорКредитаДепозита");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ДоговорЗаймаСотруднику");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ДоговорАренды");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ОбъектРасчетов");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Комментарий");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Партнер");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Подразделение");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.СтавкаНДС");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.СуммаНДС");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ТипСуммыКредитаДепозита");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ТипПлатежаПоАренде");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Организация");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.НаправлениеДеятельности");
	
	МассивРеквизитовОперации = Новый Массив;
	
	МассивРеквизитовОперации.Добавить("Подразделение");
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику Тогда
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ГруппаФинансовогоУчета");
		МассивРеквизитовОперации.Добавить("НаправлениеДеятельности");
		МассивРеквизитовОперации.Добавить("Договор");
		МассивРеквизитовОперации.Добавить("НалогообложениеНДС");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ОбъектРасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтавкаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Организация");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту Тогда
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ГруппаФинансовогоУчета");
		МассивРеквизитовОперации.Добавить("НаправлениеДеятельности");
		МассивРеквизитовОперации.Добавить("Договор");
		МассивРеквизитовОперации.Добавить("НалогообложениеНДС");
		
		// << 28.12.2022 Марченко С.Н., КРОК, JIRA№A2105505-725
		МассивРеквизитовОперации.Добавить("КассаККМ");  
		// >> 28.12.2022 Марченко С.Н., КРОК, JIRA№A2105505-725
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ОбъектРасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтавкаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Организация");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СдачаДенежныхСредствВБанк Тогда
		МассивРеквизитовОперации.Добавить("РаспоряжениеНаПеремещениеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("БанковскийСчет");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИнкассацияДенежныхСредствВБанк Тогда
		МассивРеквизитовОперации.Добавить("РаспоряжениеНаПеремещениеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("БанковскийСчет");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу Тогда
		МассивРеквизитовОперации.Добавить("РаспоряжениеНаПеремещениеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("КассаПолучатель");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию Тогда
		МассивРеквизитовОперации.Добавить("КассаПолучатель");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ГруппаФинансовогоУчета");
		МассивРеквизитовОперации.Добавить("НаправлениеДеятельности");
		МассивРеквизитовОперации.Добавить("Договор");
		МассивРеквизитовОперации.Добавить("НалогообложениеНДС");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ОбъектРасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтавкаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Организация");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику Тогда
		МассивРеквизитовОперации.Добавить("ПодотчетноеЛицо");
		МассивРеквизитовОперации.Добавить("ДатаАвансовогоОтчета");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствВКассуККМ Тогда
		МассивРеквизитовОперации.Добавить("КассаККМ");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств Тогда
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Подразделение");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.НаправлениеДеятельности");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию Тогда
		МассивРеквизитовОперации.Добавить("КассаПолучатель");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ГруппаФинансовогоУчета");
		МассивРеквизитовОперации.Добавить("НаправлениеДеятельности");
		МассивРеквизитовОперации.Добавить("Договор");
		МассивРеквизитовОперации.Добавить("НалогообложениеНДС");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ОбъектРасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтавкаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Организация");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств Тогда
		МассивРеквизитовОперации.Добавить("КассаПолучатель");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КонвертацияВалюты Тогда
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("КассаПолучатель");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ВалютаКонвертации");
		МассивРеквизитовОперации.Добавить("КурсКонвертации");
		МассивРеквизитовОперации.Добавить("КратностьКурсаКонвертации");
		МассивРеквизитовОперации.Добавить("СуммаКонвертации");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыЧерезКассу Тогда
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьНачислениеЗарплатыУТ") Тогда
			МассивРеквизитовОперации.Добавить("Ведомость");
			МассивРеквизитовОперации.Добавить("СтрокаФизическиеЛица");
			МассивРеквизитовОперации.Добавить("ВыплатаЗаработнойПлаты");
		Иначе
			МассивРеквизитовОперации.Добавить("НомерВедомостиНаВыплатуЗарплаты");
			МассивРеквизитовОперации.Добавить("ДатаВедомостиНаВыплатуЗарплаты");
		КонецЕсли;
		
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("ЗаявкаНаРасходованиеДенежныхСредств");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыРаздатчиком Тогда
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьНачислениеЗарплатыУТ") Тогда
			МассивРеквизитовОперации.Добавить("Ведомость");
			МассивРеквизитовОперации.Добавить("СтрокаФизическиеЛица");
			МассивРеквизитовОперации.Добавить("ВыплатаЗаработнойПлаты");
		Иначе
			МассивРеквизитовОперации.Добавить("НомерВедомостиНаВыплатуЗарплаты");
			МассивРеквизитовОперации.Добавить("ДатаВедомостиНаВыплатуЗарплаты");
		КонецЕсли;
		
		МассивРеквизитовОперации.Добавить("ПодотчетноеЛицо");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("ЗаявкаНаРасходованиеДенежныхСредств");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыРаботнику Тогда
		Если ПолучитьФункциональнуюОпцию("ИспользоватьНачислениеЗарплатыУТ") Тогда
			МассивРеквизитовОперации.Добавить("Ведомость");
		Иначе
			МассивРеквизитовОперации.Добавить("НомерВедомостиНаВыплатуЗарплаты");
			МассивРеквизитовОперации.Добавить("ДатаВедомостиНаВыплатуЗарплаты");
		КонецЕсли;
		
		МассивРеквизитовОперации.Добавить("ПодотчетноеЛицо");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("ЗаявкаНаРасходованиеДенежныхСредств");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоКредитам
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаЗаймов Тогда
		
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("Контрагент");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ДоговорКредитаДепозита");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоКредитам Тогда
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ТипСуммыКредитаДепозита");
		КонецЕсли;
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику Тогда
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ПодотчетноеЛицо");
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьНачислениеЗарплатыУТ") Тогда
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ДоговорЗаймаСотруднику");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		Иначе
			МассивРеквизитовОперации.Добавить("ЗаявкаНаРасходованиеДенежныхСредств");
			МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Функция определяет реквизиты выбранного документа.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка - Ссылка на документа.
//
// Возвращаемое значение:
//	Структура - реквизиты выбранного документа.
//
Функция РеквизитыДокумента(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.РасходныйКассовыйОРдер КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументСсылка
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Дата = Выборка.Дата;
		Организация = Выборка.Организация;
		ХозяйственнаяОперация = Выборка.ХозяйственнаяОперация;
	Иначе
		Дата = Дата(1,1,1);
		Организация = Справочники.Организации.ПустаяСсылка();
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПустаяСсылка();
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("Дата, Организация, ХозяйственнаяОперация",
		Дата,
		Организация,
		ХозяйственнаяОперация);
	
	Возврат СтруктураРеквизитов;

КонецФункции

// Определяет состав хоз. операций документа, для которых не используется расшифровка платежа при отсутствии заявок на
// расход ДС.
//
// Возвращаемое значение:
//    Массив - хозяйственные операции без использования расшифровки платежа.
//
Функция МассивОперацийБезРасшифровкиПлатежа() Экспорт
	
	МассивОпераций = Новый Массив;
	
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств);
	
	Возврат МассивОпераций;
	
КонецФункции

// Возвращает параметры выбора статей в документе.
// 
// Параметры:
// 	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа.
// 
// Возвращаемое значение:
// 	Массив - Массив параметров настройки счетов учета (См. ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики)
//
Функция ПараметрыВыбораСтатейИАналитик(ХозяйственнаяОперация) Экспорт
	
	МассивПаметровВыбора = Новый Массив;
	
	#Область СтатьяРасходов
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект.РасшифровкаПлатежа";
	ПараметрыВыбора.Статья = "СтатьяРасходов";
	ПараметрыВыбора.ТипСтатьи = "ТипСтатьи";
	ПараметрыВыбора.ЗначениеПоУмолчанию = ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка();
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("РасшифровкаБезРазбиенияСтатьяРасходов");
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("РасшифровкаПлатежаСтатьяРасходов");	
	ПараметрыВыбора.ДоступностьПоОперации = ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств;
	
	#Область АналитикаАктивовПассивов
	ПараметрыВыбора.ВыборСтатьиАктивовПассивов = Истина;
	ПараметрыВыбора.АналитикаАктивовПассивов = "АналитикаАктивовПассивов";
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("РасшифровкаБезРазбиенияАналитикаАктивовПассивов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("РасшифровкаПлатежаАналитикаАктивовПассивов");
	#КонецОбласти
	
	#Область АналитикаРасходов
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходов";
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("РасшифровкаБезРазбиенияАналитикаРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("РасшифровкаПлатежаАналитикаРасходов");
	#КонецОбласти
	
	МассивПаметровВыбора.Добавить(ПараметрыВыбора);
	#КонецОбласти
		
	Возврат МассивПаметровВыбора;
	
КонецФункции

// Определяет свойства полей формы в зависимости от данных
//
// Параметры:
//	Настройки - ТаблицаЗначений - таблица с колонками:
//		* Поля - Массив - поля, для которых определяются настройки отображения
//		* Условие - ОтборКомпоновкиДанных - условия применения настройки
//		* Свойства - Структура - имена и значения свойств
//
Процедура ЗаполнитьНастройкиПолейФормы(Настройки) Экспорт
	
	Финансы = ФинансоваяОтчетностьСервер;
	Операции = Перечисления.ХозяйственныеОперации;
	
	#Область Шапка
	// ОплатаПоЗаявкам
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ОплатаПоЗаявкам");
	Элемент.Поля.Добавить("НадписьЗаголовокЗаявки");
	
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьЗаявкиНаРасходованиеДенежныхСредств", Истина);
	
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПрочаяВыдачаДенежныхСредств);

	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВнутренняяПередачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.КонвертацияВалюты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймаСотруднику);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ОплатаПоЗаявкам");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.РазрешеныПлатежиБезУказанияЗаявок", Истина);
	Элемент.Свойства.Вставить("Доступность");
	
	// ПодотчетноеЛицо
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ПодотчетноеЛицо");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыРаздатчиком);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыРаботнику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймаСотруднику);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ПодотчетноеЛицо");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймаСотруднику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыРаботнику);
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru='Работник'"));
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ПодотчетноеЛицо");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыРаздатчиком);
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru='Раздатчик'"));
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ПодотчетноеЛицо");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru='Подотчетное лицо'"));
	
	// БанковскийСчет
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("БанковскийСчет");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.СдачаДенежныхСредствВБанк);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ИнкассацияДенежныхСредствВБанк);
	Элемент.Свойства.Вставить("Видимость");
	
	// КассаПолучатель
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("КассаПолучатель");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствВДругуюКассу);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВнутренняяПередачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.КонвертацияВалюты);
	Элемент.Свойства.Вставить("Видимость");
	
	// КассаККМ
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("КассаККМ");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствВКассуККМ);
	// << 28.12.2022 Марченко С.Н., КРОК, JIRA№A2105505-725
	ГруппаИ = Финансы.НовыйОтбор(ГруппаИли, , , Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту); 
	Финансы.НовыйОтбор(ГруппаИ, "КР_ВозвратИзКассыККМ", Истина); 
	// >> 28.12.2022 Марченко С.Н., КРОК, JIRA№A2105505-725
	Элемент.Свойства.Вставить("Видимость");
	
	// << 28.12.2022 Марченко С.Н., КРОК, JIRA№A2105505-725
	// КР_ВозвратИзКассыККМ
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("КР_ВозвратИзКассыККМ");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту); 
	Элемент.Свойства.Вставить("Видимость");  
	
	// Касса
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("Касса");
	Финансы.НовыйОтбор(Элемент.Условие, "КР_ВозвратИзКассыККМ", Ложь); 
	Элемент.Свойства.Вставить("Видимость");  
	// >> 28.12.2022 Марченко С.Н., КРОК, JIRA№A2105505-725
	
	// НадписьВалюта
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("НадписьВалюта");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНесколькоВалют", Ложь);
	Элемент.Свойства.Вставить("Видимость");
	
	// Контрагент
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("Контрагент");
	Элемент.Поля.Добавить("СтраницыПроблемаПроверкаКонтрагентаКонтрагент");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПрочаяВыдачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.КонвертацияВалюты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоКредитам);
	Элемент.Свойства.Вставить("Видимость");
	
	// СтатьяДвиженияДенежныхСредств
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("СтатьяДвиженияДенежныхСредств");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВнутренняяПередачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.КонвертацияВалюты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыЧерезКассу);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыРаздатчиком);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыРаботнику);
	
	ГруппаИ1 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ1, "ХозяйственнаяОперация", Операции.ВыдачаЗаймаСотруднику);
	Финансы.НовыйОтбор(ГруппаИ1, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Ложь);
	Элемент.Свойства.Вставить("Видимость");
	
	// РаспоряжениеНаПеремещениеДенежныхСредств
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РаспоряжениеНаПеремещениеДенежныхСредств");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.СдачаДенежныхСредствВБанк);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ИнкассацияДенежныхСредствВБанк);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствВДругуюКассу);
	Элемент.Свойства.Вставить("Видимость");
	
	// ЗаявкаНаРасходованиеДенежныхСредств
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ЗаявкаНаРасходованиеДенежныхСредств");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыЧерезКассу);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыРаздатчиком);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыРаботнику);
	ГруппаИ1 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ1, "ХозяйственнаяОперация", Операции.ВыдачаЗаймаСотруднику);
	Финансы.НовыйОтбор(ГруппаИ1, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Ложь);
	Элемент.Свойства.Вставить("Видимость");
	
	// ДокументОснование
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ДокументОснование");
	Финансы.НовыйОтбор(Элемент.Условие, "ДокументОснование",,, ВидСравненияКомпоновкиДанных.Заполнено);
	Элемент.Свойства.Вставить("Видимость");  
	
	// --> Евлахов Игорь Николаевич (Начало) 08.02.2024
	// Задача #3681
	
	// Основание
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("Основание"); 
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ИнкассацияДенежныхСредствВБанк);
    Элемент.Свойства.Вставить("ТолькоПросмотр"); 
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("Основание"); 
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствВКассуККМ); 
	Элемент.Свойства.Вставить("АвтоОтметкаНезаполненного");
	
	// --> Евлахов Игорь Николаевич (Начало) 03.05.2024
	// Задача #3985
	// Начало было
	//// ПоДокументу
	//Элемент = Настройки.Добавить();
	//Элемент.Поля.Добавить("ПоДокументу"); 
	//Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствВКассуККМ); 
	//Элемент.Свойства.Вставить("АвтоОтметкаНезаполненного");
	// Конец было
	
	// Кассир
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("Кассир"); 
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствВКассуККМ); 
	Элемент.Свойства.Вставить("АвтоОтметкаНезаполненного");
	// <-- Евлахов Игорь Николаевич (Конец) 03.05.2024
	
	// Выдать
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("Выдать"); 
	
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ИнкассацияДенежныхСредствВБанк);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствВКассуККМ); 
	
	Элемент.Свойства.Вставить("ТолькоПросмотр"); 
	Элемент.Свойства.Вставить("АвтоОтметкаНезаполненного");
	// <-- Евлахов Игорь Николаевич (Конец) 08.02.2024
	#КонецОбласти
	
	#Область Реквизиты
	// ПериодАвансовогоОтчета, ДатаАвансовогоОтчета
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ПериодАвансовогоОтчета");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ДатаАвансовогоОтчета");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ПериодАвансовогоОтчетаДата", Ложь);
	Элемент.Свойства.Вставить("Видимость");
	
	// Конвертация
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ВалютаКонвертации");
	Элемент.Поля.Добавить("КурсКонвертации");
	Элемент.Поля.Добавить("СуммаКонвертации");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.КонвертацияВалюты);
	Элемент.Свойства.Вставить("Видимость");
	
	// --> Евлахов Игорь Николаевич (Начало) 28.09.2023
	// Задача #3091
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("Руководитель");
	Финансы.НовыйОтбор(Элемент.Условие, "Руководитель",,, ВидСравненияКомпоновкиДанных.Заполнено);
	Элемент.Свойства.Вставить("Видимость"); 
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ГлавныйБухгалтер");
	Финансы.НовыйОтбор(Элемент.Условие, "ГлавныйБухгалтер",,, ВидСравненияКомпоновкиДанных.Заполнено);
	Элемент.Свойства.Вставить("Видимость");	
	// <-- Евлахов Игорь Николаевич (Конец) 28.09.2023
	#КонецОбласти
	
	#Область РасшифровкаПлатежа
	// СтраницаРасшифровка
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("СтраницаРасшифровка");
	
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПрочаяВыдачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймов);
	
	ГруппаИ = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ, "ОплатаПоЗаявкам", Истина);
	ГруппаИли2 = Финансы.НовыйОтбор(ГруппаИ,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.ВнутренняяПередачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.КонвертацияВалюты);
	
	ГруппаИ = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Истина);
	ГруппаИли2 = Финансы.НовыйОтбор(ГруппаИ,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.ВыдачаЗаймаСотруднику);
	
	Элемент.Свойства.Вставить("Видимость");
	
	// ЗаявкаНаРасходованиеДенежныхСредств
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияЗаявкаНаРасходованиеДенежныхСредств");
	
	Финансы.НовыйОтбор(Элемент.Условие, "ОплатаПоЗаявкам", Истина);
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПрочаяВыдачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВнутренняяПередачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.КонвертацияВалюты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоКредитам);
	
	ГруппаИ = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Истина);
	Финансы.НовыйОтбор(ГруппаИ, "ХозяйственнаяОперация", Операции.ВыдачаЗаймаСотруднику);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияЗаявкаНаРасходованиеДенежныхСредств");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.РазрешеныПлатежиБезУказанияЗаявок", Истина);
	Финансы.НовыйОтбор(Элемент.Условие, "ОплатаПоЗаявкам", Ложь);
	Элемент.Свойства.Вставить("АвтоОтметкаНезаполненного", Ложь);
	Элемент.Свойства.Вставить("ОтметкаНезаполненного", Ложь);
	
	// Аналитика прочей выдачи
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.Подразделение");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияПодразделение");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.НаправлениеДеятельности");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияНаправлениеДеятельности");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ПрочаяВыдачаДенежныхСредств);
	Элемент.Свойства.Вставить("Видимость");
	
	// СтатьяДвиженияДенежныхСредств
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияСтатьяДвиженияДенежныхСредств");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПрочаяВыдачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоКредитам);
	
	ГруппаИ = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Истина);
	Финансы.НовыйОтбор(ГруппаИ, "ХозяйственнаяОперация", Операции.ВыдачаЗаймаСотруднику);
	Элемент.Свойства.Вставить("Видимость");
	
	// СуммаВзаиморасчетов, ВалютаВзаиморасчетов
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияСуммаВзаиморасчетов");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияВалютаВзаиморасчетов");
	
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНесколькоВалют", Истина);
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПрочаяВыдачаДенежныхСредств);
	Элемент.Свойства.Вставить("Видимость");
	
	// СуммаВзаиморасчетов
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияСуммаВзаиморасчетов");
	
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНесколькоВалют", Истина);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ВалютаВзаиморасчетов", "Валюта", , , Истина);
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПрочаяВыдачаДенежныхСредств);
	Элемент.Свойства.Вставить("ТолькоПросмотр");
	
	// ДекорацияВалютыИКурсПлатежа, КурсЧислительВзаиморасчетов, КурсЗнаменательВзаиморасчетов
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ДекорацияВалютыИКурсПлатежа");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.КурсЧислительВзаиморасчетов");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияКурсЧислительВзаиморасчетов");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.КурсЧислительВзаиморасчетовТекст");
	Элемент.Поля.Добавить("РасшифровкаПлатежаКурсЗнаменательВзаиморасчетовНадпись");
	
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНесколькоВалют", Истина);
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеНаДепозиты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПрочаяВыдачаДенежныхСредств);
	
	Финансы.НовыйОтбор(Элемент.Условие, "Валюта", "Дополнительно.ВалютаВзаиморасчетов",, ВидСравненияКомпоновкиДанных.НеРавно, Истина);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ВалютаВзаиморасчетов", Справочники.Валюты.ПустаяСсылка(), , ВидСравненияКомпоновкиДанных.НеРавно);
	Элемент.Свойства.Вставить("Видимость");
	
	// ДекорацияВалютыИКурсПлатежа
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ДекорацияВалютыИКурсПлатежа");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ВалютаВзаиморасчетов",,, ВидСравненияКомпоновкиДанных.Заполнено);
	Элемент.Свойства.Вставить("Доступность");
	
	// СуммаНДС, СтавкаНДС
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.СуммаНДС");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияСуммаНДС");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.СтавкаНДС");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияСтавкаНДС");
	Элемент.Поля.Добавить("ВалютаНДС");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Элемент.Свойства.Вставить("Видимость");
	
	// ОбъектРасчетов
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ОбъектРасчетов");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияОбъектРасчетов");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Элемент.Свойства.Вставить("Видимость");
	
	// Партнер
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.Партнер");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияПартнер");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоКредитам);
	Элемент.Свойства.Вставить("Видимость");
	
	// ДоговорКредитаДепозита
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ДоговорКредитаДепозита");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияДоговорКредитаДепозита");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоКредитам);
	Элемент.Свойства.Вставить("Видимость");
	
	// ТипСуммыКредитаДепозита
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ТипСуммыКредитаДепозита");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияТипСуммыКредитаДепозита");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ОплатаПоКредитам);
	Элемент.Свойства.Вставить("Видимость");
	
	// ДоговорЗаймаСотруднику
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ДоговорЗаймаСотруднику");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияДоговорЗаймаСотруднику");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ВыдачаЗаймаСотруднику);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Истина);
	Элемент.Свойства.Вставить("Видимость");
	
	// ДоговорАренды
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ДоговорАренды");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияДоговорАренды");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ТипПлатежаПоАренде");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияТипПлатежаПоАренде");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ОплатаАрендодателю);
	Элемент.Свойства.Вставить("Видимость");
	
	// Организация
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.Организация");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияОрганизация");
	Элемент.Поля.Добавить("ГиперссылкаРеквизитыОбъектаРасчетов");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ЕстьФилиалы", Истина);
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Элемент.Свойства.Вставить("Видимость");
	
	// Нераспределенный платеж
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ГруппаФинансовогоУчета");
	Элемент.Поля.Добавить("НаправлениеДеятельности");
	ГруппаИ = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию,, ВидСравненияКомпоновкиДанных.НеРавно);
	Финансы.НовыйОтбор(ГруппаИ, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту,, ВидСравненияКомпоновкиДанных.НеРавно);
	Финансы.НовыйОтбор(ГруппаИ, "Дополнительно.СуммаНераспределено", 0,, ВидСравненияКомпоновкиДанных.НеРавно);
	Элемент.Свойства.Вставить("Видимость");

	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ГруппаФинансовогоУчетаВозврата");
	Элемент.Поля.Добавить("НаправлениеДеятельностиВозврата");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("Договор");
	
	ГруппаИ1 = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ1, "Дополнительно.СуммаНераспределено", 0,, ВидСравненияКомпоновкиДанных.НеРавно);
	
	ГруппаИли = Финансы.НовыйОтбор(ГруппаИ1,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ГруппаИ2 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ2, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИ2, "Дополнительно.ИспользоватьДоговорыСПоставщиками", Истина);
	
	ГруппаИ3 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ3.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ3, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИ3, "Дополнительно.ИспользоватьДоговорыМеждуОрганизациями", Истина);
	
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ДоговорВозврата");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ГруппаИ1 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ1, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИ1, "Дополнительно.ИспользоватьДоговорыМеждуОрганизациями", Истина);
	
	ГруппаИ2 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ2, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИ2, "Дополнительно.ИспользоватьДоговорыСКлиентами", Истина);
		
	Элемент.Свойства.Вставить("Видимость");
	
	// Договор объекта расчетов
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияОбъектРасчетовДоговор");
	
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.СуммаНераспределено", 0);
	
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ГруппаИ1 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ1, "Дополнительно.ИспользоватьДоговорыСПоставщиками", Истина);
	Финансы.НовыйОтбор(ГруппаИ1, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	
	ГруппаИ2 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ2, "Дополнительно.ИспользоватьДоговорыМеждуОрганизациями", Истина);
	ГруппаИли2 = Финансы.НовыйОтбор(ГруппаИ2,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	
	ГруппаИ3 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ3.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ3, "Дополнительно.ИспользоватьДоговорыСКлиентами", Истина);
	ГруппаИли3 = Финансы.НовыйОтбор(ГруппаИ3,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли3.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли3, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежаОбъектРасчетовДоговор");
	
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ГруппаИ1 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ1, "Дополнительно.ИспользоватьДоговорыСПоставщиками", Истина);
	Финансы.НовыйОтбор(ГруппаИ1, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	
	ГруппаИ2 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ2, "Дополнительно.ИспользоватьДоговорыМеждуОрганизациями", Истина);
	ГруппаИли2 = Финансы.НовыйОтбор(ГруппаИ2,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	
	ГруппаИ3 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ3.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ3, "Дополнительно.ИспользоватьДоговорыСКлиентами", Истина);
	ГруппаИли3 = Финансы.НовыйОтбор(ГруппаИ3,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли3.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли3, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	
	Элемент.Свойства.Вставить("Видимость");
	#КонецОбласти
	
	#Область Команды
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ЗаполнитьРасшифровкуПлатежаПоЗаймамКонтрагенту");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ВыдачаЗаймов);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежаПодборПоОстаткам");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Элемент.Свойства.Вставить("Видимость");
	
	// --> Евлахов Игорь Николаевич (Начало) 28.09.2023
	// Задача #3091
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("КомандаВыбратьФизЛицо");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствВКассуККМ);
	Элемент.Свойства.Вставить("Видимость");
	// <-- Евлахов Игорь Николаевич (Конец) 28.09.2023
	
	// --> Евлахов Игорь Николаевич (Начало) 08.02.2024
	// Задача #3681
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("КомандаВыбратьБанк");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ИнкассацияДенежныхСредствВБанк);
	Элемент.Свойства.Вставить("Видимость");
	// <-- Евлахов Игорь Николаевич (Конец) 08.02.2024
	
	// --> Евлахов Игорь Николаевич (Начало) 03.05.2024
	// Задача #3985
	// Необходимо заблокировать поле, для этих целей используем
	// реквизит ХозяйственнаяОперация и проверку на значение Истина.
	// В результате такой проверки доступность будет "Ложь"
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ГлавныйБухгалтер");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Истина);
	Элемент.Свойства.Вставить("Доступность");
	// <-- Евлахов Игорь Николаевич (Конец) 03.05.202
	
	#КонецОбласти
	
КонецПроцедуры

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтение
	|ГДЕ
	|	( ЗначениеРазрешено(Организация)
	|	ИЛИ ЗначениеРазрешено(ОрганизацияПолучатель)
	|		И ХозяйственнаяОперация = Значение(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию)
	|	ИЛИ ЗначениеРазрешено(РасшифровкаПлатежа.Организация) И ХозяйственнаяОперация В (
	|		Значение(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		Значение(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		Значение(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		Значение(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
	|		)
	|	)И( ЗначениеРазрешено(Касса)
	|	ИЛИ ( ЗначениеРазрешено(КассаПолучатель)
	|	И ЗначениеРазрешено(Подразделение)
	|	И ХозяйственнаяОперация В (Значение(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу), Значение(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию)))
	|	)И ЗначениеРазрешено(ХозяйственнаяОперация)
	|	И ВЫБОР КОГДА ХозяйственнаяОперация В (Значение(Перечисление.ХозяйственныеОперации.ОплатаПоставщику), Значение(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту))
	|	ТОГДА ЗначениеРазрешено(РасшифровкаПлатежа.Партнер)
	|	КОГДА ХозяйственнаяОперация = Значение(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику) ТОГДА ЗначениеРазрешено(ПодотчетноеЛицо)
	|	КОГДА ХозяйственнаяОперация = Значение(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВКассуККМ) ТОГДА ЗначениеРазрешено(КассаККМ)
	|	ИНАЧЕ ИСТИНА КОНЕЦ 
	|;
	|РазрешитьИзменениеЕслиРазрешеноЧтение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Касса)
	|	И ЗначениеРазрешено(Подразделение)
	|	И ЗначениеРазрешено(ХозяйственнаяОперация)
	|	И ВЫБОР КОГДА ХозяйственнаяОперация В (Значение(Перечисление.ХозяйственныеОперации.ОплатаПоставщику), Значение(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту))
	|	ТОГДА ЗначениеРазрешено(РасшифровкаПлатежа.Партнер)
	|	КОГДА ХозяйственнаяОперация = Значение(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику) ТОГДА ЗначениеРазрешено(ПодотчетноеЛицо)
	|	КОГДА ХозяйственнаяОперация = Значение(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВКассуККМ) ТОГДА ЗначениеРазрешено(КассаККМ)
	|	ИНАЧЕ ИСТИНА КОНЕЦ ";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;
	ИсточникиДанных.Вставить("РасшифровкаПлатежа.ОбъектРасчетов");

	Возврат ИсточникиДанных; 

КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос();
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие;
	ПереопределениеРасчетаПараметров = Новый Структура;
	СинонимТаблицыДокумента = "";
	
	ПолноеИмяДокумента = "Документ.РасходныйКассовыйОрдер";
	
	Если ИмяРегистра = "ДенежныеСредстваКВыплате" Тогда
		
		ПереопределениеРасчетаПараметров.Вставить("Получатель", "
			|ВЫБОР
			|	КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику)
			|		) ТОГДА
			|			ДанныеДокумента.ПодотчетноеЛицо
			|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств))
			|		ТОГДА
			|			ДанныеДокумента.ОрганизацияПолучатель
			|	ИНАЧЕ
			|		ДанныеДокумента.Контрагент
			|КОНЕЦ");
		
		ТекстЗапроса = ТекстЗапросаТаблицаДенежныеСредстваКВыплате(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	ИначеЕсли ИмяРегистра = "РеестрДокументов" Тогда
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса, ПолноеИмяДокумента, СинонимТаблицыДокумента, Истина);
	Иначе
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса, ПолноеИмяДокумента, СинонимТаблицыДокумента, ПереопределениеРасчетаПараметров, ТекстыЗапросаВременныхТаблиц);
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметровПроведения();
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.ВалютаКонвертации КАК ВалютаКонвертации,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.ОплатаПоЗаявкам КАК ОплатаПоЗаявкам,
	|	ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	ДанныеДокумента.РаспоряжениеНаПеремещениеДенежныхСредств КАК РаспоряжениеНаПеремещениеДенежныхСредств,
	|	ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств.Валюта КАК ВалютаЗаявки,
	|
	|
	|	ВЫБОР КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|			(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств))
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	ИНАЧЕ
	|		ДанныеДокумента.Партнер
	|	КОНЕЦ КАК Партнер,
	|
	|	ВЫБОР КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|			(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств))
	|	ТОГДА
	|		ДанныеДокумента.ОрганизацияПолучатель
	|	ИНАЧЕ
	|		ДанныеДокумента.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	
	|	ДанныеДокумента.ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику)
	|		) ТОГДА
	|			ДанныеДокумента.ПодотчетноеЛицо
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств))
	|		ТОГДА
	|			ДанныеДокумента.ОрганизацияПолучатель
	|	ИНАЧЕ
	|		ДанныеДокумента.Контрагент
	|	КОНЕЦ КАК Получатель,
	|	
	|	НЕ ЕстьNULL(ДанныеДокумента.Касса.РазрешитьПлатежиБезУказанияЗаявок, Ложь) КАК ЗапрещатьПлатежиБезУказанияЗаявок,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	
	|	ВЫРАЗИТЬ(ДанныеДокумента.Касса КАК Справочник.Кассы).НаправлениеДеятельности КАК НаправлениеДеятельностиДС,
	|	ДанныеДокумента.РасшифровкаПлатежа.(ЗаявкаНаРасходованиеДенежныхСредств) КАК РасшифровкаПлатежа,
	|	
	|	ДанныеДокумента.СуммаДокумента          КАК СуммаДокумента,
	|	ДанныеДокумента.Касса                   КАК Касса,
	|	ДанныеДокумента.БанковскийСчет          КАК БанковскийСчет,
	|	ДанныеДокумента.Договор                 КАК Договор,
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДокумента.Автор                   КАК Автор,
	|	ДанныеДокумента.Кассир                  КАК Кассир,
	|	ДанныеДокумента.Комментарий             КАК Комментарий,
	|	ДанныеДокумента.ПометкаУдаления         КАК ПометкаУдаления,
	|	ДанныеДокумента.Ссылка                  КАК Ссылка,
	|	ДанныеДокумента.Исправление             КАК Исправление,
	|	ДанныеДокумента.СторнируемыйДокумент    КАК СторнируемыйДокумент,
	|	ДанныеДокумента.ИсправляемыйДокумент    КАК ИсправляемыйДокумент,
	|	ДанныеДокумента.Проведен                КАК Проведен,
	|	НастройкиХозяйственныхОпераций.Ссылка   КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиХозяйственныхОпераций КАК НастройкиХозяйственныхОпераций
	|		ПО ДанныеДокумента.ХозяйственнаяОперация = НастройкиХозяйственныхОпераций.ХозяйственнаяОперация
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения(Реквизиты) Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;

	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)
	
	Значения = Новый Структура;
	Значения.Вставить("ИдентификаторМетаданных",                         ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.РасходныйКассовыйОрдер"));
	Значения.Вставить("ИспользоватьСчетаНаОплатуКлиентам",               ПолучитьФункциональнуюОпцию("ИспользоватьСчетаНаОплатуКлиентам"));
	Значения.Вставить("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств", ПолучитьФункциональнуюОпцию("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств"));
	Значения.Вставить("ИспользоватьУчетПрочихДоходовРасходов",           ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов"));
	Значения.Вставить("КонтролироватьВыдачуПодОтчетВРазрезеЦелей",       ПолучитьФункциональнуюОпцию("КонтролироватьВыдачуПодОтчетВРазрезеЦелей"));
	Значения.Вставить("ИспользоватьНачислениеЗарплаты",                  Константы.ИспользоватьНачислениеЗарплаты.Получить());
	Значения.Вставить("ИспользоватьЛимитыРасходаДенежныхСредств",        ПолучитьФункциональнуюОпцию("ИспользоватьЛимитыРасходаДенежныхСредств"));
	Значения.Вставить("ИспользоватьЛимитыРасходаПоОрганизациям",         ПолучитьФункциональнуюОпцию("ИспользоватьЛимитыРасходаДенежныхСредствПоОрганизациям"));
	Значения.Вставить("ИспользоватьЛимитыРасходаПоПодразделениям",       ПолучитьФункциональнуюОпцию("ИспользоватьЛимитыРасходаДенежныхСредствПоПодразделениям"));
	Значения.Вставить("ИспользоватьУчетПрочихАктивовПассивов",           ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихАктивовПассивов"));
	Значения.Вставить("ВалютаУправленческогоУчета",                      Константы.ВалютаУправленческогоУчета.Получить());
	
	Если Реквизиты <> Неопределено Тогда
		
		Значения.Вставить("СтатьяДвиженияДенежныхСредств",               СтатьяДвиженияДенежныхСредствДокумента(Реквизиты));
		
		МассивЗаявок = Реквизиты.РасшифровкаПлатежа.Выгрузить().ВыгрузитьКолонку("ЗаявкаНаРасходованиеДенежныхСредств"); // Массив
		МассивЗаявок.Добавить(Реквизиты.ЗаявкаНаРасходованиеДенежныхСредств);
		МассивЗаявок.Добавить(Реквизиты.РаспоряжениеНаПеремещениеДенежныхСредств);
		Значения.Вставить("МассивЗаявок",                                МассивЗаявок);
		
		Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
			Реквизиты.Валюта,
			Реквизиты.ВалютаЗаявки,
			Реквизиты.Период,
			Реквизиты.Организация);
			
		КоэффициентыКонвертации = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
			Реквизиты.ВалютаКонвертации,
			Неопределено,
			Реквизиты.Период,
			Реквизиты.Организация);
			
		Значения.Вставить("КоэффициентПересчетаВВалютуУпр",              Коэффициенты.КоэффициентПересчетаВВалютуУпр);
		Значения.Вставить("КоэффициентПересчетаВВалютуРегл",             Коэффициенты.КоэффициентПересчетаВВалютуРегл);
		Значения.Вставить("КоэффициентПересчетаВВалютуЗаявки",           Коэффициенты.КоэффициентПересчетаВВалютуВзаиморасчетов);
		Значения.Вставить("КоэффициентПересчетаКонвертацииВВалютуУпр",   КоэффициентыКонвертации.КоэффициентПересчетаВВалютуУпр);
		Значения.Вставить("КоэффициентПересчетаКонвертацииВВалютуРегл",  КоэффициентыКонвертации.КоэффициентПересчетаВВалютуРегл);
		
		Значения.Вставить("НомерНаПечать",                               ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
		Значения.Вставить("ВалютаРегламентированногоУчета", ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Реквизиты.Организация));
		
	КонецЕсли;
	
	Возврат Значения;
	
КонецФункции

Процедура ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос)

	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаПартнеровИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросПоАналитикам = Новый Запрос;
	
	ЗапросПоАналитикам.Текст = ТекстЗапросаВременнаяТаблицаОбъектовРасчета(ЗапросПоАналитикам, Новый СписокЗначений);
	ЗапросПоАналитикам.Текст = ЗапросПоАналитикам.Текст + "
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ЗапросПоАналитикам.Текст = ЗапросПоАналитикам.Текст + "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОбъектовРасчетов.Организация КАК Организация,
	|	&Контрагент                         КАК Контрагент,
	|	ТаблицаРасшифровкаПлатежа.Партнер   КАК Партнер,
	|	ТаблицаОбъектовРасчетов.Договор     КАК Договор,
	|	ТаблицаОбъектовРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|		ПО ТаблицаРасшифровкаПлатежа.ОбъектРасчетов = ТаблицаОбъектовРасчетов.ОбъектРасчетов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		ТаблицаОбъектовРасчетов.Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ТаблицаРасшифровкаПлатежа.Партнер = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация КАК Организация,
	|	&Контрагент КАК Контрагент,
	|	ТаблицаРасшифровкаПлатежа.Партнер КАК Партнер,
	|	ТаблицаОбъектовРасчетов.Договор КАК Договор,
	|	ТаблицаОбъектовРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|		ПО ТаблицаРасшифровкаПлатежа.ОбъектРасчетов = ТаблицаОбъектовРасчетов.ОбъектРасчетов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ТаблицаРасшифровкаПлатежа.Партнер = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|	И ТаблицаОбъектовРасчетов.Организация <> &Организация
	|	И ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств <> ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация КАК Организация,
	|	&Контрагент КАК Контрагент,
	|	ТаблицаРасшифровкаПлатежа.Партнер КАК Партнер,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|		ПО ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита = ДанныеДоговора.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ТаблицаРасшифровкаПлатежа.Партнер = Аналитика.Партнер
	|		И ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) = Аналитика.Договор
	|		И ДанныеДоговора.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация КАК Организация,
	|	&Контрагент КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|	ТаблицаОбъектовРасчетов.Договор КАК Договор,
	|	ТаблицаОбъектовРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|	ПО
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов = ТаблицаОбъектовРасчетов.ОбъектРасчетов
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию))
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаПлатеж.Организация КАК Организация,
	|	&Контрагент КАК Контрагент,
	|	&Партнер КАК Партнер,
	|	&Договор КАК Договор,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ТаблицаПлатеж
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		ТаблицаПлатеж.Организация= Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И &Партнер = Аналитика.Партнер
	|		И &Договор = Аналитика.Договор
	|		И &НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаПлатеж.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
	|		)
	|";
	
	ЗапросПоАналитикам.УстановитьПараметр("Ссылка",                  Запрос.Параметры.Ссылка);
	ЗапросПоАналитикам.УстановитьПараметр("Организация",             Запрос.Параметры.Организация);
	ЗапросПоАналитикам.УстановитьПараметр("Контрагент",              Запрос.Параметры.Контрагент);
	ЗапросПоАналитикам.УстановитьПараметр("Партнер",                 Запрос.Параметры.Партнер);
	ЗапросПоАналитикам.УстановитьПараметр("НаправлениеДеятельности", Запрос.Параметры.НаправлениеДеятельности);
	ЗапросПоАналитикам.УстановитьПараметр("ХозяйственнаяОперация",   Запрос.Параметры.ХозяйственнаяОперация);
	
	Если ЗначениеЗаполнено(Запрос.Параметры.Договор) Тогда
		ЗапросПоАналитикам.УстановитьПараметр("Договор",                         Запрос.Параметры.Договор);
	ИначеЕсли НЕ ЗначениеЗаполнено(Запрос.Параметры.Договор)
			И Запрос.Параметры.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию") Тогда
		ЗапросПоАналитикам.УстановитьПараметр("Договор",                         Справочники.ДоговорыМеждуОрганизациями.ПустаяСсылка());
	Иначе
		ЗапросПоАналитикам.УстановитьПараметр("Договор",                         Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	КонецЕсли;

	Выборка = ЗапросПоАналитикам.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаПоПартнерам.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	СтруктураАналитики = Новый Структура("Организация, Партнер, Контрагент, Договор, НаправлениеДеятельности");
	ЗаполнитьЗначенияСвойств(СтруктураАналитики, Запрос.Параметры);
	СтруктураАналитики.Вставить("Договор", Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	СтруктураАналитики.Вставить("НаправлениеДеятельности", Справочники.НаправленияДеятельности.ПустаяСсылка());
	
	Если Запрос.Параметры.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию
		Или Запрос.Параметры.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию
	Тогда
		СтруктураАналитики.Вставить("Договор", Справочники.ДоговорыМеждуОрганизациями.ПустаяСсылка());
		АналитикаУчетаПоПартнерам = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураАналитики);
		
		СтруктураАналитики.Вставить("Организация", Запрос.Параметры.Контрагент);
		СтруктураАналитики.Вставить("Контрагент",  Запрос.Параметры.Организация);
		АналитикаУчетаПоПартнерамПолучатель = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураАналитики);
		
	ИначеЕсли Запрос.Параметры.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыЧерезКассу
		Или Запрос.Параметры.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыРаботнику
		Или Запрос.Параметры.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыРаздатчиком Тогда
		
		СтруктураАналитики.Вставить("Контрагент", Справочники.Контрагенты.ПустаяСсылка());
		СтруктураАналитики.Вставить("Партнер",    Справочники.Партнеры.ПустаяСсылка());
		АналитикаУчетаПоПартнерам = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураАналитики);
		АналитикаУчетаПоПартнерамПолучатель = Неопределено;
	КонецЕсли;
	
	Если ВзаиморасчетыСервер.ХозяйственнаяОперацияВозвратДенежныхСредств(Запрос.Параметры.ХозяйственнаяОперация) Тогда
		АналитикаУчетаПоПартнерамОбъектРасчетов = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(ЗапросПоАналитикам.Параметры);
	Иначе
		АналитикаУчетаПоПартнерамОбъектРасчетов = Неопределено;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерам",           АналитикаУчетаПоПартнерам);
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерамПолучатель", АналитикаУчетаПоПартнерамПолучатель);
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерамОбъектРасчетов", АналитикаУчетаПоПартнерамОбъектРасчетов);
	
КонецПроцедуры

Функция ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса) Экспорт
	
	ИмяВременнойТаблицы = "ТаблицаРасшифровкаПлатежа";
	
	ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос);
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаОбъектовРасчетов", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаОбъектовРасчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	Аналитика.Организация КАК Организация,
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ТаблицаРасшифровкаПлатежа.Партнер КАК Партнер,
	|	ЕСТЬNULL(ТаблицаОбъектовРасчетов.Договор, Неопределено) КАК Договор,
	|
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|			ТОГДА ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности
	|	ИНАЧЕ 
	|		ТаблицаОбъектовРасчетов.НаправлениеДеятельности
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СтатьяРасходов 
	|	ИНАЧЕ 
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|		ТОГДА ТаблицаРасшифровкаПлатежа.АналитикаРасходов 
	|	ИНАЧЕ 
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК АналитикаРасходов,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|		ТОГДА ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов 
	|	КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику)
	|		ТОГДА &ПодотчетноеЛицо
	|	ИНАЧЕ 
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК АналитикаАктивовПассивов,
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|			ТОГДА ТаблицаРасшифровкаПлатежа.Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
	|	КОНЕЦ КАК Подразделение,
	|	ЕСТЬNULL(ТаблицаОбъектовРасчетов.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК ПодразделениеЗаказа,
	|
	|	ТаблицаРасшифровкаПлатежа.Сумма КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ТипСуммыКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЗаймаСотруднику,
	|	ТаблицаРасшифровкаПлатежа.ДоговорАренды,
	|	ТаблицаРасшифровкаПлатежа.ТипПлатежаПоАренде,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаРегламентированногоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаРегл,
	|
	|	ТаблицаРасшифровкаПлатежа.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаРасшифровкаПлатежа.СуммаНДС КАК СуммаНДС,
	|	ВЫБОР КОГДА &Валюта = &ВалютаУправленческогоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаНДС
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.СуммаНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаНДСУпр,
	|	ВЫБОР КОГДА &Валюта = &ВалютаРегламентированногоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаНДС
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаНДСРегл,
	|
	|	ЕСТЬNULL(ТаблицаОбъектовРасчетов.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) КАК НалогообложениеНДС,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаПоПартнерам,
	|
	|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки КАК ИдентификаторСтроки
	|
	|ПОМЕСТИТЬ ТаблицаРасшифровкаПлатежа
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|	ПО
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов = ТаблицаОбъектовРасчетов.ОбъектРасчетов
	|		И ТаблицаРасшифровкаПлатежа.Партнер = ТаблицаОбъектовРасчетов.Партнер
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		ТаблицаОбъектовРасчетов.Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ТаблицаРасшифровкаПлатежа.Партнер = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор 
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И НЕ &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаАрендодателю)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	&Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	ТаблицаРасшифровкаПлатежа.Партнер КАК Партнер,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеЗаказа,
	|
	|	ТаблицаРасшифровкаПлатежа.Сумма КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ТипСуммыКредитаДепозита,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаРегламентированногоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаРегл,
	|
	|	ТаблицаРасшифровкаПлатежа.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаРасшифровкаПлатежа.СуммаНДС КАК СуммаНДС,
	|	ВЫБОР КОГДА &Валюта = &ВалютаУправленческогоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаНДС
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.СуммаНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаНДСУпр,
	|	ВЫБОР КОГДА &Валюта = &ВалютаРегламентированногоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаНДС
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаНДСРегл,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаПоПартнерам,
	|
	|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки КАК ИдентификаторСтроки
	|
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|		ПО ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита = ДанныеДоговора.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ТаблицаРасшифровкаПлатежа.Партнер = Аналитика.Партнер
	|		И ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) = Аналитика.Договор
	|		И ДанныеДоговора.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов)
	|	)
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОбъектовРасчетов.Организация КАК Организация,
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ТаблицаРасшифровкаПлатежа.Партнер КАК Партнер,
	|	ТаблицаОбъектовРасчетов.Договор КАК Договор,
	|
	|	ЕСТЬNULL(ТаблицаОбъектовРасчетов.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	ТаблицаОбъектовРасчетов.Подразделение КАК ПодразделениеЗаказа,
	|
	|	ТаблицаРасшифровкаПлатежа.Сумма КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ТипСуммыКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЗаймаСотруднику,
	|	ТаблицаРасшифровкаПлатежа.ДоговорАренды,
	|	ТаблицаРасшифровкаПлатежа.ТипПлатежаПоАренде,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаРегламентированногоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаРегл,
	|
	|	ТаблицаРасшифровкаПлатежа.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаРасшифровкаПлатежа.СуммаНДС КАК СуммаНДС,
	|	ВЫБОР КОГДА &Валюта = &ВалютаУправленческогоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаНДС
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.СуммаНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаНДСУпр,
	|	ВЫБОР КОГДА &Валюта = &ВалютаРегламентированногоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаНДС
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаНДСРегл,
	|
	|	ТаблицаОбъектовРасчетов.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаПоПартнерам,
	|
	|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки КАК ИдентификаторСтроки
	|
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|	ПО
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов = ТаблицаОбъектовРасчетов.ОбъектРасчетов
	|		И ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) = ТаблицаОбъектовРасчетов.Партнер
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	РасходныйКассовыйОрдер.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	РасходныйКассовыйОрдер.Подразделение,
	|	РасходныйКассовыйОрдер.Подразделение,
	|	РасходныйКассовыйОрдер.СуммаДокумента,
	|	РасходныйКассовыйОрдер.СуммаДокумента,
	|	РасходныйКассовыйОрдер.Валюта,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	РасходныйКассовыйОрдер.СтатьяДвиженияДенежныхСредств,
	|	РасходныйКассовыйОрдер.ЗаявкаНаРасходованиеДенежныхСредств,
	|	ВЫРАЗИТЬ(РасходныйКассовыйОрдер.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)),
	|	ВЫРАЗИТЬ(РасходныйКассовыйОрдер.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)),
	|	НЕОПРЕДЕЛЕНО,
	|	0,
	|	0,
	|	0,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,
	|	НЕОПРЕДЕЛЕНО,
	|
	|	РасходныйКассовыйОрдер.ИдентификаторДокумента КАК ИдентификаторСтроки
	|
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	|ГДЕ
	|	РасходныйКассовыйОрдер.Ссылка = &Ссылка
	|	И РасходныйКассовыйОрдер.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику)
	|	И НЕ &ИспользоватьНачислениеЗарплаты
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВременнаяТаблицаОбъектовРасчета(Запрос, ТекстыЗапроса) Экспорт
	
	ИмяВременнойТаблицы = "ТаблицаОбъектовРасчетов";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ОбъектРасчетов,
	|
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.Организация КАК Организация,
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.Партнер КАК Партнер,
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.Договор КАК Договор,
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.Подразделение КАК Подразделение,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию))
	|				И ЕСТЬNULL(Направления.УчетДоходов, ЛОЖЬ)
	|			ИЛИ НЕ &ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию))
	|				И ЕСТЬNULL(Направления.УчетРасчетовСПоставщиками, ЛОЖЬ)
	|		ТОГДА
	|			ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.НаправлениеДеятельности
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	КОНЕЦ КАК НаправлениеДеятельности
	|
	|ПОМЕСТИТЬ ТаблицаОбъектовРасчетов
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НаправленияДеятельности КАК Направления
	|	ПО ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.НаправлениеДеятельности = Направления.Ссылка
	|	
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И НЕ &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаАрендодателю)
	|		)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасчетов
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваНаличные(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваНаличные";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	ДанныеДокумента.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Касса КАК Касса,
	|	
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов))
	|	ТОГДА
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
	|	ИНАЧЕ
	|		&СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств,
	|
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ОбъектРасчетов,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию))
	|	ТОГДА
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК АналитикаУчетаПоПартнерам,
	|	
	|	ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента) КАК Сумма,
	|	
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.Сумма ЕСТЬ NULL
	|		ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) 
	|		ИНАЧЕ ТаблицаРасшифровкаПлатежа.СуммаРегл
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	ВЫБОР 
	|		КОГДА ТаблицаРасшифровкаПлатежа.Сумма ЕСТЬ NULL
	|			ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) 
	|		ИНАЧЕ ТаблицаРасшифровкаПлатежа.СуммаУпр
	|	КОНЕЦ КАК СуммаУпр,
	|	
	|	ВЫБОР КОГДА  ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИнкассацияДенежныхСредствВБанк),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВКассуККМ))
	|	ТОГДА 
	|		ДанныеДокумента.ИдентификаторДокумента
	|	ИНАЧЕ
	|		ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки, ДанныеДокумента.ИдентификаторДокумента)
	|	КОНЕЦ КАК ИдентификаторФинЗаписи,
	|	
	|	ВЫБОР
	|		КОГДА ЛОЖЬ
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ &НастройкаХозяйственнойОперации
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ИСТИНА
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И НЕ ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СдачаДенежныхСредствВБанк)
	// << 21.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-725
	|	И НЕ ДанныеДокумента.КР_ВозвратИзКассыККМ
	// >> 21.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-725
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1 КАК НомерСтроки,
	|	ДанныеДокумента.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Касса КАК Касса,
	|	
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|
	|	НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПоПартнерам,
	|	
	|	ДанныеДокумента.СуммаДокумента КАК Сумма,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК СуммаУпр,
	|	
	|	ДанныеДокумента.ИдентификаторДокумента КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СдачаДенежныхСредствВБанк)
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваБезналичные(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваБезналичные";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.БанковскийСчет КАК БанковскийСчет,
	|	
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	Неопределено КАК АналитикаУчетаПоПартнерам,
	|	
	|	ДанныеДокумента.СуммаДокумента КАК Сумма,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК СуммаУпр,
	|	
	|	&Ссылка КАК ПлатежныйДокумент,
	|	
	|	ДанныеДокумента.ИдентификаторДокумента КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СдачаДенежныхСредствВБанк) КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СдачаДенежныхСредствВБанк)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДенежныеСредстваВПути(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваВПути";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                      КАК ВидДвижения,
	|	&Период                                                                     КАК Период,
	|	
	|	ДанныеДокумента.Организация                                                 КАК Организация,
	|	ДанныеДокумента.КассаПолучатель                                             КАК Получатель,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.КассаПолучатель) = ТИП(Справочник.Кассы) ТОГДА
	|			ДанныеДокумента.Касса
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Отправитель,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПеремещениеВДругуюКассу) КАК ВидПереводаДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО                                                                КАК Контрагент,
	|	ДанныеДокумента.Валюта                                                      КАК Валюта,
	|	
	|	ДанныеДокумента.СуммаДокумента                                              КАК Сумма,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))   КАК СуммаУпр,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))  КАК СуммаРегл,
	|	
	|	&ХозяйственнаяОперация                                                      КАК ХозяйственнаяОперация,
	|	&СтатьяДвиженияДенежныхСредств                                              КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ДанныеДокумента.ИдентификаторДокумента                                      КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВыдачаДенежныхСредствВДругуюКассу) КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу)
	|		)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                      КАК ВидДвижения,
	|	&Период                                                                     КАК Период,
	|	
	|	ДанныеДокумента.Организация                                                 КАК Организация,
	|	ДанныеДокумента.БанковскийСчет                                              КАК Получатель,
	|	ДанныеДокумента.Касса                                                       КАК Отправитель,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ИнкассацияВБанк)         КАК ВидПереводаДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО                                                                КАК Контрагент,
	|	ДанныеДокумента.Валюта                                                      КАК Валюта,
	|	
	|	ДанныеДокумента.СуммаДокумента                                              КАК Сумма,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))   КАК СуммаУпр,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))  КАК СуммаРегл,
	|	
	|	&ХозяйственнаяОперация                                                      КАК ХозяйственнаяОперация,
	|	&СтатьяДвиженияДенежныхСредств                                              КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ДанныеДокумента.ИдентификаторДокумента                                      КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ИнкассацияДенежныхСредствВБанк) КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИнкассацияДенежныхСредствВБанк)
	|		)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                      КАК ВидДвижения,
	|	&Период                                                                     КАК Период,
	|	
	|	ДанныеДокумента.Организация                                                 КАК Организация,
	|	ДанныеДокумента.КассаПолучатель                                             КАК Получатель,
	|	НЕОПРЕДЕЛЕНО                                                                КАК Отправитель,
	|	ВЫБОР КОГДА ДанныеДокумента.Валюта = &ВалютаРегламентированногоУчета
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПриобретениеВалюты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.РеализацияВалюты)
	|	КОНЕЦ                                                                       КАК ВидПереводаДенежныхСредств,
	|	Контрагент                                                                  КАК Контрагент,
	|	ДанныеДокумента.Валюта                                                      КАК Валюта,
	|	
	|	ДанныеДокумента.СуммаДокумента                                              КАК Сумма,
	|	ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр            КАК СуммаУпр,
	|	ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл           КАК СуммаРегл,
	|	
	|	&ХозяйственнаяОперация                                                      КАК ХозяйственнаяОперация,
	|	&СтатьяДвиженияДенежныхСредств                                              КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ДанныеДокумента.ИдентификаторДокумента                                      КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.КонвертацияВалюты) КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)
	|		)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваВКассахККМ(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваВКассахККМ";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.КассаККМ КАК КассаККМ,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.СуммаДокумента КАК Сумма,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК СуммаУпр,
	|	&ХозяйственнаяОперация,
	|	&СтатьяДвиженияДенежныхСредств,
	|	
	|	ДанныеДокумента.ИдентификаторДокумента КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВыдачаДенежныхСредствВКассуККМ) КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВКассуККМ)
	|
	// << 21.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-725
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.КассаККМ КАК КассаККМ,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.СуммаДокумента КАК Сумма,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК СуммаУпр,
	|	&ХозяйственнаяОперация,
	|	&СтатьяДвиженияДенежныхСредств,
	|	
	|	ДанныеДокумента.ИдентификаторДокумента КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВыдачаДенежныхСредствВКассуККМ) КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту)
	|	И ДанныеДокумента.КР_ВозвратИзКассыККМ
	// >> 21.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-725
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваУПодотчетныхЛиц(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваУПодотчетныхЛиц";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.Касса.ВалютаДенежныхСредств КАК Валюта,
	|	
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК ЦельВыдачи,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств,
	|	ЕстьNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента) КАК Сумма,
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.Сумма ЕСТЬ NULL 
	|		ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|		ИНАЧЕ ТаблицаРасшифровкаПлатежа.СуммаРегл
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.Сумма ЕСТЬ NULL 
	|		ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|		ИНАЧЕ ТаблицаРасшифровкаПлатежа.СуммаУпр
	|	КОНЕЦ КАК СуммаУпр,
	|	0 КАК КОтчету,
	|	
	|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВыдачаДенежныхСредствПодотчетнику) КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ИСТИНА
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(ДанныеДокумента.ДатаАвансовогоОтчета, ДЕНЬ) КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.Касса.ВалютаДенежныхСредств КАК Валюта,
	|	
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК ЦельВыдачи,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств,
	|	0 КАК Сумма,
	|	0 КАК СуммаРегл,
	|	0 КАК СуммаУпр,
	|	ЕстьNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента) КАК КОтчету,
	|	
	|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВыдачаДенежныхСредствПодотчетнику) КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ИСТИНА
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваКВыплате(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваКВыплате";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ // Заявка в расшифровке
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	ДанныеДокумента.Касса КАК БанковскийСчетКасса,
	|	ВЫБОР
	|		КОГДА ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств ССЫЛКА Документ.ЗаявкаНаРасходованиеДенежныхСредств ТОГДА
	|			ВЫБОР КОГДА ВЫРАЗИТЬ(ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).СписокФизЛиц ТОГДА
	|				НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ
	|				&Получатель
	|			КОНЕЦ
	|		ИНАЧЕ
	|			&Получатель
	|	КОНЕЦ КАК Получатель,
	|	&Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ЗаявкиРасшифровки.Сумма <
	|			СУММА(ВЫБОР
	|				КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА ДенежныеСредства.Сумма
	|				ИНАЧЕ -ДенежныеСредства.Сумма
	|			КОНЕЦ)
	|		ТОГДА
	|			ЗаявкиРасшифровки.Сумма
	|		ИНАЧЕ
	|			СУММА(ВЫБОР
	|				КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА ДенежныеСредства.Сумма
	|				ИНАЧЕ -ДенежныеСредства.Сумма
	|			КОНЕЦ)
	|	КОНЕЦ КАК Сумма,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			ДанныеДокумента.Ссылка КАК Ссылка,
	|			ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|			СУММА(ВЫБОР
	|				КОГДА &Валюта <> ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств.Валюта ТОГДА
	|						ДанныеДокумента.СуммаВзаиморасчетов
	|					ИНАЧЕ
	|						ДанныеДокумента.Сумма
	|				КОНЕЦ) КАК Сумма
	|			ИЗ
	|				Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК ДанныеДокумента
	|		ГДЕ
	|			ДанныеДокумента.Ссылка = &Ссылка
	|			И ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств <> ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
	|			И ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств <> НЕОПРЕДЕЛЕНО
	|		СГРУППИРОВАТЬ ПО
	|			ДанныеДокумента.Ссылка,
	|			ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств
	|		) КАК ЗаявкиРасшифровки
	|	ПО
	|		ЗаявкиРасшифровки.Ссылка = ДанныеДокумента.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваКВыплате КАК ДенежныеСредства
	|	ПО
	|		ДенежныеСредства.ЗаявкаНаРасходованиеДенежныхСредств = ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств
	|		И ДенежныеСредства.БанковскийСчетКасса = ДанныеДокумента.Касса
	|		И ДенежныеСредства.Регистратор <> ДанныеДокумента.Ссылка
	|		И ДенежныеСредства.Активность
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И НЕ ЗаявкиРасшифровки.Ссылка ЕСТЬ NULL
	|	И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств
	|	
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств,
	|	ВЫБОР
	|		КОГДА ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств ССЫЛКА Документ.ЗаявкаНаРасходованиеДенежныхСредств ТОГДА
	|			ВЫБОР КОГДА ВЫРАЗИТЬ(ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).СписокФизЛиц ТОГДА
	|				НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ
	|				&Получатель
	|			КОНЕЦ
	|		ИНАЧЕ
	|			&Получатель
	|	КОНЕЦ,
	|	ЗаявкиРасшифровки.Сумма,
	|	ДанныеДокумента.Касса
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|		КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДенежныеСредства.Сумма
	|		ИНАЧЕ -ДенежныеСредства.Сумма
	|	КОНЕЦ) <> 0
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО КАК БанковскийСчетКасса,
	|	ВЫБОР
	|		КОГДА ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств ССЫЛКА Документ.ЗаявкаНаРасходованиеДенежныхСредств ТОГДА
	|			ВЫБОР КОГДА ВЫРАЗИТЬ(ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).СписокФизЛиц ТОГДА
	|				НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ
	|				&Получатель
	|			КОНЕЦ
	|		ИНАЧЕ
	|			&Получатель
	|	КОНЕЦ КАК Получатель,
	|	&Организация КАК Организация,
	|	ЗаявкиРасшифровки.Сумма -
	|		ЕСТЬNULL(СУММА(ВЫБОР
	|			КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДенежныеСредства.Сумма
	|			ИНАЧЕ -ДенежныеСредства.Сумма
	|		КОНЕЦ), 0) КАК Сумма,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			ДанныеДокумента.Ссылка КАК Ссылка,
	|			ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|			СУММА(ВЫБОР
	|				КОГДА &Валюта <> ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств.Валюта ТОГДА
	|						ДанныеДокумента.СуммаВзаиморасчетов
	|					ИНАЧЕ
	|						ДанныеДокумента.Сумма
	|				КОНЕЦ) КАК Сумма
	|			ИЗ
	|				Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК ДанныеДокумента
	|		ГДЕ
	|			ДанныеДокумента.Ссылка = &Ссылка
	|			И ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств <> ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
	|			И ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств <> НЕОПРЕДЕЛЕНО
	|		СГРУППИРОВАТЬ ПО
	|			ДанныеДокумента.Ссылка,
	|			ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств
	|		) КАК ЗаявкиРасшифровки
	|	ПО
	|		ЗаявкиРасшифровки.Ссылка = ДанныеДокумента.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваКВыплате КАК ДенежныеСредства
	|	ПО
	|		ДенежныеСредства.ЗаявкаНаРасходованиеДенежныхСредств = ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств
	|		И ДенежныеСредства.БанковскийСчетКасса = ДанныеДокумента.Касса
	|		И ДенежныеСредства.Регистратор <> ДанныеДокумента.Ссылка
	|		И ДенежныеСредства.Активность
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И НЕ ЗаявкиРасшифровки.Ссылка ЕСТЬ NULL
	|	И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств
	|	
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств,
	|	ВЫБОР
	|		КОГДА ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств ССЫЛКА Документ.ЗаявкаНаРасходованиеДенежныхСредств ТОГДА
	|			ВЫБОР КОГДА ВЫРАЗИТЬ(ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).СписокФизЛиц ТОГДА
	|				НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ
	|				&Получатель
	|			КОНЕЦ
	|		ИНАЧЕ
	|			&Получатель
	|	КОНЕЦ,
	|	ЗаявкиРасшифровки.Сумма,
	|	ДанныеДокумента.Касса
	|	
	|ИМЕЮЩИЕ
	|	ЗаявкиРасшифровки.Сумма >
	|		ЕСТЬNULL(СУММА(ВЫБОР
	|			КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДенежныеСредства.Сумма
	|			ИНАЧЕ -ДенежныеСредства.Сумма
	|		КОНЕЦ), 0)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ // Заявка в шапке
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	ДанныеДокумента.Касса КАК БанковскийСчетКасса,
	|	&Получатель КАК Получатель,
	|	&Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СуммаДокумента <
	|			СУММА(ВЫБОР
	|				КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА ДенежныеСредства.Сумма
	|				ИНАЧЕ -ДенежныеСредства.Сумма
	|			КОНЕЦ)
	|		ТОГДА
	|			ДанныеДокумента.СуммаДокумента
	|		ИНАЧЕ
	|			СУММА(ВЫБОР
	|				КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА ДенежныеСредства.Сумма
	|				ИНАЧЕ -ДенежныеСредства.Сумма
	|			КОНЕЦ)
	|	КОНЕЦ КАК Сумма,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК Расшифровка
	|	ПО
	|		Расшифровка.Ссылка = ДанныеДокумента.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваКВыплате КАК ДенежныеСредства
	|	ПО
	|		ДенежныеСредства.ЗаявкаНаРасходованиеДенежныхСредств = ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств
	|		И ДенежныеСредства.БанковскийСчетКасса = ДанныеДокумента.Касса
	|		И ДенежныеСредства.Регистратор <> ДанныеДокумента.Ссылка
	|		И ДенежныеСредства.Активность
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств <> ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
	|	И ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств <> НЕОПРЕДЕЛЕНО
	|	И Расшифровка.Ссылка ЕСТЬ NULL
	|	И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств
	|	
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств,
	|	ДанныеДокумента.Касса
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|		КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДенежныеСредства.Сумма
	|		ИНАЧЕ -ДенежныеСредства.Сумма
	|	КОНЕЦ) <> 0
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО КАК БанковскийСчетКасса,
	|	&Получатель КАК Получатель,
	|	&Организация КАК Организация,
	|	ДанныеДокумента.СуммаДокумента -
	|		ЕСТЬNULL(СУММА(ВЫБОР
	|			КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДенежныеСредства.Сумма
	|			ИНАЧЕ -ДенежныеСредства.Сумма
	|		КОНЕЦ), 0) КАК Сумма,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК Расшифровка
	|	ПО
	|		Расшифровка.Ссылка = ДанныеДокумента.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваКВыплате КАК ДенежныеСредства
	|	ПО
	|		ДенежныеСредства.ЗаявкаНаРасходованиеДенежныхСредств = ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств
	|		И ДенежныеСредства.БанковскийСчетКасса = ДанныеДокумента.Касса
	|		И ДенежныеСредства.Регистратор <> ДанныеДокумента.Ссылка
	|		И ДенежныеСредства.Активность
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств <> ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
	|	И ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств <> НЕОПРЕДЕЛЕНО
	|	И Расшифровка.Ссылка ЕСТЬ NULL
	|	И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств
	|	
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств,
	|	ДанныеДокумента.Касса
	|	
	|ИМЕЮЩИЕ
	|	ДанныеДокумента.СуммаДокумента >
	|		ЕСТЬNULL(СУММА(ВЫБОР
	|			КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДенежныеСредства.Сумма
	|			ИНАЧЕ -ДенежныеСредства.Сумма
	|		КОНЕЦ), 0)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ // Распоряжение на перемещение
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ДанныеДокумента.РаспоряжениеНаПеремещениеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	ДанныеДокумента.Касса КАК БанковскийСчетКасса,
	|	&Организация КАК Получатель,
	|	&Организация КАК Организация,
	|	ДанныеДокумента.СуммаДокумента КАК Сумма,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.РаспоряжениеНаПеремещениеДенежныхСредств <> ЗНАЧЕНИЕ(Документ.РаспоряжениеНаПеремещениеДенежныхСредств.ПустаяСсылка)
	|	И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СдачаДенежныхСредствВБанк),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИнкассацияДенежныхСредствВБанк),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу)
	|		)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда) КАК Статья,
	|	НЕОПРЕДЕЛЕНО КАК Аналитика,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК Сумма
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыЧерезКассу),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыРаздатчиком),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыРаботнику))
	|	И НЕ &ИспользоватьНачислениеЗарплаты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаРасшифровкаПлатежа.Подразделение КАК Подразделение,
	|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов КАК Статья,
	|	ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов КАК Аналитика,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))) КАК Сумма
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ПО ИСТИНА
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|	И ТаблицаРасшифровкаПлатежа.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|	
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов,
	|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности,
	|	ТаблицаРасшифровкаПлатежа.Подразделение
	|
	|";
	ТекстЗапроса = ТекстЗапроса + "ОБЪЕДИНИТЬ ВСЕ"
		+ РегистрыНакопления.ПрочиеАктивыПассивы.ТекстЗапросаТаблицаПрочиеАктивыПассивы(Ложь);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияПоПрочимАктивамПассивам";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтДвиженияКонтрагентКонтрагент", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаДвиженияКонтрагентКонтрагент(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда) КАК Статья,
	|	НЕОПРЕДЕЛЕНО КАК Аналитика,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	|
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))  КАК СуммаУпр,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))  КАК СуммаСНДС,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))  КАК СуммаБезНДС,
	|
	|	ДанныеДокумента.ИдентификаторДокумента КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыЧерезКассу),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыРаздатчиком),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыРаботнику))
	|	И НЕ &ИспользоватьНачислениеЗарплаты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаРасшифровкаПлатежа.Подразделение КАК Подразделение,
	|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов КАК Статья,
	|	ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов КАК Аналитика,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	|
	|	ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр  КАК СуммаУпр,
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр  КАК СуммаСНДС,
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр  КАК СуммаБезНДС,
	|
	|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|	И ТаблицаРасшифровкаПлатежа.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.РасчетыСФилиалами) КАК Статья,
	|	ДанныеДокумента.КассаПолучатель.Владелец КАК Аналитика,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	|
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))  КАК СуммаУпр,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))  КАК СуммаСНДС,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))  КАК СуммаБезНДС,
	|
	|	ДанныеДокумента.ИдентификаторДокумента КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|
	// Выдача займов сотруднику
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЗаймыВыданные) КАК Статья,
	|	ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов КАК Аналитика,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	|
	|	ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр  КАК СуммаУпр,
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр  КАК СуммаСНДС,
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр  КАК СуммаБезНДС,
	|
	|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику)
	|";
	
	ТекстЗапроса = ТекстЗапроса
		+ ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении()
		+ ПрочиеАктивыПассивыСервер.ТекстЗапросаВзаимозачетСФилиалами();
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса, Регистры = Неопределено) Экспорт
	
	ТекстЗапросаДанных = "
	|ВЫБРАТЬ
	|	""ДанныеДокумента""     КАК ИсточникДанных,
	|	ЛОЖЬ                    КАК РаспределятьОбщуюСумму,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Дата   КАК Дата,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.Валюта КАК ВалютаДокумента,
	|	ЕСТЬNULL(Строки.ВалютаВзаиморасчетов, НЕОПРЕДЕЛЕНО) КАК ВалютаВзаиморасчетов,
	|	НЕОПРЕДЕЛЕНО КАК ПериодБазыНДС,
	|
	|	ЕСТЬNULL(Строки.НомерСтроки, 0) КАК НомерСтроки,
	|	ЕСТЬNULL(Строки.ИдентификаторСтроки, """") КАК ИдентификаторСтроки,
	|	ЕСТЬNULL(Строки.Сумма, ТаблицаДокумента.СуммаДокумента) КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
	|	0 КАК СуммаНДС,
	|	ЕСТЬNULL(Строки.СуммаВзаиморасчетов, 0) КАК СуммаВзаиморасчетов,
	|	0 КАК СуммаНДСВзаиморасчетов,
	|	
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Строки.ОбъектРасчетов, ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОтражаетсяВРасчетах,
	|	ЕСТЬNULL(Строки.ОбъектРасчетов, ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)) КАК ОбъектРасчетов,
	|	ЛОЖЬ КАК ПересчитыватьПоДаннымРасчетов
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ТаблицаДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК Строки
	|		ПО Строки.Ссылка = ТаблицаДокумента.Ссылка
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&Ссылка)
	|";
	
	РегистрыСведений.СуммыДокументовВВалютахУчета.СформироватьПоДаннымДокумента(
		Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаДанных);

КонецПроцедуры

Функция ТекстЗапросаТаблицаРасчетыПоФинансовымИнструментам(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыПоФинансовымИнструментам";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос);
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки                             КАК НомерСтроки,
	|	&Период                                                           КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                            КАК ВидДвижения,
	
	|	ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам               КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита                  КАК Договор,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|		ИНАЧЕ ТаблицаРасшифровкаПлатежа.ТипСуммыКредитаДепозита
	|	КОНЕЦ КАК ТипСуммы,
	|	НЕОПРЕДЕЛЕНО                                                      КАК РасчетныйДокумент,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов                    КАК Валюта,
	
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов                     КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов                     КАК Оплачивается,
	|	ТаблицаРасшифровкаПлатежа.СуммаРегл                               КАК СуммаРегл,
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр                                КАК СуммаУпр,
	
	|	&ХозяйственнаяОперация                                            КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ДанныеДоговора.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыГрафиковФинансовыхИнструментов.Оплаты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыГрафиковФинансовыхИнструментов.Транши)
	|	КОНЕЦ КАК ТипГрафика,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств           КАК СтатьяАналитики,
	|	
	|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки                     КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации                                   КАК НастройкаХозяйственнойОперации,
	|	ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств     КАК ЗаявкаНаРасходованиеДенежныхСредств
	|	
	|ИЗ
	|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|		ПО ДанныеДоговора.Ссылка = ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита
	|	
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки                             КАК НомерСтроки,
	|	&Период                                                           КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                            КАК ВидДвижения,
	
	|	ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам               КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита                  КАК Договор,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|		ИНАЧЕ ТаблицаРасшифровкаПлатежа.ТипСуммыКредитаДепозита
	|	КОНЕЦ КАК ТипСуммы,
	|	НЕОПРЕДЕЛЕНО                                                      КАК РасчетныйДокумент,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов                    КАК Валюта,
	
	|	0                                                                 КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов                     КАК Оплачивается,
	|	0                                                                 КАК СуммаРегл,
	|	0                                                                 КАК СуммаУпр,
	
	|	&ХозяйственнаяОперация                                            КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ДанныеДоговора.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыГрафиковФинансовыхИнструментов.Оплаты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыГрафиковФинансовыхИнструментов.Транши)
	|	КОНЕЦ КАК ТипГрафика,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств           КАК СтатьяАналитики,
	|	
	|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки                     КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации                                   КАК НастройкаХозяйственнойОперации,
	|	ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств     КАК ЗаявкаНаРасходованиеДенежныхСредств
	|	
	|ИЗ
	|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|		ПО ДанныеДоговора.Ссылка = ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита
	|	
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов))
	|	И НЕ (&ОплатаПоЗаявкам И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств)
	|
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииПрочихРасходов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныхСредств(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДенежныхСредств";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|
	|	ДанныеДокумента.Касса КАК ДенежныеСредства,
	|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельности,
	|	Значение(Перечисление.ТипыДенежныхСредств.Наличные) КАК ТипДенежныхСредств,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|	ТОГДА
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
	|	ИНАЧЕ
	|		&СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СдачаДенежныхСредствВБанк),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИнкассацияДенежныхСредствВБанк))
	|			ТОГДА ДанныеДокумента.БанковскийСчет
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу)
	|			ТОГДА ДанныеДокумента.КассаПолучатель
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВКассуККМ)
	|			ТОГДА ДанныеДокумента.КассаККМ
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|			ТОГДА ДанныеДокумента.ПодотчетноеЛицо
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)
	|			ТОГДА ДанныеДокумента.Контрагент
	|	КОНЕЦ КАК КорДенежныеСредства,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу)
	|		ТОГДА ДанныеДокумента.КассаПолучатель.НаправлениеДеятельности
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|	КОНЕЦ КАК КорНаправлениеДеятельности,
	|
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|			ТОГДА Значение(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваУПодотчетногоЛица)
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СдачаДенежныхСредствВБанк)
	|			ТОГДА Значение(Перечисление.ТипыДенежныхСредств.Безналичные)
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВКассуККМ)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные)
	|		ИНАЧЕ
	|			Значение(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваВПути)
	|	КОНЕЦ КАК КорТипДенежныхСредств,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику) ТОГДА
	|			ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов
	|		ИНАЧЕ
	|			ДанныеДокумента.Валюта
	|	КОНЕЦ КАК КорВалюта,
	|
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|			ТОГДА ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.Сумма ЕСТЬ NULL 
	|							ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|							ИНАЧЕ ТаблицаРасшифровкаПлатежа.СуммаУпр
	|				КОНЕЦ
	|		ИНАЧЕ ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) 
	|	КОНЕЦ КАК Сумма,
	|	
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|		ТОГДА ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.Сумма ЕСТЬ NULL 
	|							ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|							ИНАЧЕ ТаблицаРасшифровкаПлатежа.СуммаРегл
	|				КОНЕЦ
	|		ИНАЧЕ ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) 
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|		ТОГДА ЕстьNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента)
	|		ИНАЧЕ ДанныеДокумента.СуммаДокумента 
	|	КОНЕЦ КАК СуммаВВалюте,
	|	
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|		ТОГДА ЕстьNULL(ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов, ДанныеДокумента.СуммаДокумента)
	|		ИНАЧЕ ДанныеДокумента.СуммаДокумента 
	|	КОНЕЦ КАК СуммаВКорВалюте,
	|
	|	ВЫБОР КОГДА ЕстьNULL(ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств, ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка) ТОГДА
	|		ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|		ТОГДА ЕстьNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента)
	|		ИНАЧЕ ДанныеДокумента.СуммаДокумента КОНЕЦ
	|	КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
	|
	|	ДанныеДокумента.Касса КАК ИсточникГФУДенежныхСредств,
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СдачаДенежныхСредствВБанк)
	|			ТОГДА ДанныеДокумента.БанковскийСчет
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу)
	|			ТОГДА ДанныеДокумента.КассаПолучатель
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ИсточникКорГФУДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО 
	|		ИСТИНА
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|		И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СдачаДенежныхСредствВБанк),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИнкассацияДенежныхСредствВБанк),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВКассуККМ),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты))
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныеСредстваДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДенежныеСредстваДоходыРасходы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельностиДС,
	|	ТаблицаРасшифровкаПлатежа.Подразделение КАК ПодразделениеДоходовРасходов,
	|
	|	ДанныеДокумента.Касса КАК ДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.Наличные) КАК ТипДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|
	|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельностиСтатьи,
	|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов КАК СтатьяДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаРасходов КАК АналитикаРасходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
	|	ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаВВалюте,
	|
	|	ВЫБОР КОГДА ЕстьNULL(ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств, ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка) ТОГДА
	|		ТаблицаРасшифровкаПлатежа.Сумма
	|	КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
	|
	|	0 КАК СуммаНДС,
	|	0 КАК СуммаНДСРегл,
	|	0 КАК СуммаНДСВВалютеПлатежа,
	|
	|	ДанныеДокумента.Касса КАК ИсточникГФУДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов КАК ИсточникГФУДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
	|	ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО 
	|		ИСТИНА
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|		И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельностиДС,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДоходовРасходов,
	|
	|	ДанныеДокумента.Касса КАК ДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.Наличные) КАК ТипДенежныхСредств,
	|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиСтатьи,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда) КАК СтатьяДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК Сумма,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаВВалюте,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка) ТОГДА
	|		ДанныеДокумента.СуммаДокумента
	|	КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
	|
	|	0 КАК СуммаНДС,
	|	0 КАК СуммаНДСРегл,
	|	0 КАК СуммаНДСВВалютеПлатежа,
	|
	|	ДанныеДокумента.Касса КАК ИсточникГФУДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
	|	ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И (&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыЧерезКассу),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыРаздатчиком),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыРаботнику))
	|			И НЕ &ИспользоватьНачислениеЗарплаты)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныеСредстваКонтрагент(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДенежныеСредстваКонтрагент";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Период КАК Период,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|  ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|
	|	ДанныеДокумента.ДенежныеСредства КАК ДенежныеСредства,
	|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельностиДС,
	|	Значение(Перечисление.ТипыДенежныхСредств.Наличные) КАК ТипДенежныхСредств,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.ВалютаПлатежа КАК ВалютаПлатежа,
	|
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДанныеДокумента.НаправлениеДеятельности.УчетРасчетовСПоставщиками, ЛОЖЬ) ТОГДА
	|			ДанныеДокумента.НаправлениеДеятельности 
	|	КОНЕЦ КАК НаправлениеДеятельностиКонтрагента,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.ОбъектРасчетов КАК ОбъектРасчетов,
	|	НЕОПРЕДЕЛЕНО КАК РасчетныйДокумент,
	|
	|	СУММА(ДанныеДокумента.СуммаОплаты) КАК СуммаОплаты,
	|	СУММА(ДанныеДокумента.СуммаОплатыРегл) КАК СуммаОплатыРегл,
	|	СУММА(ДанныеДокумента.СуммаОплатыВВалютеПлатежа) КАК СуммаОплатыВВалютеПлатежа,
	|
	|	СУММА(ДанныеДокумента.СуммаПостоплаты) КАК СуммаПостоплаты,
	|	СУММА(ДанныеДокумента.СуммаПостоплатыРегл) КАК СуммаПостоплатыРегл,
	|	СУММА(ДанныеДокумента.СуммаПостоплатыВВалютеПлатежа) КАК СуммаПостоплатыВВалютеПлатежа,
	|
	|	СУММА(ДанныеДокумента.СуммаПредоплаты) КАК СуммаПредоплаты,
	|	СУММА(ДанныеДокумента.СуммаПредоплатыРегл) КАК СуммаПредоплатыРегл,
	|	СУММА(ДанныеДокумента.СуммаПредоплатыВВалютеПлатежа) КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|	СУММА(ДанныеДокумента.СуммаКВыплатеСверхЛимита) КАК СуммаКВыплатеСверхЛимита,
	|
	|	СУММА(ДанныеДокумента.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ДанныеДокумента.СуммаНДСРегл) КАК СуммаНДСРегл,
	|	СУММА(ДанныеДокумента.СуммаНДСВВалютеПлатежа) КАК СуммаНДСВВалютеПлатежа,
	|	
	|	ДанныеДокумента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|
	|	СУММА(ДанныеДокумента.СуммаОплатыВВалютеВзаиморасчетов) КАК СуммаОплатыВВалютеВзаиморасчетов,
	|	СУММА(ДанныеДокумента.СуммаПостоплатыВВалютеВзаиморасчетов) КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|	СУММА(ДанныеДокумента.СуммаПредоплатыВВалютеВзаиморасчетов) КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|	ДанныеДокумента.ИсточникГФУДенежныхСредств КАК ИсточникГФУДенежныхСредств,
	|	ДанныеДокумента.ИсточникГФУРасчетов КАК ИсточникГФУРасчетов,
	|	ДанныеДокумента.СтавкаНДС,
	|	ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств,
	|	ЛОЖЬ КАК ОтложенноеПроведение
	|
	|ИЗ (
	|	// Операции по списанию денежных средств
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Дата КАК Период,
	|		&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.Организация КАК Организация,
	|		ДанныеДокумента.Подразделение КАК Подразделение,
	|
	// << 19.02.2023 Марченко С.Н., КРОК, JIRA№A2105505-725
	//|		ДанныеДокумента.Касса КАК ДенежныеСредства,
	|		ВЫБОР 
	|			КОГДА НЕ ДанныеДокумента.КР_ВозвратИзКассыККМ 
	|				ТОГДА ДанныеДокумента.Касса 
	|			ИНАЧЕ ДанныеДокумента.КассаККМ
	|		КОНЕЦ КАК ДенежныеСредства,
	// >> 19.02.2023 Марченко С.Н., КРОК, JIRA№A2105505-725
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|		ДанныеДокумента.Валюта КАК ВалютаПлатежа,
	|
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|		ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.НаправлениеДеятельности, ДанныеДокумента.НаправлениеДеятельности) КАК НаправлениеДеятельности,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Договор КАК Договор,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ОбъектРасчетов,
	|	
	|		ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаОплаты,
	|		ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаОплатыРегл,
	|		ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаОплатыВВалютеПлатежа,
	|
	|		0 КАК СуммаПостоплаты,
	|		0 КАК СуммаПостоплатыРегл,
	|		0 КАК СуммаПостоплатыВВалютеПлатежа,
	|		
	|		0 КАК СуммаПредоплаты,
	|		0 КАК СуммаПредоплатыРегл,
	|		0 КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|		ВЫБОР КОГДА ЕстьNULL(ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств, ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка) ТОГДА
	|			ТаблицаРасшифровкаПлатежа.Сумма
	|		КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
	|
	|		0 КАК СуммаНДС,
	|		0 КАК СуммаНДСРегл,
	|		0 КАК СуммаНДСВВалютеПлатежа,
	|
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|
	|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК СуммаОплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|		ДанныеДокумента.Касса КАК ИсточникГФУДенежныхСредств,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ИсточникГФУРасчетов,
	|		НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
	|		ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|	ИЗ
	|		Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ИСТИНА
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	// Операции внутренней передачи денежных средств
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Дата КАК Период,
	|		&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.Организация КАК Организация,
	|		ДанныеДокумента.Подразделение КАК Подразделение,
	|
	|		ДанныеДокумента.Касса КАК ДенежныеСредства,
	|		&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|		ДанныеДокумента.Валюта КАК ВалютаПлатежа,
	|
	|		НЕОПРЕДЕЛЕНО КАК Партнер,
	|		ДанныеДокумента.КассаПолучатель.Владелец КАК Контрагент,
	|		ДанныеДокумента.КассаПолучатель.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		НЕОПРЕДЕЛЕНО КАК Договор,
	|		НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	
	|		ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК СуммаОплаты,
	|		ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаОплатыРегл,
	|		ДанныеДокумента.СуммаДокумента КАК СуммаОплатыВВалютеПлатежа,
	|
	|		0 КАК СуммаПостоплаты,
	|		0 КАК СуммаПостоплатыРегл,
	|		0 КАК СуммаПостоплатыВВалютеПлатежа,
	|		
	|		0 КАК СуммаПредоплаты,
	|		0 КАК СуммаПредоплатыРегл,
	|		0 КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|		ВЫБОР КОГДА ЕстьNULL(ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств, ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка) ТОГДА
	|			ДанныеДокумента.СуммаДокумента
	|		КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
	|
	|		0 КАК СуммаНДС,
	|		0 КАК СуммаНДСРегл,
	|		0 КАК СуммаНДСВВалютеПлатежа,
	|
	|		ДанныеДокумента.Валюта КАК ВалютаВзаиморасчетов,
	|
	|		ДанныеДокумента.СуммаДокумента КАК СуммаОплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|		ДанныеДокумента.Касса КАК ИсточникГФУДенежныхСредств,
	|		НЕОПРЕДЕЛЕНО КАК ИсточникГФУРасчетов,
	|		НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
	|		ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|	ИЗ
	|		Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|	
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	// Операции оплаты по кредитам и выплатам по выданным займам
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Дата КАК Период,
	|		ВЫБОР
	|			КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам)
	|				И ТаблицаРасшифровкаПлатежа.ТипСуммыКредитаДепозита = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПроцентовПоКредитам)
	|			ИНАЧЕ
	|				&ХозяйственнаяОперация
	|		КОНЕЦ КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.Организация КАК Организация,
	|		ДанныеДокумента.Подразделение КАК Подразделение,
	|
	|		ДанныеДокумента.Касса КАК ДенежныеСредства,
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|		ДанныеДокумента.Валюта КАК ВалютаПлатежа,
	|
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|		ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита КАК Договор,
	|		НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	
	|		ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаОплаты,
	|		ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаОплатыРегл,
	|		ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаОплатыВВалютеПлатежа,
	|
	|		0 КАК СуммаПостоплаты,
	|		0 КАК СуммаПостоплатыРегл,
	|		0 КАК СуммаПостоплатыВВалютеПлатежа,
	|		
	|		0 КАК СуммаПредоплаты,
	|		0 КАК СуммаПредоплатыРегл,
	|		0 КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|		ВЫБОР КОГДА ЕстьNULL(ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств, ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка) ТОГДА
	|			ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента)
	|		КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
	|
	|		0 КАК СуммаНДС,
	|		0 КАК СуммаНДСРегл,
	|		0 КАК СуммаНДСВВалютеПлатежа,
	|
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|
	|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК СуммаОплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|		ДанныеДокумента.Касса КАК ИсточникГФУДенежныхСредств,
	|		ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита КАК ИсточникГФУРасчетов,
	|		НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
	|		ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|	ИЗ
	|		Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ИСТИНА
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	// НДС
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Дата КАК Период,
	|		&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.Организация КАК Организация,
	|		ДанныеДокумента.Подразделение КАК Подразделение,
	|
	// << 19.02.2023 Марченко С.Н., КРОК, JIRA№A2105505-725
	//|		ДанныеДокумента.Касса КАК ДенежныеСредства,
	|		ВЫБОР 
	|			КОГДА НЕ ДанныеДокумента.КР_ВозвратИзКассыККМ 
	|				ТОГДА ДанныеДокумента.Касса 
	|			ИНАЧЕ ДанныеДокумента.КассаККМ
	|		КОНЕЦ КАК ДенежныеСредства,
	// >> 19.02.2023 Марченко С.Н., КРОК, JIRA№A2105505-725
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|		ДанныеДокумента.Валюта КАК ВалютаПлатежа,
	|
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Договор КАК Договор,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ОбъектРасчетов,
	|	
	|		0 КАК СуммаОплаты,
	|		0 КАК СуммаОплатыРегл,
	|		0 КАК СуммаОплатыВВалютеПлатежа,
	|
	|		0 КАК СуммаПостоплаты,
	|		0 КАК СуммаПостоплатыРегл,
	|		0 КАК СуммаПостоплатыВВалютеПлатежа,
	|		
	|		0 КАК СуммаПредоплаты,
	|		0 КАК СуммаПредоплатыРегл,
	|		0 КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|		0 КАК СуммаКВыплатеСверхЛимита,
	|
	|		ТаблицаРасшифровкаПлатежа.СуммаНДСУпр КАК СуммаНДС,
	|		ТаблицаРасшифровкаПлатежа.СуммаНДСРегл КАК СуммаНДСРегл,
	|		ТаблицаРасшифровкаПлатежа.СуммаНДС КАК СуммаНДСВВалютеПлатежа,
	|
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|
	|		0 КАК СуммаОплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|		ДанныеДокумента.Касса КАК ИсточникГФУДенежныхСредств,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ИсточникГФУРасчетов,
	|		ТаблицаРасшифровкаПлатежа.СтавкаНДС КАК СтавкаНДС,
	|		ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|	ИЗ
	|		Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ИСТИНА
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию))
	|		И ТаблицаРасшифровкаПлатежа.СуммаНДС <> 0
	|
	|	) КАК ДанныеДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Период,
	|	ДанныеДокумента.ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.Подразделение,
	|	ДанныеДокумента.ДенежныеСредства,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.ВалютаПлатежа,
	|	ДанныеДокумента.Партнер,
	|	ДанныеДокумента.Контрагент,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДанныеДокумента.НаправлениеДеятельности.УчетРасчетовСПоставщиками, ЛОЖЬ)
	|			ТОГДА ДанныеДокумента.НаправлениеДеятельности
	|	КОНЕЦ,
	|	ДанныеДокумента.Договор,
	|	ДанныеДокумента.ОбъектРасчетов,
	|	ДанныеДокумента.ВалютаВзаиморасчетов,
	|	ДанныеДокумента.ИсточникГФУДенежныхСредств,
	|	ДанныеДокумента.ИсточникГФУРасчетов,
	|	ДанныеДокумента.СтавкаНДС,
	|	ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЛимитыРасходаДенежныхСредств(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЛимитыРасходаДенежныхСредств";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	ДанныеДокумента.Дата КАК Период,
	|	ВЫБОР
	|		КОГДА &ИспользоватьЛимитыРасходаПоОрганизациям
	|			ТОГДА &Организация
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	КОНЕЦ КАК Организация,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьЛимитыРасходаПоПодразделениям
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|		КОГДА &Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА &Подразделение 
	|		ИНАЧЕ ДанныеДокумента.Касса.Подразделение
	|	КОНЕЦ КАК Подразделение,
	|
	|	ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику))
	|	ТОГДА
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
	|	ИНАЧЕ
	|		&СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента) * &КоэффициентПересчетаВВалютуУпр КАК РасходСверхЛимита
	|	
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ИСТИНА
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ИспользоватьЛимитыРасходаДенежныхСредств
	|	И ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
	|	И ДанныеДокумента.ХозяйственнаяОперация НЕ В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СдачаДенежныхСредствВБанк),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВКассуККМ),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыЧерезКассу),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыРаздатчиком),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыРаботнику)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0 КАК НомерСтроки,
	|	ДанныеДокумента.Дата КАК Период,
	|	ВЫБОР
	|		КОГДА &ИспользоватьЛимитыРасходаПоОрганизациям
	|			ТОГДА &Организация
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	КОНЕЦ КАК Организация,
	|	
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьЛимитыРасходаПоПодразделениям
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|		КОГДА &Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА &Подразделение 
	|		ИНАЧЕ ДанныеДокумента.Касса.Подразделение
	|	КОНЕЦ КАК Подразделение,
	|	
	|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ДанныеДокумента.СуммаДокумента КАК РасходСверхЛимита
	|	
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
	|	И &ИспользоватьЛимитыРасходаДенежныхСредств
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыЧерезКассу),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыРаботнику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыРаздатчиком)
	|	)
	|	И НЕ &ИспользоватьНачислениеЗарплаты
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВременнаяТаблицаДвиженияКонтрагентКонтрагент(Запрос, ТекстыЗапроса)
	
	ИмяВременнойТаблицы = "ВтДвиженияКонтрагентКонтрагент";
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Период КАК Период,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДанныеДокумента.НаправлениеДеятельности.УчетРасчетовСПоставщиками, ЛОЖЬ)
	|			ТОГДА ДанныеДокумента.НаправлениеДеятельности
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ДанныеДокумента.КорПартнер КАК КорПартнер,
	|	ДанныеДокумента.КорКонтрагент КАК КорКонтрагент,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДанныеДокумента.КорНаправлениеДеятельности.УчетРасчетовСПоставщиками, ЛОЖЬ)
	|			ТОГДА ДанныеДокумента.КорНаправлениеДеятельности
	|	КОНЕЦ КАК КорНаправлениеДеятельности,
	|	ДанныеДокумента.КорДоговор КАК КорДоговор,
	|	ДанныеДокумента.КорОбъектРасчетов КАК КорОбъектРасчетов,
	|	&Валюта КАК Валюта,
	|	СУММА(ДанныеДокумента.Сумма) КАК Сумма,
	|	СУММА(ДанныеДокумента.СуммаРегл) КАК СуммаРегл,
	|	СУММА(ДанныеДокумента.СуммаВВалюте) КАК СуммаВВалюте,
	|	ДанныеДокумента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	СУММА(ДанныеДокумента.СуммаВВалютеВзаиморасчетов) КАК СуммаВВалютеВзаиморасчетов,
	|	ДанныеДокумента.КорВалютаВзаиморасчетов КАК КорВалютаВзаиморасчетов,
	|	СУММА(ДанныеДокумента.КорСуммаВВалютеВзаиморасчетов) КАК КорСуммаВВалютеВзаиморасчетов,
	|	ДанныеДокумента.ИсточникГФУРасчетов КАК ИсточникГФУРасчетов,
	|	ДанныеДокумента.КорИсточникГФУРасчетов КАК КорИсточникГФУРасчетов
	|ПОМЕСТИТЬ ВтДвиженияКонтрагентКонтрагент
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеДокумента.Дата КАК Период,
	|		ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПлатежаИзФилиала)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности)
	|		КОНЕЦ КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.Организация КАК Организация,
	|		ТаблицаРасшифровкаПлатежа.ПодразделениеЗаказа КАК Подразделение,
	|
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Договор КАК Договор,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ОбъектРасчетов,
	|
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК КорПартнер,
	|		ТаблицаРасшифровкаПлатежа.Организация КАК КорКонтрагент,
	|		ВЫРАЗИТЬ(&НаправлениеДеятельностиДС КАК Справочник.НаправленияДеятельности) КАК КорНаправлениеДеятельности,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Договор КАК КорДоговор,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК КорОбъектРасчетов,
	|		
	|	
	|		ТаблицаРасшифровкаПлатежа.СуммаУпр КАК Сумма,
	|		ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
	|		ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаВВалюте,
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК СуммаВВалютеВзаиморасчетов,
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК КорВалютаВзаиморасчетов,
	|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК КорСуммаВВалютеВзаиморасчетов,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ИсточникГФУРасчетов,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК КорИсточникГФУРасчетов
	|	ИЗ
	|		Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|			ПО ИСТИНА
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию))
	|		И ДанныеДокумента.Организация <> ТаблицаРасшифровкаПлатежа.Организация
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Дата КАК Период,
	|		ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемПлатежаВФилиале)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности)
	|		КОНЕЦ КАК ХозяйственнаяОперация,
	|		ТаблицаРасшифровкаПлатежа.Организация КАК Организация,
	|		ТаблицаРасшифровкаПлатежа.ПодразделениеЗаказа КАК Подразделение,
	|
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|		ДанныеДокумента.Организация КАК Контрагент,
	|		ВЫРАЗИТЬ(&НаправлениеДеятельностиДС КАК Справочник.НаправленияДеятельности) КАК НаправлениеДеятельности,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Договор КАК Договор,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ОбъектРасчетов,
	|
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер КАК КорПартнер,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент КАК КорКонтрагент,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Договор КАК КорДоговор,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК КорОбъектРасчетов,
	|		
	|	
	|		ТаблицаРасшифровкаПлатежа.СуммаУпр КАК Сумма,
	|		ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
	|		ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаВВалюте,
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК СуммаВВалютеВзаиморасчетов,
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК КорВалютаВзаиморасчетов,
	|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК КорСуммаВВалютеВзаиморасчетов,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ИсточникГФУРасчетов,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК КорИсточникГФУРасчетов
	|	ИЗ
	|		Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|			ПО ИСТИНА
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию))
	|		И ДанныеДокумента.Организация <> ТаблицаРасшифровкаПлатежа.Организация
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	// Возврат оплаты по курсу аванса
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Дата КАК Период,
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности) КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.Организация КАК Организация,
	|		ТаблицаРасшифровкаПлатежа.ПодразделениеЗаказа КАК Подразделение,
	|
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|		ДанныеДокумента.Организация КАК Контрагент,
	|		&НаправлениеДеятельностиДС КАК НаправлениеДеятельности,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Договор КАК Договор,
	|		ДанныеДокумента.ОбъектРасчетов КАК ОбъектРасчетов,
	|
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер КАК КорПартнер,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент КАК КорКонтрагент,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Договор КАК КорДоговор,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК КорОбъектРасчетов,
	|		
	|	
	|		ТаблицаРасшифровкаПлатежа.СуммаУпр КАК Сумма,
	|		ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
	|		ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаВВалюте,
	|
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК СуммаВВалютеВзаиморасчетов,
	|
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК КорВалютаВзаиморасчетов,
	|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК КорСуммаВВалютеВзаиморасчетов,
	|
	|		ДанныеДокумента.ОбъектРасчетов КАК ИсточникГФУРасчетов,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК КорИсточникГФУРасчетов
	|	ИЗ
	|		Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|			ПО ИСТИНА
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту))
	|		И ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.Объект <> &Ссылка
	|
	|) КАК ДанныеДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Период,
	|	ДанныеДокумента.ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.Подразделение,
	|	ДанныеДокумента.Партнер,
	|	ДанныеДокумента.Контрагент,
	|	ДанныеДокумента.НаправлениеДеятельности,
	|	ДанныеДокумента.Договор,
	|	ДанныеДокумента.ОбъектРасчетов,
	|	ДанныеДокумента.КорПартнер,
	|	ДанныеДокумента.КорКонтрагент,
	|	ДанныеДокумента.КорНаправлениеДеятельности,
	|	ДанныеДокумента.КорДоговор,
	|	ДанныеДокумента.КорОбъектРасчетов,
	|	ДанныеДокумента.ВалютаВзаиморасчетов,
	|	ДанныеДокумента.КорВалютаВзаиморасчетов,
	|	ДанныеДокумента.ИсточникГФУРасчетов,
	|	ДанныеДокумента.КорИсточникГФУРасчетов,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДанныеДокумента.НаправлениеДеятельности.УчетРасчетовСПоставщиками, ЛОЖЬ)
	|			ТОГДА ДанныеДокумента.НаправлениеДеятельности
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДанныеДокумента.КорНаправлениеДеятельности.УчетРасчетовСПоставщиками, ЛОЖЬ)
	|			ТОГДА ДанныеДокумента.КорНаправлениеДеятельности
	|	КОНЕЦ";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияКонтрагентКонтрагент(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияКонтрагентКонтрагент";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтДвиженияКонтрагентКонтрагент", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаДвиженияКонтрагентКонтрагент(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДвиженияКонтрагентКонтрагент.Период                        КАК Период,
	|	ДвиженияКонтрагентКонтрагент.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|	ДвиженияКонтрагентКонтрагент.Организация                   КАК Организация,
	|	ДвиженияКонтрагентКонтрагент.Подразделение                 КАК Подразделение,
	|
	|	ДвиженияКонтрагентКонтрагент.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	ДвиженияКонтрагентКонтрагент.Партнер                       КАК Партнер,
	|	ДвиженияКонтрагентКонтрагент.Контрагент                    КАК Контрагент,
	|	ДвиженияКонтрагентКонтрагент.Договор                       КАК Договор,
	|	ДвиженияКонтрагентКонтрагент.ОбъектРасчетов                КАК ОбъектРасчетов,
	|
	|	ДвиженияКонтрагентКонтрагент.КорПартнер                    КАК КорПартнер,
	|	ДвиженияКонтрагентКонтрагент.КорКонтрагент                 КАК КорКонтрагент,
	|	ДвиженияКонтрагентКонтрагент.КорНаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|	ДвиженияКонтрагентКонтрагент.КорДоговор                    КАК КорДоговор,
	|	ДвиженияКонтрагентКонтрагент.КорОбъектРасчетов             КАК КорОбъектРасчетов,
	|	ДвиженияКонтрагентКонтрагент.Валюта                        КАК Валюта,
	|
	|	ДвиженияКонтрагентКонтрагент.Сумма                         КАК Сумма,
	|	ДвиженияКонтрагентКонтрагент.СуммаРегл                     КАК СуммаРегл,
	|	ДвиженияКонтрагентКонтрагент.СуммаВВалюте                  КАК СуммаВВалюте,
	|
	|	ДвиженияКонтрагентКонтрагент.ВалютаВзаиморасчетов          КАК ВалютаВзаиморасчетов,
	|	ДвиженияКонтрагентКонтрагент.СуммаВВалютеВзаиморасчетов    КАК СуммаВВалютеВзаиморасчетов,
	|	ДвиженияКонтрагентКонтрагент.КорВалютаВзаиморасчетов       КАК КорВалютаВзаиморасчетов,
	|	ДвиженияКонтрагентКонтрагент.КорСуммаВВалютеВзаиморасчетов КАК КорСуммаВВалютеВзаиморасчетов,
	|
	|	ДвиженияКонтрагентКонтрагент.ИсточникГФУРасчетов           КАК ИсточникГФУРасчетов,
	|	ДвиженияКонтрагентКонтрагент.КорИсточникГФУРасчетов        КАК КорИсточникГФУРасчетов
	|ИЗ
	|	ВтДвиженияКонтрагентКонтрагент КАК ДвиженияКонтрагентКонтрагент
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаРасходов КАК АналитикаРасходов,
	|	ТаблицаРасшифровкаПлатежа.Подразделение КАК Подразделение,
	|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаСНДС,
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаБезНДС,
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаБезНДСУпр,
	|	ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаСНДСРегл,
	|	ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|
	|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПрочаяВыдачаДенежныхСредств) КАК НастройкаХозяйственнойОперации
	|
	|ПОМЕСТИТЬ ВтИсходныеПрочиеРасходы
	|ИЗ
	|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		ТаблицаРасшифровкаПлатежа.СтатьяРасходов = СтатьиРасходов.Ссылка
	|	
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса) Экспорт
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПартииПрочихРасходов";
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаРасшифровкаПлатежа.Подразделение КАК Подразделение,
	|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
	|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК Стоимость,
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СтоимостьБезНДС,
	|	0 КАК НДСУпр,
	|	ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СтоимостьРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	0 КАК НДСРегл,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|
	|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПрочаяВыдачаДенежныхСредств) КАК НастройкаХозяйственнойОперации
	|
	|ПОМЕСТИТЬ ВтИсходныеПартииПрочихРасходов
	|ИЗ
	|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);

КонецФункции

Функция ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтПартииПрочихРасходов";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтИсходныеПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаВтПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Организация                            КАК Организация,
	|	&Партнер                                КАК Партнер,
	|	&Касса                                  КАК МестоХранения,
	|	&Контрагент                             КАК Контрагент,
	|	&Подразделение                          КАК Подразделение,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Ссылка                                 КАК Ссылка,
	
	|	&Номер                                  КАК НомерДокументаИБ,
	|	НЕОПРЕДЕЛЕНО                            КАК Статус,
	|	&Автор                                  КАК Автор,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	НЕОПРЕДЕЛЕНО                            КАК Дополнительно,
	|	&Комментарий                            КАК Комментарий,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	&Период                                 КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                          КАК НомерПервичногоДокумента,
	|	&СуммаДокумента                         КАК Сумма,
	|	&Валюта                                 КАК Валюта,
	|	&Договор                                КАК Договор,
	|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	&Исправление                            КАК СторноИсправление,
	|	&СторнируемыйДокумент                   КАК СторнируемыйДокумент,
	|	&ИсправляемыйДокумент                   КАК ИсправляемыйДокумент,
	|	&Период                                 КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО                            КАК Приоритет
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаАрендодателю),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Организация                            КАК Организация,
	|	&Партнер                                КАК Партнер,
	|	&Касса                                  КАК МестоХранения,
	|	&ПодотчетноеЛицо                        КАК Контрагент,
	|	&Подразделение                          КАК Подразделение,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Ссылка                                 КАК Ссылка,
	
	|	&Номер                                  КАК НомерДокументаИБ,
	|	НЕОПРЕДЕЛЕНО                            КАК Статус,
	|	&Автор                                  КАК Автор,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	НЕОПРЕДЕЛЕНО                            КАК Дополнительно,
	|	&Комментарий                            КАК Комментарий,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	&Период                                 КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                          КАК НомерПервичногоДокумента,
	|	&СуммаДокумента                         КАК Сумма,
	|	&Валюта                                 КАК Валюта,
	|	&Договор                                КАК Договор,
	|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	&Исправление                            КАК СторноИсправление,
	|	&СторнируемыйДокумент                   КАК СторнируемыйДокумент,
	|	&ИсправляемыйДокумент                   КАК ИсправляемыйДокумент,
	|	&Период                                 КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО                            КАК Приоритет
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыРаздатчиком),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыРаботнику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Организация                            КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|	&Касса                                  КАК МестоХранения,
	|	&ОрганизацияПолучатель                  КАК Контрагент,
	|	&Подразделение                          КАК Подразделение,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Ссылка                                 КАК Ссылка,
	
	|	&Номер                                  КАК НомерДокументаИБ,
	|	НЕОПРЕДЕЛЕНО                            КАК Статус,
	|	&Автор                                  КАК Автор,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	НЕОПРЕДЕЛЕНО                            КАК Дополнительно,
	|	&Комментарий                            КАК Комментарий,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	&Период                                 КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                          КАК НомерПервичногоДокумента,
	|	&СуммаДокумента                         КАК Сумма,
	|	&Валюта                                 КАК Валюта,
	|	&Договор                                КАК Договор,
	|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	&Исправление                            КАК СторноИсправление,
	|	&СторнируемыйДокумент                   КАК СторнируемыйДокумент,
	|	&ИсправляемыйДокумент                   КАК ИсправляемыйДокумент,
	|	&Период                                 КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО                            КАК Приоритет
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Организация                            КАК Организация,
	|	НЕОПРЕДЕЛЕНО                            КАК Партнер,
	|	&Касса                                  КАК МестоХранения,
	|	НЕОПРЕДЕЛЕНО                            КАК Контрагент,
	|	&Подразделение                          КАК Подразделение,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Ссылка                                 КАК Ссылка,
	
	|	&Номер                                  КАК НомерДокументаИБ,
	|	НЕОПРЕДЕЛЕНО                            КАК Статус,
	|	&Автор                                  КАК Автор,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	НЕОПРЕДЕЛЕНО                            КАК Дополнительно,
	|	&Комментарий                            КАК Комментарий,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	&Период                                 КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                          КАК НомерПервичногоДокумента,
	|	&СуммаДокумента                         КАК Сумма,
	|	&Валюта                                 КАК Валюта,
	|	НЕОПРЕДЕЛЕНО                            КАК Договор,
	|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	&Исправление                            КАК СторноИсправление,
	|	&СторнируемыйДокумент                   КАК СторнируемыйДокумент,
	|	&ИсправляемыйДокумент                   КАК ИсправляемыйДокумент,
	|	&Период                                 КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО                            КАК Приоритет
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СдачаДенежныхСредствВБанк),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИнкассацияДенежныхСредствВБанк),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВКассуККМ),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыЧерезКассу)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Организация                            КАК Организация,
	|	НЕОПРЕДЕЛЕНО                            КАК Партнер,
	|	&БанковскийСчет                         КАК МестоХранения,
	|	НЕОПРЕДЕЛЕНО                            КАК Контрагент,
	|	&Подразделение                          КАК Подразделение,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Ссылка                                 КАК Ссылка,
	
	|	&Номер                                  КАК НомерДокументаИБ,
	|	НЕОПРЕДЕЛЕНО                            КАК Статус,
	|	&Автор                                  КАК Автор,
	|	ИСТИНА                                  КАК ДополнительнаяЗапись,
	|	НЕОПРЕДЕЛЕНО                            КАК Дополнительно,
	|	&Комментарий                            КАК Комментарий,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	&Период                                 КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                          КАК НомерПервичногоДокумента,
	|	&СуммаДокумента                         КАК Сумма,
	|	&Валюта                                 КАК Валюта,
	|	НЕОПРЕДЕЛЕНО                            КАК Договор,
	|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	&Исправление                            КАК СторноИсправление,
	|	&СторнируемыйДокумент                   КАК СторнируемыйДокумент,
	|	&ИсправляемыйДокумент                   КАК ИсправляемыйДокумент,
	|	&Период                                 КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО                            КАК Приоритет
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СдачаДенежныхСредствВБанк)
	|	)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ДобавитьТекстыОтраженияВзаиморасчетов(Запрос, ТекстыЗапроса, Регистры)
	
	Если НЕ Запрос.Параметры.Свойство("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств") Тогда
		Запрос.УстановитьПараметр("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств",
			ПолучитьФункциональнуюОпцию("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств"));
	КонецЕсли;
	
	#Область РасчетыСКлиентами
	
	#Область ТекстВозврат
	
	ТекстВозврат = "
		|ВЫБРАТЬ
		|	Таблица.Ссылка                               КАК Ссылка,
		|	Документ.Организация                         КАК Организация,
		|	ВЫБОР КОГДА Документ.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
		|		ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
		|		ИНАЧЕ Таблица.Партнер
		|	КОНЕЦ                                       КАК Партнер,
		|	ОбъектРасчетовПлатеж.Ссылка                  КАК ОбъектРасчетов,
		|	
		|	Таблица.ВалютаВзаиморасчетов                 КАК ВалютаВзаиморасчетов,
		|	Таблица.СуммаВзаиморасчетов                  КАК СуммаВзаиморасчетов,
		|	Документ.Валюта                              КАК ВалютаДокумента,
		|	Таблица.Сумма                                КАК Сумма,
		|	ВЫБОР 
		|		КОГДА Таблица.ОбъектРасчетов.Объект <> Таблица.Ссылка
		|				И (НЕ (Таблица.Ссылка.ОплатаПоЗаявкам И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств)
		|					ИЛИ Таблица.ЗаявкаНаРасходованиеДенежныхСредств.КонтролироватьОплатуПоОбъектамРасчетов)
		|			ТОГДА Таблица.СуммаВзаиморасчетов 
		|		ИНАЧЕ 0 
		|	КОНЕЦ КАК УвеличениеОплачивается,
		|	
		|	Документ.ХозяйственнаяОперация               КАК ХозяйственнаяОперация,
		|	Документ.Дата                                КАК ДатаРегистратора,
		|	Документ.Номер                               КАК НомерРегистратора,
		|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)  КАК ФормаОплаты,
		|	Документ.Дата                                КАК ДатаКурса,
		|	Таблица.СтатьяДвиженияДенежныхСредств        КАК СтатьяДвиженияДенежныхСредств,
		|	Таблица.ЗаявкаНаРасходованиеДенежныхСредств  КАК ЗаявкаНаРасходованиеДенежныхСредств,
		|	Таблица.ИдентификаторСтроки                  КАК ИдентификаторФинЗаписи,
		|	&НастройкаХозяйственнойОперации              КАК НастройкаХозяйственнойОперации
		|ИЗ
		|	Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК Таблица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйКассовыйОрдер КАК Документ
		|			ПО Документ.Ссылка = Таблица.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектРасчетовПлатеж
		|			ПО Документ.ОбъектРасчетов = ОбъектРасчетовПлатеж.Ссылка
		|ГДЕ
		|	Таблица.Ссылка В (&Ссылка)
		|	И Документ.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию))
		|";
	
	#КонецОбласти
	
	#Область УменьшениеОплачивается
	
	ТекстУменьшитьОплачивается = "
		|ВЫБРАТЬ
		|	Таблица.Ссылка                                                           КАК Ссылка,
		|	Таблица.Ссылка.Организация                                               КАК Организация,
		|	ВЫБОР КОГДА Таблица.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
		|		ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
		|		ИНАЧЕ Таблица.Партнер
		|	КОНЕЦ                                                                    КАК Партнер,
		|
		|	Таблица.ОбъектРасчетов                                                   КАК ОбъектРасчетов,
		|
		|	Таблица.ВалютаВзаиморасчетов                                             КАК ВалютаВзаиморасчетов,
		|	Таблица.СуммаВзаиморасчетов                                              КАК Оплачивается,
		|	Таблица.Ссылка.ХозяйственнаяОперация                                     КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)                              КАК ФормаОплаты,
		|	Таблица.СтатьяДвиженияДенежныхСредств                                    КАК СтатьяДвиженияДенежныхСредств,
		|	Таблица.ЗаявкаНаРасходованиеДенежныхСредств                              КАК ЗаявкаНаРасходованиеДенежныхСредств,
		|	Таблица.Ссылка.Валюта                                                    КАК ВалютаДокумента,
		|	Таблица.Ссылка.Дата                                                      КАК ДатаРегистратора,
		|	Таблица.Ссылка.Номер                                                     КАК НомерРегистратора
		|ИЗ
		|	Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка В (&Ссылка)
		|	И Таблица.Ссылка.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
		|	)
		|	И НЕ (Таблица.Ссылка.ОплатаПоЗаявкам И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств)
		|	И Таблица.ОбъектРасчетов <> Таблица.Ссылка.ОбъектРасчетов
		|";
	
	#КонецОбласти
	
	#Область ПереносЗадолженности
	
	ТекстПереносЗадолженности = "
	|ВЫБРАТЬ
	|	Таблица.Ссылка                                             КАК Ссылка,
	|	Документ.Организация                                       КАК Организация,
	|	ВЫБОР КОГДА Документ.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		ИНАЧЕ Таблица.Партнер
	|	КОНЕЦ                                                      КАК Партнер,
	|	ОбъектРасчетовПлатеж.Ссылка                                КАК ОбъектРасчетовПриемник,
	|	Таблица.ОбъектРасчетов                                     КАК ОбъектРасчетовИсточник,
	|	
	|	Таблица.ВалютаВзаиморасчетов                               КАК ВалютаВзаиморасчетов,
	|	Документ.Валюта                                            КАК ВалютаДокумента,
	|	Таблица.СуммаВзаиморасчетов                                КАК СуммаВзаиморасчетов,
	|	Таблица.Сумма                                              КАК Сумма,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереносАванса) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)                КАК ФормаОплаты,
	|	Документ.Номер                                             КАК НомерРегистратора,
	|	Документ.Дата                                              КАК ДатаРегистратора,
	|	Таблица.СтатьяДвиженияДенежныхСредств                      КАК СтатьяДвиженияДенежныхСредств,
	|	Таблица.ИдентификаторСтроки                                КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПереносАванса) КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК Таблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйКассовыйОрдер КАК Документ
	|			ПО Документ.Ссылка = Таблица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектРасчетовПлатеж
	|			ПО Документ.ОбъектРасчетов = ОбъектРасчетовПлатеж.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
	|			ПО Таблица.ОбъектРасчетов = ОбъектыРасчетов.Ссылка
	|ГДЕ
	|	Таблица.Ссылка В (&Ссылка)
	|	И Документ.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию))
	|";
	
	#КонецОбласти
	
	ВзаиморасчетыСервер.ПроведениеВозвратаОплатыКлиенту(Запрос, ТекстыЗапроса, Регистры, ТекстВозврат,
		ТекстПереносЗадолженности, ТекстУменьшитьОплачивается);
	
	#КонецОбласти
	
	#Область РасчетыСПоставщиками
	
	ТекстОплата = "
		|ВЫБРАТЬ
		|	Таблица.Ссылка                                                   КАК Ссылка,
		|	Таблица.Ссылка.Организация                                       КАК Организация,
		|	ВЫБОР КОГДА Таблица.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию)
		|		ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
		|		ИНАЧЕ Таблица.Партнер
		|	КОНЕЦ                                                            КАК Партнер,
		|	Таблица.Ссылка.Дата                                              КАК ДатаРегистратора,
		|	Таблица.Ссылка.Номер                                             КАК НомерРегистратора,
		|	
		|	Таблица.ОбъектРасчетов                                           КАК ОбъектРасчетов,
		|	Таблица.ВалютаВзаиморасчетов                                     КАК ВалютаВзаиморасчетов,
		|	Таблица.Сумма                                                    КАК Сумма,
		|	Таблица.СуммаВзаиморасчетов                                      КАК СуммаВзаиморасчетов,
		|	ВЫБОР 
		|		КОГДА Таблица.ОбъектРасчетов.Объект <> Таблица.Ссылка
		|				И (НЕ (Таблица.Ссылка.ОплатаПоЗаявкам И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств)
		|					ИЛИ Таблица.ЗаявкаНаРасходованиеДенежныхСредств.КонтролироватьОплатуПоОбъектамРасчетов)
		|			ТОГДА Таблица.СуммаВзаиморасчетов 
		|		ИНАЧЕ 0 
		|	КОНЕЦ                                                            КАК УменьшениеОплачивается,
		|	ВЫБОР 
		|		КОГДА НЕ (Таблица.Ссылка.ОплатаПоЗаявкам И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств)
		|				И Таблица.ОбъектРасчетов.Объект <> Таблица.Ссылка
		|			ТОГДА Таблица.СуммаВзаиморасчетов 
		|		ИНАЧЕ 0 
		|	КОНЕЦ                                                          КАК УвеличениеОплачивается,
		|
		|	Таблица.Ссылка.ХозяйственнаяОперация                             КАК ХозяйственнаяОперация,
		|	Таблица.СтатьяДвиженияДенежныхСредств                            КАК СтатьяДвиженияДенежныхСредств,
		|	Таблица.ЗаявкаНаРасходованиеДенежныхСредств                      КАК ЗаявкаНаРасходованиеДенежныхСредств,
		|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)                      КАК ФормаОплаты,
		|	Таблица.Ссылка.Валюта                                            КАК ВалютаДокумента,
		|	Таблица.Ссылка.Дата                                              КАК ДатаКурса,
		|	Неопределено                                                     КАК СвязанныйДокумент,
		|	Таблица.ИдентификаторСтроки                                      КАК ИдентификаторФинЗаписи,
		|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПустаяСсылка) КАК НастройкаХозяйственнойОперации
		|ИЗ
		|	Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка В (&Ссылка)
		|	И Таблица.Ссылка.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию))
		|";
	
	ВзаиморасчетыСервер.ПроведениеОплатыПоставщику(Запрос, ТекстыЗапроса, Регистры, ТекстОплата);
	
	#КонецОбласти
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	Если ПравоДоступа("Изменение", Метаданные.Документы.РасходныйКассовыйОрдер) Тогда
		// Расходный кассовый ордер
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "РКО";
		КомандаПечати.Представление = НСтр("ru = 'Расходный кассовый ордер'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;
	
	РасходныйКассовыйОрдерЛокализация.ДобавитьКомандыПечати(КомандыПечати);

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РКО") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"РКО",
			НСтр("ru='Расходный кассовый ордер'"),
			СформироватьПечатнуюФормуРКО(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
	
	РасходныйКассовыйОрдерЛокализация.Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

Процедура ЗаполнитьСтруктуруПолучателейПечатныхФорм(СтруктураДанныхОбъектаПечати) Экспорт
	
	СтруктураДанныхОбъектаПечати.ОсновнойПолучатель = "Контрагент";
	МассивРеквизитовПолучателей = СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей; // Массив из Строка
	
	МассивРеквизитовПолучателей.Добавить("Контрагент");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда 
		МассивРеквизитовПолучателей.Добавить("РасшифровкаПлатежа.Партнер");
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуРКО(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РКО";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РасходныйКассовыйОрдер.ПФ_MXL_РасходныйКассовыйОрдер");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(ДанныеДокумента.ИсправляемыйДокумент.Дата, ДанныеДокумента.Дата) КАК ДатаДокумента,
	|	ЕСТЬNULL(ДанныеДокумента.ИсправляемыйДокумент.Номер, ДанныеДокумента.Номер) КАК Номер,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Организация.Наименование КАК НаименованиеОрганизации,
	|	ДанныеДокумента.Организация.НаименованиеСокращенное КАК НаименованиеОрганизацииСокращенное,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	ДанныеДокумента.Касса.Подразделение КАК ПредставлениеПодразделения,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Контрагент.Представление КАК КонтрагентПредставление,
	|	ДанныеДокумента.Основание КАК Основание,
	|	ДанныеДокумента.СуммаДокумента КАК Сумма,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.Валюта.Представление КАК ВалютаПредставление,
	|	ДанныеДокумента.Выдать КАК ФИОПолучателя
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номер
	|;";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	Выборка           = Запрос.Выполнить().Выбрать();
	
	ПервыйДокумент = Истина;
	Пока Выборка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, Выборка.Ссылка);
		ОбластьМакета.Параметры.Заполнить(Выборка);
		СтруктураПараметров = Новый Структура();
		СтруктураПараметров.Вставить("ПредставлениеОрганизации");
		Если Не ПустаяСтрока(Выборка.НаименованиеОрганизацииСокращенное) Тогда
			СтруктураПараметров.ПредставлениеОрганизации = Выборка.НаименованиеОрганизацииСокращенное;
		Иначе
			СтруктураПараметров.ПредставлениеОрганизации = Выборка.НаименованиеОрганизации;
		КонецЕсли;
		ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
		
		ОбластьМакета.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(
			Выборка.Номер, 
			Ложь,
			Истина);
		
		СтруктураДанныхОрганизация = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Организация,
			Выборка.ДатаДокумента);
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхОрганизация);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент,
			НомерСтрокиНачало,
			ОбъектыПечати,
			Выборка.Ссылка);
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции
#КонецОбласти

#Область ШаблоныСообщений

// Вызывается при подготовке шаблонов сообщений и позволяет переопределить список реквизитов и вложений.
//
// Параметры:
//  Реквизиты               - ДеревоЗначений - список реквизитов шаблона.
//         ** Имя            - Строка - Уникальное имя общего реквизита.
//         ** Представление  - Строка - Представление общего реквизита.
//         ** Тип            - Тип    - Тип реквизита. По умолчанию строка.
//         ** Формат         - Строка - Формат вывода значения для чисел, дат, строк и булевых значений.
//  Вложения                - ТаблицаЗначений - печатные формы и вложения
//         ** Имя            - Строка - Уникальное имя вложения.
//         ** Представление  - Строка - Представление варианта.
//         ** ТипФайла       - Строка - Тип вложения, который соответствует расширению файла: "pdf", "png", "jpg", mxl"
//                                      и др.
//  ДополнительныеПараметры - Структура - дополнительные сведения о шаблоне сообщений.
//
Процедура ПриПодготовкеШаблонаСообщения(Реквизиты, Вложения, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

// Вызывается в момент создания сообщений по шаблону для заполнения значений реквизитов и вложений.
//
// Параметры:
//  Сообщение - Структура - структура с ключами:
//    * ЗначенияРеквизитов - Соответствие - список используемых в шаблоне реквизитов.
//      * Ключ     - Строка - имя реквизита в шаблоне;
//      * Значение - Строка - значение заполнения в шаблоне.
//    * ЗначенияОбщихРеквизитов - Соответствие - список используемых в шаблоне общих реквизитов.
//      * Ключ     - Строка - имя реквизита в шаблоне;
//      * Значение - Строка - значение заполнения в шаблоне.
//    * Вложения - Соответствие - значения реквизитов
//      * Ключ     - Строка - имя вложения в шаблоне;
//      * Значение - ДвоичныеДанные, Строка - двоичные данные или адрес во временном хранилище вложения.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//  ДополнительныеПараметры - Структура -  Дополнительная информация о шаблоне сообщения.
//
Процедура ПриФормированииСообщения(Сообщение, ПредметСообщения, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

// Заполняет список получателей SMS при отправке сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиSMS - ТаблицаЗначений - список получается SMS.
//     * НомерТелефона - Строка - номер телефона, куда будет отправлено сообщение SMS.
//     * Представление - Строка - представление получателя сообщения SMS.
//     * Контакт       - СправочникСсылка - контакт, которому принадлежит номер телефона.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//
Процедура ПриЗаполненииТелефоновПолучателейВСообщении(ПолучателиSMS, ПредметСообщения) Экспорт
	
КонецПроцедуры

// Заполняет список получателей письма при отправки сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиПисьма - ТаблицаЗначений - список получается письма.
//     * Адрес           - Строка - адрес электронной почты получателя.
//     * Представление   - Строка - представление получается письма.
//     * ВариантОтправки - Строка - Варианты отправки письма: "Кому", "Копия", "СкрытаяКопия", "ОбратныйАдреса";
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//
Процедура ПриЗаполненииПочтыПолучателейВСообщении(ПолучателиПисьма, ПредметСообщения) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Функция СтатьяДвиженияДенежныхСредствДокумента(ДанныеДокумента)

	Если ЗначениеЗаполнено(ДанныеДокумента.СтатьяДвиженияДенежныхСредств) Тогда
		СтатьяДвиженияДенежныхСредств = ДанныеДокумента.СтатьяДвиженияДенежныхСредств;
	Иначе
		СтатьяДвиженияДенежныхСредств =
			Справочники.СтатьиДвиженияДенежныхСредств.ПредопределеннаяСтатьяДДС(ДанныеДокумента.ХозяйственнаяОперация, ДанныеДокумента.Валюта);
	КонецЕсли;
	
	Возврат СтатьяДвиженияДенежныхСредств;

КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

#Область ОбработатьДанныеДляПереходаНаНовуюВерсию

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Документы.РасходныйКассовыйОрдер.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "11.5.8.106";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("5d668669-37ff-4964-bcf7-f817ad11c923");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.РасходныйКассовыйОрдер.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Заполняет реквизиты:
	|- ""Ставка НДС""
	|- ""Объект расчетов""
	|- ""Идентификатор документа""
	|- ""Настройка счетов учета""'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.РасходныйКассовыйОрдер.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыСведений.ОтносительныеКурсыВалют.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Справочники.ОбъектыРасчетов.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Справочники.СтавкиНДС.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Документы.РасходныйКассовыйОрдер.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.Документы.РасходныйКассовыйОрдер.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");

#КонецОбласти

#Область СгенерироватьОбъектыРасчетов

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Документы.РасходныйКассовыйОрдер.СгенерироватьОбъектыРасчетов";
	Обработчик.Версия = "11.5.6.189";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("dacf071a-ae5b-4ce0-9b08-f33e604ad835");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.РасходныйКассовыйОрдер.ЗарегистрироватьДанныеДляГенерацииОбъектовРасчетов";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.ЗапускатьТолькоВГлавномУзле = Истина;
	Обработчик.Комментарий = НСтр("ru = 'Генерирует элементы справочника ""Объекты расчетов"".'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.РасходныйКассовыйОрдер.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Справочники.ОбъектыРасчетов.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	

#КонецОбласти

КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаОбъектов = "Документ.РасходныйКассовыйОрдер";
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Дата УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Дата УБЫВ");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиСсылки();
	ОбъектыРасчетовСервер.ДополнитьДополнительныеИсточникиДанных(ПараметрыВыборки, ПустаяСсылка());
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасходныйКассовыйОрдер.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	|ГДЕ
	|	ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК ТЧРасшифровкаПлатежа
	|		ГДЕ
	|			(РасходныйКассовыйОрдер.Ссылка = ТЧРасшифровкаПлатежа.Ссылка
	|			И (НЕ ТЧРасшифровкаПлатежа.УдалитьСтавкаНДС = &ПустаяСтавкаНДС
	|			И ТЧРасшифровкаПлатежа.СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|			ИЛИ ТЧРасшифровкаПлатежа.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|				И РасходныйКассовыйОрдер.ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию)
	|				)
	|			)))
	|	ИЛИ РасходныйКассовыйОрдер.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|		И РасходныйКассовыйОрдер.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
	|		)
	|	ИЛИ РасходныйКассовыйОрдер.ИдентификаторДокумента = """"
	|	ИЛИ ИСТИНА В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|			ГДЕ
	|				РасшифровкаПлатежа.Ссылка = РасходныйКассовыйОрдер.Ссылка
	|				И РасшифровкаПлатежа.ВалютаВзаиморасчетов <> ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|				И (РасшифровкаПлатежа.КурсЧислительВзаиморасчетов = 0
	|					ИЛИ РасшифровкаПлатежа.КурсЗнаменательВзаиморасчетов = 0)
	|			)
	|";
	
	Запрос.УстановитьПараметр("ПустыеЗначенияОбъектРасчетов", ОбъектыРасчетовСервер.ПустыеЗначенияОбъектРасчетов());
	УчетНДСЛокализация.УстановитьПараметрЗапросаПустаяСтавкаНДСПеречислением(Запрос);
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = ПустаяСсылка().Метаданные().ПолноеИмя();
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Для Каждого Документ Из ОбновляемыеДанные Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Документ.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			ДокументОбъект = Документ.Ссылка.ПолучитьОбъект();
			
			ОбъектИзменен = Ложь;
			
			Если ДокументОбъект <> Неопределено Тогда
				
				МассивТЧ = Новый Массив();
				МассивТЧ.Добавить("РасшифровкаПлатежа");
				
				УчетНДСЛокализация.ЗаполнитьКолонкуТЧСтавкаНДС(ДокументОбъект, МассивТЧ, ОбъектИзменен);
				
				ОбъектыРасчетовСервер.ЗаполнитьОбъектыРасчетов(ДокументОбъект, ОбъектИзменен);
				
				ОбщегоНазначенияУТ.ЗаполнитьИдентификаторыДокумента(ДокументОбъект);
				
				Для каждого СтрокаТЧ Из ДокументОбъект.РасшифровкаПлатежа Цикл
					Если СтрокаТЧ.КурсЧислительВзаиморасчетов = 0 Или СтрокаТЧ.КурсЗнаменательВзаиморасчетов = 0 Тогда
						
						КурсИКратность = ДенежныеСредстваСервер.КурсЧислительИКурсЗнаменательВзаиморасчетов(
							ДокументОбъект.Валюта,
							СтрокаТЧ.ВалютаВзаиморасчетов,
							ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(ДокументОбъект.Организация),
							ДокументОбъект.Дата);
						СтрокаТЧ.КурсЧислительВзаиморасчетов = КурсИКратность.КурсЧислитель;
						СтрокаТЧ.КурсЗнаменательВзаиморасчетов = КурсИКратность.КурсЗнаменатель;
						
						ОбъектИзменен = Истина;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если ОбъектИзменен Или ДокументОбъект <> Неопределено И ДокументОбъект.Модифицированность() Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Документ.Ссылка);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), Документ.Ссылка);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

Процедура ЗарегистрироватьДанныеДляГенерацииОбъектовРасчетов(Параметры) Экспорт
	ОбъектыРасчетовСервер.ЗарегистрироватьДанныеДляГенерацииОбъектовРасчета(ПустаяСсылка(), Параметры);
КонецПроцедуры

Процедура СгенерироватьОбъектыРасчетов(Параметры) Экспорт
	ОбъектыРасчетовСервер.СгенерироватьВсеОбъектыРасчетов(Параметры);
КонецПроцедуры

Функция ТекстЗапросаРегистрацияДанныхДляГенерацииПустогоОбъектаРасчетов() Экспорт
	
	ВыборкаПоляКонтрагент = "
	|	ВЫБОР 
	|		КОГДА ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
	|			ИЛИ ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию)
	|				ТОГДА ИсточникДанных.КассаПолучатель.Владелец
	|		ИНАЧЕ
	|			ИсточникДанных.Контрагент
	|	КОНЕЦ";
	
	ТекстЗапроса = ОбъектыРасчетовСервер.ШаблонГенерацияПустогоОбъектаРасчетов(ПустаяСсылка(), ВыборкаПоляКонтрагент);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПолучениеДанныхДляГенерацииПустогоОбъектаРасчетов() Экспорт
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту)
	|			ИЛИ ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|		КОГДА ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику)
	|			ИЛИ ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|	КОНЕЦ КАК ТипРасчетов,
	|	ИсточникДанных.Организация,
	|	ТЧРасшифровкаПлатежа.Партнер,
	|	ВЫБОР
	|		КОГДА
	|			ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
	|			ИЛИ	ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию)
	|				ТОГДА ИсточникДанных.КассаПолучатель.Владелец
	|		ИНАЧЕ ИсточникДанных.Контрагент
	|	КОНЕЦ,
	|	ИсточникДанных.Договор,
	|	ИсточникДанных.НаправлениеДеятельности,
	|	ТЧРасшифровкаПлатежа.ВалютаВзаиморасчетов
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК ТЧРасшифровкаПлатежа
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйКассовыйОрдер КАК ИсточникДанных
	|		ПО ТЧРасшифровкаПлатежа.Ссылка = ИсточникДанных.Ссылка
	|ГДЕ
	|	ТЧРасшифровкаПлатежа.УдалитьЗаказ В (&ПустыеЗначенияОбъектРасчетов)
	|	И (
	|		&УсловиеИзменяетРасчеты
	|	)
	|	И ИсточникДанных.Проведен
	|	И ВЫБОР
	|		КОГДА
	|			ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
	|			ИЛИ	ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию)
	|			ТОГДА ИсточникДанных.КассаПолучатель.Владелец
	|		ИНАЧЕ ИсточникДанных.Контрагент
	|	КОНЕЦ В (&ОбрабатываемыеДанные)";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеИзменяетРасчеты", ПараметрыВзаиморасчеты()[0].ИзменяетРасчетыСтрокой);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
