#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения)
		И Метаданные.ОпределяемыеТипы.ИсправляемыеДокументы.Тип.СодержитТип(ТипЗнч(ДанныеЗаполнения)) Тогда
		
		СторнируемыйДокумент = ДанныеЗаполнения;
		
		Если Не ИсправлениеДокументов.РегистрацияСторноРазрешена(СторнируемыйДокумент) Тогда
			ВызватьИсключение НСтр("ru = 'Сторнирование документа не поддерживается.'");
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РеестрДокументов.Ссылка КАК Ссылка
		|ИЗ
		|	РегистрСведений.РеестрДокументов КАК РеестрДокументов
		|ГДЕ
		|	РеестрДокументов.СторнируемыйДокумент = &СторнируемыйДокумент
		|	И РеестрДокументов.Проведен
		|";
		Запрос.УстановитьПараметр("СторнируемыйДокумент", СторнируемыйДокумент);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			Если ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.Сторно") Тогда
				ТекстСообщения = НСтр("ru = 'На основании уже введен документ ""Сторно"".'");
			Иначе
				ТекстСообщения = НСтр("ru = 'На основании введен исправительный документ.
				                            |Документ ""Сторно"" необходимо вводить на основании последнего исправления.'");
			КонецЕсли;
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
		
		Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеЗаполнения, "Организация");
	
	КонецЕсли;
	
	Автор = Пользователи.ТекущийПользователь();
	
	СторноЛокализация.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СторнируемыйДокумент) Тогда
		ТекстОшибки = НСтр("ru = 'Не заполнен ""Сторнируемый документ""'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "Объект.СторнируемыйДокумент", , Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	СторноЛокализация.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);
	
	СторноЛокализация.ПриЗаписи(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ВызватьИсключение НСтр("ru = 'Копирование документа ""Сторно"" не предусмотрено.'")
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеестрДокументов.Ссылка,
	|	РеестрДокументов.ДатаДокументаИБ КАК Дата,
	|	РеестрДокументов.НомерДокументаИБ КАК Номер,
	|	РеестрДокументов.Проведен КАК Проведен
	|ИЗ
	|	РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|ГДЕ
	|	РеестрДокументов.Ссылка = &СторнируемыйДокумент
	|;
	|
	|////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеестрДокументов.Ссылка,
	|	РеестрДокументов.ДатаДокументаИБ КАК Дата,
	|	РеестрДокументов.НомерДокументаИБ КАК Номер,
	|	РеестрДокументов.Проведен КАК Проведен
	|ИЗ
	|	РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|ГДЕ
	|	РеестрДокументов.СторнируемыйДокумент = &СторнируемыйДокумент
	|	И РеестрДокументов.Ссылка <> &Ссылка
	|	И РеестрДокументов.Проведен
	|";
	Запрос.УстановитьПараметр("СторнируемыйДокумент", СторнируемыйДокумент);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыСторнируемогоДокумента = РезультатыЗапроса[0].Выбрать();
	Если Не РеквизитыСторнируемогоДокумента.Следующий() Тогда
		ВызватьИсключение СтрШаблон(НСтр("ru = 'По документу %1 нет данных в реестре документов.'"), СторнируемыйДокумент);
	КонецЕсли;
	
	ДругиеИсправления = РезультатыЗапроса[1].Выбрать();
	Если ДругиеИсправления.Следующий() Тогда
		Если ТипЗнч(ДругиеИсправления.Ссылка) = Тип("ДокументСсылка.Сторно") Тогда
			ТекстСообщения = НСтр("ru = 'На основании уже введен документ ""Сторно""'");
		Иначе
			ТекстСообщения = НСтр("ru = 'На основании введен исправительный документ.
				                       |Документ сторно может быть введен только на основании последнего исправительного документа.'");
		КонецЕсли;
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, СторнируемыйДокумент, , Отказ);
	КонецЕсли;
	
	Если Не Отказ И Не РеквизитыСторнируемогоДокумента.Проведен Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Сторнируемый документ не проведен.'"), ЭтотОбъект, "СторнируемыйДокумент", , Отказ);
	КонецЕсли;
	
	Если Не Отказ И НачалоДня(РеквизитыСторнируемогоДокумента.Дата) >= НачалоДня(Дата) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Дата должна быть больше даты сторнируемого документа.'"), ЭтотОбъект, "Дата", , Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ИнициализироватьПараметрыЗаполненияВидовЗапасовДляПроведения(РежимЗаписиДокумента.Проведение);
	
	ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ);
	
	Если Метаданные.ОпределяемыеТипы.РаспоряжениеНаДоставку.Тип.СодержитТип(ТипЗнч(СторнируемыйДокумент)) Тогда
		ДоставкаТоваров.ОтразитьСостояниеДоставки(СторнируемыйДокумент, Отказ);
	КонецЕсли;
	
	СторноЛокализация.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ИнициализироватьПараметрыЗаполненияВидовЗапасовДляПроведения(РежимЗаписиДокумента.ОтменаПроведения);
	
	ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	
	Если Метаданные.ОпределяемыеТипы.РаспоряжениеНаДоставку.Тип.СодержитТип(ТипЗнч(СторнируемыйДокумент)) Тогда
		ДоставкаТоваров.ОтразитьСостояниеДоставки(Ссылка, Отказ, Истина);
	КонецЕсли;
	
	СторноЛокализация.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ВидыЗапасов

Процедура ИнициализироватьПараметрыЗаполненияВидовЗапасовДляПроведения(РежимЗаписи)

	МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(СторнируемыйДокумент);
	МеханизмыДокумента = ПроведениеДокументов.УчетныеМеханизмыДокумента(МенеджерДокумента);
	Если МеханизмыДокумента.Найти("ОперативныйУчетТоваровОрганизаций") <> Неопределено Тогда
		СторнируемыйОбъект = СторнируемыйДокумент.ПолучитьОбъект();
		СторнируемыйОбъект.ИнициализироватьПараметрыЗаполненияВидовЗапасовДляПроведения(ЭтотОбъект, РежимЗаписи);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
