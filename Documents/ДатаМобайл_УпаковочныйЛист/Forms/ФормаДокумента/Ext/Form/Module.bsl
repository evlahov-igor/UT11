
&НаКлиенте
Процедура Печать(Команда) 
	
	Результат = SendPackToPrint (Объект.Ссылка, Объект.ТСД);
	Сообщить (Результат);
	
КонецПроцедуры

&НаСервере
Функция SendPackToPrint(СсылкаНаДок, УзелПО)
	
	Если УзелПО.ОнлайнСвязьСПринтсервером Тогда	
		АдресПринтсервера = УзелПО.АдресПринтсервера;
		ПортПринтсервера = УзелПО.ПортПринтсервера;
		Если АдресПринтсервера = "" Или ПортПринтсервера = 0 Тогда
			Сообщение = "В обработке АРМ для терминала не указаны настройки онлайн связи с принтсервером. ";
			Возврат Сообщение;
		КонецЕсли;	
	Иначе	
		КаталогСохранения = УзелПО.КаталогВыгрузкиФайлаПечати;
		Если КаталогСохранения = "" Тогда
			Сообщение = "В обработке АРМ для терминала не указан каталог сохранения файлов печати. ";
			Возврат Сообщение;
		КонецЕсли;
	КонецЕсли;
		
	СтруктураПоиска = Новый Структура("ТипОперации", "Печать упаковочного листа");
	
	СтрокиРеквизитов = УзелПО.Печать.НайтиСтроки(СтруктураПоиска);
	Если СтрокиРеквизитов.Количество() = 0 Тогда
		Сообщение = "В обработке АРМ для терминала не указан шаблон печати упак. листа. ";
		Возврат Сообщение;
	КонецЕсли;	
		
	ЗаписьXML = Новый ЗаписьXML;
	
	Если Не УзелПО.ОнлайнСвязьСПринтсервером Тогда
		ИмяФайла = ПолучитьНовоеИмяФайла();	
		Попытка
			ЗаписьXML.ОткрытьФайл(КаталогСохранения + ИмяФайла + ".xml", "UTF-8");
		Исключение
			Сообщение = "SendPackToPrint. Не удалось сохранить файл печати в каталоге: " + КаталогСохранения + " по причине: " + ОписаниеОшибки();
			Возврат Сообщение;
		КонецПопытки;
	Иначе
		ЗаписьXML.УстановитьСтроку("UTF-8");
	КонецЕсли;		
	
	ЗаписьXML.ЗаписатьОбъявлениеXML();	
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("PrintData");	
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("PrinterName");
	ЗаписьXML.ЗаписатьТекст(СтрокиРеквизитов[0].ИмяПринтера);
	ЗаписьXML.ЗаписатьКонецЭлемента();		
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("TemplateName");
	ЗаписьXML.ЗаписатьТекст(СтрокиРеквизитов[0].ИмяШаблона);
	ЗаписьXML.ЗаписатьКонецЭлемента();		
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("Count");
	ЗаписьXML.ЗаписатьТекст(Строка(1));
	ЗаписьXML.ЗаписатьКонецЭлемента();		
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("Head");
		
	ЗаписьXML.ЗаписатьНачалоЭлемента("Date");
	ЗаписьXML.ЗаписатьТекст(ДатаМобайл_ОбщийМодуль.ЧистаяСтрока(СсылкаНаДок.Дата));
	ЗаписьXML.ЗаписатьКонецЭлемента();//Date	
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("Number");
	ЗаписьXML.ЗаписатьТекст(ДатаМобайл_ОбщийМодуль.ЧистаяСтрока(СсылкаНаДок.Номер));
	ЗаписьXML.ЗаписатьКонецЭлемента();//Number
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("Barcode");
	ЗаписьXML.ЗаписатьТекст(ДатаМобайл_ОбщийМодуль.ЧистаяСтрока("UPL" + СсылкаНаДок.Номер));
	ЗаписьXML.ЗаписатьКонецЭлемента();//Barcode
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("Pack");
	ЗаписьXML.ЗаписатьТекст(ДатаМобайл_ОбщийМодуль.ЧистаяСтрока(СсылкаНаДок.Номер));
	ЗаписьXML.ЗаписатьКонецЭлемента();//Pack
		
	ЗаписьXML.ЗаписатьКонецЭлемента();//Head
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("Detail");
	
	ИтогоТоваров = 0;
	//ИтогоМест = 0;
	
	Для каждого СтрокаТЧ Из СсылкаНаДок.Товары Цикл
		
		Если СтрокаТЧ.Количество = 0 Тогда
			Продолжить;
		КонецЕсли;	
		ЗаписьXML.ЗаписатьНачалоЭлемента("Item");
		
		ИтогоТоваров = ИтогоТоваров + СтрокаТЧ.КоличествоУпаковок * ?(СтрокаТЧ.Упаковка.Числитель = 0, 1, СтрокаТЧ.Упаковка.Числитель);
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("ArtName");
		ЗаписьXML.ЗаписатьТекст(ДатаМобайл_ОбщийМодуль.ЧистаяСтрока(СтрокаТЧ.Номенклатура.Наименование + " " + СтрокаТЧ.Характеристика.Наименование));
		ЗаписьXML.ЗаписатьКонецЭлемента();//ArtName
		ЗаписьXML.ЗаписатьНачалоЭлемента("Barcode");
		ЗаписьXML.ЗаписатьТекст(ДатаМобайл_ОбщийМодуль.ЧистаяСтрока(СтрокаТЧ.ШтрихКод));
		ЗаписьXML.ЗаписатьКонецЭлемента();//Barcode 
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("QNT");
		ЗаписьXML.ЗаписатьТекст(ДатаМобайл_ОбщийМодуль.ЧистаяСтрока(СтрокаТЧ.КоличествоУпаковок * ?(СтрокаТЧ.Упаковка.Числитель = 0, 1, СтрокаТЧ.Упаковка.Числитель)));
		ЗаписьXML.ЗаписатьКонецЭлемента();//QNT 
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("QNTPack");
		ЗаписьXML.ЗаписатьТекст(ДатаМобайл_ОбщийМодуль.ЧистаяСтрока(СтрокаТЧ.КоличествоУпаковок));
		ЗаписьXML.ЗаписатьКонецЭлемента();//QNTPack
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("Unit");
		ЗаписьXML.ЗаписатьТекст(ДатаМобайл_ОбщийМодуль.ЧистаяСтрока(СтрокаТЧ.Упаковка.Наименование));
		ЗаписьXML.ЗаписатьКонецЭлемента();//QNTPack 
						
		Если Не СтрокаТЧ.Серия.Пустая() Тогда			
			ЗаписьXML.ЗаписатьНачалоЭлемента("SN1");
			ЗаписьXML.ЗаписатьТекст(ДатаМобайл_ОбщийМодуль.ЧистаяСтрока(СтрокаТЧ.Серия.Номер));
			ЗаписьXML.ЗаписатьКонецЭлемента();//    
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("SN2");
			ЗаписьXML.ЗаписатьТекст(ДатаМобайл_ОбщийМодуль.ЧистаяСтрока(Формат(СтрокаТЧ.Серия.ГоденДо, "ДФ=dd.MM.yyyy")));
			ЗаписьXML.ЗаписатьКонецЭлемента(); 
		Иначе 
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("SN1");
			ЗаписьXML.ЗаписатьТекст("");
			ЗаписьXML.ЗаписатьКонецЭлемента();//    
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("SN2");
			ЗаписьXML.ЗаписатьТекст("");
			ЗаписьXML.ЗаписатьКонецЭлемента(); 
			
		КонецЕсли;
				
		ЗаписьXML.ЗаписатьКонецЭлемента();//Item
		
	КонецЦикла;
		
	ЗаписьXML.ЗаписатьКонецЭлемента();//Detail
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("Summary");
			
	ЗаписьXML.ЗаписатьНачалоЭлемента("Summ"); 
	ЗаписьXML.ЗаписатьТекст(ДатаМобайл_ОбщийМодуль.ЧистаяСтрока(ИтогоТоваров));			
	ЗаписьXML.ЗаписатьКонецЭлемента();//Summ
		
	ЗаписьXML.ЗаписатьКонецЭлемента();//Summary
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("Footer");
		
	Год = Строка(Формат(Год(ТекущаяДата()), "ЧГ="));
	Месяц = Строка(Месяц(ТекущаяДата()));
	День = Строка(День(ТекущаяДата()));
	ДатаСтрока = Год + Строка(Месяц) + Строка(День);
	ЗаписьXML.ЗаписатьНачалоЭлемента("Date");	
	ЗаписьXML.ЗаписатьТекст(ДатаМобайл_ОбщийМодуль.ЧистаяСтрока(Год + Месяц + День));
	ЗаписьXML.ЗаписатьКонецЭлемента();//Date
	ЗаписьXML.ЗаписатьНачалоЭлемента("User");	
	ЗаписьXML.ЗаписатьТекст(ДатаМобайл_ОбщийМодуль.ЧистаяСтрока(СсылкаНаДок.Ответственный));
	ЗаписьXML.ЗаписатьКонецЭлемента();//User
	ЗаписьXML.ЗаписатьКонецЭлемента();//Footer
	
	ЗаписьXML.ЗаписатьКонецЭлемента();//PrintData
	
	Если Не УзелПО.ОнлайнСвязьСПринтсервером Тогда
		ЗаписьXML.Закрыть();
	Иначе
		СтрокаДляЗапроса = ЗаписьXML.Закрыть();
		ТекстОшибки = "";
		ОтправитьДанныеНаПринтсервер(УзелПО, СтрокаДляЗапроса, ТекстОшибки);
		Возврат ТекстОшибки;
	КонецЕсли;
	
	ТекстОшибки = "Данные успешно отправлены на печать";
	
	Возврат ТекстОшибки;  
	
КонецФункции

&НаСервере
Функция ПолучитьНовоеИмяФайла(ПорядковыйНомер = 0)
	
	ИмяФайла = СтрЗаменить(ТекущаяДата(), ":", "");
	ИмяФайла = СтрЗаменить(ИмяФайла, ".", "");
	ИмяФайла = СтрЗаменить(ИмяФайла, " ", "");
	ИмяФайла = СтрЗаменить(ИмяФайла, "/", "");
	ИмяФайла = СтрЗаменить(ИмяФайла, "\", "");
	
	Генератор = Новый ГенераторСлучайныхЧисел(1);
	ИдентификаторФайла = Генератор.СлучайноеЧисло(1, 1000);
	
	ИмяФайла = ИмяФайла + ИдентификаторФайла + ПорядковыйНомер;
	
	Возврат ИмяФайла;
	
КонецФункции // ()

&НаСервере
Процедура ОтправитьДанныеНаПринтсервер(УзелПО, СтрокаДляЗапроса, ТекстОшибки);
	
	АдресПринтсервера = УзелПО.АдресПринтсервера;
	ПортПринтсервера = УзелПО.ПортПринтсервера;
	
	Соединение = Новый HTTPСоединение(АдресПринтсервера,ПортПринтсервера,,,, 1,);
	
	РесурсНаСервере = "/printFile/";
	HTTPЗапрос = Новый HTTPЗапрос(РесурсНаСервере);
	HTTPЗапрос.Заголовки.Вставить("Content-type", "application/xml");
	HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаДляЗапроса, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);
	
	ЕстьОшибка = Ложь;
	
	Попытка 
		Результат = Соединение.ОтправитьДляОбработки(HTTPЗапрос);
	Исключение
		ЕстьОшибка = Истина;	
		ТекстОшибки = "Ошибка онлайн соединения c сервером печати, проверьте настройки.";
	КонецПопытки;
	
	Соединение = Неопределено;
	
	Если ЕстьОшибка Тогда
	Иначе
		ТекстСообщения  = "" + Результат.КодСостояния +  " " + Результат.ПолучитьТелоКакСтроку();
		Если СтрНайти(Результат.ПолучитьТелоКакСтроку(), "File Uploaded") > 0 Тогда
			ТекстОшибки = "Данные успешно отправлены на печать";
		Иначе
			ЕстьОшибка = Истина;
			ТекстОшибки = "Ошибка отправки данных на печать: " + ТекстСообщения + ", проверьте настройки.";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	Стр = Элементы.Товары.текущиеданные;	
	Стр.Штрихкод = ПолучитьШтрихкодТовара(Стр.Номенклатура, Стр.Упаковка);
	Стр.Характеристика = НайтиХарактеристикуНоменклатуры(Стр.номенклатура);
	Стр.Упаковка = НайтиЕдиницуНоменклатуры(Стр.номенклатура);
	Стр.Коэффициент = ВернутьКоэффициент(Стр.Номенклатура, Стр.Упаковка); 
	СтруктураДанных = ПолучитьДанныеВесОбъемЕдИзм(Стр.Номенклатура);
	Стр.Вес = Стр.Количество * СтруктураДанных.Вес;
	Стр.Объем = Стр.Количество * СтруктураДанных.Объем;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеВесОбъемЕдИзм(Номенклатура)
	
	Возврат Обработки.ДатаМобайл_АРМДиспетчера.ПолучитьДанныеВесОбъемЕдИзм(Номенклатура); 
	
КонецФункции

&НаКлиенте
Процедура ТоварыЕдиницаИзмеренияПриИзменении(Элемент)
	
	Стр = Элементы.Товары.текущиеданные;          
	Стр.Коэффициент = ВернутьКоэффициент(Стр.Номенклатура, Стр.Упаковка);	
	Стр.Штрихкод = ПолучитьШтрихкодТовара(Стр.Номенклатура, Стр.Упаковка);
	
	Стр.Количество = Стр.КоличествоУпаковок * Стр.Коэффициент; 
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоУпаковокПриИзменении(Элемент)
	
	Стр = Элементы.Товары.текущиеданные;          	
	Стр.Количество = Стр.КоличествоУпаковок * Стр.Коэффициент;
	СтруктураДанных = ПолучитьДанныеВесОбъемЕдИзм(Стр.Номенклатура);
	Стр.Вес = Стр.Количество * СтруктураДанных.Вес;
	Стр.Объем = Стр.Количество * СтруктураДанных.Объем;
	
КонецПроцедуры

&НаСервере
Функция НайтиЕдиницуНоменклатуры(Товар)
	
	Возврат Товар.ЕдиницаИзмерения;
	
КонецФункции

&НаСервере
Функция НайтиХарактеристикуНоменклатуры(Товар)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("товар", Товар);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ХарактеристикиНоменклатуры.Ссылка
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Владелец = &Товар";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Ссылка;
	КонецЦикла;
	
КонецФункции

&НаСервере
Функция НайтиСериюНоменклатуры(Товар)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("товар", Товар.ВидНоменклатуры);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	СерииНоменклатуры.Ссылка
	|ИЗ
	|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|ГДЕ
	|	СерииНоменклатуры.ВидНоменклатуры = &Товар";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Ссылка;
	КонецЦикла;
	
КонецФункции

&НаСервере
Функция ВернутьКоэффициент(Номенклатура, ЕдиницаИзмерения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Товар", Номенклатура);
	Запрос.УстановитьПараметр("ЕдиницаИЗмерения", ЕдиницаИзмерения);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА УпаковкиНоменклатуры.Знаменатель=0 ИЛИ УпаковкиНоменклатуры.Числитель=0 ТОГДА 1
	|		ИНАЧЕ
	|				ЕСТЬNULL(УпаковкиНоменклатуры.Числитель/УпаковкиНоменклатуры.Знаменатель,1)
	|		КОНЕЦ КАК Коэффициент	 
	|ИЗ
	|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	|ГДЕ
	|	УпаковкиНоменклатуры.ЕдиницаИзмерения = &ЕдиницаИзмерения
	|	И УпаковкиНоменклатуры.Владелец = &Товар";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Возврат Выборка.Коэффициент;
		
	КонецЦикла;
	
	Возврат 1;
	
КонецФУнкции

&НаСервере
Функция ПолучитьШтрихкодТовара(Товар, ЕдиницаИзмерения)
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Товар", Товар);
	
	Попытка 
		Если СокрЛП(ЕдиницаИзмерения.Код) = "" Тогда 
			Запрос.УстановитьПараметр("ЕдиницаИзмерения", ЕдиницаИзмерения);
		Иначе
			Запрос.УстановитьПараметр("ЕдиницаИзмерения", Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка());
		КонецЕсли;	
	Исключение
		Запрос.УстановитьПараметр("ЕдиницаИзмерения", Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка());
	КонецПопытки;
	
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	Штрихкоды.Штрихкод
	|ПОМЕСТИТЬ тШтрихкод
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды
	|ГДЕ
	|	Штрихкоды.Номенклатура = &Товар
	|	И Штрихкоды.Упаковка = &ЕдиницаИзмерения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	тШтрихкод.Штрихкод
	|ИЗ
	|	тШтрихкод КАК тШтрихкод";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Штрихкод;
	КонецЦикла;
	
	Возврат "";
	
КонецФункции



