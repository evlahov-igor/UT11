#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Формирует описание реквизитов объекта, заполняемых по статистике их использования.
//
// Параметры:
//  ОписаниеРеквизитов - Структура - описание реквизитов, для которых необходимо получить значения по статистике
//
//
Процедура ЗадатьОписаниеЗаполняемыхРеквизитовПоСтатистике(ОписаниеРеквизитов) Экспорт
	
	Параметры = ЗаполнениеОбъектовПоСтатистике.ПараметрыЗаполняемыхРеквизитов();
	Параметры.РазрезыСбораСтатистики.ИспользоватьВсегда = "Автор";
	Параметры.ЗаполнятьПриУсловии.ПоляОбъектаЗаполнены = "Автор";
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(ОписаниеРеквизитов,
		"Подразделение", Параметры);
	
	Параметры = ЗаполнениеОбъектовПоСтатистике.ПараметрыЗаполняемыхРеквизитов();
	Параметры.РазрезыСбораСтатистики.ИспользоватьВсегда = "Контрагент";
	Параметры.РазрезыСбораСтатистики.ИспользоватьТолькоЗаполненные = "Валюта";
	Параметры.ЗаполнятьПриУсловии.ПоляОбъектаЗаполнены = "Контрагент";
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(ОписаниеРеквизитов,
		"БанковскийСчетКонтрагента", Параметры);
		
	Параметры = ЗаполнениеОбъектовПоСтатистике.ПараметрыЗаполняемыхРеквизитов();
	Параметры.РазрезыСбораСтатистики.ИспользоватьТолькоЗаполненные = "Подразделение, Контрагент";
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(
		ОписаниеРеквизитов, "Ответственный", Параметры);
	
КонецПроцедуры

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("Взаиморасчеты");
	МеханизмыДокумента.Добавить("ОборотныеРегистрыУправленческогоУчета");
	МеханизмыДокумента.Добавить("ПланированиеКонтрольДенежныхСредств");
	МеханизмыДокумента.Добавить("РасчетыСПодотчетниками");
	МеханизмыДокумента.Добавить("РеестрДокументов");
	МеханизмыДокумента.Добавить("СуммыДокументовВВалютахУчета");
	МеханизмыДокумента.Добавить("УчетДенежныхСредств");
	МеханизмыДокумента.Добавить("УчетДоходовРасходов");
	МеханизмыДокумента.Добавить("УчетПрочихАктивовПассивов");
	МеханизмыДокумента.Добавить("ФинансовыеИнструменты");
	
	ПоступлениеБезналичныхДенежныхСредствЛокализация.ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента);
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка - ссылка на документ, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов - таблиц значений - данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Запрос			= Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		////////////////////////////////////////////////////////////////////////////
		// Создадим запрос инициализации движений
		
		ЗаполнитьПараметрыИнициализации(Запрос, Документ);
		
		////////////////////////////////////////////////////////////////////////////
		// Сформируем текст запроса
		СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса, Регистры);
		
		ТекстЗапросаТаблицаДенежныеСредстваБезналичные(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДенежныеСредстваВПути(Запрос, ТекстыЗапроса, Регистры);
		
		ТекстЗапросаТаблицаДенежныеСредстваУПодотчетныхЛиц(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаРасчетыПоФинансовымИнструментам(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры);
		
		ТекстЗапросаТаблицаДенежныеСредстваКВыплате(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаЛимитыРасходаДенежныхСредств(Запрос, ТекстыЗапроса, Регистры);
		
		ТекстЗапросаТаблицаДвиженияДенежныхСредств(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДвиженияДенежныеСредстваКонтрагент(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДвиженияДенежныеСредстваДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДвиженияКонтрагентКонтрагент(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(Запрос, ТекстыЗапроса, Регистры);
		
		ТекстЗапросаТаблицаОтражениеДокументовВМеждународномУчете(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
		
		// Выполение запроса и выгрузка полученных таблиц для формирования движений
		ПоступлениеБезналичныхДенежныхСредствЛокализация.ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры);
	КонецЕсли;
	
	ДобавитьТекстыОтраженияВзаиморасчетов(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеДокументов.ДобавитьЗапросыСторноДвижений(Запрос, ТекстыЗапроса, Регистры, ПустаяСсылка().Метаданные());
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

// Возвращает структуру параметров для заполнения налогообложения НДС продажи.
//
// Параметры:
//  Объект - ДокументОбъект.ПоступлениеБезналичныхДенежныхСредств - документ, по которому необходимо сформировать параметры.
//
// Возвращаемое значение:
//  Структура - см. УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи
//
Функция ПараметрыЗаполненияНалогообложенияНДСПродажи(Объект) Экспорт
	
	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи();
	
	ПараметрыЗаполнения.Организация = Объект.Организация;
	ПараметрыЗаполнения.Дата = Объект.Дата;
	ПараметрыЗаполнения.Договор = Объект.Договор;
	ПараметрыЗаполнения.НаправлениеДеятельности = Объект.НаправлениеДеятельности;
	ПараметрыЗаполнения.Подразделение = Объект.Подразделение;
	
	ПараметрыЗаполнения.РеализацияТоваров = Истина;
	ПараметрыЗаполнения.РеализацияРаботУслуг = Истина;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Возвращает структуру параметров для заполнения налогообложения НДС закупки.
//
// Параметры:
//  Объект - ДокументОбъект.ПоступлениеБезналичныхДенежныхСредств - документ, по которому необходимо сформировать параметры.
//
// Возвращаемое значение:
//  Структура - Параметры заполнения, описание параметров см. УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСЗакупки();
//
Функция ПараметрыЗаполненияНалогообложенияНДСЗакупки(Объект) Экспорт
	
	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСЗакупки();
	
	ПараметрыЗаполнения.Контрагент = Объект.Контрагент;
	ПараметрыЗаполнения.Договор = Объект.Договор;
	
	ПараметрыЗаполнения.ПриобретениеТоваров = Истина;
	ПараметрыЗаполнения.ПриобретениеРабот = Истина;
	ПараметрыЗаполнения.ПриобретениеНаСтатьи = Истина;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	БизнесПроцессы.Задание.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетНДС") Тогда
		Документы.СчетФактураВыданныйАванс.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	КонецЕсли;

	СозданиеНаОснованииЛокализация.ДобавитьКомандуСоздатьНаОснованииПисьмоОбменСБанками(КомандыСозданияНаОсновании);
	
	ХозяйственныеОперацииДляИсправления = Новый Массив;
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоКредитам);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоДепозитам);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоЗаймамВыданным);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ПогашениеЗаймаСотрудником);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПодотчетника);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствСДругогоСчета);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеОплатыПоПлатежнойКарте);
	ИсправлениеДокументов.ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, ПустаяСсылка().Метаданные(), ХозяйственныеОперацииДляИсправления);
	
	КомандаСозданияНаОснованииЗаявка = Документы.ЗаявкаНаРасходованиеДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	ХозяйственныеОперацииДляВводаНаОсновании = Новый Массив;
	ХозяйственныеОперацииДляВводаНаОсновании.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента);
	ХозяйственныеОперацииДляВводаНаОсновании.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеОплатыПоПлатежнойКарте);
	ХозяйственныеОперацииДляВводаНаОсновании.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации);
	
	Если КомандаСозданияНаОснованииЗаявка <> Неопределено Тогда
		ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(КомандаСозданияНаОснованииЗаявка,
															"ХозяйственнаяОперация",
															ХозяйственныеОперацииДляВводаНаОсновании,
															ВидСравненияКомпоновкиДанных.ВСписке);
	КонецЕсли;
	
	КомандаСоздатьНаОснованииСписаниеБДС = Документы.СписаниеБезналичныхДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Если КомандаСоздатьНаОснованииСписаниеБДС <> Неопределено Тогда
		ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(КомандаСоздатьНаОснованииСписаниеБДС,
															"ХозяйственнаяОперация",
															ХозяйственныеОперацииДляВводаНаОсновании,
															ВидСравненияКомпоновкиДанных.ВСписке);
	КонецЕсли;
		
	ПоступлениеБезналичныхДенежныхСредствЛокализация.ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры);

КонецПроцедуры

// Добавляет команду создания документа "Поступление безналичных ДС".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
// Возвращаемое значение:
//	ТаблицаЗначений, Неопределено - сформированные команды для вывода в подменю.
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.ПоступлениеБезналичныхДенежныхСредств) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ПоступлениеБезналичныхДенежныхСредств.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ПоступлениеБезналичныхДенежныхСредств);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ПоступлениеБезналичныхДенежныхСредствЛокализация.ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры);
	
КонецПроцедуры

// Формирует запрос проверки при смене статуса списка документов
//
// Параметры:
//	МассивДокументов - Массив - Массив ссылок на документы, которые надо проверять
//	НовыйСтатус - Строка - Имя нового статуса
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров.
//
// Возвращаемое значение:
//	Запрос - Запрос проверки перед сменой статуса.
//
Функция СформироватьЗапросПроверкиПриСменеСтатуса(МассивДокументов, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Ссылка) КАК Представление,
	|	ВЫБОР КОГДА ТаблицаДокументов.ПроведеноБанком ТОГДА
	|		&СтрокаПроведеноБанком
	|	ИНАЧЕ
	|		&СтрокаНеПроведеноБанком
	|	КОНЕЦ КАК ПредставлениеТекущегоСтатуса,
	|	&СтрокаПроведеноБанком КАК ПредставлениеНовогоСтатуса,
	|	ТаблицаДокументов.ПроведеноБанком КАК СтатусСовпадает,
	|	ТаблицаДокументов.Проведен КАК Проведен,
	|	ТаблицаДокументов.ПометкаУдаления КАК ПометкаУдаления,
	|	ИСТИНА КАК ЗаписьПроведением
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ТаблицаДокументов
	|ГДЕ
	|	ТаблицаДокументов.Ссылка В(&МассивДокументов)
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.УстановитьПараметр("СтрокаПроведеноБанком", НСтр("ru = 'Проведено банком'"));
	Запрос.УстановитьПараметр("СтрокаНеПроведеноБанком", НСтр("ru = 'Не проведено банком'"));
	
	Возврат Запрос;
	
КонецФункции

// Возвращает результат проверки при смене статуса документа
//
// Параметры:
//	ВыборкаПроверки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
//	НовыйСтатус - Строка - Новый статус
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров.
//
// Возвращаемое значение:
//	Булево - Истина, в случае успешного завершения проверки.
//
Функция ПроверкаПередСменойСтатуса(ВыборкаПроверки, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	Возврат Истина; // Дополнительные проверки отсутствуют
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Возвращает параметры механизма взаиморасчетов.
//
// Параметры:
// 	ДанныеЗаполнения - ДокументОбъект, СправочникОбъект, ДокументСсылка, СправочникСсылка, Структура, ДанныеФормыСтруктура - Объект или коллекция для
//              расчета параметров взаиморасчетов.
//
// Возвращаемое значение:
// 	Массив из См. ВзаиморасчетыСервер.ПараметрыМеханизма - Массив параметров функций механизма взаиморасчетов.
//
Функция ПараметрыВзаиморасчеты(ДанныеЗаполнения = Неопределено) Экспорт
	
	Если ОбщегоНазначения.ЗначениеСсылочногоТипа(ДанныеЗаполнения) Тогда
		СтруктураДанныеЗаполнения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			ДанныеЗаполнения, 
			"ХозяйственнаяОперация,
			|ПроведеноБанком");
		ХозяйственнаяОперация = СтруктураДанныеЗаполнения.ХозяйственнаяОперация;
		ПроведеноБанком       = СтруктураДанныеЗаполнения.ПроведеноБанком;
	ИначеЕсли ДанныеЗаполнения = Неопределено Тогда
		ХозяйственнаяОперация = Неопределено;
		ПроведеноБанком       = Ложь;
	Иначе
		ХозяйственнаяОперация = ДанныеЗаполнения.ХозяйственнаяОперация;
		ПроведеноБанком       = ДанныеЗаполнения.ПроведеноБанком;
	КонецЕсли;
	
	МассивСтруктур = Новый Массив();
	
	#Область ВсеОстальныеФункции
	
	СтруктураПараметров = ВзаиморасчетыСервер.ПараметрыМеханизма();
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации Тогда
		СтруктураПараметров.ТипРасчетов                      = Перечисления.ТипыРасчетовСПартнерами.РасчетыСКлиентом;
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации Тогда
		СтруктураПараметров.ТипРасчетов                      = Перечисления.ТипыРасчетовСПартнерами.РасчетыСПоставщиком;
	КонецЕсли;
	
	СтруктураПараметров.ИзменяетПланОплаты                  = ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента
									ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации
									ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика
									ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации;
	
	СтруктураПараметров.ИзменяетРасчетыСтрокой           =
	"ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
	|	ИЛИ ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации)
	|	ИЛИ
	|//Условие возврата начало
	|	ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика)
	|	ИЛИ ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации)
	|//Условие возврата окончание
	|";
	
	СтруктураПараметров.ИзменяетПланОтгрузкиПоставки = Ложь;
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации Тогда
		СтруктураПараметров.Контрагент                             = "Объект.БанковскийСчетОтправитель.Владелец";
		СтруктураПараметров.Партнер                                = Справочники.Партнеры.НашеПредприятие;
		
	Иначе
		СтруктураПараметров.Контрагент                             = "Объект.Контрагент";
		СтруктураПараметров.Партнер                                = "Объект.РасшифровкаПлатежа.Партнер";
	КонецЕсли;
	
	СтруктураПараметров.ВалютаВзаиморасчетов             = "Объект.РасшифровкаПлатежа.ВалютаВзаиморасчетов";
	СтруктураПараметров.КурсЧислитель                    = "";
	СтруктураПараметров.КурсЗнаменатель                  = "";
	СтруктураПараметров.ПорядокРасчетов                  = "";
	
	СтруктураПараметров.ФормаОплаты                      = "";
	СтруктураПараметров.ОплатаВВалюте                    = "";
	 
	СтруктураПараметров.ПутьКДаннымТЧРасшифровкаПлатежа  = "Объект.РасшифровкаПлатежа";
	СтруктураПараметров.Организация                      = "Объект.Организация";
	СтруктураПараметров.Соглашение                       = "";
	СтруктураПараметров.Договор                          = "Объект.Договор";
	СтруктураПараметров.БанковскийСчетОрганизации        = "Объект.БанковскийСчет";
	СтруктураПараметров.Касса                            = "";
	СтруктураПараметров.Дата                             = "Объект.Дата";
	СтруктураПараметров.ИдентификаторПлатежа             = "";
	СтруктураПараметров.Менеджер                         = "";
	СтруктураПараметров.НомерВходящегоДокумента          = "Объект.НомерВходящегоДокумента";
	СтруктураПараметров.ДатаВходящегоДокумента           = "Объект.ДатаВходящегоДокумента";
	СтруктураПараметров.НалогообложениеНДС               = "Объект.НалогообложениеНДС";
	
	//Имена элементов форм для текущего набора параметров
	СтруктураПараметров.ЭлементыФормы.РасшифровкаПлатежа               = "РасшифровкаПлатежа";
	СтруктураПараметров.ЭлементыФормы.ПодборВРасшифровкуПлатежа        = "РасшифровкаПлатежаПодборПоОстаткам";
	
	СтруктураПараметров.ПодборДебиторскойЗадолженности    = Истина;
	СтруктураПараметров.ПодборТолькоБезусловнойЗадолженности = ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика
									ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации;
	
	МассивСтруктур.Добавить(СтруктураПараметров);
	
	#КонецОбласти
	
	#Область ОбъектРасчетовВозврат
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации Тогда
		
		СтруктураПараметров = ВзаиморасчетыСервер.ПараметрыМеханизма();
		
		СтруктураПараметров.ТипРасчетов                      = Перечисления.ТипыРасчетовСПартнерами.РасчетыСПоставщиком;
		СтруктураПараметров.ОбъектРасчетов                   = "Объект.ОбъектРасчетов";
		СтруктураПараметров.ИзменяетПланОплаты               = Истина;
		СтруктураПараметров.ИзменяетПланОтгрузкиПоставки     = Ложь;
		
		Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации Тогда
			СтруктураПараметров.Контрагент                             = "Объект.БанковскийСчетОтправитель.Владелец";
			СтруктураПараметров.Партнер                                = Справочники.Партнеры.НашеПредприятие;
		Иначе
			СтруктураПараметров.Контрагент                             = "Объект.Контрагент";
			СтруктураПараметров.Партнер                                = "Объект.РасшифровкаПлатежа.Партнер";
		КонецЕсли;
		
		СтруктураПараметров.ПутьКДаннымТЧРасшифровкаПлатежа  = "Объект.РасшифровкаПлатежа";
		СтруктураПараметров.ВалютаВзаиморасчетов             = "Объект.РасшифровкаПлатежа.ВалютаВзаиморасчетов";
		СтруктураПараметров.КурсЧислитель                             = "";
		СтруктураПараметров.КурсЗнаменатель                        = "";
		СтруктураПараметров.ПорядокРасчетов                  = "";
		СтруктураПараметров.ФормаОплаты                      = "";
		СтруктураПараметров.ОплатаВВалюте                    = "";
		СтруктураПараметров.Соглашение                       = "";
		СтруктураПараметров.БанковскийСчетОрганизации        = "Объект.БанковскийСчет";
		СтруктураПараметров.Касса                            = "";
		
		Если ПроведеноБанком Тогда
			СтруктураПараметров.Дата                             = "Объект.ДатаПроведенияБанком";
		Иначе
			СтруктураПараметров.Дата                             = "Объект.Дата";
		КонецЕсли;
		
		СтруктураПараметров.ИдентификаторПлатежа             = "";
		СтруктураПараметров.Менеджер                         = "";
		СтруктураПараметров.НомерВходящегоДокумента          = "Объект.НомерВходящегоДокумента";
		СтруктураПараметров.ДатаВходящегоДокумента           = "Объект.ДатаВходящегоДокумента";
		СтруктураПараметров.НалогообложениеНДС               = "Объект.НалогообложениеНДС";
		
		МассивСтруктур.Добавить(СтруктураПараметров);
		
	КонецЕсли;
	
	#КонецОбласти
	
	Возврат МассивСтруктур;
КонецФункции

#Область Прочее

// Процедура заполняет массивы реквизитов, зависимых от хозяйственной операции документа.
//
// Параметры:
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Выбранная хозяйственная операция
//	МассивВсехРеквизитов - Массив - Массив всех имен реквизитов, зависимых от хозяйственной операции
//	МассивРеквизитовОперации - Массив - Массив имен реквизитов, используемых в выбранной хозяйственной операции.
//
Процедура ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(ХозяйственнаяОперация, МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	
	Если МассивВсехРеквизитов = Неопределено Тогда
		МассивВсехРеквизитов = Новый Массив;
	КонецЕсли;
	Если МассивРеквизитовОперации = Неопределено Тогда
		МассивРеквизитовОперации = Новый Массив;
	КонецЕсли;
	
	МассивВсехРеквизитов.Добавить("БанковскийСчетКонтрагента");
	МассивВсехРеквизитов.Добавить("БанковскийСчетОтправитель");
	МассивВсехРеквизитов.Добавить("ВалютаКонвертации");
	МассивВсехРеквизитов.Добавить("КассаОтправитель");
	МассивВсехРеквизитов.Добавить("Контрагент");
	МассивВсехРеквизитов.Добавить("КурсКонвертации");
	МассивВсехРеквизитов.Добавить("КратностьКурсаКонвертации");
	МассивВсехРеквизитов.Добавить("СуммаКонвертации");
	МассивВсехРеквизитов.Добавить("ПодотчетноеЛицо");
	МассивВсехРеквизитов.Добавить("Подразделение");
	МассивВсехРеквизитов.Добавить("СтатьяДвиженияДенежныхСредств");
	МассивВсехРеквизитов.Добавить("ДоговорЭквайринга");
	МассивВсехРеквизитов.Добавить("СтатьяРасходов");
	МассивВсехРеквизитов.Добавить("АналитикаРасходов");
	
	МассивВсехРеквизитов.Добавить("ГруппаФинансовогоУчета");
	МассивВсехРеквизитов.Добавить("НаправлениеДеятельности");
	МассивВсехРеквизитов.Добавить("Договор");
	МассивВсехРеквизитов.Добавить("НалогообложениеНДС");
	
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ДоговорКредитаДепозита");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.НаправлениеДеятельности");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ОбъектРасчетов");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ОснованиеПлатежа");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Партнер");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Подразделение");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ТипСуммыКредитаДепозита");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.СтавкаНДС");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.СуммаНДС");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Организация");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ДоговорАренды");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ТипПлатежаПоАренде");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.РасчетныйДокументПоАренде");
	
	МассивРеквизитовОперации = Новый Массив;
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента Тогда
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("Подразделение");
		МассивРеквизитовОперации.Добавить("ГруппаФинансовогоУчета");
		МассивРеквизитовОперации.Добавить("НаправлениеДеятельности");
		МассивРеквизитовОперации.Добавить("Договор");
		МассивРеквизитовОперации.Добавить("НалогообложениеНДС");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ОбъектРасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ОснованиеПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтавкаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Организация");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика Тогда
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("Подразделение");
		МассивРеквизитовОперации.Добавить("ГруппаФинансовогоУчета");
		МассивРеквизитовОперации.Добавить("НаправлениеДеятельности");
		МассивРеквизитовОперации.Добавить("Договор");
		МассивРеквизитовОперации.Добавить("НалогообложениеНДС");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ОбъектРасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ОснованиеПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтавкаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Организация");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств Тогда
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Подразделение");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.НаправлениеДеятельности");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КонвертацияВалюты Тогда
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("ВалютаКонвертации");
		МассивРеквизитовОперации.Добавить("КурсКонвертации");
		МассивРеквизитовОперации.Добавить("КратностьКурсаКонвертации");
		МассивРеквизитовОперации.Добавить("СуммаКонвертации");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ДокументОснование");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоКредитам
			ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоДепозитам
			ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоЗаймамВыданным Тогда
		
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ДоговорКредитаДепозита");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоДепозитам
			ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоЗаймамВыданным Тогда
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ТипСуммыКредитаДепозита");
		КонецЕсли;
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПогашениеЗаймаСотрудником Тогда
		
		МассивРеквизитовОперации.Добавить("ПодотчетноеЛицо");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("Подразделение");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ТипСуммыКредитаДепозита");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПодотчетника Тогда
		
		МассивРеквизитовОперации.Добавить("ПодотчетноеЛицо");
		МассивРеквизитовОперации.Добавить("Подразделение");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратНеперечисленныхДС Тогда
		
		МассивРеквизитовОперации.Добавить("ДокументВыдачи");
		МассивРеквизитовОперации.Добавить("ПодотчетноеЛицо");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("Подразделение");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратНеперечисленнойЗарплатыПоЗарплатномуПроекту Тогда
		
		МассивРеквизитовОперации.Добавить("ДокументВыдачи");
		МассивРеквизитовОперации.Добавить("ПодтверждениеЗачисленияЗарплаты");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("Подразделение");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствСДругогоСчета Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетОтправитель");
		МассивРеквизитовОперации.Добавить("ДокументОснование");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет Тогда
		МассивРеквизитовОперации.Добавить("КассаОтправитель");
		МассивРеквизитовОперации.Добавить("ДокументОснование");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетОтправитель");
		МассивРеквизитовОперации.Добавить("Подразделение");
		МассивРеквизитовОперации.Добавить("ГруппаФинансовогоУчета");
		МассивРеквизитовОперации.Добавить("НаправлениеДеятельности");
		МассивРеквизитовОперации.Добавить("Договор");
		МассивРеквизитовОперации.Добавить("НалогообложениеНДС");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ОбъектРасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ОснованиеПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтавкаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Организация");
		МассивРеквизитовОперации.Добавить("ДокументОснование");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетОтправитель");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("ДокументОснование");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОплатыПоПлатежнойКарте Тогда
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ДоговорЭквайринга");
		МассивРеквизитовОперации.Добавить("Подразделение");
		МассивРеквизитовОперации.Добавить("НаправлениеДеятельности");
		МассивРеквизитовОперации.Добавить("ОтражатьКомиссию");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("СтатьяРасходов");
		МассивРеквизитовОперации.Добавить("АналитикаРасходов");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтАрендодателя Тогда
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ДоговорАренды");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ТипПлатежаПоАренде");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.РасчетныйДокументПоАренде");
	КонецЕсли;
	
КонецПроцедуры

// Определяет состав хоз. операций документа, для которых не используется расшифровка платежа.
//
// Возвращаемое значение:
//    Массив - хозяйственные операции без использования расшифровки платежа.
//
Функция МассивОперацийБезРасшифровкиПлатежа() Экспорт
	
	МассивОпераций = Новый Массив;
	
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеОплатыПоПлатежнойКарте);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствСДругогоСчета);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВозвратНеперечисленныхДС);
	
	Возврат МассивОпераций;
	
КонецФункции

// Определяет свойства полей формы в зависимости от данных
//
// Параметры:
//	Настройки - ТаблицаЗначений - таблица с колонками:
//		* Поля - Массив - поля, для которых определяются настройки отображения
//		* Условие - ОтборКомпоновкиДанных - условия применения настройки
//		* Свойства - Структура - имена и значения свойств
//
Процедура ЗаполнитьНастройкиПолейФормы(Настройки) Экспорт
	
	Финансы = ФинансоваяОтчетностьСервер;
	
	Операции = Перечисления.ХозяйственныеОперации;
	
	#Область Шапка
	// ПроведеноБанком
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ПроведеноБанком");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ТипПлатежногоДокумента", Перечисления.ТипыПлатежныхДокументов.ИнкассовоеПоручение);
	Финансы.НовыйОтбор(ГруппаИли, "ТипПлатежногоДокумента", Перечисления.ТипыПлатежныхДокументов.ПлатежныйОрдер);
	Элемент.Свойства.Вставить("ТолькоПросмотр");
	
	// ДатаПроведенияБанком
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ДатаПроведенияБанком");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ПроведеноБанком", Ложь);
	Финансы.НовыйОтбор(ГруппаИли, "ТипПлатежногоДокумента", Перечисления.ТипыПлатежныхДокументов.ПлатежныйОрдер);
	Элемент.Свойства.Вставить("ТолькоПросмотрБезОтметкиНезаполненного");
	
	// ДатаВходящегоДокумента, НомерВходящегоДокумента
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ДатаВходящегоДокумента");
	Элемент.Поля.Добавить("НомерВходящегоДокумента");
	Финансы.НовыйОтбор(Элемент.Условие, "ТипПлатежногоДокумента", Перечисления.ТипыПлатежныхДокументов.ПлатежноеТребование);
	Элемент.Свойства.Вставить("АвтоОтметкаНезаполненного", Ложь);
	Элемент.Свойства.Вставить("ОтметкаНезаполненного", Ложь);
	
	// Контрагент
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("Контрагент");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеОплатыОтКлиента);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеОплатыПоПлатежнойКарте);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтПоставщика);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПрочееПоступлениеДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.КонвертацияВалюты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоДепозитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоЗаймамВыданным);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратНеперечисленнойЗарплатыПоЗарплатномуПроекту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтАрендодателя);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("Контрагент");
	ГруппаНе = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаНе.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаНе;
	Финансы.НовыйОтбор(ГруппаНе, "ХозяйственнаяОперация", Операции.ПоступлениеОплатыПоПлатежнойКарте);
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'Плательщик'"));
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("Контрагент");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ПоступлениеОплатыПоПлатежнойКарте);
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'Эквайер'"));
	
	// Договор эквайринга
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ДоговорЭквайринга");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ПоступлениеОплатыПоПлатежнойКарте);
	Элемент.Свойства.Вставить("Видимость");
	
	// БанковскийСчетКонтрагента
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("БанковскийСчетКонтрагента");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеОплатыОтКлиента);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеОплатыПоПлатежнойКарте);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтПоставщика);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПрочееПоступлениеДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.КонвертацияВалюты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоДепозитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоЗаймамВыданным);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПогашениеЗаймаСотрудником);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтПодотчетника);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратНеперечисленныхДС);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратНеперечисленнойЗарплатыПоЗарплатномуПроекту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтАрендодателя);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("БанковскийСчетКонтрагента");
	ГруппаНе = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаНе.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаНе;
	Финансы.НовыйОтбор(ГруппаНе, "ХозяйственнаяОперация", Операции.ПогашениеЗаймаСотрудником);
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'Счет плательщика'"));
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("БанковскийСчетКонтрагента");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПогашениеЗаймаСотрудником);
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'Лицевой счет'"));
	
	// Подразделение
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("Подразделение");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПогашениеЗаймаСотрудником);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтПодотчетника);
	ГруппаИ = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	ГруппаИли1 = Финансы.НовыйОтбор(ГруппаИ,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли1, "ХозяйственнаяОперация", Операции.ВозвратНеперечисленнойЗарплатыПоЗарплатномуПроекту);
	Финансы.НовыйОтбор(ГруппаИли1, "ХозяйственнаяОперация", Операции.ВозвратНеперечисленныхДС);
	Финансы.НовыйОтбор(ГруппаИ, "Дополнительно.ВключеныПодразделенияНаСчетахУчетаЗарплаты", Истина);
	Элемент.Свойства.Вставить("Видимость");
	
	// БанковскийСчетОтправитель
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("БанковскийСчетОтправитель");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствСДругогоСчета);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствИзДругойОрганизации);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтДругойОрганизации);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВнутренняяПередачаДенежныхСредств);
	Элемент.Свойства.Вставить("Видимость");
	
	// КассаОтправитель
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("КассаОтправитель");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет);
	Элемент.Свойства.Вставить("Видимость");
	
	// ПодотчетноеЛицо
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ПодотчетноеЛицо");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПогашениеЗаймаСотрудником);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтПодотчетника);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратНеперечисленныхДС);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ПодотчетноеЛицо");
	ГруппаНе = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаНе.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаНе;
	Финансы.НовыйОтбор(ГруппаНе, "ХозяйственнаяОперация", Операции.ПогашениеЗаймаСотрудником);
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'Подотчетное лицо'"));
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ПодотчетноеЛицо");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ПогашениеЗаймаСотрудником);
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'Сотрудник'"));
	
	// СтатьяДвиженияДенежныхСредств
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("СтатьяДвиженияДенежныхСредств");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.КонвертацияВалюты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВнутренняяПередачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеОплатыПоПлатежнойКарте);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратНеперечисленныхДС);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратНеперечисленнойЗарплатыПоЗарплатномуПроекту);
	Элемент.Свойства.Вставить("Видимость");
	#КонецОбласти
	
	#Область Реквизиты
	// Конвертация
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ВалютаКонвертации");
	Элемент.Поля.Добавить("КурсКонвертации");
	Элемент.Поля.Добавить("СуммаКонвертации");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.КонвертацияВалюты);
	Элемент.Свойства.Вставить("Видимость");
	
	// НадписьВалюта
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("НадписьВалюта");
	Элемент.Поля.Добавить("НадписьВалютаКомиссия");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНесколькоВалют", Ложь);
	Элемент.Свойства.Вставить("Видимость");
	
	// Комиссия
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ГруппаКомиссия");
	Финансы.НовыйОтбор(Элемент.Условие, "ОтражатьКомиссию", Истина);
	Элемент.Свойства.Вставить("Видимость");
	
	// НадписьЗеркальныйПлатеж
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("НадписьЗеркальныйПлатеж");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствИзДругойОрганизации);
	Элемент.Свойства.Вставить("Видимость");
	#КонецОбласти
	
	#Область РасшифровкаПлатежа
	// СтраницаРасшифровка
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("СтраницаРасшифровка");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеОплатыОтКлиента);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтПоставщика);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПрочееПоступлениеДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоДепозитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоЗаймамВыданным);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПогашениеЗаймаСотрудником);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтПодотчетника);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствИзДругойОрганизации);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтДругойОрганизации);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтАрендодателя);
	Элемент.Свойства.Вставить("Видимость");
	
	// Аналитика прочей выдачи
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.Подразделение");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияПодразделение");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.НаправлениеДеятельности");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияНаправлениеДеятельности");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	Элемент.Свойства.Вставить("Видимость");
	
	// СтатьяДвиженияДенежныхСредств
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияСтатьяДвиженияДенежныхСредств");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеОплатыОтКлиента);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтПоставщика);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПрочееПоступлениеДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоДепозитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоЗаймамВыданным);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПогашениеЗаймаСотрудником);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтПодотчетника);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствИзДругойОрганизации);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтДругойОрганизации);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтАрендодателя);
	Элемент.Свойства.Вставить("Видимость");
	
	// СуммаВзаиморасчетов, ВалютаВзаиморасчетов
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияСуммаВзаиморасчетов");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияВалютаВзаиморасчетов");
	
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНесколькоВалют", Истина);
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеОплатыОтКлиента);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтПоставщика);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоДепозитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоЗаймамВыданным);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствИзДругойОрганизации);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтДругойОрганизации);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтАрендодателя);
	Элемент.Свойства.Вставить("Видимость");
	
	// СуммаВзаиморасчетов
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияСуммаВзаиморасчетов");
	
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНесколькоВалют", Истина);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ВалютаВзаиморасчетов", "Валюта", , , Истина);
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеОплатыОтКлиента);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтПоставщика);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоДепозитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоЗаймамВыданным);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствИзДругойОрганизации);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтДругойОрганизации);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтАрендодателя);
	Элемент.Свойства.Вставить("ТолькоПросмотр");
	
	// ДекорацияВалютыИКурсПлатежа, КурсЧислительВзаиморасчетов, КурсЗнаменательВзаиморасчетов
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ДекорацияВалютыИКурсПлатежа");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.КурсЧислительВзаиморасчетов");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияКурсЧислительВзаиморасчетов");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.КурсЧислительВзаиморасчетовТекст");
	Элемент.Поля.Добавить("РасшифровкаПлатежаКурсЗнаменательВзаиморасчетовНадпись");
	
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНесколькоВалют", Истина);
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеОплатыОтКлиента);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтПоставщика);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствИзДругойОрганизации);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтДругойОрганизации);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоДепозитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоЗаймамВыданным);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтАрендодателя);
	
	Финансы.НовыйОтбор(Элемент.Условие, "Валюта", "Дополнительно.ВалютаВзаиморасчетов",, ВидСравненияКомпоновкиДанных.НеРавно, Истина);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ВалютаВзаиморасчетов", Справочники.Валюты.ПустаяСсылка(), , ВидСравненияКомпоновкиДанных.НеРавно);
	Элемент.Свойства.Вставить("Видимость");
	
	// ДекорацияВалютыИКурсПлатежа
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ДекорацияВалютыИКурсПлатежа");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ВалютаВзаиморасчетов",,, ВидСравненияКомпоновкиДанных.Заполнено);
	Элемент.Свойства.Вставить("Доступность");
	
	// ОбъектРасчетов, Основание платежа, СуммаНДС, СтавкаНДС
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ОснованиеПлатежа");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияОснованиеПлатежа");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ОбъектРасчетов");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияОбъектРасчетов");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.СуммаНДС");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияСуммаНДС");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.СтавкаНДС");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияСтавкаНДС");
	Элемент.Поля.Добавить("ВалютаНДС");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеОплатыОтКлиента);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтПоставщика);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствИзДругойОрганизации);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтДругойОрганизации);
	Элемент.Свойства.Вставить("Видимость");
	
	// Партнер
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.Партнер");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияПартнер");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеОплатыОтКлиента);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтПоставщика);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоДепозитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоЗаймамВыданным);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтАрендодателя);
	Элемент.Свойства.Вставить("Видимость");
	
	// ДоговорКредитаДепозита
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ДоговорКредитаДепозита");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияДоговорКредитаДепозита");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоДепозитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоЗаймамВыданным);
	Элемент.Свойства.Вставить("Видимость");
	
	// ТипСуммыКредитаДепозита
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ТипСуммыКредитаДепозита");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияТипСуммыКредитаДепозита");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоДепозитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоЗаймамВыданным);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПогашениеЗаймаСотрудником);
	Элемент.Свойства.Вставить("Видимость");
	
	// ДоговорАренды, ТипПлатежаПоАренде
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ДоговорАренды");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияДоговорАренды");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ТипПлатежаПоАренде");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияТипПлатежаПоАренде");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтАрендодателя);
	Элемент.Свойства.Вставить("Видимость");
	
	// РасчетныйДокументПоАренде
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.РасчетныйДокументПоАренде");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияРасчетныйДокументПоАренде");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтАрендодателя);
	Элемент.Свойства.Вставить("Видимость");
	
	// Организация - владелец объекта расчетов
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.Организация");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияОрганизация");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ЕстьФилиалы", Истина);
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеОплатыОтКлиента);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтПоставщика);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствИзДругойОрганизации);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтДругойОрганизации);
	Элемент.Свойства.Вставить("Видимость");
	
	// ГиперссылкаРеквизитыОбъектаРасчетов
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ГиперссылкаРеквизитыОбъектаРасчетов");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеОплатыОтКлиента);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтПоставщика);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствИзДругойОрганизации);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтДругойОрганизации);
	Элемент.Свойства.Вставить("Видимость");
	
	// Нераспределенный платеж
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ГруппаФинансовогоУчета");
	Элемент.Поля.Добавить("НаправлениеДеятельности");
	Элемент.Поля.Добавить("ПодразделениеРП");
	ГруппаИ = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ, "Дополнительно.СуммаНераспределено", 0,, ВидСравненияКомпоновкиДанных.НеРавно);
	Финансы.НовыйОтбор(ГруппаИ, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтДругойОрганизации,, ВидСравненияКомпоновкиДанных.НеРавно);
	Финансы.НовыйОтбор(ГруппаИ, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтПоставщика,, ВидСравненияКомпоновкиДанных.НеРавно);
	Элемент.Свойства.Вставить("Видимость");

	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ГруппаФинансовогоУчетаВозврата");
	Элемент.Поля.Добавить("НаправлениеДеятельностиВозврата");
	Элемент.Поля.Добавить("ПодразделениеРПВозврата");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтДругойОрганизации);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтПоставщика);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("Договор");
	
	ГруппаИ1 = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ1, "Дополнительно.СуммаНераспределено", 0,, ВидСравненияКомпоновкиДанных.НеРавно);
	
	ГруппаИли = Финансы.НовыйОтбор(ГруппаИ1,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ГруппаИ2 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ2, "ХозяйственнаяОперация", Операции.ПоступлениеОплатыОтКлиента);
	Финансы.НовыйОтбор(ГруппаИ2, "Дополнительно.ИспользоватьДоговорыСКлиентами", Истина);
	
	ГруппаИ3 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ3.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ3, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствИзДругойОрганизации);
	Финансы.НовыйОтбор(ГруппаИ3, "Дополнительно.ИспользоватьДоговорыМеждуОрганизациями", Истина);
	
	Элемент.Свойства.Вставить("Видимость");

	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ДоговорВозврата");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ГруппаИ1 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ1, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтДругойОрганизации);
	Финансы.НовыйОтбор(ГруппаИ1, "Дополнительно.ИспользоватьДоговорыМеждуОрганизациями", Истина);
	
	ГруппаИ2 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ2, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтПоставщика);
	Финансы.НовыйОтбор(ГруппаИ2, "Дополнительно.ИспользоватьДоговорыСПоставщиками", Истина);
	
	Элемент.Свойства.Вставить("Видимость");
	
	// Договор объекта расчетов
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияОбъектРасчетовДоговор");
	
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.СуммаНераспределено", 0);
	
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ГруппаИ1 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ1, "Дополнительно.ИспользоватьДоговорыСКлиентами", Истина);
	Финансы.НовыйОтбор(ГруппаИ1, "ХозяйственнаяОперация", Операции.ПоступлениеОплатыОтКлиента);
	
	ГруппаИ2 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ2, "Дополнительно.ИспользоватьДоговорыМеждуОрганизациями", Истина);
	ГруппаИли2 = Финансы.НовыйОтбор(ГруппаИ2,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствИзДругойОрганизации);
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтДругойОрганизации);
	
	ГруппаИ3 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ3.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ3, "Дополнительно.ИспользоватьДоговорыСПоставщиками", Истина);
	ГруппаИли3 = Финансы.НовыйОтбор(ГруппаИ3,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли3.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли3, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтПоставщика);
	
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежаОбъектРасчетовДоговор");
	
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ГруппаИ1 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ1, "Дополнительно.ИспользоватьДоговорыСКлиентами", Истина);
	Финансы.НовыйОтбор(ГруппаИ1, "ХозяйственнаяОперация", Операции.ПоступлениеОплатыОтКлиента);
	
	ГруппаИ2 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ2, "Дополнительно.ИспользоватьДоговорыМеждуОрганизациями", Истина);
	ГруппаИли2 = Финансы.НовыйОтбор(ГруппаИ2,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствИзДругойОрганизации);
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтДругойОрганизации);
	
	ГруппаИ3 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ3.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ3, "Дополнительно.ИспользоватьДоговорыСПоставщиками", Истина);
	ГруппаИли3 = Финансы.НовыйОтбор(ГруппаИ3,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли3.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли3, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтПоставщика);
	
	Элемент.Свойства.Вставить("Видимость");
	#КонецОбласти
	
	#Область Команды
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ЗаполнитьРасшифровкуПлатежаПоЗаймамКонтрагенту");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствПоЗаймамВыданным);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ЗаполнитьРасшифровкуПлатежаПоЗаймамСотруднику");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ПогашениеЗаймаСотрудником);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежаПодборПоОстаткам");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтПоставщика);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеОплатыОтКлиента);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПоступлениеДенежныхСредствИзДругойОрганизации);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствОтДругойОрганизации);
	Элемент.Свойства.Вставить("Видимость");
	#КонецОбласти
	
КонецПроцедуры

// Возвращает параметры выбора статей в документе.
// 
// Параметры:
// 	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа.
// 	ДополнительнаяДоступность - Булево - Дополнительный признак доступности выбора статей и аналитик.
// 
// Возвращаемое значение:
// 	Массив - Массив параметров настройки счетов учета (См. ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики)
//
Функция ПараметрыВыбораСтатейИАналитик(ХозяйственнаяОперация, ДополнительнаяДоступность = Истина) Экспорт
	
	МассивПараметровВыбора = Новый Массив;
	
	#Область СтатьяДоходов
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект.РасшифровкаПлатежа";
	ПараметрыВыбора.Статья = "СтатьяДоходов";
	ПараметрыВыбора.ТипСтатьи = "ТипСтатьи";
	ПараметрыВыбора.ЗначениеПоУмолчанию = ПланыВидовХарактеристик.СтатьиДоходов.ПустаяСсылка();
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("РасшифровкаБезРазбиенияСтатьяДоходов");
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("РасшифровкаПлатежаСтатьяДоходов");
	ПараметрыВыбора.ДоступностьПоОперации = (ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	
	#Область АналитикаАктивовПассивов
	ПараметрыВыбора.ВыборСтатьиАктивовПассивов = Истина;
	ПараметрыВыбора.АналитикаАктивовПассивов = "АналитикаАктивовПассивов";
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("РасшифровкаБезРазбиенияАналитикаАктивовПассивов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("РасшифровкаПлатежаАналитикаАктивовПассивов");
	#КонецОбласти
	
	#Область АналитикаДоходов
	ПараметрыВыбора.ВыборСтатьиДоходов = Истина;
	ПараметрыВыбора.АналитикаДоходов = "АналитикаДоходов";
	ПараметрыВыбора.ЭлементыФормы.АналитикаДоходов.Добавить("РасшифровкаБезРазбиенияАналитикаДоходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаДоходов.Добавить("РасшифровкаПлатежаАналитикаДоходов");
	#КонецОбласти
	
	МассивПараметровВыбора.Добавить(ПараметрыВыбора);
	#КонецОбласти
	
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект";
	ПараметрыВыбора.Статья = "СтатьяРасходов";
	ПараметрыВыбора.ТипСтатьи = "ТипСтатьи";
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходов");
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.ЗначениеПоУмолчанию = ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка();
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходов";
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходов");
	
	ПараметрыВыбора.ДоступностьПоОперации =
		(ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОплатыПоПлатежнойКарте) И ДополнительнаяДоступность;
	
	МассивПараметровВыбора.Добавить(ПараметрыВыбора);
	
	Возврат МассивПараметровВыбора;
	
КонецФункции

// Функция получает реквизиты документа для обмена с конфигурацией "Бухгалтерия предприятия".
//
// Параметры:
//	ДокументСсылка - ДокументСсылка - Документ, для которого необходимо получить реквизиты.
//
// Возвращаемое значение:
//	Структура - Структура реквизитов документа.
//
Функция РеквизитыДокументаДляОбменаСБухгалтерией(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств.КорреспондирующийСчет КАК КорреспондирующийСчет,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.БанковскийСчет.ВалютаДенежныхСредств КАК ВалютаБанковскогоСчета,
	|	ДанныеДокумента.Организация.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.СтатьяДвиженияДенежныхСредств.КорреспондирующийСчет <> """"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДанныеДокумента.СтатьяДоходов.КорреспондирующийСчет КАК КорреспондирующийСчет,
	|	ДанныеДокумента.СтатьяДоходов КАК СтатьяДоходов
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеДоходы)
	|	И ДанныеДокумента.СтатьяДоходов.КорреспондирующийСчет <> """"
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДокумента.НомерСтроки");
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	Выборка = МассивРезультатов[0].Выбрать();
	Если Выборка.Следующий() Тогда
		КорреспондирующийСчет  = Выборка.КорреспондирующийСчет;
		ХозяйственнаяОперация  = Выборка.ХозяйственнаяОперация;
		ВалютаБанковскогоСчета = Выборка.ВалютаБанковскогоСчета;
		ВалютаРегламентированногоУчета = Выборка.ВалютаБанковскогоСчета;
	Иначе
		КорреспондирующийСчет  = "";
		ХозяйственнаяОперация  = Перечисления.ХозяйственныеОперации.ПустаяСсылка();
		ВалютаБанковскогоСчета = Неопределено;
		ВалютаРегламентированногоУчета = Неопределено;
	КонецЕсли;
	
	Выборка = МассивРезультатов[1].Выбрать();
	Если Выборка.Следующий() Тогда
		КорреспондирующийСчет = Выборка.КорреспондирующийСчет;
		СтатьяДоходов = Выборка.СтатьяДоходов;
	Иначе
		СтатьяДоходов = Неопределено;
	КонецЕсли;
	
	ВидОперации = "ПрочееПоступление";
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств Тогда
		
		Если СтрНайти(КорреспондирующийСчет, "57.02") <> 0
			И ВалютаБанковскогоСчета <> ВалютаРегламентированногоУчета Тогда
			ВидОперации = "ПриобретениеВалюты";
			
		ИначеЕсли СтрНайти(КорреспондирующийСчет, "57.22") <> 0
			И ВалютаБанковскогоСчета = ВалютаРегламентированногоУчета Тогда
			ВидОперации = "ПоступленияОтПродажиИностраннойВалюты";
			
		ИначеЕсли СтрНайти(КорреспондирующийСчет, "66") <> 0
		 ИЛИ СтрНайти(КорреспондирующийСчет, "67") <> 0 Тогда
			ВидОперации = "РасчетыПоКредитамИЗаймам";
			
		ИначеЕсли СтрНайти(КорреспондирующийСчет, "76") <> 0
		 ИЛИ СтрНайти(КорреспондирующийСчет, "60") <> 0
		 ИЛИ СтрНайти(КорреспондирующийСчет, "62") <> 0 Тогда
			ВидОперации = "ПрочиеРасчетыСКонтрагентами";
			
		КонецЕсли;
		
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("ВидОперации, Счет, СтатьяДоходов",
		ВидОперации,
		КорреспондирующийСчет,
		СтатьяДоходов);
	
	Возврат СтруктураРеквизитов;
		
КонецФункции

#КонецОбласти


#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтение
	|ГДЕ
	|	( ЗначениеРазрешено(Организация)
	|	ИЛИ ЗначениеРазрешено(РасшифровкаПлатежа.Организация, Null КАК Истина) И ХозяйственнаяОперация В (
	|		Значение(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента),
	|		Значение(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика),
	|		Значение(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации),
	|		Значение(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации)
	|		)
	|	)И ЗначениеРазрешено(ХозяйственнаяОперация)
	|	И ВЫБОР КОГДА ХозяйственнаяОперация = Значение(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика) ИЛИ ХозяйственнаяОперация = Значение(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
	|	ТОГДА ЗначениеРазрешено(РасшифровкаПлатежа.Партнер, Null КАК Истина)
	|	ИНАЧЕ ИСТИНА КОНЕЦ 
	|;
	|РазрешитьИзменениеЕслиРазрешеноЧтение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(ХозяйственнаяОперация)
	|	И ВЫБОР КОГДА ХозяйственнаяОперация = Значение(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика) ИЛИ ХозяйственнаяОперация = Значение(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
	|	ТОГДА ЗначениеРазрешено(РасшифровкаПлатежа.Партнер, Null КАК Истина)
	|	ИНАЧЕ ИСТИНА КОНЕЦ ";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;
	ИсточникиДанных.Вставить("РасшифровкаПлатежа.ОбъектРасчетов");

	Возврат ИсточникиДанных; 

КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос();
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие;
	ПереопределениеРасчетаПараметров = Новый Структура;
	СинонимТаблицыДокумента = "";
	
	ПолноеИмяДокумента = "Документ.ПоступлениеБезналичныхДенежныхСредств";
	
	Если ИмяРегистра = "ДенежныеСредстваКВыплате" Тогда
		
		ПереопределениеРасчетаПараметров.Вставить("Период", "
			|ВЫБОР КОГДА НЕ ДанныеДокумента.ПроведеноБанком
			|	ИЛИ НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата) = ДанныеДокумента.ДатаПроведенияБанком
			|	ИЛИ ДанныеДокумента.Исправление ТОГДА
			|		ДанныеДокумента.Дата
			|	ИНАЧЕ
			|		КОНЕЦПЕРИОДА(ДанныеДокумента.ДатаПроведенияБанком, ДЕНЬ)
			|КОНЕЦ");
		
		ТекстЗапроса = ТекстЗапросаТаблицаДенежныеСредстваКВыплате(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	ИначеЕсли ИмяРегистра = "РеестрДокументов" Тогда
		
		ПереопределениеРасчетаПараметров.Вставить("Период", "
			|ВЫБОР КОГДА НЕ ДанныеДокумента.ПроведеноБанком
			|	ИЛИ НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата) = ДанныеДокумента.ДатаПроведенияБанком
			|	ИЛИ ДанныеДокумента.Исправление ТОГДА
			|		ДанныеДокумента.Дата
			|	ИНАЧЕ
			|		КОНЕЦПЕРИОДА(ДанныеДокумента.ДатаПроведенияБанком, ДЕНЬ)
			|КОНЕЦ");
		ПереопределениеРасчетаПараметров.Вставить("ОрганизацияОтправитель", "ДанныеДокумента.БанковскийСчетОтправитель.Владелец");
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса, ПолноеИмяДокумента, СинонимТаблицыДокумента, Истина, ПереопределениеРасчетаПараметров);
	Иначе
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса, ПолноеИмяДокумента, СинонимТаблицыДокумента, ПереопределениеРасчетаПараметров, ТекстыЗапросаВременныхТаблиц);
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметровПроведения();
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР КОГДА НЕ ДанныеДокумента.ПроведеноБанком
	|		ИЛИ НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата) = ДанныеДокумента.ДатаПроведенияБанком
	|		ИЛИ ДанныеДокумента.Исправление ТОГДА
	|		ДанныеДокумента.Дата
	|	ИНАЧЕ
	|		КОНЕЦПЕРИОДА(ДанныеДокумента.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ КАК Период,
	|	ДанныеДокумента.ПроведеноБанком                         КАК ПроведеноБанком,
	|
	|	ДанныеДокумента.НомерВходящегоДокумента                 КАК НомерВходящегоДокумента,
	|	ДанныеДокумента.Номер                                   КАК Номер,
	|	ДанныеДокумента.ДатаВходящегоДокумента                  КАК ДатаВходящегоДокумента,
	|	ДанныеДокумента.Дата                                    КАК Дата,
	|	ДанныеДокумента.НазначениеПлатежа                       КАК НазначениеПлатежа,
	|	ДанныеДокумента.Валюта                                  КАК Валюта,
	|	ДанныеДокумента.ВалютаКонвертации                       КАК ВалютаКонвертации,
	|	ДанныеДокумента.Организация                             КАК Организация,
	|	ДанныеДокумента.БанковскийСчет                          КАК БанковскийСчет,
	|	ДанныеДокумента.БанковскийСчет.Подразделение            КАК Подразделение,
	|	ДанныеДокумента.БанковскийСчет.НаправлениеДеятельности  КАК НаправлениеДеятельностиДС,
	
	|	ВЫБОР КОГДА
	|		ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|			)
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	ИНАЧЕ
	|		ДанныеДокумента.Партнер
	|	КОНЕЦ КАК Партнер,
	
	|	ВЫБОР КОГДА
	|		ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|			)
	|	ТОГДА
	|		ДанныеДокумента.БанковскийСчетОтправитель.Владелец
	|	ИНАЧЕ
	|		ДанныеДокумента.Контрагент
	|	КОНЕЦ КАК Контрагент,
	
	|	ДанныеДокумента.БанковскийСчетОтправитель.Владелец      КАК ОрганизацияОтправитель,
	|	ДанныеДокумента.ХозяйственнаяОперация                   КАК ХозяйственнаяОперация,
	
	|	ВЫБОР КОГДА
	|		ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет)
	|	ТОГДА
	|		ВЫБОР КОГДА ДанныеДокумента.Валюта = ДанныеДокумента.Организация.ВалютаРегламентированногоУчета ТОГДА
	|			ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.СдачаДенежныхСредствВБанк)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.СдачаДенежныхСредствВБанкВИностраннойВалюте)
	|		КОНЕЦ
	|	КОГДА
	|		ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствСДругогоСчета)
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПеречислениеДенежныхСредствНаДругойСчет)
	|	ИНАЧЕ
	|		ДанныеДокумента.СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств,
	|
	|	ДанныеДокумента.ДокументВыдачи КАК ДокументВыдачи,
	|	ДанныеДокумента.ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаДокумента,
	|	
	|	ДанныеДокумента.Договор                 КАК Договор,
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДокумента.Ответственный           КАК Ответственный,
	|	ДанныеДокумента.Автор                   КАК Автор,
	|	ДанныеДокумента.Комментарий             КАК Комментарий,
	|	ДанныеДокумента.ПометкаУдаления         КАК ПометкаУдаления,
	|	ДанныеДокумента.Ссылка                  КАК Ссылка,
	|	ДанныеДокумента.Исправление             КАК Исправление,
	|	ДанныеДокумента.СторнируемыйДокумент    КАК СторнируемыйДокумент,
	|	ДанныеДокумента.ИсправляемыйДокумент    КАК ИсправляемыйДокумент,
	|	ДанныеДокумента.Проведен                КАК Проведен,
	|	НастройкиХозяйственныхОпераций.Ссылка   КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиХозяйственныхОпераций КАК НастройкиХозяйственныхОпераций
	|	ПО ДанныеДокумента.ХозяйственнаяОперация = НастройкиХозяйственныхОпераций.ХозяйственнаяОперация
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения(Реквизиты) Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)
	
	Значения = Новый Структура;
	Значения.Вставить("ИдентификаторМетаданных",                         ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ПоступлениеБезналичныхДенежныхСредств"));
	Значения.Вставить("ИспользоватьСчетаНаОплатуКлиентам",               ПолучитьФункциональнуюОпцию("ИспользоватьСчетаНаОплатуКлиентам"));
	Значения.Вставить("ИспользоватьУчетПрочихДоходовРасходов",           ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов"));
	Значения.Вставить("КонтролироватьВыдачуПодОтчетВРазрезеЦелей",       ПолучитьФункциональнуюОпцию("КонтролироватьВыдачуПодОтчетВРазрезеЦелей"));
	Значения.Вставить("ИдентификаторНеиспользуемойФинЗаписи",            ПроведениеДокументов.ИдентификаторНеиспользуемойФинЗаписи());
	
	Значения.Вставить("ВалютаУправленческогоУчета",                      Константы.ВалютаУправленческогоУчета.Получить());
	
	Если Реквизиты <> Неопределено Тогда
		
		Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
			Реквизиты.Валюта,
			Неопределено,
			Реквизиты.Период,
			Реквизиты.Организация);
			
		КоэффициентыКонвертации = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
			Реквизиты.ВалютаКонвертации,
			Неопределено,
			Реквизиты.Период,
			Реквизиты.Организация);
		
		ВалютаРегламентированногоУчета = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Реквизиты.Организация);
		КоэффициентПересчетаВВалютуКонвертации = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(
			Реквизиты.Валюта,
			Реквизиты.ВалютаКонвертации,
			Реквизиты.Период,
			ВалютаРегламентированногоУчета);
			
		Значения.Вставить("КоэффициентПересчетаВВалютуУпр",              Коэффициенты.КоэффициентПересчетаВВалютуУпр);
		Значения.Вставить("КоэффициентПересчетаВВалютуРегл",             Коэффициенты.КоэффициентПересчетаВВалютуРегл);
		Значения.Вставить("КоэффициентПересчетаКонвертацииВВалютуУпр",   КоэффициентыКонвертации.КоэффициентПересчетаВВалютуУпр);
		Значения.Вставить("КоэффициентПересчетаКонвертацииВВалютуРегл",  КоэффициентыКонвертации.КоэффициентПересчетаВВалютуРегл);
		Значения.Вставить("КоэффициентПересчетаВВалютуКонвертации",      КоэффициентПересчетаВВалютуКонвертации);
		
		Значения.Вставить("НомерНаПечать",                               ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
		Значения.Вставить("ВалютаРегламентированногоУчета", ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Реквизиты.Организация));
		
	КонецЕсли;
	
	Возврат Значения;
	
КонецФункции

Процедура ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаПартнеровИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросПоАналитикам = Новый Запрос;
	
	ЗапросПоАналитикам.Текст = ТекстЗапросаВременнаяТаблицаОбъектовРасчета(ЗапросПоАналитикам, Новый СписокЗначений);
	ЗапросПоАналитикам.Текст = ЗапросПоАналитикам.Текст + "
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ЗапросПоАналитикам.Текст = ЗапросПоАналитикам.Текст + "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОбъектовРасчетов.Организация КАК Организация,
	|	ТаблицаОбъектовРасчетов.Договор КАК Договор,
	|	&Контрагент КАК Контрагент,
	|	ТаблицаРасшифровкаПлатежа.Партнер КАК Партнер,
	|	ТаблицаОбъектовРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности 
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|			ПО ТаблицаРасшифровкаПлатежа.ОбъектРасчетов = ТаблицаОбъектовРасчетов.ОбъектРасчетов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		ТаблицаОбъектовРасчетов.Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ТаблицаРасшифровкаПлатежа.Партнер = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка),
	|	&Контрагент КАК Контрагент,
	|	ТаблицаРасшифровкаПлатежа.Партнер КАК Партнер,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|		ПО ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита = ДанныеДоговора.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ТаблицаРасшифровкаПлатежа.Партнер = Аналитика.Партнер
	|		И ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) = Аналитика.Договор
	|		И ДанныеДоговора.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоДепозитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоЗаймамВыданным)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОбъектовРасчетов.Организация КАК Организация,
	|	ТаблицаОбъектовРасчетов.Договор КАК Договор,
	|	&Контрагент КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|	ТаблицаОбъектовРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|		ПО ТаблицаРасшифровкаПлатежа.ОбъектРасчетов = ТаблицаОбъектовРасчетов.ОбъектРасчетов
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		ТаблицаОбъектовРасчетов.Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации)
	|		)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация КАК Организация,
	|	&Договор КАК Договор,
	|	&Контрагент КАК Контрагент,
	|	&Партнер КАК Партнер,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ТаблицаПлатеж
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация= Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И &Партнер = Аналитика.Партнер
	|		И &Договор = Аналитика.Договор
	|		И &НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаПлатеж.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации)
	|		)";
	
	ЗапросПоАналитикам.УстановитьПараметр("Ссылка",                  Запрос.Параметры.Ссылка);
	ЗапросПоАналитикам.УстановитьПараметр("Организация",             Запрос.Параметры.Организация);
	ЗапросПоАналитикам.УстановитьПараметр("Контрагент",              Запрос.Параметры.Контрагент);
	ЗапросПоАналитикам.УстановитьПараметр("Партнер",                 Запрос.Параметры.Партнер);
	ЗапросПоАналитикам.УстановитьПараметр("НаправлениеДеятельности", Запрос.Параметры.НаправлениеДеятельности);
	ЗапросПоАналитикам.УстановитьПараметр("ХозяйственнаяОперация",   Запрос.Параметры.ХозяйственнаяОперация);
	
	Если ЗначениеЗаполнено(Запрос.Параметры.Договор) Тогда
		ЗапросПоАналитикам.УстановитьПараметр("Договор",                         Запрос.Параметры.Договор);
	ИначеЕсли НЕ ЗначениеЗаполнено(Запрос.Параметры.Договор)
			И Запрос.Параметры.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации") Тогда
		ЗапросПоАналитикам.УстановитьПараметр("Договор",                         Справочники.ДоговорыМеждуОрганизациями.ПустаяСсылка());
	Иначе
		ЗапросПоАналитикам.УстановитьПараметр("Договор",                         Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	КонецЕсли;
	
	Выборка = ЗапросПоАналитикам.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаПоПартнерам.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Если ВзаиморасчетыСервер.ХозяйственнаяОперацияВозвратДенежныхСредств(Запрос.Параметры.ХозяйственнаяОперация) Тогда
		АналитикаУчетаПоПартнерам = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(ЗапросПоАналитикам.Параметры);
	Иначе
		АналитикаУчетаПоПартнерам = Неопределено;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерам", АналитикаУчетаПоПартнерам);
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаПартнеровИнициализированы", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаВременнаяТаблицаОбъектовРасчета(Запрос, ТекстыЗапроса) Экспорт
	
	ИмяВременнойТаблицы = "ТаблицаОбъектовРасчетов";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ОбъектРасчетов,
	|
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.Организация КАК Организация,
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.Договор КАК Договор,
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.Подразделение КАК Подразделение,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации))
	|				И ЕСТЬNULL(Направления.УчетРасчетовСПоставщиками, ЛОЖЬ)
	|			ИЛИ НЕ &ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации))
	|				И ЕСТЬNULL(Направления.УчетДоходов, ЛОЖЬ)
	|		ТОГДА
	|			ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.НаправлениеДеятельности
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	КОНЕЦ КАК НаправлениеДеятельности
	|
	|ПОМЕСТИТЬ ТаблицаОбъектовРасчетов
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НаправленияДеятельности КАК Направления
	|	ПО ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.НаправлениеДеятельности = Направления.Ссылка
	|	
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И ТаблицаРасшифровкаПлатежа.ОбъектРасчетов <> ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|	И НЕ &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоДепозитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоЗаймамВыданным)
	|		)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасчетов
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса) Экспорт
	
	ИмяВременнойТаблицы = "ТаблицаРасшифровкаПлатежа";
	
	ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос);
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаОбъектовРасчетов", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаОбъектовРасчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации))
	|		ТОГДА ЕСТЬNULL(АналитикаИнтеркампани.Организация, Неопределено)
	|		ИНАЧЕ ЕСТЬNULL(Аналитика.Организация, Неопределено)
	|	КОНЕЦ КАК Организация,
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ЕСТЬNULL(ТаблицаОбъектовРасчетов.Договор, Неопределено) КАК Договор,
	|	ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.ОснованиеПлатежа КАК Документ.СчетНаОплатуКлиенту) КАК СчетНаОплату,
	|
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств)
	|			ТОГДА ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаОбъектовРасчетов.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДоходов КАК СтатьяДоходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаДоходов КАК АналитикаДоходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	ТаблицаРасшифровкаПлатежа.Подразделение КАК Подразделение,
	|	ЕСТЬNULL(ТаблицаОбъектовРасчетов.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК ПодразделениеЗаказа,
	|
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКредитаДепозита,
	|	НЕОПРЕДЕЛЕНО КАК ТипСуммыКредитаДепозита,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорАренды,
	|	НЕОПРЕДЕЛЕНО КАК ТипПлатежаПоАренде,
	|	НЕОПРЕДЕЛЕНО КАК РасчетныйДокументПоАренде,
	|
	|	ТаблицаРасшифровкаПлатежа.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА &Валюта = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаРасшифровкаПлатежа.Сумма
	|		КОГДА ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР
	|		КОГДА &Валюта = &ВалютаРегламентированногоУчета
	|			ТОГДА ТаблицаРасшифровкаПлатежа.Сумма
	|		КОГДА ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|			ТОГДА ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаРегл,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|	
	|	ТаблицаРасшифровкаПлатежа.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаРасшифровкаПлатежа.СуммаНДС КАК СуммаНДС,
	|	ВЫБОР КОГДА &Валюта = &ВалютаУправленческогоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаНДС
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.СуммаНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаНДСУпр,
	|	ВЫБОР КОГДА &Валюта = &ВалютаРегламентированногоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаНДС
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаНДСРегл,
	|
	|	ЕСТЬNULL(ТаблицаОбъектовРасчетов.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) КАК НалогообложениеНДС,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации))
	|		ТОГДА ЕСТЬNULL(АналитикаИнтеркампани.КлючАналитики, Неопределено)
	|		ИНАЧЕ ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено)
	|	КОНЕЦ КАК АналитикаУчетаПоПартнерам,
	|	
	|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаРасшифровкаПлатежа.Ссылка.ИдентификаторДокумента КАК ИдентификаторДокумента
	|
	|ПОМЕСТИТЬ ТаблицаРасшифровкаПлатежа
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|	ПО
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов = ТаблицаОбъектовРасчетов.ОбъектРасчетов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаИнтеркампани
	|	ПО
	|		ТаблицаОбъектовРасчетов.Организация = АналитикаИнтеркампани.Организация
	|		И &Контрагент = АналитикаИнтеркампани.Контрагент
	|		И ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) = АналитикаИнтеркампани.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = АналитикаИнтеркампани.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = АналитикаИнтеркампани.НаправлениеДеятельности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		ТаблицаОбъектовРасчетов.Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ТаблицаРасшифровкаПлатежа.Партнер = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И НЕ &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоДепозитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоЗаймамВыданным),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтАрендодателя)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	Аналитика.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	НЕОПРЕДЕЛЕНО КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК СчетНаОплату,
	|
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяДоходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	ДанныеДоговора.Подразделение КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеЗаказа,
	|
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита КАК ДоговорКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ТипСуммыКредитаДепозита КАК ТипСуммыКредитаДепозита,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорАренды,
	|	НЕОПРЕДЕЛЕНО КАК ТипПлатежаПоАренде,
	|	НЕОПРЕДЕЛЕНО КАК РасчетныйДокументПоАренде,
	|
	|	ТаблицаРасшифровкаПлатежа.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА &Валюта = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаРасшифровкаПлатежа.Сумма
	|		КОГДА ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР
	|		КОГДА &Валюта = &ВалютаРегламентированногоУчета
	|			ТОГДА ТаблицаРасшифровкаПлатежа.Сумма
	|		КОГДА ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|			ТОГДА ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаРегл,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
	|	0 КАК СуммаНДС,
	|	0 КАК СуммаНДСУпр,
	|	0 КАК СуммаНДСРегл,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаПоПартнерам,
	|	
	|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаРасшифровкаПлатежа.Ссылка.ИдентификаторДокумента КАК ИдентификаторДокумента
	|
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|	ПО
	|		ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита = ДанныеДоговора.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ТаблицаРасшифровкаПлатежа.Партнер = Аналитика.Партнер
	|		И ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) = Аналитика.Договор
	|		И ДанныеДоговора.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоДепозитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоЗаймамВыданным)
	|		)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
		
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваБезналичные(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваБезналичные";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                      КАК ВидДвижения,
	|	&Период                                                                     КАК Период,
	|	
	|	ДанныеДокумента.Организация                                                 КАК Организация,
	|	ДанныеДокумента.БанковскийСчет                                              КАК БанковскийСчет,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ТаблицаРасшифровкаПлатежа.Сумма
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК Сумма,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ТаблицаРасшифровкаПлатежа.СуммаУпр
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаУпр,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ТаблицаРасшифровкаПлатежа.СуммаРегл
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	ВЫБОР КОГДА НЕ ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ТаблицаРасшифровкаПлатежа.Сумма
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК КЗачислению,
	|	
	|	&ХозяйственнаяОперация                                                      КАК ХозяйственнаяОперация,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств                     КАК СтатьяДвиженияДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам                         КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетов                                    КАК ОбъектРасчетов,
	|	ДанныеДокумента.Ссылка                                                      КАК ПлатежныйДокумент,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки
	|	ИНАЧЕ
	|		&ИдентификаторНеиспользуемойФинЗаписи
	|	КОНЕЦ КАК ИдентификаторФинЗаписи,
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		&НастройкаХозяйственнойОперации
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ИСТИНА
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПодотчетника),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоДепозитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоЗаймамВыданным),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПогашениеЗаймаСотрудником)
	|		)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                      КАК ВидДвижения,
	|	&Период                                                                     КАК Период,
	|	
	|	ДанныеДокумента.Организация                                                 КАК Организация,
	|	ДанныеДокумента.БанковскийСчет                                              КАК БанковскийСчет,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ТаблицаРасшифровкаПлатежа.Сумма
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК Сумма,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаУпр,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	ВЫБОР КОГДА НЕ ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ТаблицаРасшифровкаПлатежа.Сумма
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК КЗачислению,
	|	
	|	&ХозяйственнаяОперация                                                      КАК ХозяйственнаяОперация,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств                     КАК СтатьяДвиженияДенежныхСредств,
	|	Неопределено                                                                КАК АналитикаУчетаПоПартнерам,
	|	Неопределено                                                                КАК ОбъектРасчетов,
	|	ДанныеДокумента.Ссылка                                                      КАК ПлатежныйДокумент,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки
	|	ИНАЧЕ
	|		&ИдентификаторНеиспользуемойФинЗаписи
	|	КОНЕЦ КАК ИдентификаторФинЗаписи,
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		&НастройкаХозяйственнойОперации
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ИСТИНА
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств)
	|		)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                      КАК ВидДвижения,
	|	&Период                                                                     КАК Период,
	|	
	|	ДанныеДокумента.Организация                                                 КАК Организация,
	|	ДанныеДокумента.БанковскийСчет                                              КАК БанковскийСчет,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ДанныеДокумента.СуммаДокумента
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК Сумма,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаУпр,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	ВЫБОР КОГДА НЕ ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ДанныеДокумента.СуммаДокумента
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК КЗачислению,
	|	
	|	&ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	Неопределено                   КАК АналитикаУчетаПоПартнерам,
	|	Неопределено                   КАК ОбъектРасчетов,
	
	|	&Ссылка КАК ПлатежныйДокумент,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ДанныеДокумента.ИдентификаторДокумента
	|	ИНАЧЕ
	|		&ИдентификаторНеиспользуемойФинЗаписи
	|	КОНЕЦ КАК ИдентификаторФинЗаписи,
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		&НастройкаХозяйственнойОперации
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствСДругогоСчета),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратНеперечисленныхДС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратНеперечисленнойЗарплатыПоЗарплатномуПроекту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыПоПлатежнойКарте),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|		)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                      КАК ВидДвижения,
	|	&Период                                                                     КАК Период,
	|	
	|	ДанныеДокумента.Организация                                                 КАК Организация,
	|	ДанныеДокумента.БанковскийСчет                                              КАК БанковскийСчет,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ДанныеДокумента.СуммаДокумента
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК Сумма,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	ВЫБОР КОГДА НЕ ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ДанныеДокумента.СуммаДокумента
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК КЗачислению,
	|	
	|	Значение(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствОтКонвертацииВалюты) КАК ХозяйственнаяОперация,
	|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	Неопределено                   КАК АналитикаУчетаПоПартнерам,
	|	Неопределено                   КАК ОбъектРасчетов,
	
	|	&Ссылка КАК ПлатежныйДокумент,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ДанныеДокумента.ИдентификаторДокумента
	|	ИНАЧЕ
	|		&ИдентификаторНеиспользуемойФинЗаписи
	|	КОНЕЦ КАК ИдентификаторФинЗаписи,
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		&НастройкаХозяйственнойОперации
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)
	|		)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваВПути(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваВПути";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаКурсовыхРазниц", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаКурсовыхРазниц(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                              КАК ВидДвижения,
	|	&Период                                                                             КАК Период,
	|	
	|	ДанныеДокумента.Организация                                                         КАК Организация,
	|	ДанныеДокумента.БанковскийСчет                                                      КАК Получатель,
	|	НЕОПРЕДЕЛЕНО                                                                        КАК Отправитель,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПоступлениеОтБанкаПоЭквайрингу)  КАК ВидПереводаДенежныхСредств,
	|	ДанныеДокумента.Контрагент                                                          КАК Контрагент,
	|	ДанныеДокумента.ДоговорЭквайринга                                                   КАК Договор,
	|	ДанныеДокумента.Валюта                                                              КАК Валюта,
	|	
	|	ДанныеДокумента.СуммаДокумента                                                      КАК Сумма,
	|	ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр                    КАК СуммаУпр,
	|	ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл                   КАК СуммаРегл,
	|	
	|	&ХозяйственнаяОперация                                                              КАК ХозяйственнаяОперация,
	|	&СтатьяДвиженияДенежныхСредств                                                      КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ДанныеДокумента.ИдентификаторДокумента                                              КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПоступлениеОплатыПоПлатежнойКарте) КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ПроведеноБанком
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыПоПлатежнойКарте)
	|		)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                               КАК ВидДвижения,
	|	ДанныеДокумента.Дата                                                                 КАК Период,
	|	
	|	ДанныеДокумента.Организация                                                          КАК Организация,
	|	ДанныеДокумента.БанковскийСчет                                                       КАК Получатель,
	|	НЕОПРЕДЕЛЕНО                                                                         КАК Отправитель,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПоступлениеОтБанкаПоЭквайрингу)   КАК ВидПереводаДенежныхСредств,
	|	ДанныеДокумента.Контрагент                                                           КАК Контрагент,
	|	ДанныеДокумента.ДоговорЭквайринга                                                    КАК Договор,
	|	ДанныеДокумента.Валюта                                                               КАК Валюта,
	|	
	|	ДанныеДокумента.СуммаКомиссии                                                               КАК Сумма,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаКомиссии * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))   КАК СуммаУпр,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаКомиссии * &КоэффициентПересчетаВВалютуРегл  КАК ЧИСЛО(31,2)) КАК СуммаРегл,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КомиссияПоЭквайрингу)                    КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.ДоговорЭквайринга.СтатьяДвиженияДенежныхСредствКомиссия              КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ДанныеДокумента.ИдентификаторДокумента                                               КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.КомиссияПоЭквайрингу)             КАК НастройкаХозяйственнойОперации 
	|	
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ПроведеноБанком
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыПоПлатежнойКарте)
	|		)
	|	И ДанныеДокумента.СуммаКомиссии <> 0
	|	И ДанныеДокумента.ОтражатьКомиссию
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                              КАК ВидДвижения,
	|	&Период                                                                             КАК Период,
	|	
	|	ДанныеДокумента.Организация                                                         КАК Организация,
	|	ДанныеДокумента.БанковскийСчет                                                      КАК Получатель,
	|	ДанныеДокумента.БанковскийСчетОтправитель                                           КАК Отправитель,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПеречислениеНаДругойСчет)        КАК ВидПереводаДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО                                                                        КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО                                                                        КАК Договор,
	|	ДанныеДокумента.Валюта                                                              КАК Валюта,
	|	
	|	ДанныеДокумента.СуммаДокумента                                                      КАК Сумма,
	|	ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр                    КАК СуммаУпр,
	|	ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл                   КАК СуммаРегл,
	|	
	|	&ХозяйственнаяОперация                                                              КАК ХозяйственнаяОперация,
	|	&СтатьяДвиженияДенежныхСредств                                                      КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ДанныеДокумента.ИдентификаторДокумента                                              КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПоступлениеДенежныхСредствСДругогоСчета) КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ПроведеноБанком
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствСДругогоСчета)
	|		)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                              КАК ВидДвижения,
	|	&Период                                                                             КАК Период,
	|	
	|	ДанныеДокумента.Организация                                                         КАК Организация,
	|	ДанныеДокумента.БанковскийСчет                                                      КАК Получатель,
	|	ДанныеДокумента.КассаОтправитель                                                    КАК Отправитель,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ИнкассацияВБанк)                 КАК ВидПереводаДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО                                                                        КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО                                                                        КАК Договор,
	|	ДанныеДокумента.Валюта                                                              КАК Валюта,
	|	
	|	ДанныеДокумента.СуммаДокумента                                                      КАК Сумма,
	|	ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр                    КАК СуммаУпр,
	|	ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл                   КАК СуммаРегл,
	|	
	|	&ХозяйственнаяОперация                                                              КАК ХозяйственнаяОперация,
	|	&СтатьяДвиженияДенежныхСредств                                                      КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ДанныеДокумента.ИдентификаторДокумента                                              КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет) КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ПроведеноБанком
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет)
	|		)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                          КАК ВидДвижения,
	|	&Период                                                                         КАК Период,
	|	
	|	ДанныеДокумента.Организация                                                     КАК Организация,
	|	ДанныеДокумента.БанковскийСчет                                                  КАК Получатель,
	|	НЕОПРЕДЕЛЕНО                                                                    КАК Отправитель,
	|	ВЫБОР КОГДА ДанныеДокумента.ВалютаКонвертации = &ВалютаРегламентированногоУчета
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПриобретениеВалюты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.РеализацияВалюты)
	|	КОНЕЦ                                                                           КАК ВидПереводаДенежныхСредств,
	|	ДанныеДокумента.Контрагент                                                      КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО                                                                    КАК Договор,
	|	ДанныеДокумента.ВалютаКонвертации                                               КАК Валюта,
	|	
	|	ДанныеДокумента.СуммаКонвертации                                                КАК Сумма,
	|	ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр                КАК СуммаУпр,
	|	ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл               КАК СуммаРегл,
	|	
	|	&ХозяйственнаяОперация                                                          КАК ХозяйственнаяОперация,
	|	&СтатьяДвиженияДенежныхСредств                                                  КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ДанныеДокумента.ИдентификаторДокумента                                          КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.КонвертацияВалюты)           КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ПроведеноБанком
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)
	|		)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Положительные курсовые разницы
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                           КАК ВидДвижения,
	|	&Период                                                                          КАК Период,
	|	
	|	&Организация                                                                     КАК Организация,
	|	&БанковскийСчет                                                                  КАК Получатель,
	|	НЕОПРЕДЕЛЕНО                                                                     КАК Отправитель,
	|	ВЫБОР КОГДА &ВалютаКонвертации = &ВалютаРегламентированногоУчета
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПриобретениеВалюты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.РеализацияВалюты)
	|	КОНЕЦ                                                                            КАК ВидПереводаДенежныхСредств,
	|	&Контрагент                                                                      КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО                                                                     КАК Договор,
	|	&ВалютаКонвертации                                                               КАК Валюта,
	|	
	|	0                                                                                КАК Сумма,
	|	-ТаблицаКурсовыхРазниц.СуммаУпр                                                  КАК СуммаУпр,
	|	-ТаблицаКурсовыхРазниц.СуммаРегл                                                 КАК СуммаРегл,
	|	
	|	&ХозяйственнаяОперация                                                           КАК ХозяйственнаяОперация,
	|	&СтатьяДвиженияДенежныхСредств                                                   КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ТаблицаКурсовыхРазниц.ИдентификаторДокумента                                     КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.КурсовыеРазницыДСУбыток)      КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ТаблицаКурсовыхРазниц КАК ТаблицаКурсовыхРазниц
	|	
	|ГДЕ
	|	&ПроведеноБанком
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)
	|	И (ТаблицаКурсовыхРазниц.СуммаУпр < 0 ИЛИ ТаблицаКурсовыхРазниц.СуммаРегл < 0)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Отрицательные курсовые разницы
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                          КАК ВидДвижения,
	|	&Период                                                                         КАК Период,
	|	
	|	&Организация                                                                    КАК Организация,
	|	&БанковскийСчет                                                                 КАК Получатель,
	|	НЕОПРЕДЕЛЕНО                                                                    КАК Отправитель,
	|	ВЫБОР КОГДА &ВалютаКонвертации = &ВалютаРегламентированногоУчета
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПриобретениеВалюты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.РеализацияВалюты)
	|	КОНЕЦ                                                                           КАК ВидПереводаДенежныхСредств,
	|	&Контрагент                                                                     КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО                                                                    КАК Договор,
	|	&ВалютаКонвертации                                                              КАК Валюта,
	|	
	|	0                                                                               КАК Сумма,
	|	ТаблицаКурсовыхРазниц.СуммаУпр                                                  КАК СуммаУпр,
	|	ТаблицаКурсовыхРазниц.СуммаРегл                                                 КАК СуммаРегл,
	|	
	|	&ХозяйственнаяОперация                                                          КАК ХозяйственнаяОперация,
	|	&СтатьяДвиженияДенежныхСредств                                                  КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ТаблицаКурсовыхРазниц.ИдентификаторДокумента                                    КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.КурсовыеРазницыДСПрибыль)    КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ТаблицаКурсовыхРазниц КАК ТаблицаКурсовыхРазниц
	|	
	|ГДЕ
	|	&ПроведеноБанком
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)
	|	И (ТаблицаКурсовыхРазниц.СуммаУпр > 0 ИЛИ ТаблицаКурсовыхРазниц.СуммаРегл > 0)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеДоходы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаКурсовыхРазниц", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаКурсовыхРазниц(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК ТаблицаРасшифровкаПлатежаНомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДоходов КАК СтатьяДоходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаДоходов КАК АналитикаДоходов,
	|	ТаблицаРасшифровкаПлатежа.Подразделение КАК Подразделение,
	|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	
	|	// Рассчитаем сумму в валюте управленческого учета.
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК Сумма,
	|	(ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА ТаблицаРасшифровкаПлатежа.СуммаУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаУпр,
	|	(ВЫБОР
	|		КОГДА &ИспользоватьУчетПрочихДоходовРасходовРегл
	|			ТОГДА ТаблицаРасшифровкаПлатежа.СуммаРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаРегл,
	|	
	|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПрочееПоступлениеДенежныхСредств) КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств)
	|	И ТаблицаРасшифровкаПлатежа.СтатьяДоходов ССЫЛКА ПланВидовХарактеристик.СтатьиДоходов
	|	И &ИспользоватьУчетПрочихДоходовРасходов
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Расчет курсовых разниц
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	0 КАК ТаблицаРасшифровкаПлатежаНомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ДоходыПриКонвертацииВалюты) КАК СтатьяДоходов,
	|	ЗНАЧЕНИЕ(Перечисление.АналитикаКурсовыхРазниц.ДенежныеСредства) КАК АналитикаДоходов,
	|	ТаблицаКурсовыхРазниц.Подразделение КАК Подразделение,
	|	ТаблицаКурсовыхРазниц.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КурсовыеРазницыДСПрибыль) КАК ХозяйственнаяОперация,
	|	
	|	ТаблицаКурсовыхРазниц.СуммаУпр КАК Сумма,
	|	(ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА ТаблицаКурсовыхРазниц.СуммаУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаУпр,
	|	(ВЫБОР
	|		КОГДА &ИспользоватьУчетПрочихДоходовРасходовРегл
	|			ТОГДА ТаблицаКурсовыхРазниц.СуммаРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаРегл,
	|	
	|	ТаблицаКурсовыхРазниц.ИдентификаторДокумента КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.КурсовыеРазницыДСПрибыль) КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ТаблицаКурсовыхРазниц КАК ТаблицаКурсовыхРазниц
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)
	|	И (ТаблицаКурсовыхРазниц.СуммаУпр > 0 ИЛИ ТаблицаКурсовыхРазниц.СуммаРегл > 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаРасшифровкаПлатежаНомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаКурсовыхРазниц", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаКурсовыхРазниц(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("втСуммыДокументовВВалютахУчета", ТекстыЗапроса) Тогда
		СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстОписаниеВтИсходныеПрочиеРасходы();
	ТекстЗапроса = ТекстЗапроса + "ОБЪЕДИНИТЬ ВСЕ" + "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаКурсовыхРазниц.Подразделение КАК Подразделение,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыПриКонвертацииВалюты) КАК СтатьяРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.АналитикаКурсовыхРазниц.ДенежныеСредства) КАК АналитикаРасходов,
	|	ТаблицаКурсовыхРазниц.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|
	|	-ТаблицаКурсовыхРазниц.СуммаУпр КАК СуммаСНДС,
	|	-ТаблицаКурсовыхРазниц.СуммаУпр КАК СуммаБезНДС,
	|	-ТаблицаКурсовыхРазниц.СуммаУпр КАК СуммаБезНДСУпр,
	|	-ТаблицаКурсовыхРазниц.СуммаРегл КАК СуммаСНДСРегл,
	|	-ТаблицаКурсовыхРазниц.СуммаРегл КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КурсовыеРазницыДСУбыток) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	
	|	ТаблицаКурсовыхРазниц.ИдентификаторДокумента КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.КурсовыеРазницыДСУбыток) КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ТаблицаКурсовыхРазниц КАК ТаблицаКурсовыхРазниц
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)
	|	И (ТаблицаКурсовыхРазниц.СуммаУпр < 0 ИЛИ ТаблицаКурсовыхРазниц.СуммаРегл < 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.СтатьяРасходов КАК СтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходов КАК АналитикаРасходов,
	|	ДанныеДокумента.ДоговорЭквайринга.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	// Рассчитаем сумму в валюте управленческого учета.
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаКомиссии * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК СуммаСНДС,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаКомиссии * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК СуммаБезНДС,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаКомиссии * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК СуммаБезНДСУпр,
	|
	|	ЕСТЬNULL(СуммыДокументовВВалютахУчета.СуммаБезНДСРегл, ДанныеДокумента.СуммаКомиссии) КАК СуммаСНДСРегл,
	|	ЕСТЬNULL(СуммыДокументовВВалютахУчета.СуммаБезНДСРегл, ДанныеДокумента.СуммаКомиссии) КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеРасходы) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	
	|	ДанныеДокумента.ИдентификаторДокумента КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.КомиссияПоЭквайрингу) КАК НастройкаХозяйственнойОперации 
	|
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		втСуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
	|	ПО
	|		СуммыДокументовВВалютахУчета.Ссылка = ДанныеДокумента.Ссылка
	|		И СуммыДокументовВВалютахУчета.ИдентификаторСтроки = ""1""
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыПоПлатежнойКарте)
	|	)
	|	И ДанныеДокумента.СуммаКомиссии <> 0
	|	И ДанныеДокумента.ОтражатьКомиссию
	|	И &ПроведеноБанком
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаРасшифровкаПлатежа.Подразделение КАК Подразделение,
	|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДоходов КАК Статья,
	|	ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов КАК Аналитика,
	|	СУММА(ТаблицаРасшифровкаПлатежа.СуммаУпр) КАК Сумма
	|ИЗ
	|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств))
	|	И ТаблицаРасшифровкаПлатежа.СтатьяДоходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРасшифровкаПлатежа.СтатьяДоходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов,
	|	ТаблицаРасшифровкаПлатежа.Подразделение,
	|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДоходов КАК Статья,
	|	ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов КАК Аналитика,
	|	СУММА(ТаблицаРасшифровкаПлатежа.СуммаУпр) КАК Сумма
	|ИЗ
	|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПогашениеЗаймаСотрудником)
	|	И ТаблицаРасшифровкаПлатежа.СтатьяДоходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРасшифровкаПлатежа.СтатьяДоходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов,
	|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда) КАК Статья,
	|	НЕОПРЕДЕЛЕНО КАК Аналитика,
	|	СУММА(ВЫБОР
	|		КОГДА &Валюта = &ВалютаУправленческогоУчета
	|			ТОГДА ДД.СуммаДокумента
	|		ИНАЧЕ ВЫРАЗИТЬ(ДД.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ) КАК СуммаУпр
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДД
	|ГДЕ
	|	ДД.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратНеперечисленныхДС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратНеперечисленнойЗарплатыПоЗарплатномуПроекту))
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|		КОГДА &Валюта = &ВалютаУправленческогоУчета
	|			ТОГДА ДД.СуммаДокумента
	|		ИНАЧЕ ВЫРАЗИТЬ(ДД.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ) <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияПоПрочимАктивамПассивам";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтДвиженияКонтрагентКонтрагент", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаДвиженияКонтрагентКонтрагент(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаРасшифровкаПлатежа.Подразделение КАК Подразделение,
	|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДоходов КАК Статья,
	|	ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов КАК Аналитика,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Кредит) КАК ДебетКредит,
	|
	|	ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаУпр,
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаСНДС,
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаБезНДС,
	|
	|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств)
	|	И ТаблицаРасшифровкаПлатежа.СтатьяДоходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЗаймыВыданные) КАК Статья,
	|	&ПодотчетноеЛицо КАК Аналитика,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Кредит) КАК ДебетКредит,
	|
	|	ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаУпр,
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаСНДС,
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаБезНДС,
	|
	|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПогашениеЗаймаСотрудником)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда) КАК Статья,
	|	НЕОПРЕДЕЛЕНО КАК Аналитика,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Кредит) КАК ДебетКредит,
	|
	|	ВЫБОР
	|		КОГДА &Валюта = &ВалютаРегламентированногоУчета
	|			ТОГДА ДД.СуммаДокумента
	|		ИНАЧЕ ВЫРАЗИТЬ(ДД.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА &Валюта = &ВалютаУправленческогоУчета
	|			ТОГДА ДД.СуммаДокумента
	|		ИНАЧЕ ВЫРАЗИТЬ(ДД.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР
	|		КОГДА &Валюта = &ВалютаУправленческогоУчета
	|			ТОГДА ДД.СуммаДокумента
	|		ИНАЧЕ ВЫРАЗИТЬ(ДД.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА &Валюта = &ВалютаУправленческогоУчета
	|			ТОГДА ДД.СуммаДокумента
	|		ИНАЧЕ ВЫРАЗИТЬ(ДД.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаБезНДС,
	|
	|	ДД.ИдентификаторДокумента КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДД
	|ГДЕ
	|	ДД.Ссылка = &Ссылка
	|	И ДД.СуммаДокумента <> 0
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратНеперечисленныхДС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратНеперечисленнойЗарплатыПоЗарплатномуПроекту))
	|	И ДД.ПроведеноБанком
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.РасчетыСФилиалами) КАК Статья,
	|	ДД.БанковскийСчетОтправитель.Владелец КАК Аналитика,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Кредит) КАК ДебетКредит,
	|
	|	ВЫБОР
	|		КОГДА &Валюта = &ВалютаРегламентированногоУчета
	|			ТОГДА ДД.СуммаДокумента
	|		ИНАЧЕ ВЫРАЗИТЬ(ДД.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА &Валюта = &ВалютаУправленческогоУчета
	|			ТОГДА ДД.СуммаДокумента
	|		ИНАЧЕ ВЫРАЗИТЬ(ДД.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР
	|		КОГДА &Валюта = &ВалютаУправленческогоУчета
	|			ТОГДА ДД.СуммаДокумента
	|		ИНАЧЕ ВЫРАЗИТЬ(ДД.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА &Валюта = &ВалютаУправленческогоУчета
	|			ТОГДА ДД.СуммаДокумента
	|		ИНАЧЕ ВЫРАЗИТЬ(ДД.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаБезНДС,
	|
	|	ДД.ИдентификаторДокумента КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДД
	|ГДЕ
	|	ДД.Ссылка = &Ссылка
	|	И ДД.СуммаДокумента <> 0
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|	И ДД.ПроведеноБанком
	|";
	
	ТекстЗапроса = ТекстЗапроса
		+ ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении()
		+ ПрочиеАктивыПассивыСервер.ТекстЗапросаВзаимозачетСФилиалами();
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаКурсовыхРазниц(Запрос, ТекстыЗапроса) Экспорт
	
	ИмяРегистра = "ТаблицаКурсовыхРазниц";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.БанковскийСчет.Подразделение КАК Подразделение,
	|	ДанныеДокумента.БанковскийСчет.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереоценкаДенежныхСредств) КАК ХозяйственнаяОперация,
	|
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуКонвертации КАК ЧИСЛО(31,2))
	|		- ДанныеДокумента.СуммаКонвертации КАК Сумма,
	|
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|		- ВЫРАЗИТЬ(ДанныеДокумента.СуммаКонвертации * &КоэффициентПересчетаКонвертацииВВалютуУпр КАК ЧИСЛО(31,2))
	|	КАК СуммаУпр,
	|	
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|		- ВЫРАЗИТЬ(ДанныеДокумента.СуммаКонвертации * &КоэффициентПересчетаКонвертацииВВалютуРегл КАК ЧИСЛО(31,2))
	|	КАК СуммаРегл,
	|	ДанныеДокумента.ИдентификаторДокумента КАК ИдентификаторДокумента
	|
	|ПОМЕСТИТЬ ТаблицаКурсовыхРазниц
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса, Регистры = Неопределено) Экспорт
	
	ТекстЗапросаДанных = "
	|ВЫБРАТЬ
	|	""ДанныеДокумента""     КАК ИсточникДанных,
	|	ЛОЖЬ                    КАК РаспределятьОбщуюСумму,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ВЫБОР 
	|		КОГДА НЕ ТаблицаДокумента.Ссылка.ПроведеноБанком
	|				ИЛИ НАЧАЛОПЕРИОДА(ТаблицаДокумента.Ссылка.Дата, ДЕНЬ) = ТаблицаДокумента.Ссылка.ДатаПроведенияБанком
	|				ИЛИ ТаблицаДокумента.Ссылка.Исправление ТОГДА
	|			ТаблицаДокумента.Ссылка.Дата
	|		ИНАЧЕ
	|			КОНЕЦПЕРИОДА(ТаблицаДокумента.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ                   КАК Дата,
	|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
	|	ТаблицаДокумента.Валюта КАК ВалютаДокумента,
	|	ЕСТЬNULL(Строки.ВалютаВзаиморасчетов, НЕОПРЕДЕЛЕНО) КАК ВалютаВзаиморасчетов,
	|	НЕОПРЕДЕЛЕНО КАК ПериодБазыНДС,
	|
	|	ЕСТЬNULL(Строки.НомерСтроки, 0) КАК НомерСтроки,
	|	ЕСТЬNULL(Строки.ИдентификаторСтроки, """") КАК ИдентификаторСтроки,
	|	ЕСТЬNULL(Строки.Сумма, ТаблицаДокумента.СуммаДокумента) КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
	|	0 КАК СуммаНДС,
	|	ЕСТЬNULL(Строки.СуммаВзаиморасчетов, 0) КАК СуммаВзаиморасчетов,
	|	0 КАК СуммаНДСВзаиморасчетов,
	|	
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Строки.ОбъектРасчетов, ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОтражаетсяВРасчетах,
	|	ЕСТЬNULL(Строки.ОбъектРасчетов, ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)) КАК ОбъектРасчетов,
	|	ЛОЖЬ КАК ПересчитыватьПоДаннымРасчетов
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ТаблицаДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК Строки
	|		ПО Строки.Ссылка = ТаблицаДокумента.Ссылка
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ДанныеДокумента"" КАК ИсточникДанных,
	|	ЛОЖЬ КАК РаспределятьОбщуюСумму,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Дата КАК Дата,
	|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
	|	ТаблицаДокумента.Валюта КАК ВалютаДокумента,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаВзаиморасчетов,
	|	НЕОПРЕДЕЛЕНО КАК ПериодБазыНДС,
	|
	|	0 КАК НомерСтроки,
	|	""1"" КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СуммаКомиссии КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
	|	0 КАК СуммаНДС,
	|	0 КАК СуммаВзаиморасчетов,
	|	0 КАК СуммаНДСВзаиморасчетов,
	|
	|	ЛОЖЬ КАК ОтражаетсяВРасчетах,
	|	НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	ЛОЖЬ КАК ПересчитыватьПоДаннымРасчетов
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&Ссылка)
	|	И ТаблицаДокумента.ОтражатьКомиссию
	|	И ТаблицаДокумента.СуммаКомиссии <> 0
	|";
	
	РегистрыСведений.СуммыДокументовВВалютахУчета.СформироватьПоДаннымДокумента(
		Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаДанных);

КонецПроцедуры

Функция ТекстЗапросаТаблицаРасчетыПоФинансовымИнструментам(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыПоФинансовымИнструментам";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки                             КАК НомерСтроки,
	|	&Период                                                           КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                            КАК ВидДвижения,
	
	|	ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам               КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита                  КАК Договор,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоКредитам)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|		ИНАЧЕ ТаблицаРасшифровкаПлатежа.ТипСуммыКредитаДепозита
	|	КОНЕЦ КАК ТипСуммы,
	|	НЕОПРЕДЕЛЕНО КАК РасчетныйДокумент,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов                    КАК Валюта,
	
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов                     КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаРегл                               КАК СуммаРегл,
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр                                КАК СуммаУпр,
	
	|	&ХозяйственнаяОперация                                            КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ДанныеДоговора.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыГрафиковФинансовыхИнструментов.Транши)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыГрафиковФинансовыхИнструментов.Оплаты)
	|	КОНЕЦ КАК ТипГрафика,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств           КАК СтатьяАналитики,
	|	
	|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки                     КАК ИдентификаторФинЗаписи,
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоКредитам) 
	|			 ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПоступлениеДенежныхСредствПоКредитам) 
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоДепозитам) 
	|			 ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПоступлениеДенежныхСредствПоДепозитам)
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоЗаймамВыданным) 
	|			 ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПоступлениеДенежныхСредствПоЗаймамВыданным)
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|		ПО ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита = ДанныеДоговора.Ссылка
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоДепозитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоЗаймамВыданным))
	|	И &ПроведеноБанком
	|
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваУПодотчетныхЛиц(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваУПодотчетныхЛиц";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.ПодотчетноеЛицо,
	|	ДанныеДокумента.Подразделение,
	|	ДанныеДокумента.БанковскийСчет.ВалютаДенежныхСредств КАК Валюта,
	|	
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК ЦельВыдачи,
	|	
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ЕстьNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента) КАК Сумма,
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.Сумма ЕСТЬ NULL
	|		ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|		ИНАЧЕ ТаблицаРасшифровкаПлатежа.СуммаРегл
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.Сумма ЕСТЬ NULL
	|		ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|		ИНАЧЕ ТаблицаРасшифровкаПлатежа.СуммаУпр
	|	КОНЕЦ КАК СуммаУпр,
	|	ЕстьNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента) КАК КОтчету,
	|
	|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВозвратДенежныхСредствОтПодотчетника) КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ПО ИСТИНА
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПодотчетника)
	|	И &ПроведеноБанком
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныхСредств(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДенежныхСредств";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.БанковскийСчет.Подразделение КАК Подразделение,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ХозяйственнаяОперация = Значение(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствСДругогоСчета) ТОГДА
	|		ДанныеДокумента.БанковскийСчет
	|	КОГДА ДанныеДокумента.ХозяйственнаяОперация = Значение(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет) ТОГДА
	|		ДанныеДокумента.КассаОтправитель
	|	КОНЕЦ КАК ДенежныеСредства,
	|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваВПути) КАК ТипДенежныхСредств,
	|	
	|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	
	|	ДанныеДокумента.БанковскийСчет КАК КорДенежныеСредства,
	|	&НаправлениеДеятельностиДС КАК КорНаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные) КАК КорТипДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК КорВалюта,
	|
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК Сумма,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаВВалюте,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаВКорВалюте,
	|
	|	ВЫБОР КОГДА ДанныеДокумента.ХозяйственнаяОперация = Значение(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствСДругогоСчета) ТОГДА
	|		ДанныеДокумента.БанковскийСчет
	|	КОГДА ДанныеДокумента.ХозяйственнаяОперация = Значение(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет) ТОГДА
	|		ДанныеДокумента.КассаОтправитель
	|	КОНЕЦ КАК ИсточникГФУДенежныхСредств,
	|	ДанныеДокумента.БанковскийСчет КАК ИсточникКорГФУДенежныхСредств
	|	
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|		Значение(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствСДругогоСчета),
	|		Значение(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет)
	|	)
	|	И &ПроведеноБанком
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|
	|	ДанныеДокумента.ПодотчетноеЛицо КАК ДенежныеСредства,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваУПодотчетногоЛица) КАК ТипДенежныхСредств,
	|	ТаблицаПлатежногоДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|
	|	ДанныеДокумента.БанковскийСчет КАК КорДенежныеСредства,
	|	&НаправлениеДеятельностиДС КАК КорНаправлениеДеятельности,
	|	Значение(Перечисление.ТипыДенежныхСредств.Безналичные) КАК КорТипДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК КорВалюта,
	|
	|	ВЫРАЗИТЬ(ТаблицаПлатежногоДокумента.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК Сумма,
	|	ВЫРАЗИТЬ(ТаблицаПлатежногоДокумента.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
	|	ТаблицаПлатежногоДокумента.Сумма КАК СуммаВВалюте,
	|	ТаблицаПлатежногоДокумента.Сумма КАК СуммаВКорВалюте,
	|
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУДенежныхСредств,
	|	ДанныеДокумента.БанковскийСчет КАК ИсточникКорГФУДенежныхСредств
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаПлатежногоДокумента
	|		ПО
	|			ТаблицаПлатежногоДокумента.Ссылка = ДанныеДокумента.Ссылка
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|		Значение(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПодотчетника)
	|		)
	|	И &ПроведеноБанком
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|
	|	ДанныеДокумента.ДоговорЭквайринга КАК ДенежныеСредства,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	Значение(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваУЭквайера) КАК ТипДенежныхСредств,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|
	|	ДанныеДокумента.БанковскийСчет КАК КорДенежныеСредства,
	|	&НаправлениеДеятельностиДС КАК КорНаправлениеДеятельности,
	|	Значение(Перечисление.ТипыДенежныхСредств.Безналичные) КАК КорТипДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК КорВалюта,
	|
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК Сумма,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаВВалюте,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаВКорВалюте,
	|
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУДенежныхСредств,
	|	ДанныеДокумента.БанковскийСчет КАК ИсточникКорГФУДенежныхСредств
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|		Значение(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыПоПлатежнойКарте)
	|		)
	|	И &ПроведеноБанком
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	| // Операции поступления денежных средств по депозитам
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ТаблицаПлатежногоДокумента.ДоговорКредитаДепозита.Подразделение КАК Подразделение,
	|
	|	ТаблицаПлатежногоДокумента.ДоговорКредитаДепозита КАК ДенежныеСредства,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Значение(Перечисление.ТипыДенежныхСредств.Депозиты) КАК ТипДенежныхСредств,
	|	ТаблицаПлатежногоДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|
	|	ДанныеДокумента.БанковскийСчет КАК КорДенежныеСредства,
	|	&НаправлениеДеятельностиДС КАК КорНаправлениеДеятельности,
	|	Значение(Перечисление.ТипыДенежныхСредств.Безналичные) КАК КорТипДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК КорВалюта,
	|
	|	ВЫРАЗИТЬ(ТаблицаПлатежногоДокумента.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК Сумма,
	|	ВЫРАЗИТЬ(ТаблицаПлатежногоДокумента.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
	|	ТаблицаПлатежногоДокумента.Сумма КАК СуммаВВалюте,
	|	ТаблицаПлатежногоДокумента.Сумма КАК СуммаВКорВалюте,
	|
	|	ТаблицаПлатежногоДокумента.ДоговорКредитаДепозита КАК ИсточникГФУДенежныхСредств,
	|	ДанныеДокумента.БанковскийСчет КАК ИсточникКорГФУДенежныхСредств
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаПлатежногоДокумента
	|		ПО
	|			ТаблицаПлатежногоДокумента.Ссылка = ДанныеДокумента.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|			ПО ТаблицаПлатежногоДокумента.ДоговорКредитаДепозита = ДанныеДоговора.Ссылка
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|		Значение(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоДепозитам)
	|		)
	|	И &ПроведеноБанком
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Операции поступления денежных средств от конвертации валюты
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	Значение(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствОтКонвертацииВалюты) КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|
	|	ДанныеДокумента.Контрагент КАК ДенежныеСредства,
	|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельности,
	|	Значение(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваВПути) КАК ТипДенежныхСредств,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.ВалютаКонвертации КАК Валюта,
	|
	|	ДанныеДокумента.БанковскийСчет КАК КорДенежныеСредства,
	|	&НаправлениеДеятельностиДС КАК КорНаправлениеДеятельности,
	|	Значение(Перечисление.ТипыДенежныхСредств.Безналичные) КАК КорТипДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК КорВалюта,
	|
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК Сумма,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
	|	ДанныеДокумента.СуммаКонвертации КАК СуммаВВалюте,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаВКорВалюте,
	|
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУДенежныхСредств,
	|	ДанныеДокумента.БанковскийСчет КАК ИсточникКорГФУДенежныхСредств
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|		Значение(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)
	|		)
	|	И &ПроведеноБанком
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныеСредстваКонтрагент(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДенежныеСредстваКонтрагент";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Период КАК Период,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|
	|	ДанныеДокумента.ДенежныеСредства КАК ДенежныеСредства,
	|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельностиДС,
	|	Значение(Перечисление.ТипыДенежныхСредств.Безналичные) КАК ТипДенежныхСредств,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.ВалютаПлатежа КАК ВалютаПлатежа,
	|
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ДанныеДокумента.НаправлениеДеятельности.УчетРасчетовСПоставщиками, ЛОЖЬ) ТОГДА
	|			ДанныеДокумента.НаправлениеДеятельности
	|	КОНЕЦ КАК НаправлениеДеятельностиКонтрагента,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.ОбъектРасчетов КАК ОбъектРасчетов,
	|	НЕОПРЕДЕЛЕНО КАК РасчетныйДокумент,
	|	
	|	СУММА(ДанныеДокумента.СуммаОплаты) КАК СуммаОплаты,
	|	СУММА(ДанныеДокумента.СуммаОплатыРегл) КАК СуммаОплатыРегл,
	|	СУММА(ДанныеДокумента.СуммаОплатыВВалютеПлатежа) КАК СуммаОплатыВВалютеПлатежа,
	|
	|	СУММА(ДанныеДокумента.СуммаПостоплаты) КАК СуммаПостоплаты,
	|	СУММА(ДанныеДокумента.СуммаПостоплатыРегл) КАК СуммаПостоплатыРегл,
	|	СУММА(ДанныеДокумента.СуммаПостоплатыВВалютеПлатежа) КАК СуммаПостоплатыВВалютеПлатежа,
	|
	|	СУММА(ДанныеДокумента.СуммаПредоплаты) КАК СуммаПредоплаты,
	|	СУММА(ДанныеДокумента.СуммаПредоплатыРегл) КАК СуммаПредоплатыРегл,
	|	СУММА(ДанныеДокумента.СуммаПредоплатыВВалютеПлатежа) КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|	СУММА(ДанныеДокумента.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ДанныеДокумента.СуммаНДСРегл) КАК СуммаНДСРегл,
	|	СУММА(ДанныеДокумента.СуммаНДСВВалютеПлатежа) КАК СуммаНДСВВалютеПлатежа,
	|
	|	ДанныеДокумента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|
	|	СУММА(ДанныеДокумента.СуммаОплатыВВалютеВзаиморасчетов) КАК СуммаОплатыВВалютеВзаиморасчетов,
	|	СУММА(ДанныеДокумента.СуммаПостоплатыВВалютеВзаиморасчетов) КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|	СУММА(ДанныеДокумента.СуммаПредоплатыВВалютеВзаиморасчетов) КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|	ДанныеДокумента.ИсточникГФУДенежныхСредств КАК ИсточникГФУДенежныхСредств,
	|	ДанныеДокумента.ИсточникГФУРасчетов КАК ИсточникГФУРасчетов,
	|	ДанныеДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ЛОЖЬ КАК ОтложенноеПроведение
	|
	|ИЗ (
	|	// Операции по поступлению денежных средств
	|	ВЫБРАТЬ
	|		&Период КАК Период,
	|		&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.Организация КАК Организация,
	|		ТаблицаРасшифровкаПлатежа.ПодразделениеЗаказа КАК Подразделение,
	|
	|		ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|		ДанныеДокумента.Валюта КАК ВалютаПлатежа,
	|
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|		ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.НаправлениеДеятельности, ДанныеДокумента.НаправлениеДеятельности) КАК НаправлениеДеятельности,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.Договор КАК Договор,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ОбъектРасчетов,
	|	
	|		ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаОплаты,
	|		ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаОплатыРегл,
	|		ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаОплатыВВалютеПлатежа,
	|
	|		0 КАК СуммаПостоплаты,
	|		0 КАК СуммаПостоплатыРегл,
	|		0 КАК СуммаПостоплатыВВалютеПлатежа,
	|		
	|		0 КАК СуммаПредоплаты,
	|		0 КАК СуммаПредоплатыРегл,
	|		0 КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|		0 КАК СуммаНДС,
	|		0 КАК СуммаНДСРегл,
	|		0 КАК СуммаНДСВВалютеПлатежа,
	|
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|
	|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК СуммаОплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|		ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ИсточникГФУРасчетов,
	|		НЕОПРЕДЕЛЕНО КАК СтавкаНДС
	|	ИЗ
	|		Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ИСТИНА
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика))
	|		И ДанныеДокумента.ПроведеноБанком
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	// Операции по поступлению денежных средств от другой организации
	|	ВЫБРАТЬ
	|		&Период КАК Период,
	|		ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.Организация КАК Организация,
	|		НЕОПРЕДЕЛЕНО КАК Подразделение,
	|
	|		ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|		ДанныеДокумента.Валюта КАК ВалютаПлатежа,
	|
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|		ДанныеДокумента.БанковскийСчетОтправитель.Владелец КАК Контрагент,
	|		ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.НаправлениеДеятельности, ДанныеДокумента.НаправлениеДеятельности) КАК НаправлениеДеятельности,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.Договор КАК Договор,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ОбъектРасчетов,
	|	
	|		ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУпр КАК СуммаОплаты,
	|		ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК СуммаОплатыРегл,
	|		ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаОплатыВВалютеПлатежа,
	|
	|		0 КАК СуммаПостоплаты,
	|		0 КАК СуммаПостоплатыРегл,
	|		0 КАК СуммаПостоплатыВВалютеПлатежа,
	|		
	|		0 КАК СуммаПредоплаты,
	|		0 КАК СуммаПредоплатыРегл,
	|		0 КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|		0 КАК СуммаНДС,
	|		0 КАК СуммаНДСРегл,
	|		0 КАК СуммаНДСВВалютеПлатежа,
	|
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|
	|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК СуммаОплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|		ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ИсточникГФУРасчетов,
	|		НЕОПРЕДЕЛЕНО КАК СтавкаНДС
	|	ИЗ
	|		Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ИСТИНА
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И ДанныеДокумента.ПроведеноБанком
	|		И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации)
	|		)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	// Операции по внутренней передаче денежных средств
	|	ВЫБРАТЬ
	|		&Период КАК Период,
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутреннееПоступлениеДенежныхСредств) КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.Организация КАК Организация,
	|		НЕОПРЕДЕЛЕНО КАК Подразделение,
	|
	|		ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
	|		&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|		ДанныеДокумента.Валюта КАК ВалютаПлатежа,
	|
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|		ДанныеДокумента.БанковскийСчетОтправитель.Владелец КАК Контрагент,
	|		ДанныеДокумента.БанковскийСчетОтправитель.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		НЕОПРЕДЕЛЕНО КАК Договор,
	|		НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	
	|		ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК СуммаОплаты,
	|		ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК СуммаОплатыРегл,
	|		ДанныеДокумента.СуммаДокумента КАК СуммаОплатыВВалютеПлатежа,
	|
	|		0 КАК СуммаПостоплаты,
	|		0 КАК СуммаПостоплатыРегл,
	|		0 КАК СуммаПостоплатыВВалютеПлатежа,
	|		
	|		0 КАК СуммаПредоплаты,
	|		0 КАК СуммаПредоплатыРегл,
	|		0 КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|		0 КАК СуммаНДС,
	|		0 КАК СуммаНДСРегл,
	|		0 КАК СуммаНДСВВалютеПлатежа,
	|
	|		ДанныеДокумента.Валюта КАК ВалютаВзаиморасчетов,
	|
	|		ДанныеДокумента.СуммаДокумента КАК СуммаОплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|		ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
	|		НЕОПРЕДЕЛЕНО КАК ИсточникГФУРасчетов,
	|		НЕОПРЕДЕЛЕНО КАК СтавкаНДС
	|	ИЗ
	|		Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И ДанныеДокумента.ПроведеноБанком
	|		И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	// Операции поступления по кредитам и займам выданным
	|	ВЫБРАТЬ
	|		&Период КАК Период,
	|		ВЫБОР
	|			КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоЗаймамВыданным)
	|				  И (ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита.СтатьяДДСПоступленияВыдачи = ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
	|					 ИЛИ ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита.СтатьяДДСОсновногоДолга = ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств)
	|				ТОГДА Значение(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоЗаймамВыданным)
	|			КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоЗаймамВыданным)
	|				  И (ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита.СтатьяДДСПроцентов = ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
	|					 ИЛИ ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита.СтатьяДДСКомиссии = ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств)
	|				ТОГДА Значение(Перечисление.ХозяйственныеОперации.ПоступлениеПроцентовПоЗаймамВыданным)
	|			ИНАЧЕ &ХозяйственнаяОперация
	|		КОНЕЦ  КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.Организация КАК Организация,
	|		ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита.Подразделение КАК Подразделение,
	|
	|		ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|		ДанныеДокумента.Валюта КАК ВалютаПлатежа,
	|
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|		ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита КАК Договор,
	|		НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	
	|		ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаОплаты,
	|		ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаОплатыРегл,
	|		ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента) КАК СуммаОплатыВВалютеПлатежа,
	|
	|		0 КАК СуммаПостоплаты,
	|		0 КАК СуммаПостоплатыРегл,
	|		0 КАК СуммаПостоплатыВВалютеПлатежа,
	|		
	|		0 КАК СуммаПредоплаты,
	|		0 КАК СуммаПредоплатыРегл,
	|		0 КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|		0 КАК СуммаНДС,
	|		0 КАК СуммаНДСРегл,
	|		0 КАК СуммаНДСВВалютеПлатежа,
	|
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|
	|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК СуммаОплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|		ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
	|		ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита КАК ИсточникГФУРасчетов,
	|		НЕОПРЕДЕЛЕНО КАК СтавкаНДС
	|	ИЗ
	|		Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ИСТИНА
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоКредитам),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоЗаймамВыданным))
	|		И ДанныеДокумента.ПроведеноБанком
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // НДС
	|		&Период КАК Период,
	|		&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.Организация КАК Организация,
	|		ТаблицаРасшифровкаПлатежа.ПодразделениеЗаказа КАК Подразделение,
	|
	|		ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|		ДанныеДокумента.Валюта КАК ВалютаПлатежа,
	|
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.Договор КАК Договор,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ОбъектРасчетов,
	|	
	|		0 КАК СуммаОплаты,
	|		0 КАК СуммаОплатыРегл,
	|		0 КАК СуммаОплатыВВалютеПлатежа,
	|
	|		0 КАК СуммаПостоплаты,
	|		0 КАК СуммаПостоплатыРегл,
	|		0 КАК СуммаПостоплатыВВалютеПлатежа,
	|		
	|		0 КАК СуммаПредоплаты,
	|		0 КАК СуммаПредоплатыРегл,
	|		0 КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|		ТаблицаРасшифровкаПлатежа.СуммаНДСУпр КАК СуммаНДС,
	|		ТаблицаРасшифровкаПлатежа.СуммаНДСРегл КАК СуммаНДСРегл,
	|		ТаблицаРасшифровкаПлатежа.СуммаНДС КАК СуммаНДСВВалютеПлатежа,
	|
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|
	|		0 КАК СуммаОплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|		ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ИсточникГФУРасчетов,
	|		ТаблицаРасшифровкаПлатежа.СтавкаНДС КАК СтавкаНДС
	|	ИЗ
	|		Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ИСТИНА
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика))
	|		И ДанныеДокумента.ПроведеноБанком
	|		И ТаблицаРасшифровкаПлатежа.СуммаНДС <> 0
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		&Период КАК Период,
	|		ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.Организация КАК Организация,
	|		НЕОПРЕДЕЛЕНО КАК Подразделение,
	|
	|		ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|		ДанныеДокумента.Валюта КАК ВалютаПлатежа,
	|
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|		ДанныеДокумента.БанковскийСчетОтправитель.Владелец КАК Контрагент,
	|		ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.Договор КАК Договор,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ОбъектРасчетов,
	|	
	|		0 КАК СуммаОплаты,
	|		0 КАК СуммаОплатыРегл,
	|		0 КАК СуммаОплатыВВалютеПлатежа,
	|
	|		0 КАК СуммаПостоплаты,
	|		0 КАК СуммаПостоплатыРегл,
	|		0 КАК СуммаПостоплатыВВалютеПлатежа,
	|		
	|		0 КАК СуммаПредоплаты,
	|		0 КАК СуммаПредоплатыРегл,
	|		0 КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|		ТаблицаРасшифровкаПлатежа.СуммаНДСУпр КАК СуммаНДС,
	|		ТаблицаРасшифровкаПлатежа.СуммаНДСРегл КАК СуммаНДСРегл,
	|		ТаблицаРасшифровкаПлатежа.СуммаНДС КАК СуммаНДСВВалютеПлатежа,
	|
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|
	|		0 КАК СуммаОплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|		ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ИсточникГФУРасчетов,
	|		ТаблицаРасшифровкаПлатежа.СтавкаНДС КАК СтавкаНДС
	|	ИЗ
	|		Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ИСТИНА
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И ДанныеДокумента.ПроведеноБанком
	|		И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации)
	|		)
	|		И ТаблицаРасшифровкаПлатежа.СуммаНДС <> 0
	|
	|	) КАК ДанныеДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Период,
	|	ДанныеДокумента.ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.Подразделение,
	|	ДанныеДокумента.ДенежныеСредства,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.ВалютаПлатежа,
	|	ДанныеДокумента.Партнер,
	|	ДанныеДокумента.Контрагент,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ДанныеДокумента.НаправлениеДеятельности.УчетРасчетовСПоставщиками, ЛОЖЬ) ТОГДА
	|			ДанныеДокумента.НаправлениеДеятельности
	|	КОНЕЦ,
	|	ДанныеДокумента.Договор,
	|	ДанныеДокумента.ОбъектРасчетов,
	|	ДанныеДокумента.ВалютаВзаиморасчетов,
	|	ДанныеДокумента.ИсточникГФУДенежныхСредств,
	|	ДанныеДокумента.ИсточникГФУРасчетов,
	|	ДанныеДокумента.СтавкаНДС
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныеСредстваДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДенежныеСредстваДоходыРасходы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаКурсовыхРазниц", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаКурсовыхРазниц(Запрос, ТекстыЗапроса);
	КонецЕсли;

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ДанныеПлатежногоДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеПлатежногоДокумента.Организация КАК Организация,
	|	ТаблицаРасшифровкаПлатежа.Подразделение КАК Подразделение,
	|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельностиДС,
	|	ТаблицаРасшифровкаПлатежа.Подразделение КАК ПодразделениеДоходовРасходов,
	|
	|	ДанныеПлатежногоДокумента.БанковскийСчет КАК ДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.Безналичные) КАК ТипДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеПлатежногоДокумента.Валюта КАК Валюта,
	|
	|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельностиСтатьи,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДоходов КАК СтатьяДоходовРасходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаДоходов КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
	|	ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаВВалюте,
	|
	|	0 КАК СуммаНДС,
	|	0 КАК СуммаНДСРегл,
	|	0 КАК СуммаНДСВВалютеПлатежа,
	|
	|	ДанныеПлатежногоДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДоходов КАК ИсточникГФУДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС
	|
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеПлатежногоДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ИСТИНА
	|ГДЕ
	|	ДанныеПлатежногоДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = Значение(Перечисление.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств)
	|	И ДанныеПлатежногоДокумента.ПроведеноБанком
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КомиссияПоЭквайрингу) КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельностиДС,
	|	ДанныеДокумента.Подразделение КАК ПодразделениеДоходовРасходов,
	|
	|	ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваУЭквайера) КАК ТипДенежныхСредств,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДанныеДокумента.ДоговорЭквайринга.СтатьяДвиженияДенежныхСредствКомиссия, ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка) ТОГДА
	|			ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаПоставщику)
	|		ИНАЧЕ
	|			ДанныеДокумента.ДоговорЭквайринга.СтатьяДвиженияДенежныхСредствКомиссия
	|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|
	|	ДанныеДокумента.ДоговорЭквайринга.НаправлениеДеятельности КАК НаправлениеДеятельностиСтатьи,
	|	ДанныеДокумента.СтатьяРасходов КАК СтатьяДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	ДанныеДокумента.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаКомиссии * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК Сумма,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаКомиссии * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК СуммаРегл,
	|	ДанныеДокумента.СуммаКомиссии КАК СуммаВВалюте,
	|
	|	0 КАК СуммаНДС,
	|	0 КАК СуммаНДСРегл,
	|	0 КАК СуммаНДСВВалютеПлатежа,
	|
	|	ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
	|	ДанныеДокумента.СтатьяРасходов КАК ИсточникГФУДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС
	|
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ПроведеноБанком
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыПоПлатежнойКарте)
	|	И ДанныеДокумента.ОтражатьКомиссию
	|	И ДанныеДокумента.СуммаКомиссии <> 0
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Расчет доходов от курсовых разниц
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КурсовыеРазницыДСПрибыль) КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	ТаблицаКурсовыхРазниц.Подразделение КАК Подразделение,
	|	&НаправлениеДеятельностиДС,
	|	ТаблицаКурсовыхРазниц.Подразделение КАК ПодразделениеДоходовРасходов,
	|
	|	&Контрагент КАК ДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваВПути) КАК ТипДенежныхСредств,
	|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	&ВалютаКонвертации КАК Валюта,
	|
	|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельностиСтатьи,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ДоходыПриКонвертацииВалюты) КАК СтатьяДоходовРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.АналитикаКурсовыхРазниц.ДенежныеСредства) КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	
	|	ТаблицаКурсовыхРазниц.СуммаУпр КАК Сумма,
	|	ТаблицаКурсовыхРазниц.СуммаРегл КАК СуммаРегл,
	|	0 КАК СуммаВВалюте,
	|
	|	0 КАК СуммаНДС,
	|	0 КАК СуммаНДСРегл,
	|	0 КАК СуммаНДСВВалютеПлатежа,
	|
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУДенежныхСредств,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ДоходыПриКонвертацииВалюты) КАК ИсточникГФУДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС
	|ИЗ
	|	ТаблицаКурсовыхРазниц КАК ТаблицаКурсовыхРазниц
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)
	|	И (ТаблицаКурсовыхРазниц.СуммаУпр > 0 ИЛИ ТаблицаКурсовыхРазниц.СуммаРегл > 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Расчет расходов от курсовых разниц
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КурсовыеРазницыДСУбыток) КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	ТаблицаКурсовыхРазниц.Подразделение КАК Подразделение,
	|	&НаправлениеДеятельностиДС,
	|	ТаблицаКурсовыхРазниц.Подразделение КАК ПодразделениеДоходовРасходов,
	|
	|	&Контрагент КАК ДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваВПути) КАК ТипДенежныхСредств,
	|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	&ВалютаКонвертации КАК Валюта,
	|
	|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельностиСтатьи,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыПриКонвертацииВалюты) КАК СтатьяДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	ЗНАЧЕНИЕ(Перечисление.АналитикаКурсовыхРазниц.ДенежныеСредства) КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|
	|	-ТаблицаКурсовыхРазниц.СуммаУпр КАК Сумма,
	|	-ТаблицаКурсовыхРазниц.СуммаРегл КАК СуммаРегл,
	|	0 КАК СуммаВВалюте,
	|
	|	0 КАК СуммаНДС,
	|	0 КАК СуммаНДСРегл,
	|	0 КАК СуммаНДСВВалютеПлатежа,
	|
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУДенежныхСредств,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыПриКонвертацииВалюты) КАК ИсточникГФУДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС
	|
	|ИЗ
	|	ТаблицаКурсовыхРазниц КАК ТаблицаКурсовыхРазниц
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)
	|	И (ТаблицаКурсовыхРазниц.СуммаУпр < 0 ИЛИ ТаблицаКурсовыхРазниц.СуммаРегл < 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПогашениеЗаймаСотрудником)
	|			ТОГДА &Подразделение 
	|		КОГДА ДанныеПлатежногоДокумента.ДокументВыдачи ССЫЛКА Документ.РасходныйКассовыйОрдер
	|			ТОГДА ВЫРАЗИТЬ(ДанныеПлатежногоДокумента.ДокументВыдачи КАК Документ.РасходныйКассовыйОрдер).Подразделение
	|		КОГДА ДанныеПлатежногоДокумента.ДокументВыдачи ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
	|			ТОГДА ВЫРАЗИТЬ(ДанныеПлатежногоДокумента.ДокументВыдачи КАК Документ.СписаниеБезналичныхДенежныхСредств).Подразделение
	|	КОНЕЦ КАК Подразделение,
	|	&НаправлениеДеятельностиДС,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДоходовРасходов,
	|
	|	&БанковскийСчет КАК ДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.Безналичные) КАК ТипДенежныхСредств,
	|	ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств, ДанныеПлатежногоДокумента.СтатьяДвиженияДенежныхСредств) КАК СтатьяДвиженияДенежныхСредств,
	|	&Валюта КАК Валюта,
	|
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиСтатьи,
	|	ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.СтатьяДоходов, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда)) КАК СтатьяДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	
	|	СУММА(ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеПлатежногоДокумента.СуммаДокумента) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))) КАК Сумма,
	|	СУММА(ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеПлатежногоДокумента.СуммаДокумента) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))) КАК СуммаРегл,
	|	СУММА(ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеПлатежногоДокумента.СуммаДокумента)) КАК СуммаВВалюте,
	|
	|	0 КАК СуммаНДС,
	|	0 КАК СуммаНДСРегл,
	|	0 КАК СуммаНДСВВалютеПлатежа,
	|
	|	&БанковскийСчет КАК ИсточникГФУДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеПлатежногоДокумента
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ИСТИНА
	|ГДЕ
	|	ДанныеПлатежногоДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратНеперечисленныхДС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратНеперечисленнойЗарплатыПоЗарплатномуПроекту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПогашениеЗаймаСотрудником))
	|	И &ПроведеноБанком
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств,
	|	ДанныеПлатежногоДокумента.СтатьяДвиженияДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДоходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов,
	|	ДанныеПлатежногоДокумента.ДокументВыдачи,
	|	ДанныеПлатежногоДокумента.БанковскийСчет
	|
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВременнаяТаблицаДвиженияКонтрагентКонтрагент(Запрос, ТекстыЗапроса)
	
	ИмяВременнойТаблицы = "ВтДвиженияКонтрагентКонтрагент";
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Период КАК Период,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДанныеДокумента.НаправлениеДеятельности.УчетРасчетовСПоставщиками, ЛОЖЬ) ТОГДА
	|			ДанныеДокумента.НаправлениеДеятельности 
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.ОбъектРасчетов КАК ОбъектРасчетов,
	|
	|	ДанныеДокумента.КорПартнер КАК КорПартнер,
	|	ДанныеДокумента.КорКонтрагент КАК КорКонтрагент,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДанныеДокумента.КорНаправлениеДеятельности.УчетРасчетовСПоставщиками, ЛОЖЬ) ТОГДА
	|			ДанныеДокумента.КорНаправлениеДеятельности
	|	КОНЕЦ КАК КорНаправлениеДеятельности,
	|	ДанныеДокумента.КорДоговор КАК КорДоговор,
	|	ДанныеДокумента.КорОбъектРасчетов КАК КорОбъектРасчетов,
	|	&Валюта КАК Валюта,
	|
	|	СУММА(ДанныеДокумента.Сумма) КАК Сумма,
	|	СУММА(ДанныеДокумента.СуммаРегл) КАК СуммаРегл,
	|	СУММА(ДанныеДокумента.СуммаВВалюте) КАК СуммаВВалюте,
	|
	|	ДанныеДокумента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	СУММА(ДанныеДокумента.СуммаВВалютеВзаиморасчетов) КАК СуммаВВалютеВзаиморасчетов,
	|	ДанныеДокумента.КорВалютаВзаиморасчетов КАК КорВалютаВзаиморасчетов,
	|	СУММА(ДанныеДокумента.КорСуммаВВалютеВзаиморасчетов) КАК КорСуммаВВалютеВзаиморасчетов,
	|
	|	ДанныеДокумента.ИсточникГФУРасчетов КАК ИсточникГФУРасчетов,
	|	ДанныеДокумента.КорИсточникГФУРасчетов КАК КорИсточникГФУРасчетов
	|ПОМЕСТИТЬ ВтДвиженияКонтрагентКонтрагент
	|ИЗ (
	|	// Списали задолженность клиента преред филиалом
	|	ВЫБРАТЬ
	|		&Период КАК Период,
	|		ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента),
	|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПлатежаИзФилиала)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности)
	|		КОНЕЦ КАК ХозяйственнаяОперация,//Дебиторская
	|		ТаблицаРасшифровкаПлатежа.Организация КАК Организация,
	|		ТаблицаРасшифровкаПлатежа.ПодразделениеЗаказа КАК Подразделение,
	|
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Договор КАК Договор,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ОбъектРасчетов,
	|
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК КорПартнер,
	|		ДанныеДокумента.Организация КАК КорКонтрагент,
	|		&НаправлениеДеятельностиДС КАК КорНаправлениеДеятельности,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Договор КАК КорДоговор,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК КорОбъектРасчетов,
	|	
	|		ТаблицаРасшифровкаПлатежа.СуммаУпр КАК Сумма,
	|		ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
	|		ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаВВалюте,
	|
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК СуммаВВалютеВзаиморасчетов,
	|
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК КорВалютаВзаиморасчетов,
	|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК КорСуммаВВалютеВзаиморасчетов,
	|
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ИсточникГФУРасчетов,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК КорИсточникГФУРасчетов
	|	ИЗ
	|		Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|			ПО ИСТИНА
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика))
	|		И ДанныеДокумента.Организация <> ТаблицаРасшифровкаПлатежа.Организация
	|		И ТаблицаРасшифровкаПлатежа.Организация <> НЕОПРЕДЕЛЕНО
	|		И ДанныеДокумента.ПроведеноБанком
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	// Передали задолженность клиента в организацию
	|	ВЫБРАТЬ
	|		&Период КАК Период,
	|		ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента),
	|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемПлатежаВФилиале)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности)
	|		КОНЕЦ КАК ХозяйственнаяОперация,//Кредиторская
	|		ДанныеДокумента.Организация КАК Организация,
	|		ТаблицаРасшифровкаПлатежа.ПодразделениеЗаказа КАК Подразделение,
	|
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|		ТаблицаРасшифровкаПлатежа.Организация КАК Контрагент,
	|		&НаправлениеДеятельностиДС КАК НаправлениеДеятельности,
	|		ТаблицаРасшифровкаПлатежа.Договор КАК Договор,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ОбъектРасчетов,
	|
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер КАК КорПартнер,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент КАК КорКонтрагент,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Договор КАК КорДоговор,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК КорОбъектРасчетов,
	|		
	|	
	|		ТаблицаРасшифровкаПлатежа.СуммаУпр КАК Сумма,
	|		ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
	|		ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаВВалюте,
	|
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК СуммаВВалютеВзаиморасчетов,
	|
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК КорВалютаВзаиморасчетов,
	|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК КорСуммаВВалютеВзаиморасчетов,
	|
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ИсточникГФУРасчетов,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК КорИсточникГФУРасчетов
	|	ИЗ
	|		Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|			ПО ИСТИНА
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика))
	|		И ДанныеДокумента.Организация <> ТаблицаРасшифровкаПлатежа.Организация
	|		И ТаблицаРасшифровкаПлатежа.Организация <> НЕОПРЕДЕЛЕНО
	|		И ДанныеДокумента.ПроведеноБанком
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	// Возврат оплаты по курсу аванса
	|	ВЫБРАТЬ
	|		&Период КАК Период,
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности) КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.Организация КАК Организация,
	|		ТаблицаРасшифровкаПлатежа.ПодразделениеЗаказа КАК Подразделение,
	|
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|		ДанныеДокумента.Организация КАК Контрагент,
	|		&НаправлениеДеятельностиДС КАК НаправлениеДеятельности,
	|		ТаблицаРасшифровкаПлатежа.Договор КАК Договор,
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ОбъектРасчетов,
	|
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер КАК КорПартнер,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент КАК КорКонтрагент,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Договор КАК КорДоговор,
	|		ДанныеДокумента.ОбъектРасчетов КАК КорОбъектРасчетов,
	|		
	|	
	|		ТаблицаРасшифровкаПлатежа.СуммаУпр КАК Сумма,
	|		ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
	|		ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаВВалюте,
	|
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК СуммаВВалютеВзаиморасчетов,
	|
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК КорВалютаВзаиморасчетов,
	|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК КорСуммаВВалютеВзаиморасчетов,
	|
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ИсточникГФУРасчетов,
	|		ДанныеДокумента.ОбъектРасчетов КАК КорИсточникГФУРасчетов
	|	ИЗ
	|		Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|			ПО ИСТИНА
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И ДанныеДокумента.ПроведеноБанком
	|		И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика))
	|		И ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.Объект <> &Ссылка
	|
	|	) КАК ДанныеДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Период,
	|	ДанныеДокумента.ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.Подразделение,
	|	ДанныеДокумента.Партнер,
	|	ДанныеДокумента.Контрагент,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДанныеДокумента.НаправлениеДеятельности.УчетРасчетовСПоставщиками, ЛОЖЬ) ТОГДА
	|			ДанныеДокумента.НаправлениеДеятельности 
	|	КОНЕЦ,
	|	ДанныеДокумента.Договор,
	|	ДанныеДокумента.ОбъектРасчетов,
	|	ДанныеДокумента.КорПартнер,
	|	ДанныеДокумента.КорКонтрагент,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДанныеДокумента.КорНаправлениеДеятельности.УчетРасчетовСПоставщиками, ЛОЖЬ) ТОГДА
	|			ДанныеДокумента.КорНаправлениеДеятельности
	|	КОНЕЦ,
	|	ДанныеДокумента.КорДоговор,
	|	ДанныеДокумента.КорОбъектРасчетов,
	|	ДанныеДокумента.ВалютаВзаиморасчетов,
	|	ДанныеДокумента.КорВалютаВзаиморасчетов,
	|	ДанныеДокумента.ИсточникГФУРасчетов,
	|	ДанныеДокумента.КорИсточникГФУРасчетов
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияКонтрагентКонтрагент(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияКонтрагентКонтрагент";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтДвиженияКонтрагентКонтрагент", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаДвиженияКонтрагентКонтрагент(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДвиженияКонтрагентКонтрагент.Период                        КАК Период,
	|	ДвиженияКонтрагентКонтрагент.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|	ДвиженияКонтрагентКонтрагент.Организация                   КАК Организация,
	|	ДвиженияКонтрагентКонтрагент.Подразделение                 КАК Подразделение,
	|
	|	ДвиженияКонтрагентКонтрагент.Партнер                       КАК Партнер,
	|	ДвиженияКонтрагентКонтрагент.Контрагент                    КАК Контрагент,
	|	ДвиженияКонтрагентКонтрагент.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	ДвиженияКонтрагентКонтрагент.Договор                       КАК Договор,
	|	ДвиженияКонтрагентКонтрагент.ОбъектРасчетов                КАК ОбъектРасчетов,
	|
	|	ДвиженияКонтрагентКонтрагент.КорПартнер                    КАК КорПартнер,
	|	ДвиженияКонтрагентКонтрагент.КорКонтрагент                 КАК КорКонтрагент,
	|	ДвиженияКонтрагентКонтрагент.КорНаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|	ДвиженияКонтрагентКонтрагент.КорДоговор                    КАК КорДоговор,
	|	ДвиженияКонтрагентКонтрагент.КорОбъектРасчетов             КАК КорОбъектРасчетов,
	|	ДвиженияКонтрагентКонтрагент.Валюта                        КАК Валюта,
	|
	|	ДвиженияКонтрагентКонтрагент.Сумма                         КАК Сумма,
	|	ДвиженияКонтрагентКонтрагент.СуммаРегл                     КАК СуммаРегл,
	|	ДвиженияКонтрагентКонтрагент.СуммаВВалюте                  КАК СуммаВВалюте,
	|
	|	ДвиженияКонтрагентКонтрагент.ВалютаВзаиморасчетов          КАК ВалютаВзаиморасчетов,
	|	ДвиженияКонтрагентКонтрагент.СуммаВВалютеВзаиморасчетов    КАК СуммаВВалютеВзаиморасчетов,
	|	ДвиженияКонтрагентКонтрагент.КорВалютаВзаиморасчетов       КАК КорВалютаВзаиморасчетов,
	|	ДвиженияКонтрагентКонтрагент.КорСуммаВВалютеВзаиморасчетов КАК КорСуммаВВалютеВзаиморасчетов,
	|
	|	ДвиженияКонтрагентКонтрагент.ИсточникГФУРасчетов           КАК ИсточникГФУРасчетов,
	|	ДвиженияКонтрагентКонтрагент.КорИсточникГФУРасчетов        КАК КорИсточникГФУРасчетов
	|
	|ИЗ
	|	ВтДвиженияКонтрагентКонтрагент КАК ДвиженияКонтрагентКонтрагент
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваКВыплате(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваКВыплате";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ДенежныеСредстваКВыплате.МоментВремени,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ДенежныеСредстваКВыплате.ЗаявкаНаРасходованиеДенежныхСредств,
	|	ДенежныеСредстваКВыплате.БанковскийСчетКасса,
	|	ДенежныеСредстваКВыплате.Получатель,
	|	ДенежныеСредстваКВыплате.Организация,
	|	-ДенежныеСредстваКВыплате.Сумма КАК Сумма,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваКВыплате КАК ДенежныеСредстваКВыплате
	|	ПО
	|		ДенежныеСредстваКВыплате.Регистратор = ДанныеДокумента.ДокументВыдачи
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратНеперечисленныхДС)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЛимитыРасходаДенежныхСредств(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЛимитыРасходаДенежныхСредств";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	Лимиты.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	Лимиты.Организация КАК Организация,
	|	Лимиты.Подразделение КАК Подразделение,
	|	- Лимиты.Лимит КАК Лимит,
	|	- Лимиты.РасходВПределахЛимита КАК РасходВПределахЛимита,
	|	- Лимиты.РасходСверхЛимита КАК РасходСверхЛимита
	|ИЗ
	|	РегистрНакопления.ЛимитыРасходаДенежныхСредств КАК Лимиты
	|ГДЕ
	|	Лимиты.Регистратор = &ДокументВыдачи
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратНеперечисленныхДС)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Организация                            КАК Организация,
	|	&Партнер                                КАК Партнер,
	|	&БанковскийСчет                         КАК МестоХранения,
	|	&Контрагент                             КАК Контрагент,
	|	ДанныеДокумента.БанковскийСчет.Подразделение КАК Подразделение,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Ссылка                                 КАК Ссылка,
	
	|	&Номер                                  КАК НомерДокументаИБ,
	|	НЕОПРЕДЕЛЕНО                            КАК Статус,
	|	&Ответственный                          КАК Ответственный,
	|	&Автор                                  КАК Автор,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	&НазначениеПлатежа                      КАК Дополнительно,
	|	&Комментарий                            КАК Комментарий,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	&ДатаВходящегоДокумента                 КАК ДатаПервичногоДокумента,
	|	&НомерВходящегоДокумента                КАК НомерПервичногоДокумента,
	|	&СуммаДокумента                         КАК Сумма,
	|	&Валюта                                 КАК Валюта,
	|	&Договор                                КАК Договор,
	|	&Исправление                            КАК СторноИсправление,
	|	&СторнируемыйДокумент                   КАК СторнируемыйДокумент,
	|	&ИсправляемыйДокумент                   КАК ИсправляемыйДокумент,
	|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	ВЫБОР КОГДА &ПроведеноБанком ТОГДА
	|		&Период
	|	ИНАЧЕ
	|		ДАТАВРЕМЯ(1,1,1)
	|	КОНЕЦ КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО КАК Приоритет
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоДепозитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоЗаймамВыданным),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратНеперечисленнойЗарплатыПоЗарплатномуПроекту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтАрендодателя),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Организация                            КАК Организация,
	|	&Партнер                                КАК Партнер,
	|	&БанковскийСчет                         КАК МестоХранения,
	|	&ПодотчетноеЛицо                        КАК Контрагент,
	|	ДанныеДокумента.БанковскийСчет.Подразделение КАК Подразделение,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Ссылка                                 КАК Ссылка,
	
	|	&Номер                                  КАК НомерДокументаИБ,
	|	НЕОПРЕДЕЛЕНО                            КАК Статус,
	|	&Ответственный                          КАК Ответственный,
	|	&Автор                                  КАК Автор,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	&НазначениеПлатежа                      КАК Дополнительно,
	|	&Комментарий                            КАК Комментарий,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	&ДатаВходящегоДокумента                 КАК ДатаПервичногоДокумента,
	|	&НомерВходящегоДокумента                КАК НомерПервичногоДокумента,
	|	&СуммаДокумента                         КАК Сумма,
	|	&Валюта                                 КАК Валюта,
	|	&Договор                                КАК Договор,
	|	&Исправление                            КАК СторноИсправление,
	|	&СторнируемыйДокумент                   КАК СторнируемыйДокумент,
	|	&ИсправляемыйДокумент                   КАК ИсправляемыйДокумент,
	|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	ВЫБОР КОГДА &ПроведеноБанком ТОГДА
	|		&Период
	|	ИНАЧЕ
	|		ДАТАВРЕМЯ(1,1,1)
	|	КОНЕЦ КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО КАК Приоритет
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПогашениеЗаймаСотрудником),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратНеперечисленныхДС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПодотчетника)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Организация                            КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|	&БанковскийСчет                         КАК МестоХранения,
	|	&ОрганизацияОтправитель                 КАК Контрагент,
	|	ДанныеДокумента.БанковскийСчет.Подразделение КАК Подразделение,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Ссылка                                 КАК Ссылка,
	
	|	&Номер                                  КАК НомерДокументаИБ,
	|	НЕОПРЕДЕЛЕНО                            КАК Статус,
	|	&Ответственный                          КАК Ответственный,
	|	&Автор                                  КАК Автор,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	&НазначениеПлатежа                      КАК Дополнительно,
	|	&Комментарий                            КАК Комментарий,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	&ДатаВходящегоДокумента                 КАК ДатаПервичногоДокумента,
	|	&НомерВходящегоДокумента                КАК НомерПервичногоДокумента,
	|	&СуммаДокумента                         КАК Сумма,
	|	&Валюта                                 КАК Валюта,
	|	&Договор                                КАК Договор,
	|	&Исправление                            КАК СторноИсправление,
	|	&СторнируемыйДокумент                   КАК СторнируемыйДокумент,
	|	&ИсправляемыйДокумент                   КАК ИсправляемыйДокумент,
	|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	ВЫБОР КОГДА &ПроведеноБанком ТОГДА
	|		&Период
	|	ИНАЧЕ
	|		ДАТАВРЕМЯ(1,1,1)
	|	КОНЕЦ КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО КАК Приоритет
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Организация                            КАК Организация,
	|	&Партнер                                КАК Партнер,
	|	&БанковскийСчет                         КАК МестоХранения,
	|	НЕОПРЕДЕЛЕНО                            КАК Контрагент,
	|	ДанныеДокумента.БанковскийСчет.Подразделение КАК Подразделение,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Ссылка                                 КАК Ссылка,
	
	|	&Номер                                  КАК НомерДокументаИБ,
	|	НЕОПРЕДЕЛЕНО                            КАК Статус,
	|	&Ответственный                          КАК Ответственный,
	|	&Автор                                  КАК Автор,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	&НазначениеПлатежа                      КАК Дополнительно,
	|	&Комментарий                            КАК Комментарий,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	&ДатаВходящегоДокумента                 КАК ДатаПервичногоДокумента,
	|	&НомерВходящегоДокумента                КАК НомерПервичногоДокумента,
	|	&СуммаДокумента                         КАК Сумма,
	|	&Валюта                                 КАК Валюта,
	|	&Договор                                КАК Договор,
	|	&Исправление                            КАК СторноИсправление,
	|	&СторнируемыйДокумент                   КАК СторнируемыйДокумент,
	|	&ИсправляемыйДокумент                   КАК ИсправляемыйДокумент,
	|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	ВЫБОР КОГДА &ПроведеноБанком ТОГДА
	|		&Период
	|	ИНАЧЕ
	|		ДАТАВРЕМЯ(1,1,1)
	|	КОНЕЦ КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО КАК Приоритет
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствСДругогоСчета),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Организация                            КАК Организация,
	|	&Партнер                                КАК Партнер,
	|	&БанковскийСчет                         КАК МестоХранения,
	|	&Контрагент                             КАК Контрагент,
	|	ДанныеДокумента.БанковскийСчет.Подразделение КАК Подразделение,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Ссылка                                 КАК Ссылка,
	
	|	&Номер                                  КАК НомерДокументаИБ,
	|	НЕОПРЕДЕЛЕНО                            КАК Статус,
	|	&Ответственный                          КАК Ответственный,
	|	&Автор                                  КАК Автор,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	&НазначениеПлатежа                      КАК Дополнительно,
	|	&Комментарий                            КАК Комментарий,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	&ДатаВходящегоДокумента                 КАК ДатаПервичногоДокумента,
	|	&НомерВходящегоДокумента                КАК НомерПервичногоДокумента,
	|	&СуммаДокумента                         КАК Сумма,
	|	&Валюта                                 КАК Валюта,
	|	ДанныеДокумента.ДоговорЭквайринга       КАК Договор,
	|	&Исправление                            КАК СторноИсправление,
	|	&СторнируемыйДокумент                   КАК СторнируемыйДокумент,
	|	&ИсправляемыйДокумент                   КАК ИсправляемыйДокумент,
	|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	ВЫБОР КОГДА &ПроведеноБанком ТОГДА
	|		&Период
	|	ИНАЧЕ
	|		ДАТАВРЕМЯ(1,1,1)
	|	КОНЕЦ КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО КАК Приоритет
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыПоПлатежнойКарте)
	|	)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОтражениеДокументовВМеждународномУчете(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВМеждународномУчете";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаОбъектовРасчетов", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаОбъектовРасчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период 	 				 КАК Период,
	|	&Организация 				 КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период 							КАК Период,
	|	ТаблицаОбъектовРасчетов.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) 		КАК ДатаОтражения
	|ИЗ
	|	ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|ГДЕ
	|	ТаблицаОбъектовРасчетов.Организация <> &Организация
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ДобавитьТекстыОтраженияВзаиморасчетов(Запрос, ТекстыЗапроса, Регистры)
	
	#Область РасчетыСКлиентами
	
	ТекстОплата = 
		"ВЫБРАТЬ
		|	Таблица.Ссылка                                                           КАК Ссылка,
		|	Таблица.Ссылка.Организация                                               КАК Организация,
		|	ВЫБОР КОГДА Таблица.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации)
		|		ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
		|		ИНАЧЕ Таблица.Партнер
		|	КОНЕЦ                                                                    КАК Партнер,
		|	
		|	Таблица.ВалютаВзаиморасчетов                                             КАК ВалютаВзаиморасчетов,
		|	Таблица.ОбъектРасчетов                                                   КАК ОбъектРасчетов,
		|	
		|	ВЫБОР КОГДА Таблица.Ссылка.ПроведеноБанком 
		|			ТОГДА Таблица.СуммаВзаиморасчетов
		|		ИНАЧЕ 0 
		|	КОНЕЦ                                                                    КАК СуммаВзаиморасчетов,
		|	ВЫБОР КОГДА Таблица.Ссылка.ПроведеноБанком 
		|			ТОГДА Таблица.Сумма
		|		ИНАЧЕ 0 
		|	КОНЕЦ                                                                    КАК Сумма,
		|	Таблица.СуммаВзаиморасчетов                                              КАК УвеличениеОплачивается,
		|	ВЫБОР КОГДА Таблица.Ссылка.ПроведеноБанком 
		|			ТОГДА Таблица.СуммаВзаиморасчетов
		|		ИНАЧЕ 0 
		|	КОНЕЦ                                                                    КАК УменьшениеОплачивается,
		|	
		|	ВЫБОР КОГДА НЕ Таблица.Ссылка.ПроведеноБанком
		|		ИЛИ НАЧАЛОПЕРИОДА(Таблица.Ссылка.Дата) = Таблица.Ссылка.ДатаПроведенияБанком
		|		ИЛИ Таблица.Ссылка.Исправление
		|			ТОГДА Таблица.Ссылка.Дата
		|		ИНАЧЕ КОНЕЦПЕРИОДА(Таблица.Ссылка.ДатаПроведенияБанком, ДЕНЬ)
		|	КОНЕЦ                                                                    КАК ДатаРегистратора,
		|	ВЫБОР КОГДА НЕ Таблица.Ссылка.ПроведеноБанком
		|			ТОГДА Таблица.Ссылка.Дата
		|		ИНАЧЕ Таблица.Ссылка.ДатаПроведенияБанком
		|	КОНЕЦ                                                                    КАК ДатаКурса,
		|	Таблица.Ссылка.Номер                                                     КАК НомерРегистратора,
		|	Таблица.Ссылка.ХозяйственнаяОперация                                     КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)                           КАК ФормаОплаты,
		|	Таблица.СтатьяДвиженияДенежныхСредств                                    КАК СтатьяДвиженияДенежныхСредств,
		|	ВЫБОР 
		|		КОГДА Таблица.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
		|			ТОГДА ВЫРАЗИТЬ(Таблица.ОснованиеПлатежа КАК Документ.СчетНаОплатуКлиенту)
		|		ИНАЧЕ Неопределено 
		|	КОНЕЦ                                                                    КАК СчетНаОплату,
		|	Таблица.Ссылка.Валюта                                                    КАК ВалютаДокумента,
		|	Неопределено                                                             КАК СвязанныйДокумент,
		|	Таблица.ИдентификаторСтроки                                              КАК ИдентификаторФинЗаписи,
		|	&НастройкаХозяйственнойОперации                                          КАК НастройкаХозяйственнойОперации
		|ИЗ
		|	Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка В (&Ссылка)
		|	И Таблица.Ссылка.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента),
		|											ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации))";
		
	ВзаиморасчетыСервер.ПроведениеОплатыОтКлиента(Запрос, ТекстыЗапроса, Регистры, ТекстОплата);
	
	#КонецОбласти
	
	#Область РасчетыСПоставщиками
	
	ТекстВозврат = "
		|ВЫБРАТЬ
		|	Таблица.Ссылка                                                           КАК Ссылка,
		|	Документ.Организация                                                     КАК Организация,
		|	ВЫБОР КОГДА Документ.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации)
		|		ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
		|		ИНАЧЕ Таблица.Партнер
		|	КОНЕЦ                                                                    КАК Партнер,
		|	ОбъектРасчетовПлатеж.Ссылка                                              КАК ОбъектРасчетов,
		|	
		|	Таблица.ВалютаВзаиморасчетов                                             КАК ВалютаВзаиморасчетов,
		|	Таблица.СуммаВзаиморасчетов                                              КАК СуммаВзаиморасчетов,
		|	Таблица.Сумма                                                            КАК Сумма,
		|	
		|	ВЫБОР КОГДА НЕ Документ.ПроведеноБанком
		|		ИЛИ НАЧАЛОПЕРИОДА(Документ.Дата) = Документ.ДатаПроведенияБанком
		|		ИЛИ Документ.Исправление
		|			ТОГДА Документ.Дата
		|		ИНАЧЕ КОНЕЦПЕРИОДА(Документ.ДатаПроведенияБанком, ДЕНЬ)
		|	КОНЕЦ                                                                    КАК ДатаРегистратора,
		|	ВЫБОР КОГДА НЕ Документ.ПроведеноБанком
		|			ТОГДА Документ.Дата
		|		ИНАЧЕ Документ.ДатаПроведенияБанком
		|	КОНЕЦ                                                                    КАК ДатаКурса,
		|	Документ.Номер                                                           КАК НомерРегистратора,
		|	Документ.ХозяйственнаяОперация                                           КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)                           КАК ФормаОплаты,
		|	Таблица.СтатьяДвиженияДенежныхСредств                                    КАК СтатьяДвиженияДенежныхСредств,
		|	Документ.Валюта                                                          КАК ВалютаДокумента,
		|	Таблица.ИдентификаторСтроки                                              КАК ИдентификаторФинЗаписи,
		|	ВЫБОР КОГДА Документ.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации)
		|		ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВозвратДенежныхСредствОтДругойОрганизации)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВозвратДенежныхСредствОтПоставщика)
		|	КОНЕЦ                                                                    КАК НастройкаХозяйственнойОперации
		|ИЗ
		|	Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК Таблица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеБезналичныхДенежныхСредств КАК Документ
		|			ПО Документ.Ссылка = Таблица.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектРасчетовПлатеж
		|			ПО Документ.ОбъектРасчетов = ОбъектРасчетовПлатеж.Ссылка
		|ГДЕ
		|	Таблица.Ссылка В (&Ссылка)
		|	И Документ.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика),
		|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации))
		|	И Документ.ПроведеноБанком";
	
	ТекстПереносЗадолженности = "
		|ВЫБРАТЬ
		|	Таблица.Ссылка                                                           КАК Ссылка,
		|	Документ.Организация                                                     КАК Организация,
		|	ВЫБОР КОГДА Документ.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации)
		|		ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
		|		ИНАЧЕ Таблица.Партнер
		|	КОНЕЦ                                                                    КАК Партнер,
		|	ОбъектРасчетовПлатеж.Ссылка                                              КАК ОбъектРасчетовПриемник,
		|	Таблица.ОбъектРасчетов                                                   КАК ОбъектРасчетовИсточник,
		|	
		|	Таблица.ВалютаВзаиморасчетов                                             КАК ВалютаВзаиморасчетов,
		|	Документ.Валюта                                                          КАК ВалютаДокумента,
		|	Таблица.СуммаВзаиморасчетов                                              КАК СуммаВзаиморасчетов,
		|	Таблица.Сумма                                                            КАК Сумма,
		|	
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереносАванса)               КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)                           КАК ФормаОплаты,
		|	Документ.Номер                                                           КАК НомерРегистратора,
		|	ВЫБОР КОГДА НЕ Документ.ПроведеноБанком
		|		ИЛИ НАЧАЛОПЕРИОДА(Документ.Дата) = Документ.ДатаПроведенияБанком
		|		ИЛИ Документ.Исправление
		|			ТОГДА Документ.Дата
		|		ИНАЧЕ КОНЕЦПЕРИОДА(Документ.ДатаПроведенияБанком, ДЕНЬ)
		|	КОНЕЦ                                                                    КАК ДатаРегистратора,
		|	ВЫБОР КОГДА НЕ Документ.ПроведеноБанком
		|			ТОГДА Документ.Дата
		|		ИНАЧЕ Документ.ДатаПроведенияБанком
		|	КОНЕЦ                                                                    КАК ДатаКурса,
		|	Таблица.СтатьяДвиженияДенежныхСредств                                    КАК СтатьяДвиженияДенежныхСредств,
		|	Таблица.ИдентификаторСтроки                                              КАК ИдентификаторФинЗаписи
		|
		|ИЗ
		|	Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК Таблица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеБезналичныхДенежныхСредств КАК Документ
		|			ПО Документ.Ссылка = Таблица.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектРасчетовПлатеж
		|			ПО Документ.ОбъектРасчетов = ОбъектРасчетовПлатеж.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
		|			ПО Таблица.ОбъектРасчетов = ОбъектыРасчетов.Ссылка
		|ГДЕ
		|	Таблица.Ссылка В (&Ссылка)
		|	И Документ.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика),
		|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации))
		|	И ОбъектыРасчетов.Ссылка <> ОбъектРасчетовПлатеж.Ссылка
		|	И Документ.ПроведеноБанком";
		
	ВзаиморасчетыСервер.ПроведениеВозвратаОплатыОтПоставщика(Запрос, ТекстыЗапроса, Регистры, ТекстВозврат, ТекстПереносЗадолженности);
	
	#КонецОбласти
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	ПоступлениеБезналичныхДенежныхСредствЛокализация.ДобавитьКомандыПечати(КомандыПечати);

КонецПроцедуры

// Добавляет команду создания документа "Поступление безналичных ДС".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
// Возвращаемое значение:
//  ТаблицаЗначений, Неопределено - сформированные команды для вывода в подменю.
Функция ДобавитьКомандуСоздатьНаОснованииОтчетаПоКомиссии_Вознаграждение(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.ПоступлениеБезналичныхДенежныхСредств) Тогда		
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Обработчик = "СозданиеНаОснованииУТКлиент.ПоступлениеБезналичныхДсНаОснованииОтчетаПоКомиссии_Вознаграждение";
		КомандаСоздатьНаОсновании.Идентификатор = "ПоступлениеБезналичныхДсНаОснованииОтчетаПоКомиссии_Вознаграждение";
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ПоступлениеБезналичныхДенежныхСредств) 
			+ " " + НСтр("ru = 'комиссионеру (вознаграждение от комитента)'");
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

#КонецОбласти

#Область Прочее

// Функция ищет зеркальный документ СписаниеБДС для операций между Организациями (Интеркампани).
//
// Параметры:
//	ДокументСсылка - ДокументСсылка.ПоступлениеБезналичныхДенежныхСредств - Документ, для которого необходимо найти зеркальный документ СписаниеБДС.
//
// Возвращаемое значение:
//	ДокументСсылка.СписаниеБезналичныхДенежныхСредств
//  Неопределено - если документ не найден.
//
Функция НайтиЗеркальныйПлатеж(ДокументСсылка) Экспорт
	
	ЗеркальныйПлатеж = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СписаниеБезналичныхДенежныхСредств.Ссылка
	               |ИЗ
	               |	Документ.СписаниеБезналичныхДенежныхСредств КАК СписаниеБезналичныхДенежныхСредств
	               |ГДЕ
	               |	СписаниеБезналичныхДенежныхСредств.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию)
	               |	И СписаниеБезналичныхДенежныхСредств.БанковскийСчет = &БанковскийСчет
	               |	И СписаниеБезналичныхДенежныхСредств.СуммаДокумента = &СуммаДокумента
	               |	И СписаниеБезналичныхДенежныхСредств.Валюта = &Валюта
	               |	И СписаниеБезналичныхДенежныхСредств.ДатаВходящегоДокумента = &ДатаВходящегоДокумента
	               |	И СписаниеБезналичныхДенежныхСредств.НомерВходящегоДокумента = &НомерВходящегоДокумента
	               |	И СписаниеБезналичныхДенежныхСредств.БанковскийСчетПолучатель = &БанковскийСчетПолучатель";
				   
	Запрос.УстановитьПараметр("БанковскийСчет",ДокументСсылка.БанковскийСчетОтправитель);
	Запрос.УстановитьПараметр("БанковскийСчетПолучатель",ДокументСсылка.БанковскийСчет);
	Запрос.УстановитьПараметр("СуммаДокумента",ДокументСсылка.СуммаДокумента);
	Запрос.УстановитьПараметр("Валюта",ДокументСсылка.Валюта);
	Запрос.УстановитьПараметр("ДатаВходящегоДокумента", ДокументСсылка.ДатаВходящегоДокумента);
	Запрос.УстановитьПараметр("НомерВходящегоДокумента", ДокументСсылка.НомерВходящегоДокумента);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() И Выборка.Количество() = 1 Тогда
		ЗеркальныйПлатеж = Выборка.Ссылка;
	КонецЕсли;
	
	Возврат ЗеркальныйПлатеж;

КонецФункции

// Проверяет соответствие расшифровок платежа в зеркальном СписаниеБДС,
// для операций между Организациями (Интеркампани).
//
// Параметры:
//	ДокументСсылка - ДокументСсылка.ПоступлениеБезналичныхДенежныхСредств - Документ поступления
//  ЗеркальныйПлатежСсылка - ДокументСсылка.СписаниеБезналичныхДенежныхСредств - Документ списания
//  ТолькоРасшифровкаПлатежа - Булево - Признак сравнения документов только по расшифровке платежа
//
// Возвращаемое значение:
//  Булево - Признак соответствия платежей
Функция СоответствуетЗеркальномуПлатежу(ДокументСсылка, ЗеркальныйПлатежСсылка, ТолькоРасшифровкаПлатежа=Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ИСТИНА КАК ЕстьРазличия
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА
	|				ПоступлениеБДСРасшифровка.ОбъектРасчетов.Объект = &ПоступлениеБДС ТОГДА
	|					НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ
	|				ПоступлениеБДСРасшифровка.ОбъектРасчетов.Объект
	|		КОНЕЦ КАК Заказ,
	|		ПоступлениеБДСРасшифровка.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|		СУММА(ПоступлениеБДСРасшифровка.Сумма) КАК СуммаПоступление,
	|		СУММА(ПоступлениеБДСРасшифровка.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетовПоступление,
	|		СУММА(0) КАК СуммаСписание,
	|		СУММА(0) КАК СуммаВзаиморасчетовСписание,
	|		ПоступлениеБДСРасшифровка.Ссылка.БанковскийСчет КАК БанковскийСчетПоступление,
	|		ПоступлениеБДСРасшифровка.Ссылка.БанковскийСчетОтправитель КАК БанковскийСчетОтправительПоступление,
	|		ПоступлениеБДСРасшифровка.Ссылка.ДатаВходящегоДокумента КАК ДатаВходящегоДокументаПоступление,
	|		ПоступлениеБДСРасшифровка.Ссылка.НомерВходящегоДокумента КАК НомерВходящегоДокументаПоступление,
	|		NULL КАК БанковскийСчетПолучательСписание,
	|		NULL КАК БанковскийСчетСписание,
	|		NULL КАК ДатаВходящегоДокументаСписание,
	|		NULL КАК НомерВходящегоДокументаСписание
	|	ИЗ
	|		Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ПоступлениеБДСРасшифровка
	|	ГДЕ
	|		ПоступлениеБДСРасшифровка.Ссылка = &ПоступлениеБДС
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПоступлениеБДСРасшифровка.ВалютаВзаиморасчетов,
	|		ВЫБОР
	|			КОГДА
	|				ПоступлениеБДСРасшифровка.ОбъектРасчетов.Объект = &ПоступлениеБДС ТОГДА
	|					НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ
	|				ПоступлениеБДСРасшифровка.ОбъектРасчетов.Объект
	|		КОНЕЦ,
	|		ПоступлениеБДСРасшифровка.Ссылка.БанковскийСчет,
	|		ПоступлениеБДСРасшифровка.Ссылка.БанковскийСчетОтправитель,
	|		ПоступлениеБДСРасшифровка.Ссылка.ДатаВходящегоДокумента,
	|		ПоступлениеБДСРасшифровка.Ссылка.НомерВходящегоДокумента
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА
	|				СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.ОбъектРасчетов.Объект = &СписаниеБДС ТОГДА
	|					НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ
	|				СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.ОбъектРасчетов.Объект
	|		КОНЕЦ КАК Заказ,
	|		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|		0,
	|		0,
	|		СУММА(СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Сумма),
	|		СУММА(СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.СуммаВзаиморасчетов),
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.БанковскийСчетПолучатель,
	|		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.БанковскийСчет,
	|		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.ДатаВходящегоДокумента,
	|		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.НомерВходящегоДокумента
	|	ИЗ
	|		Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа
	|	ГДЕ
	|		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка = &СписаниеБДС
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВЫБОР
	|			КОГДА
	|				СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.ОбъектРасчетов.Объект = &СписаниеБДС ТОГДА
	|					НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ
	|				СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.ОбъектРасчетов.Объект
	|		КОНЕЦ,
	|		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.БанковскийСчет,
	|		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.ДатаВходящегоДокумента,
	|		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.НомерВходящегоДокумента,
	|		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.БанковскийСчетПолучатель) КАК РасшифровкаПоступлениеСписание
	|
	|СГРУППИРОВАТЬ ПО
	|	РасшифровкаПоступлениеСписание.Заказ,
	|	РасшифровкаПоступлениеСписание.ВалютаВзаиморасчетов
	|
	|ИМЕЮЩИЕ
	|	(СУММА(РасшифровкаПоступлениеСписание.СуммаПоступление) <> СУММА(РасшифровкаПоступлениеСписание.СуммаСписание)
	|		ИЛИ СУММА(РасшифровкаПоступлениеСписание.СуммаВзаиморасчетовПоступление) <> СУММА(РасшифровкаПоступлениеСписание.СуммаВзаиморасчетовСписание)
	|		ИЛИ НЕ &ТолькоРасшифровкаПлатежа
	|			И (МАКСИМУМ(РасшифровкаПоступлениеСписание.БанковскийСчетПоступление) <> МАКСИМУМ(РасшифровкаПоступлениеСписание.БанковскийСчетПолучательСписание)
	|				ИЛИ МАКСИМУМ(РасшифровкаПоступлениеСписание.БанковскийСчетОтправительПоступление) <> МАКСИМУМ(РасшифровкаПоступлениеСписание.БанковскийСчетСписание)
	|				ИЛИ МАКСИМУМ(РасшифровкаПоступлениеСписание.ДатаВходящегоДокументаПоступление) <> МАКСИМУМ(РасшифровкаПоступлениеСписание.ДатаВходящегоДокументаСписание)
	|				ИЛИ МАКСИМУМ(РасшифровкаПоступлениеСписание.НомерВходящегоДокументаПоступление) <> МАКСИМУМ(РасшифровкаПоступлениеСписание.НомерВходящегоДокументаСписание)))
	|";
	
	Запрос.УстановитьПараметр("ПоступлениеБДС", ДокументСсылка);
	Запрос.УстановитьПараметр("СписаниеБДС", ЗеркальныйПлатежСсылка);
	Запрос.УстановитьПараметр("ТолькоРасшифровкаПлатежа", ТолькоРасшифровкаПлатежа);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат Не Выборка.Следующий();
	
КонецФункции

// Приводит в соответствие расшифровку платежа в зеркальном СписаниеБДС,
// для операций между Организациями (Интеркампани).
//
// Параметры:
//	ДокументСсылка - ДокументСсылка.ПоступлениеБезналичныхДенежныхСредств - Документ поступления
//  ЗеркальныйПлатежОбъект - ДокументОбъект.СписаниеБезналичныхДенежныхСредств - Документ списания
//
// Возвращаемое значение:
//  Булево - Признак успеха операции
Функция ПривестиВСоответствиеЗеркальныйПлатеж(ДокументСсылка, ЗеркальныйПлатежОбъект) Экспорт
	
	Реквизиты = Новый Структура("РасшифровкаПлатежа, СуммаДокумента, БанковскийСчетОтправитель,
		|БанковскийСчет,ДатаВходящегоДокумента, НомерВходящегоДокумента");
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, Реквизиты);
	
	ЗеркальныйПлатежОбъект.СуммаДокумента = Реквизиты.СуммаДокумента;
	ЗеркальныйПлатежОбъект.БанковскийСчет = Реквизиты.БанковскийСчетОтправитель;
	ЗеркальныйПлатежОбъект.БанковскийСчетПолучатель = Реквизиты.БанковскийСчет;
	ЗеркальныйПлатежОбъект.ДатаВходящегоДокумента= Реквизиты.ДатаВходящегоДокумента;
	ЗеркальныйПлатежОбъект.НомерВходящегоДокумента= Реквизиты.НомерВходящегоДокумента;
	
	Если ЗначениеЗаполнено(ЗеркальныйПлатежОбъект.Ссылка)
		И СоответствуетЗеркальномуПлатежу(ДокументСсылка, ЗеркальныйПлатежОбъект.Ссылка, Истина) Тогда
		Возврат Истина;
	КонецЕсли;
	
	РасшифровкаПлатежа = Реквизиты.РасшифровкаПлатежа.Выгрузить();
	РасшифровкаПлатежаЗеркальный = ЗеркальныйПлатежОбъект.РасшифровкаПлатежа;
		
	Если РасшифровкаПлатежа.Количество() = 1 И РасшифровкаПлатежаЗеркальный.Количество() = 1 Тогда
		ЗаполнитьЗначенияСвойств(РасшифровкаПлатежаЗеркальный[0], РасшифровкаПлатежа[0], "ОбъектРасчетов, Сумма, СуммаВзаиморасчетов, ВалютаВзаиморасчетов");
		Возврат Истина;
	КонецЕсли;
		
	СтатьяПоУмолчанию = Справочники.СтатьиДвиженияДенежныхСредств.СтатьяДвиженияДенежныхСредствПоХозяйственнойОперации(ДокументСсылка.ХозяйственнаяОперация);
	Если Не ЗначениеЗаполнено(СтатьяПоУмолчанию) Тогда
		МассивСтатей = РасшифровкаПлатежаЗеркальный.ВыгрузитьКолонку("СтатьяДвиженияДенежныхСредств");
		МассивСтатей = ОбщегоНазначенияКлиентСервер.СвернутьМассив(МассивСтатей);

		Если МассивСтатей.Количество() = 1 Тогда
			СтатьяПоУмолчанию = МассивСтатей[0];
		КонецЕсли;
	КонецЕсли;	
	
	ЗаявкаПоУмолчанию = Неопределено;
	Если ЗеркальныйПлатежОбъект.ОплатаПоЗаявкам Тогда
		МассивЗаявок = РасшифровкаПлатежаЗеркальный.ВыгрузитьКолонку("ЗаявкаНаРасходованиеДенежныхСредств");
		МассивЗаявок = ОбщегоНазначенияКлиентСервер.СвернутьМассив(МассивЗаявок);

		Если МассивЗаявок.Количество() = 1 Тогда
			ЗаявкаПоУмолчанию = МассивЗаявок[0];
		ИначеЕсли МассивЗаявок.Количество() = 0 Тогда
			ЗаявкаПоУмолчанию = РасшифровкаПлатежаЗеркальный.ЗаявкаНаРасходованиеДенежныхСредств;
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не приведено в соответствие %1, 
					|не удалось заполнить заявки на расходование дс в расшифровке платежа.'"),ЗеркальныйПлатежОбъект.Ссылка));
			Возврат Ложь;

		КонецЕсли;
	КонецЕсли;
				
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ОбъектыРасчетов.Ссылка КАК ОбъектРасчетов,
	                      |	СУММА(РасшифровкаПлатежа.Сумма) КАК Сумма,
	                      |	СУММА(РасшифровкаПлатежа.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
	                      |	РасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	                      |	ВЫБОР
	                      |		КОГДА РасшифровкаПлатежа.ОбъектРасчетов.Объект ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
	                      |				ИЛИ РасшифровкаПлатежа.ОбъектРасчетов.Объект ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациями
	                      |			ТОГДА ВЫБОР
	                      |					КОГДА РасшифровкаПлатежа.ОбъектРасчетов.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка)
	                      |							ИЛИ РасшифровкаПлатежа.ОбъектРасчетов.Договор.СтатьяДвиженияДенежныхСредствПолучателя = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	                      |						ТОГДА &СтатьяПоУмолчанию
	                      |					ИНАЧЕ РасшифровкаПлатежа.ОбъектРасчетов.Договор.СтатьяДвиженияДенежныхСредствПолучателя
	                      |				КОНЕЦ
	                      |		ИНАЧЕ &СтатьяПоУмолчанию
	                      |	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств,
	                      |	&ЗаявкаПоУмолчанию КАК ЗаявкаНаРасходованиеДенежныхСредств
	                      |ИЗ
	                      |	Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
						  |			ПО РасшифровкаПлатежа.ОбъектРасчетов.Объект = ОбъектыРасчетов.Объект
						  |				И РасшифровкаПлатежа.ОбъектРасчетов <> ОбъектыРасчетов.Ссылка
						  |				И РасшифровкаПлатежа.ОбъектРасчетов.Организация <> ОбъектыРасчетов.Организация
						  |				И РасшифровкаПлатежа.ОбъектРасчетов.ТипРасчетов <> ОбъектыРасчетов.ТипРасчетов
	                      |ГДЕ
	                      |	РасшифровкаПлатежа.Ссылка = &Ссылка
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	РасшифровкаПлатежа.ВалютаВзаиморасчетов,
	                      |	ОбъектыРасчетов.Ссылка,
	                      |	ВЫБОР
	                      |		КОГДА РасшифровкаПлатежа.ОбъектРасчетов.Объект ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
	                      |				ИЛИ РасшифровкаПлатежа.ОбъектРасчетов.Объект ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациями
	                      |			ТОГДА ВЫБОР
	                      |					КОГДА РасшифровкаПлатежа.ОбъектРасчетов.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка)
	                      |							ИЛИ РасшифровкаПлатежа.ОбъектРасчетов.Договор.СтатьяДвиженияДенежныхСредствПолучателя = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	                      |						ТОГДА &СтатьяПоУмолчанию
	                      |					ИНАЧЕ РасшифровкаПлатежа.ОбъектРасчетов.Договор.СтатьяДвиженияДенежныхСредствПолучателя
	                      |				КОНЕЦ
	                      |		ИНАЧЕ &СтатьяПоУмолчанию
	                      |	КОНЕЦ");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("СтатьяПоУмолчанию",СтатьяПоУмолчанию);
	Запрос.УстановитьПараметр("ЗаявкаПоУмолчанию",ЗаявкаПоУмолчанию);
	
	РасшифровкаРезультат = Запрос.Выполнить().Выгрузить();
	Для Каждого Стр Из РасшифровкаРезультат Цикл
		Если Не ЗначениеЗаполнено(Стр.СтатьяДвиженияДенежныхСредств) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не приведено в соответствие %1, 
					|не удалось заполнить статьи движения дс в расшифровке платежа.'"),ЗеркальныйПлатежОбъект.Ссылка));
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	ЗеркальныйПлатежОбъект.РасшифровкаПлатежа.Загрузить(РасшифровкаРезультат);
	
	Возврат Истина;
						
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

#Область ОбработатьДанныеДляПереходаНаНовуюВерсию

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Документы.ПоступлениеБезналичныхДенежныхСредств.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "11.5.6.80";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("d33c4166-9139-4c17-821d-3b5540c6a1d2");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПоступлениеБезналичныхДенежныхСредств.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Заполняет реквизиты:
	|- ""Ставка НДС""
	|- ""Объект Расчетов""
	|- ""Идентификатор Документа""
	|- ""Настройка Счетов Учета""'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.ПоступлениеБезналичныхДенежныхСредств.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыСведений.ОтносительныеКурсыВалют.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Справочники.ДоговорыЭквайринга.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Справочники.ОбъектыРасчетов.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Справочники.СтавкиНДС.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Документы.ПоступлениеБезналичныхДенежныхСредств.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.Документы.ПоступлениеБезналичныхДенежныхСредств.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");

#КонецОбласти

#Область СгенерироватьОбъектыРасчетов

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Документы.ПоступлениеБезналичныхДенежныхСредств.СгенерироватьОбъектыРасчетов";
	Обработчик.Версия = "11.5.6.189";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("5801964a-e3ce-4436-9968-0646fde3c6da");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПоступлениеБезналичныхДенежныхСредств.ЗарегистрироватьДанныеДляГенерацииОбъектовРасчетов";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.ЗапускатьТолькоВГлавномУзле = Истина;
	Обработчик.Комментарий = НСтр("ru = 'Генерирует элементы справочника ""Объекты расчетов"".'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.ПоступлениеБезналичныхДенежныхСредств.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Справочники.ОбъектыРасчетов.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	

#КонецОбласти

КонецПроцедуры

// Регистрирует данные к обработке при переходе на новую версию.
// 
// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаОбъектов = "Документ.ПоступлениеБезналичныхДенежныхСредств";
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Дата УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Дата УБЫВ");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиСсылки();
	ОбъектыРасчетовСервер.ДополнитьДополнительныеИсточникиДанных(ПараметрыВыборки, ПустаяСсылка());
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоступлениеБезналичныхДенежныхСредств.Ссылка КАК Ссылка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	ГДЕ
	|		ИСТИНА В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК
	|					ПоступлениеБезналичныхДенежныхСредствРасшифровкаПлатежа
	|			ГДЕ
	|				ДанныеДокумента.Ссылка = ПоступлениеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка
	|				И ПоступлениеБезналичныхДенежныхСредствРасшифровкаПлатежа.УдалитьСтавкаНДС <> &ПустаяСтавкаНДС
	|				И ПоступлениеБезналичныхДенежныхСредствРасшифровкаПлатежа.СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	ГДЕ
	|		ИСТИНА В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК
	|					ПоступлениеБезналичныхДенежныхСредствРасшифровкаПлатежа
	|			ГДЕ
	|				ДанныеДокумента.Ссылка = ПоступлениеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка
	|				И ПоступлениеБезналичныхДенежныхСредствРасшифровкаПлатежа.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|				И ПоступлениеБезналичныхДенежныхСредствРасшифровкаПлатежа.УдалитьЗаказ НЕ В (&ПустыеЗначенияОбъектРасчетов))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.Проведен
	|		И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика)
	|		И ДанныеДокумента.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.Проведен
	|		И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации)
	|		И ДанныеДокумента.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.ИдентификаторДокумента = """"
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	ГДЕ
	|		ИСТИНА В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|			ГДЕ
	|				РасшифровкаПлатежа.Ссылка = ДанныеДокумента.Ссылка
	|				И РасшифровкаПлатежа.ВалютаВзаиморасчетов <> ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|				И (РасшифровкаПлатежа.КурсЧислительВзаиморасчетов = 0
	|				ИЛИ РасшифровкаПлатежа.КурсЗнаменательВзаиморасчетов = 0))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.ДоговорЭквайринга = ЗНАЧЕНИЕ(Справочник.ДоговорыЭквайринга.ПустаяСсылка)
	|		И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыПоПлатежнойКарте)
	|) КАК ПоступлениеБезналичныхДенежныхСредств";
	Запрос.УстановитьПараметр("ПустыеЗначенияОбъектРасчетов", ОбъектыРасчетовСервер.ПустыеЗначенияОбъектРасчетов());
	УчетНДСЛокализация.УстановитьПараметрЗапросаПустаяСтавкаНДСПеречислением(Запрос);
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = ПустаяСсылка().Метаданные().ПолноеИмя();
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Для Каждого Документ Из ОбновляемыеДанные Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Документ.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			ДокументОбъект = Документ.Ссылка.ПолучитьОбъект();
			
			ОбъектИзменен = Ложь;
			
			Если ДокументОбъект <> Неопределено Тогда
				
				МассивТЧ = Новый Массив();
				МассивТЧ.Добавить("РасшифровкаПлатежа");
				
				УчетНДСЛокализация.ЗаполнитьКолонкуТЧСтавкаНДС(ДокументОбъект, МассивТЧ, ОбъектИзменен);
				
				ОбъектыРасчетовСервер.ЗаполнитьОбъектыРасчетов(ДокументОбъект, ОбъектИзменен);
				
				ОбщегоНазначенияУТ.ЗаполнитьИдентификаторыДокумента(ДокументОбъект);
				
				Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОплатыПоПлатежнойКарте
					И Не ЗначениеЗаполнено(ДокументОбъект.ДоговорЭквайринга) Тогда
					
					ДокументОбъект.ДоговорЭквайринга = Справочники.ДоговорыЭквайринга.ДоговорПоУмолчанию(
						ДокументОбъект.Организация, ДокументОбъект.Контрагент, ДокументОбъект.Валюта);
					
					Если Не ЗначениеЗаполнено(ДокументОбъект.ДоговорЭквайринга) Тогда
						
						ДоговорОбъект = Справочники.ДоговорыЭквайринга.СоздатьЭлемент();
						СтрокаНаименование = Строка(ДокументОбъект.Контрагент) + ", " + Строка(ДокументОбъект.Организация);
						ДоговорОбъект.Наименование                       = Лев(СтрокаНаименование, 50);
						ДоговорОбъект.Организация                        = ДокументОбъект.Организация;
						ДоговорОбъект.БанковскийСчет                     = ДокументОбъект.БанковскийСчет;
						ДоговорОбъект.Контрагент                         = ДокументОбъект.Контрагент;
						
						Если Не ЗначениеЗаполнено(ДокументОбъект.Партнер) Тогда
							ДоговорОбъект.Партнер = ДенежныеСредстваСервер.ПолучитьПартнераПоКонтрагенту(
																							ДоговорОбъект.Контрагент);
						Иначе
							ДоговорОбъект.Партнер = ДокументОбъект.Партнер;
						КонецЕсли;
						
						ДоговорОбъект.ИспользуютсяЭквайринговыеТерминалы = Ложь;
						ДоговорОбъект.ДетальнаяСверкаТранзакций          = Ложь;
						ДоговорОбъект.СрокИсполненияПлатежа              = 1;
						ДоговорОбъект.СпособОтраженияКомиссии            = Перечисления.СпособыОтраженияЭквайринговойКомиссии.ВОтчете;
						ДоговорОбъект.Статус                             = Перечисления.СтатусыДоговоровКонтрагентов.Действует;
						ДоговорОбъект.Согласован                         = Истина;
						ДоговорОбъект.Комментарий                        = Нстр("ru = 'Создан при обновлении информационной базы.'");
						
						ДоговорОбъект.Записать();
						ДокументОбъект.ДоговорЭквайринга = ДоговорОбъект.Ссылка;
					КонецЕсли;
					ОбъектИзменен = Истина;
				КонецЕсли;
				
				Для каждого СтрокаТЧ Из ДокументОбъект.РасшифровкаПлатежа Цикл
					Если СтрокаТЧ.КурсЧислительВзаиморасчетов = 0 Или СтрокаТЧ.КурсЗнаменательВзаиморасчетов = 0 Тогда
						
						КурсИКратность = ДенежныеСредстваСервер.КурсЧислительИКурсЗнаменательВзаиморасчетов(
							ДокументОбъект.Валюта,
							СтрокаТЧ.ВалютаВзаиморасчетов,
							ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(ДокументОбъект.Организация),
							ДокументОбъект.Дата);
						СтрокаТЧ.КурсЧислительВзаиморасчетов = КурсИКратность.КурсЧислитель;
						СтрокаТЧ.КурсЗнаменательВзаиморасчетов = КурсИКратность.КурсЗнаменатель;
						
						ОбъектИзменен = Истина;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если ОбъектИзменен Или ДокументОбъект <> Неопределено И ДокументОбъект.Модифицированность() Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Документ.Ссылка);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), Документ.Ссылка);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

Процедура ЗарегистрироватьДанныеДляГенерацииОбъектовРасчетов(Параметры) Экспорт
	ОбъектыРасчетовСервер.ЗарегистрироватьДанныеДляГенерацииОбъектовРасчета(ПустаяСсылка(), Параметры);
КонецПроцедуры

Процедура СгенерироватьОбъектыРасчетов(Параметры) Экспорт
	ОбъектыРасчетовСервер.СгенерироватьВсеОбъектыРасчетов(Параметры);
КонецПроцедуры

Функция ТекстЗапросаРегистрацияДанныхДляГенерацииПустогоОбъектаРасчетов() Экспорт
	
	ВыборкаПоляКонтрагент = "
	|	ВЫБОР 
	|		КОГДА ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации)
	|			ИЛИ ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации)
	|				ТОГДА ИсточникДанных.БанковскийСчетОтправитель.Владелец
	|		ИНАЧЕ
	|			ИсточникДанных.Контрагент
	|	КОНЕЦ";
	
	ТекстЗапроса = ОбъектыРасчетовСервер.ШаблонГенерацияПустогоОбъектаРасчетов(ПустаяСсылка(), ВыборкаПоляКонтрагент);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПолучениеДанныхДляГенерацииПустогоОбъектаРасчетов() Экспорт
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
	|			ИЛИ ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|		КОГДА ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации)
	|			ИЛИ ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|	КОНЕЦ КАК ТипРасчетов,
	|	ИсточникДанных.Организация,
	|	ТЧРасшифровкаПлатежа.Партнер,
	|	ВЫБОР
	|		КОГДА
	|			ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации)
	|			ИЛИ	ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации)
	|				ТОГДА ИсточникДанных.БанковскийСчетОтправитель.Владелец
	|		ИНАЧЕ ИсточникДанных.Контрагент
	|	КОНЕЦ,
	|	ИсточникДанных.Договор,
	|	ИсточникДанных.НаправлениеДеятельности,
	|	ТЧРасшифровкаПлатежа.ВалютаВзаиморасчетов
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ТЧРасшифровкаПлатежа
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеБезналичныхДенежныхСредств КАК ИсточникДанных
	|		ПО ТЧРасшифровкаПлатежа.Ссылка = ИсточникДанных.Ссылка
	|ГДЕ
	|	ТЧРасшифровкаПлатежа.УдалитьЗаказ В (&ПустыеЗначенияОбъектРасчетов)
	|	И (
	|		&УсловиеИзменяетРасчеты
	|	)
	|	И ИсточникДанных.Проведен
	|	И ВЫБОР
	|		КОГДА
	|			ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации)
	|			ИЛИ	ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации)
	|			ТОГДА ИсточникДанных.БанковскийСчетОтправитель.Владелец
	|		ИНАЧЕ ИсточникДанных.Контрагент
	|	КОНЕЦ В (&ОбрабатываемыеДанные)";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеИзменяетРасчеты", ПараметрыВзаиморасчеты()[0].ИзменяетРасчетыСтрокой);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
