#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("СуммыДокументовВВалютахУчета");
	МеханизмыДокумента.Добавить("УчетНДС");
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка - ссылка на документ, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов:
//     * Таблица<ИмяРегистра> - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Запрос			= Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		////////////////////////////////////////////////////////////////////////////
		// Создадим запрос инициализации движений
		
		ЗаполнитьПараметрыИнициализации(Запрос, Документ);
		
		////////////////////////////////////////////////////////////////////////////
		// Сформируем текст запроса
		СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса, Регистры);
		
		ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДанныеОснованийСчетовФактур(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаЗаполнениеТоваровСФВыданный(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДвиженияПоНДС(Запрос, ТекстыЗапроса, Регистры);
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	БизнесПроцессы.Задание.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	Команда = Документы.ЗаписьКнигиПродаж.ДобавитьКомандуСоздатьНаОснованииИсправлениеПрочегоНачисленияНДС(КомандыСозданияНаОсновании);
	Если Команда <> Неопределено Тогда
		ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(Команда, "ХозяйственнаяОперация", 
					Перечисления.ХозяйственныеОперации.ПрочееНачислениеНДС, ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;
	
КонецПроцедуры

// Добавляет команду создания документа "Запись книги продаж".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Функция ДобавитьКомандуСоздатьНаОснованииИсправлениеПрочегоНачисленияНДС(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетФактураВыданный) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Обработчик = "УчетНДСРФКлиент.ИсправлениеПрочегоНачисленияНДС";
		КомандаСоздатьНаОсновании.Идентификатор = "ИсправлениеПрочегоНачисленияНДС";
		КомандаСоздатьНаОсновании.Представление = НСтр("ru = 'Исправление прочего начисления НДС'");
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

// Добавляет команду создания документа "Запись книги продаж".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.ЗаписьКнигиПродаж) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ЗаписьКнигиПродаж.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ЗаписьКнигиПродаж);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ФормироватьОтчетностьПоНДС";
		
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
КонецПроцедуры

// Заполняет таблицу реквизитов, зависимых от хозяйственной операции
//
// Параметры:
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - хозяйственная операция соглашения
//	МассивВсехРеквизитов - Массив - реквизиты, которые не зависят от хозяйственной операции
//	МассивРеквизитовОперации - Массив - реквизиты, которые зависят от хозяйственной операции.
//
Процедура ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(ХозяйственнаяОперация, МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("ДокументРасчетов");
	МассивВсехРеквизитов.Добавить("ИсправляемыйДокумент");
	МассивВсехРеквизитов.Добавить("Грузоотправитель");
	МассивВсехРеквизитов.Добавить("Грузополучатель");
	МассивВсехРеквизитов.Добавить("Грузополучатель");
	МассивВсехРеквизитов.Добавить("Руководитель");
	МассивВсехРеквизитов.Добавить("ГлавныйБухгалтер");
	МассивВсехРеквизитов.Добавить("ЗаписьДополнительногоЛиста");
	МассивВсехРеквизитов.Добавить("КорректируемыйПериод");
	
	МассивВсехРеквизитов.Добавить("Ценности.Номенклатура");
	МассивВсехРеквизитов.Добавить("Ценности.Количество");
	МассивВсехРеквизитов.Добавить("Ценности.Цена");
	МассивВсехРеквизитов.Добавить("Ценности.НомерГТД");
	
	МассивРеквизитовОперации = Новый Массив;
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочееНачислениеНДС Тогда
		
		МассивРеквизитовОперации.Добавить("Грузоотправитель");
		МассивРеквизитовОперации.Добавить("Грузополучатель");
		МассивРеквизитовОперации.Добавить("Грузополучатель");
		МассивРеквизитовОперации.Добавить("Руководитель");
		МассивРеквизитовОперации.Добавить("ГлавныйБухгалтер");
		
		МассивРеквизитовОперации.Добавить("ЗаписьДополнительногоЛиста");
		МассивРеквизитовОперации.Добавить("КорректируемыйПериод");
		
		МассивРеквизитовОперации.Добавить("Ценности.Номенклатура");
		МассивРеквизитовОперации.Добавить("Ценности.Количество");
		МассивРеквизитовОперации.Добавить("Ценности.Цена");
		МассивРеквизитовОперации.Добавить("Ценности.НомерГТД");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИсправлениеПрочегоНачисленияНДС Тогда
		
		МассивРеквизитовОперации.Добавить("ИсправляемыйДокумент");
		
		МассивРеквизитовОперации.Добавить("Грузоотправитель");
		МассивРеквизитовОперации.Добавить("Грузополучатель");
		МассивРеквизитовОперации.Добавить("Грузополучатель");
		МассивРеквизитовОперации.Добавить("Руководитель");
		МассивРеквизитовОперации.Добавить("ГлавныйБухгалтер");
		
		МассивРеквизитовОперации.Добавить("Ценности.Номенклатура");
		МассивРеквизитовОперации.Добавить("Ценности.Количество");
		МассивРеквизитовОперации.Добавить("Ценности.Цена");
		МассивРеквизитовОперации.Добавить("Ценности.НомерГТД");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВосстановлениеНДС Тогда
		
		МассивРеквизитовОперации.Добавить("ДокументРасчетов");
		МассивРеквизитовОперации.Добавить("ЗаписьДополнительногоЛиста");
		МассивРеквизитовОперации.Добавить("КорректируемыйПериод");
		
	КонецЕсли;
	
КонецПроцедуры

// Заполняет табличную часть "Расхождения"
//
// Параметры:
// 	Объект - ДокументОбъект.ЗаписьКнигиПродаж - Документ для которого необходимо заполнить расхождения.
//
Процедура ЗаполнитьРасхождения(Объект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЗаписьКнигиПродаж.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ДанныеПоследнегоИсправления
	|ИЗ
	|	Документ.ЗаписьКнигиПродаж КАК ЗаписьКнигиПродаж
	|ГДЕ
	|	ЗаписьКнигиПродаж.Проведен
	|	И ЗаписьКнигиПродаж.Ссылка <> &Ссылка
	|	И ЗаписьКнигиПродаж.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеПрочегоНачисленияНДС)
	|	И ЗаписьКнигиПродаж.ИсправляемыйДокумент = &ИсправляемыйДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаписьКнигиПродаж.МоментВремени УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЦенности.Номенклатура	КАК Номенклатура,
	|	ТаблицаЦенности.ВидЦенности		КАК ВидЦенности,
	|	ТаблицаЦенности.Сумма			КАК Сумма,
	|	ТаблицаЦенности.СтавкаНДС		КАК СтавкаНДС,
	|	ТаблицаЦенности.СуммаНДС		КАК СуммаНДС,
	|	ТаблицаЦенности.НомерГТД		КАК НомерГТД,
	|	ТаблицаЦенности.КодТНВЭД		КАК КодТНВЭД,
	|	ТаблицаЦенности.Событие			КАК Событие
	|ПОМЕСТИТЬ ИсходныеДанные
	|ИЗ
	|	Документ.ЗаписьКнигиПродаж.Ценности КАК ТаблицаЦенности
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеПоследнегоИсправления КАК ДанныеПоследнегоИсправления
	|		ПО ТаблицаЦенности.Ссылка = ДанныеПоследнегоИсправления.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаЦенности.Номенклатура	КАК Номенклатура,
	|	ТаблицаЦенности.ВидЦенности		КАК ВидЦенности,
	|	ТаблицаЦенности.Сумма			КАК Сумма,
	|	ТаблицаЦенности.СтавкаНДС		КАК СтавкаНДС,
	|	ТаблицаЦенности.СуммаНДС		КАК СуммаНДС,
	|	ТаблицаЦенности.НомерГТД		КАК НомерГТД,
	|	ТаблицаЦенности.КодТНВЭД		КАК КодТНВЭД,
	|	ТаблицаЦенности.Событие			КАК Событие
	|ИЗ
	|	Документ.ЗаписьКнигиПродаж.Ценности КАК ТаблицаЦенности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеПоследнегоИсправления КАК ДанныеПоследнегоИсправления
	|		ПО ИСТИНА
	|ГДЕ
	|	ДанныеПоследнегоИсправления.Ссылка ЕСТЬ NULL
	|	И ТаблицаЦенности.Ссылка = &ИсправляемыйДокумент
	|;
	|
	|ВЫБРАТЬ
	|	НовыеДанные.Номенклатура		КАК Номенклатура,
	|	НовыеДанные.ВидЦенности			КАК ВидЦенности,
	|	НовыеДанные.Сумма				КАК Сумма,
	|	НовыеДанные.СтавкаНДС			КАК СтавкаНДС,
	|	НовыеДанные.СуммаНДС			КАК СуммаНДС,
	|	НовыеДанные.НомерГТД			КАК НомерГТД,
	|	НовыеДанные.КодТНВЭД			КАК КодТНВЭД,
	|	НовыеДанные.Событие				КАК Событие
	|ПОМЕСТИТЬ НовыеДанныеИзТаблицы
	|ИЗ
	|	&НовыеДанные КАК НовыеДанные
	|;
	|
	|ВЫБРАТЬ
	|	ИсходныеДанные.Номенклатура		КАК Номенклатура,
	|	ИсходныеДанные.ВидЦенности		КАК ВидЦенности,
	|	-ИсходныеДанные.Сумма			КАК Сумма,
	|	ИсходныеДанные.СтавкаНДС		КАК СтавкаНДС,
	|	-ИсходныеДанные.СуммаНДС		КАК СуммаНДС,
	|	ИсходныеДанные.НомерГТД			КАК НомерГТД,
	|	ИсходныеДанные.КодТНВЭД			КАК КодТНВЭД,
	|	ИсходныеДанные.Событие			КАК Событие
	|ПОМЕСТИТЬ ДанныеДляРасхождения
	|ИЗ
	|	ИсходныеДанные КАК ИсходныеДанные
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НовыеДанныеИзТаблицы.Номенклатура		КАК Номенклатура,
	|	НовыеДанныеИзТаблицы.ВидЦенности		КАК ВидЦенности,
	|	НовыеДанныеИзТаблицы.Сумма				КАК Сумма,
	|	НовыеДанныеИзТаблицы.СтавкаНДС			КАК СтавкаНДС,
	|	НовыеДанныеИзТаблицы.СуммаНДС			КАК СуммаНДС,
	|	НовыеДанныеИзТаблицы.НомерГТД			КАК НомерГТД,
	|	НовыеДанныеИзТаблицы.КодТНВЭД			КАК КодТНВЭД,
	|	НовыеДанныеИзТаблицы.Событие			КАК Событие
	|ИЗ
	|	НовыеДанныеИзТаблицы КАК НовыеДанныеИзТаблицы
	|;
	|
	|ВЫБРАТЬ
	|	ДанныеДляРасхождения.Номенклатура		КАК Номенклатура,
	|	ДанныеДляРасхождения.ВидЦенности		КАК ВидЦенности,
	|	ДанныеДляРасхождения.СтавкаНДС			КАК СтавкаНДС,
	|	ДанныеДляРасхождения.НомерГТД			КАК НомерГТД,
	|	ДанныеДляРасхождения.КодТНВЭД			КАК КодТНВЭД,
	|	ДанныеДляРасхождения.Событие			КАК Событие,
	|	СУММА(ДанныеДляРасхождения.Сумма)		КАК Сумма,
	|	СУММА(ДанныеДляРасхождения.СуммаНДС)	КАК СуммаНДС
	|ИЗ
	|	ДанныеДляРасхождения
	|	
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДляРасхождения.Номенклатура,
	|	ДанныеДляРасхождения.ВидЦенности,
	|	ДанныеДляРасхождения.СтавкаНДС,
	|	ДанныеДляРасхождения.НомерГТД,
	|	ДанныеДляРасхождения.КодТНВЭД,
	|	ДанныеДляРасхождения.Событие
	|ИМЕЮЩИЕ
	|	СУММА(ДанныеДляРасхождения.Сумма) <> 0
	|	ИЛИ СУММА(ДанныеДляРасхождения.СуммаНДС) <> 0
	|";
	Запрос.УстановитьПараметр("НовыеДанные",          Объект.Ценности.Выгрузить());
	Запрос.УстановитьПараметр("ИсправляемыйДокумент", Объект.ИсправляемыйДокумент);
	Запрос.УстановитьПараметр("Ссылка",               Объект.Ссылка);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	ВыборкаРасхождения = Результаты[Результаты.ВГраница()].Выбрать();
	
	Пока ВыборкаРасхождения.Следующий() Цикл
		НоваяСтрока = Объект.Расхождения.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаРасхождения);
		
	КонецЦикла;
	
КонецПроцедуры


// Инициализирует параметры регистрации счетов-фактур (выданных)
//
// Параметры:
//  Объект		- ДокументОбъект.ЗаписьКнигиПродаж, ДанныеФормыСтруктура	- документ, для которого необходимо получить параметры.
//
// Возвращаемое значение:
//  Структура - структура параметров, см. УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурВыданных().
//
Функция ПараметрыРегистрацииСчетовФактурВыданных(Объект) Экспорт
	
	ПараметрыРегистрации = УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурВыданных();
	ПараметрыРегистрации.Ссылка = Объект.Ссылка;
	ПараметрыРегистрации.Дата = Объект.Дата;
	ПараметрыРегистрации.Организация = Объект.Организация;
	ПараметрыРегистрации.Контрагент = Объект.Контрагент;
	ПараметрыРегистрации.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка();
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИсправлениеПрочегоНачисленияНДС Тогда
		ПараметрыРегистрации.ИсправлениеОшибок = Истина;
	Иначе
		ПараметрыРегистрации.ПрочееНачислениеНДС = Истина;
	КонецЕсли;
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДанныеДокумента.Дата КАК Период,
		|	ДанныеДокумента.Организация КАК Организация,
		|	ДанныеДокумента.Контрагент КАК Контрагент,
		|	ДанныеДокумента.ДокументРасчетов КАК ДокументРасчетов,
		|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ДанныеДокумента.КодВидаОперации КАК КодВидаОперации,
		|	ДанныеДокумента.Валюта КАК Валюта,
		|	ДанныеДокумента.ЗаписьДополнительногоЛиста КАК ЗаписьДополнительногоЛиста,
		|	ДанныеДокумента.ФормироватьСторнирующиеЗаписиДопЛистовВручную КАК ФормироватьСторнирующиеЗаписиДопЛистовВручную,
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.ЗаписьДополнительногоЛиста
		|			ТОГДА ДанныеДокумента.КорректируемыйПериод
		|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|	КОНЕЦ КАК КорректируемыйПериод
		|ИЗ
		|	Документ.ЗаписьКнигиПродаж КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",							Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация",					Реквизиты.Организация);
	Запрос.УстановитьПараметр("Контрагент",						Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("СчетФактура",					?(ЗначениеЗаполнено(Реквизиты.ДокументРасчетов), Реквизиты.ДокументРасчетов, ДокументСсылка));
	Запрос.УстановитьПараметр("Валюта",							Реквизиты.Валюта);
	Запрос.УстановитьПараметр("КодВидаОперации",				Реквизиты.КодВидаОперации);
	Запрос.УстановитьПараметр("ЗаписьДополнительногоЛиста",		Реквизиты.ЗаписьДополнительногоЛиста);
	Запрос.УстановитьПараметр("КорректируемыйПериод",			Реквизиты.КорректируемыйПериод);
	Запрос.УстановитьПараметр("ВалютаРеглУчета",				ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Реквизиты.Организация));
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",			Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("ЭтоКорректировкаНДС",			ЗначениеЗаполнено(Реквизиты.ДокументРасчетов));
	Запрос.УстановитьПараметр("ТипСчетаФактуры",				ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураВыданный"));
	Запрос.УстановитьПараметр("ТипыНоменклатурыТовар",			УчетНДСУПСлужебный.ТипыНоменклатурыТовар());
	Запрос.УстановитьПараметр("ИдентификаторНеиспользуемойФинЗаписи", ПроведениеДокументов.ИдентификаторНеиспользуемойФинЗаписи());
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСЗаписиКнигиПродаж";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса);

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Контрагент КАК Покупатель,
	|	&СчетФактура КАК СчетФактура,
	|	ТаблицаЦенности.ВидЦенности КАК ВидЦенности,
	|	ТаблицаЦенности.Событие КАК Событие,
	|	&Период КАК ДатаСобытия,
	|	ТаблицаЦенности.СтавкаНДС.ПеречислениеСтавкаНДС КАК СтавкаНДС,
	|	СУММА(Суммы.БазаНДСРегл) КАК СуммаБезНДС,
	|	СУММА(Суммы.СуммаНДСРегл) КАК НДС,
	|	&ЗаписьДополнительногоЛиста КАК ЗаписьДополнительногоЛиста,
	|	&КорректируемыйПериод КАК КорректируемыйПериод,
	|	ВЫБОР
	|		КОГДА &ЗаписьДополнительногоЛиста 
	|				И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВосстановлениеНДС)
	|			ТОГДА ТаблицаЦенности.СторнирующаяЗаписьДопЛиста
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СторнирующаяЗаписьДопЛиста,
	|	НЕОПРЕДЕЛЕНО КАК НомерДокументаОплаты,
	|	НЕОПРЕДЕЛЕНО КАК ДатаДокументаОплаты,
	|	ТаблицаЦенности.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&КодВидаОперации КАК КодВидаОперации
	|ИЗ
	|	Документ.ЗаписьКнигиПродаж.Ценности КАК ТаблицаЦенности
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК Суммы
	|	ПО
	|		ТаблицаЦенности.Ссылка = Суммы.Ссылка
	|		И ТаблицаЦенности.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|ГДЕ
	|	ТаблицаЦенности.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочееНачислениеНДС),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВосстановлениеНДС))
	|	
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЦенности.СтавкаНДС,
	|	ТаблицаЦенности.ВидЦенности,
	|	ТаблицаЦенности.Событие,
	|	ТаблицаЦенности.НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА &ЗаписьДополнительногоЛиста 
	|			И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВосстановлениеНДС)
	|			ТОГДА ТаблицаЦенности.СторнирующаяЗаписьДопЛиста
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Контрагент КАК Покупатель,
	|	&СчетФактура КАК СчетФактура,
	|	ТаблицаЦенности.ВидЦенности КАК ВидЦенности,
	|	ТаблицаЦенности.Событие КАК Событие,
	|	&Период КАК ДатаСобытия,
	|	ТаблицаЦенности.СтавкаНДС.ПеречислениеСтавкаНДС КАК СтавкаНДС,
	|	0 КАК СуммаБезНДС,
	|	0 КАК НДС,
	|	&ЗаписьДополнительногоЛиста КАК ЗаписьДополнительногоЛиста,
	|	&КорректируемыйПериод КАК КорректируемыйПериод,
	|	ВЫБОР
	|		КОГДА &ЗаписьДополнительногоЛиста 
	|				И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВосстановлениеНДС)
	|			ТОГДА ТаблицаЦенности.СторнирующаяЗаписьДопЛиста
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СторнирующаяЗаписьДопЛиста,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, ДокументыОплаты.ДокументОплаты.Номер) КАК НомерДокументаОплаты,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДокументыОплаты.ДокументОплаты.Дата) КАК ДатаДокументаОплаты,
	|	ТаблицаЦенности.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&КодВидаОперации КАК КодВидаОперации
	|ИЗ
	|	Документ.ЗаписьКнигиПродаж.Ценности КАК ТаблицаЦенности
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ЗаписьКнигиПродаж.ДокументыОплаты КАК ДокументыОплаты
	|	ПО
	|		ТаблицаЦенности.Ссылка = ДокументыОплаты.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ПО
	|		ДанныеПервичныхДокументов.Организация = &Организация
	|		И ДокументыОплаты.ДокументОплаты = ДанныеПервичныхДокументов.Документ
	|ГДЕ
	|	ТаблицаЦенности.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочееНачислениеНДС),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВосстановлениеНДС))
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДвиженияПоНДС(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияПоНДС";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейДвиженийПоНДС.Исходящий) КАК ТипЗаписи,
	|	&Контрагент КАК Контрагент,
	|	&СчетФактура КАК СчетФактура,
	|	ТаблицаЦенности.ВидЦенности КАК ВидЦенности,
	|	ТаблицаЦенности.СтавкаНДС КАК СтавкаНДС,
	|	Суммы.БазаНДСРегл КАК СуммаБезНДС,
	|	Суммы.СуммаНДСРегл КАК НДС,
	|	Суммы.СуммаНДСУпр КАК НДСУпр,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	&ИдентификаторНеиспользуемойФинЗаписи КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации,
	|	ЛОЖЬ КАК Сторно
	|ИЗ
	|	Документ.ЗаписьКнигиПродаж.Ценности КАК ТаблицаЦенности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК Суммы
	|	ПО
	|		ТаблицаЦенности.Ссылка = Суммы.Ссылка
	|		И ТаблицаЦенности.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|
	|ГДЕ
	|	ТаблицаЦенности.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочееНачислениеНДС),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВосстановлениеНДС))
	|
	|";
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции


Процедура СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса, Регистры = Неопределено) Экспорт
	
	ТекстЗапросаДанных = "
	|ВЫБРАТЬ
	|	""Ценности"" КАК ИсточникДанных,
	|	ЛОЖЬ КАК РаспределятьОбщуюСумму,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Ссылка.Дата КАК Дата,
	|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
	|	ТаблицаДокумента.Ссылка.Валюта КАК ВалютаДокумента,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаВзаиморасчетов,
	|	ТаблицаДокумента.Ссылка.Дата КАК ПериодБазыНДС,
	|
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.Сумма КАК СуммаБезНДС,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	0 КАК СуммаВзаиморасчетов,
	|	0 КАК СуммаНДСВзаиморасчетов,
	|
	|	ЛОЖЬ КАК ОтражаетсяВРасчетах,
	|	НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	ЛОЖЬ КАК ПересчитыватьПоДаннымРасчетов
	|
	|ИЗ
	|	Документ.ЗаписьКнигиПродаж.Ценности КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Расхождения"" КАК ИсточникДанных,
	|	ЛОЖЬ КАК РаспределятьОбщуюСумму,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Ссылка.Дата КАК Дата,
	|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
	|	ТаблицаДокумента.Ссылка.Валюта КАК ВалютаДокумента,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаВзаиморасчетов,
	|	ТаблицаДокумента.Ссылка.Дата КАК ПериодБазыНДС,
	|
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.Сумма КАК СуммаБезНДС,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	0 КАК СуммаВзаиморасчетов,
	|	0 КАК СуммаНДСВзаиморасчетов,
	|
	|	ЛОЖЬ КАК ОтражаетсяВРасчетах,
	|	НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	ЛОЖЬ КАК ПересчитыватьПоДаннымРасчетов
	|
	|ИЗ
	|	Документ.ЗаписьКнигиПродаж.Расхождения КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&Ссылка)
	|
	|";
	
	РегистрыСведений.СуммыДокументовВВалютахУчета.СформироватьПоДаннымДокумента(
		Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаДанных);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаДанныеОснованийСчетовФактур(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДанныеОснованийСчетовФактур";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 	
	
	СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Ценности.Ссылка.Дата КАК Период,
	|	&ТипСчетаФактуры КАК ТипСчетаФактуры,
	|	Ценности.ВидЦенности КАК ВидЦенности,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(Ценности.Номенклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар) 
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга) 
	|	КОНЕЦ КАК ТипЗапасов,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	Ценности.НомерГТД КАК НомерГТД,
	|	Ценности.КодТНВЭД КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА Ценности.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УменьшениеСуммы,
	|
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаСчетаФактурыКомиссионера,
	|	НЕОПРЕДЕЛЕНО КАК ПокупательКомиссионногоТовара,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактураВыданныйКомиссионером,
	|
	|	СУММА(Суммы.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(Суммы.СуммаНДС) КАК СуммаНДС,
	|	СУММА(Суммы.СуммаБезНДСРегл) КАК СуммаБезНДСРегл,
	|	СУММА(Суммы.БазаНДСРегл) КАК БазаНДСРегл,
	|	СУММА(Суммы.СуммаНДСРегл) КАК СуммаНДСРегл,
	|
	|	Ценности.Ссылка.Дата КАК Дата,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС) КАК НалогообложениеНДС,
	|	Ценности.Ссылка.Валюта КАК Валюта,
	|	Ценности.Ссылка.Организация КАК Организация,
	|	Ценности.Ссылка.Подразделение КАК Подразделение,
	|	Ценности.Ссылка.Контрагент КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО КАК Договор,
	|	Ценности.Ссылка.Грузоотправитель КАК Грузоотправитель,
	|	Ценности.Ссылка.Грузополучатель КАК Грузополучатель,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	ЛОЖЬ КАК ИсправлениеОшибок,
	|	ЛОЖЬ КАК КорректировкаПоСогласованиюСторон,
	|	НЕОПРЕДЕЛЕНО КАК КорректируемыйДокумент
	|ИЗ
	|	Документ.ЗаписьКнигиПродаж.Ценности КАК Ценности
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК Суммы
	|	ПО 
	|		Ценности.Ссылка = Суммы.Ссылка
	|		И Ценности.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|ГДЕ
	|	Ценности.Ссылка = &Ссылка
	|	И Ценности.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочееНачислениеНДС)
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.ВидЦенности,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(Ценности.Номенклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар) 
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга) 
	|	КОНЕЦ,
	|	Ценности.СтавкаНДС,
	|	Ценности.НомерГТД,
	|	Ценности.КодТНВЭД,
	|	ВЫБОР
	|		КОГДА Ценности.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Расхождения.Ссылка.Дата КАК Период,
	|	&ТипСчетаФактуры КАК ТипСчетаФактуры,
	|	Расхождения.ВидЦенности КАК ВидЦенности,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Расхождения.Номенклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|	КОНЕЦ КАК ТипЗапасов,
	|	Расхождения.СтавкаНДС КАК СтавкаНДС,
	|	Расхождения.НомерГТД КАК НомерГТД,
	|	Расхождения.КодТНВЭД КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА Расхождения.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УменьшениеСуммы,
	|
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаСчетаФактурыКомиссионера,
	|	НЕОПРЕДЕЛЕНО КАК ПокупательКомиссионногоТовара,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактураВыданныйКомиссионером,
	|
	|	СУММА(Суммы.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(Суммы.СуммаНДС) КАК СуммаНДС,
	|	СУММА(Суммы.СуммаБезНДСРегл) КАК СуммаБезНДСРегл,
	|	СУММА(Суммы.БазаНДСРегл) КАК БазаНДСРегл,
	|	СУММА(Суммы.СуммаНДСРегл) КАК СуммаНДСРегл,
	|	
	|	Расхождения.Ссылка.Дата КАК Дата,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС) КАК НалогообложениеНДС,
	|	Расхождения.Ссылка.Валюта КАК Валюта,
	|	Расхождения.Ссылка.Организация КАК Организация,
	|	Расхождения.Ссылка.Подразделение КАК Подразделение,
	|	Расхождения.Ссылка.Контрагент КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО КАК Договор,
	|	Расхождения.Ссылка.Грузоотправитель КАК Грузоотправитель,
	|	Расхождения.Ссылка.Грузополучатель КАК Грузополучатель,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	ИСТИНА КАК ИсправлениеОшибок,
	|	ЛОЖЬ КАК КорректировкаПоСогласованиюСторон,
	|	Расхождения.Ссылка.ИсправляемыйДокумент КАК КорректируемыйДокумент
	|ИЗ
	|	Документ.ЗаписьКнигиПродаж.Расхождения КАК Расхождения
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК Суммы
	|	ПО
	|		Расхождения.Ссылка = Суммы.Ссылка
	|		И Расхождения.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|ГДЕ
	|	Расхождения.Ссылка = &Ссылка
	|	И Расхождения.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеПрочегоНачисленияНДС)
	|
	|СГРУППИРОВАТЬ ПО
	|	Расхождения.Ссылка,
	|	&ТипСчетаФактуры,
	|	Расхождения.ВидЦенности,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Расхождения.Номенклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|	КОНЕЦ,
	|	Расхождения.СтавкаНДС,
	|	Расхождения.НомерГТД,
	|	Расхождения.КодТНВЭД,
	|	ВЫБОР
	|		КОГДА Расхождения.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЗаполнениеТоваровСФВыданный(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЗаполнениеТоваровСФВыданный";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СчетФактураВыданныйДокументыОснования.Ссылка КАК ИсходныйСчетФактура,
	|	Ценности.Номенклатура КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК НоменклатураНабора,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаНабора,
	|	ВЫБОР
	|		КОГДА
	|			Ценности.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		ТОГДА
	|			Ценности.ВидЦенности
	|		ИНАЧЕ
	|			""""
	|	КОНЕЦ КАК Содержание,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(Ценности.Номенклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар) 
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга) 
	|	КОНЕЦ КАК ТипЗапасов,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	Ценности.НомерГТД КАК НомерГТД,
	|	Ценности.КодТНВЭД КАК КодТНВЭД,
	|	Ценности.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|
	|	СУММА(Ценности.Количество) КАК Количество,
	|	СУММА(Суммы.СуммаБезНДС + Суммы.СуммаНДС) КАК Сумма,
	|	СУММА(Суммы.СуммаНДС) КАК СуммаНДС,
	|	СУММА(Суммы.БазаНДСРегл + Суммы.СуммаНДСРегл) КАК СуммаРегл,
	|	СУММА(Суммы.СуммаНДСРегл) КАК СуммаНДСРегл,
	|	СУММА(Ценности.КоличествоПоРНПТ) КАК КоличествоПоРНПТ,
	|
	|	Ценности.Ссылка.Валюта КАК Валюта,
	|	Ценности.Ссылка КАК ДокументРеализации
	|ИЗ
	|	Документ.ЗаписьКнигиПродаж.Ценности КАК Ценности
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК Суммы
	|	ПО 
	|		Ценности.Ссылка = Суммы.Ссылка
	|		И Ценности.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
	|	ПО
	|		Ценности.Ссылка = СчетФактураВыданныйДокументыОснования.ДокументОснование
	|		И НЕ СчетФактураВыданныйДокументыОснования.Ссылка.ПометкаУдаления
	|ГДЕ
	|	Ценности.Ссылка = &Ссылка
	|	И Ценности.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочееНачислениеНДС)
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетФактураВыданныйДокументыОснования.Ссылка,
	|	Ценности.Номенклатура,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(Ценности.Номенклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар) 
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга) 
	|	КОНЕЦ,
	|	Ценности.СтавкаНДС,
	|	Ценности.НомерГТД,
	|	Ценности.КодТНВЭД,
	|	Ценности.Ссылка,
	|	ВЫБОР
	|		КОГДА
	|			Ценности.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		ТОГДА
	|			Ценности.ВидЦенности
	|		ИНАЧЕ
	|			""""
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетФактураВыданныйДокументыОснования.Ссылка КАК ИсходныйСчетФактура,
	|	Расхождения.Номенклатура КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК НоменклатураНабора,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаНабора,
	|	ВЫБОР
	|		КОГДА
	|			Расхождения.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		ТОГДА
	|			Расхождения.ВидЦенности
	|		ИНАЧЕ
	|			""""
	|	КОНЕЦ КАК Содержание,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Расхождения.Номенклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|	КОНЕЦ КАК ТипЗапасов,
	|	Расхождения.СтавкаНДС КАК СтавкаНДС,
	|	Расхождения.НомерГТД КАК НомерГТД,
	|	Расхождения.КодТНВЭД КАК КодТНВЭД,
	|	Расхождения.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|
	|	0 КАК Количество,
	|	СУММА(Суммы.СуммаБезНДС + Суммы.СуммаНДС) КАК Сумма,
	|	СУММА(Суммы.СуммаНДС) КАК СуммаНДС,
	|	СУММА(Суммы.БазаНДСРегл + Суммы.СуммаНДСРегл) КАК СуммаРегл,
	|	СУММА(Суммы.СуммаНДСРегл) КАК СуммаНДСРегл,
	|	0 КАК КоличествоПоРНПТ,
	|	
	|	Расхождения.Ссылка.Валюта КАК Валюта,
	|	Расхождения.Ссылка.ИсправляемыйДокумент КАК ДокументРеализации
	|ИЗ
	|	Документ.ЗаписьКнигиПродаж.Расхождения КАК Расхождения
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК Суммы
	|	ПО
	|		Расхождения.Ссылка = Суммы.Ссылка
	|		И Расхождения.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
	|	ПО
	|		Расхождения.Ссылка.ИсправляемыйДокумент = СчетФактураВыданныйДокументыОснования.ДокументОснование
	|		И НЕ СчетФактураВыданныйДокументыОснования.Ссылка.ПометкаУдаления
	|ГДЕ
	|	Расхождения.Ссылка = &Ссылка
	|	И Расхождения.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеПрочегоНачисленияНДС)
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетФактураВыданныйДокументыОснования.Ссылка,
	|	Расхождения.Номенклатура,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Расхождения.Номенклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|	КОНЕЦ,
	|	Расхождения.СтавкаНДС,
	|	Расхождения.НомерГТД,
	|	Расхождения.КодТНВЭД,
	|	Расхождения.Ссылка,
	|	ВЫБОР
	|		КОГДА
	|			Расхождения.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		ТОГДА
	|			Расхождения.ВидЦенности
	|		ИНАЧЕ
	|			""""
	|	КОНЕЦ
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Счет-фактура
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "СчетФактура";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Ложь);

КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
КонецПроцедуры

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаДанныхДокументов с полями:
//		Ссылка,
//		Валюта.
//
//	ПараметрыЗаполнения - Структура - структура, возвращаемая функцией ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров.
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения = Неопределено) Экспорт
	
	Если ПараметрыЗаполнения = Неопределено Тогда
		ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПересчитыватьВВалютуРегл", ПараметрыЗаполнения.ПересчитыватьВВалютуРегл);
	Запрос.УстановитьПараметр("ВключаяНомераГТД",         ПараметрыЗаполнения.ВключаяНомераГТД);
	Запрос.УстановитьПараметр("ПустаяХарактеристика",     Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяУпаковка",           Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяГТД",                Справочники.НомераГТД.ПустаяСсылка());
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                 КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                            КАК НомерСтроки,
	|	ТаблицаДокумента.Номенклатура                           КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА
	|			ТаблицаДокумента.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		ТОГДА
	|			ТаблицаДокумента.ВидЦенности
	|		ИНАЧЕ
	|			""""
	|	КОНЕЦ КАК Содержание,
	|	&ПустаяХарактеристика                                   КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)     КАК Серия,
	|	ВЫБОР КОГДА &ВключаяНомераГТД ТОГДА
	|		ТаблицаДокумента.НомерГТД
	|	ИНАЧЕ
	|		&ПустаяГТД
	|	КОНЕЦ КАК НомерГТД,
	|	ТаблицаДокумента.КодТНВЭД                               КАК КодТНВЭД,
	|	&ПустаяУпаковка                                         КАК Упаковка,
	|	ТаблицаДокумента.Количество                             КАК Количество,
	|	ТаблицаДокумента.Количество                             КАК КоличествоУпаковок,
	|	ТаблицаДокумента.КоличествоПоРНПТ                       КАК КоличествоПоРНПТ,
	|	ТаблицаДокумента.Цена                                   КАК Цена,
	|	
	|	ЕСТЬNULL(
	|		СуммыДокументовВВалютахУчета.СуммаБезНДСРегл,
	|		ТаблицаДокумента.Сумма
	|	) КАК СуммаБезНДС,
	|	
	|	ТаблицаДокумента.СтавкаНДС                              КАК СтавкаНДС,
	|	
	|	ЕСТЬNULL(
	|		СуммыДокументовВВалютахУчета.СуммаНДСРегл,
	|		ТаблицаДокумента.СуммаНДС
	|	) КАК СуммаНДС,
	|	
	|	ВЫБОР КОГДА ТаблицаДокумента.Номенклатура.ТипНоменклатуры В
	|				(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                   КАК ЭтоТовар,
	|	ЛОЖЬ                                                    КАК ВернутьМногооборотнуюТару
	|
	|ПОМЕСТИТЬ ЗаписьКнигиПродажТаблицаТоваров
	|ИЗ
	|	Документ.ЗаписьКнигиПродаж.Ценности КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
	|	ПО
	|		ТаблицаДокумента.Ссылка = СуммыДокументовВВалютахУчета.Регистратор
	|		И ТаблицаДокумента.ИдентификаторСтроки = СуммыДокументовВВалютахУчета.ИдентификаторСтроки
	|		И СуммыДокументовВВалютахУчета.Активность
	|		И &ПересчитыватьВВалютуРегл
	|";
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Формирует текст запроса для получения данных основания при печати Счет-фактуры.
//
Функция ТекстЗапросаДанныхОснованияДляПечатнойФормыСчетФактура() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка                                   КАК Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ДанныеДокументов.Валюта                                   КАК Валюта,
	|	ДанныеДокументов.Организация                              КАК Организация,
	|	НЕОПРЕДЕЛЕНО                                              КАК НалогообложениеНДС,
	|	НЕОПРЕДЕЛЕНО                                              КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)                  КАК Склад,
	|	ДанныеДокументов.Грузоотправитель                         КАК Грузоотправитель,
	|	ДанныеДокументов.Грузополучатель                          КАК Грузополучатель,
	|	ЛОЖЬ                                                      КАК РасчетыЧерезОтдельногоКонтрагента,
	|	НЕОПРЕДЕЛЕНО                                              КАК Номенклатура,
	|	""""                                                      КАК Содержание,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)             КАК Комиссионер,
	|	НЕОПРЕДЕЛЕНО                                              КАК Основание,
	|	НЕОПРЕДЕЛЕНО                                              КАК ОснованиеДата,
	|	НЕОПРЕДЕЛЕНО                                              КАК ОснованиеНомер,
	|	НЕОПРЕДЕЛЕНО                                              КАК БанковскийСчетОрганизации,
	|	НЕОПРЕДЕЛЕНО                                              КАК БанковскийСчетКонтрагента,
	|	НЕОПРЕДЕЛЕНО                                              КАК БанковскийСчетГрузоотправителя,
	|	НЕОПРЕДЕЛЕНО                                              КАК БанковскийСчетГрузополучателя,
	|	НЕОПРЕДЕЛЕНО                                              КАК ДоверенностьНомер,
	|	НЕОПРЕДЕЛЕНО                                              КАК ДоверенностьДата,
	|	НЕОПРЕДЕЛЕНО                                              КАК ДоверенностьВыдана,
	|	НЕОПРЕДЕЛЕНО                                              КАК ДоверенностьЛицо,
	|	НЕОПРЕДЕЛЕНО 								  			  КАК Менеджер,	
	|	НЕОПРЕДЕЛЕНО                                              КАК Кладовщик,
	|	НЕОПРЕДЕЛЕНО                                              КАК ДолжностьКладовщика
	|
	|//ОператорПОМЕСТИТЬ
	|ИЗ
	|	Документ.ЗаписьКнигиПродаж КАК ДанныеДокументов
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&ДокументОснование_ЗаписьКнигиПродаж)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Документы.ЗаписьКнигиПродаж.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.5.6.25";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("3be211aa-8ab9-41cc-8162-df6a98c8faed");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаписьКнигиПродаж.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Заполняет реквизит ""Ставка НДС""
	|Заполняет реквизит табличных частей ""Настройка счетов учета"".'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.ЗаписьКнигиПродаж.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Справочники.СтавкиНДС.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Документы.ЗаписьКнигиПродаж.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.Документы.ЗаписьКнигиПродаж.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");

КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаОбъектов = "Документ.ЗаписьКнигиПродаж";
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Дата УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Дата УБЫВ");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиСсылки();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаписьКнигиПродаж.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗаписьКнигиПродаж КАК ЗаписьКнигиПродаж
	|ГДЕ
	|	(ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			Документ.ЗаписьКнигиПродаж.Ценности КАК ЗаписьКнигиПродажЦенности
	|		ГДЕ
	|			ЗаписьКнигиПродаж.Ссылка = ЗаписьКнигиПродажЦенности.Ссылка
	|			И (ЗаписьКнигиПродажЦенности.УдалитьСтавкаНДС <> &ПустаяСтавкаНДС
	|					И ЗаписьКнигиПродажЦенности.СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|			))
	|	ИЛИ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			Документ.ЗаписьКнигиПродаж.Расхождения КАК ЗаписьКнигиПродажРасхождения
	|		ГДЕ
	|			ЗаписьКнигиПродаж.Ссылка = ЗаписьКнигиПродажРасхождения.Ссылка
	|			И (ЗаписьКнигиПродажРасхождения.УдалитьСтавкаНДС <> &ПустаяСтавкаНДС
	|					И ЗаписьКнигиПродажРасхождения.СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|			)))";
	
	УчетНДСЛокализация.УстановитьПараметрЗапросаПустаяСтавкаНДСПеречислением(Запрос);
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта        = "Документ.ЗаписьКнигиПродаж";
	
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Для Каждого Документ Из ОбновляемыеДанные Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Документ.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			ДокументОбъект = Документ.Ссылка.ПолучитьОбъект();
			
			ОбъектИзменен = Ложь;
			
			Если ДокументОбъект <> Неопределено Тогда
				
				МассивТЧ = Новый Массив();
				МассивТЧ.Добавить("Ценности");
				МассивТЧ.Добавить("Расхождения");
				
				УчетНДСЛокализация.ЗаполнитьКолонкуТЧСтавкаНДС(ДокументОбъект, МассивТЧ, ОбъектИзменен);
				
				
			КонецЕсли;
			
			Если ОбъектИзменен Или ДокументОбъект <> Неопределено И ДокументОбъект.Модифицированность() Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Документ.Ссылка);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), Документ.Ссылка);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
