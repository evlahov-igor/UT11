

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("РеестрДокументов");
	МеханизмыДокумента.Добавить("УчетНДС");
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка - ссылка на документ, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов:
//     * Таблица<ИмяРегистра> - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Запрос			= Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		////////////////////////////////////////////////////////////////////////////
		// Создадим запрос инициализации движений
		
		ЗаполнитьПараметрыИнициализации(Запрос, Документ);
		
		////////////////////////////////////////////////////////////////////////////
		// Сформируем текст запроса
		
		ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
	
КонецПроцедуры

// Добавляет команду создания документа "Счет-фактура полученный от комитента (принципала)".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетФактураКомитента) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.СчетФактураКомитента.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.СчетФактураКомитента);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьКомиссиюПриЗакупках";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
КонецПроцедуры

//Возвращает количество счетов-фактур к оформлению.
//
// Параметры:
//	Параметры - структура со следующими свойствами:
//	* МассивОрганизаций - Массив - массив организаций.
//	* НачалоПериода - Дата - ограничение снизу на дату документа-основания.
//	* КонецПериода - Дата - ограничение сверху на дату документа-основания.
//	* БезОграниченияПериода - Булево - не ограничивать по дате документа-основания
//
// Возвращаемое значение:
//	Число - количество счетов-фактур к оформлению.
//
Функция ЕстьСчетаФактурыКОформлению(Параметры) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОрганизаций", Параметры.МассивОрганизаций);
	Запрос.УстановитьПараметр("НачалоПериода",     Параметры.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      Параметры.КонецПериода);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(1) КАК КоличествоДокументовКОформлению
	|ИЗ
	|	РегистрСведений.СчетаФактурыКомитентовКРегистрации КАК КРегистрации
	|	ГДЕ
	|		КРегистрации.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|		И &УсловиеОтбора
	|";
	
	Если ЗначениеЗаполнено(Параметры.МассивОрганизаций) Тогда
		УсловиеОтбора = "КРегистрации.Организация В (&МассивОрганизаций)";
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеОтбора", УсловиеОтбора);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И &УсловиеОтбора", "");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() И НЕ Выборка.КоличествоДокументовКОформлению = NULL Тогда
		Возврат Выборка.КоличествоДокументовКОформлению;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.СчетФактураКомитента";
	
	ВЗапросеЕстьИсточник = Истина;
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие();
	
	ЗначенияПараметров = ЗначенияПараметровПроведения();
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать",           """""");
	ПереопределениеРасчетаПараметров.Вставить("ВалютаСчетаФактуры",      "ДанныеДокумента.Ссылка.Валюта");
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ВЗапросеЕстьИсточник,
										ПереопределениеРасчетаПараметров,
										ТекстыЗапросаВременныхТаблиц);
	Иначе	
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ПереопределениеРасчетаПараметров,
										ТекстыЗапросаВременныхТаблиц);
	КонецЕсли; 

	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.ДатаСоставления КАК ДатаПолучения,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Комитент КАК Комитент,
	|	ДанныеДокумента.КППКомитента КАК КомитентКПП,
	|	ДанныеДокумента.ИННКомитента КАК КомитентИНН,
	|	ДанныеДокумента.Исправление КАК Исправление,
	|	ДанныеДокумента.ПолученВЭлектронномВиде КАК ПолученВЭлектронномВиде,
	|	ДанныеДокумента.КодВидаОперации КАК КодВидаОперации,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.НомерИсправления КАК НомерИсправления,
	|	ДанныеДокумента.ДатаИсправления КАК ДатаИсправления,
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.Склад КАК Склад,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.СуммаНДС КАК СуммаНДС,
	|	ДанныеДокумента.Комментарий КАК Комментарий,
	|	ДанныеДокумента.РучнаяКорректировкаЖурналаСФ КАК РучнаяКорректировкаЖурналаСФ,
	|	ДанныеДокумента.Ответственный КАК Ответственный
	|ИЗ
	|	Документ.СчетФактураКомитента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",							Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация",					Реквизиты.Организация);
	Запрос.УстановитьПараметр("Комитент",						Реквизиты.Комитент);
	Запрос.УстановитьПараметр("КомитентКПП",					Реквизиты.КомитентКПП);
	Запрос.УстановитьПараметр("КомитентИНН",					Реквизиты.КомитентИНН);
	Запрос.УстановитьПараметр("Исправление",					Реквизиты.Исправление);
	Запрос.УстановитьПараметр("ПолученВЭлектронномВиде",		?(Реквизиты.ПолученВЭлектронномВиде, 2, 1));
	Запрос.УстановитьПараметр("КодВидаОперации",				Реквизиты.КодВидаОперации);
	Запрос.УстановитьПараметр("Номер",							Реквизиты.Номер);
	Запрос.УстановитьПараметр("НомерИсправления",				Реквизиты.НомерИсправления);
	Запрос.УстановитьПараметр("ДатаИсправления",				Реквизиты.ДатаИсправления);
	Запрос.УстановитьПараметр("ДатаСоставления",				Реквизиты.ДатаПолучения);
	Запрос.УстановитьПараметр("ВалютаСчетаФактуры",				Реквизиты.Валюта);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Реквизиты.Организация));
	Запрос.УстановитьПараметр("НаправлениеДеятельности",		Реквизиты.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",			Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("Подразделение",					Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("Склад",							Реквизиты.Склад);
	Запрос.УстановитьПараметр("Контрагент",						Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("Партнер",						Реквизиты.Партнер);
	Запрос.УстановитьПараметр("Договор",						Реквизиты.Договор);
	Запрос.УстановитьПараметр("Ответственный",					Реквизиты.Ответственный);
	Запрос.УстановитьПараметр("Комментарий",					Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("СуммаНДС",						Реквизиты.СуммаНДС);
	Запрос.УстановитьПараметр("Проведен",						Реквизиты.Проведен);
	Запрос.УстановитьПараметр("ПометкаУдаления",				Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("РучнаяКорректировкаЖурналаСФ",	Реквизиты.РучнаяКорректировкаЖурналаСФ);

	ЗаполнитьПараметрыЗапросаДляВычисленияСуммДокумента(ДокументСсылка, Запрос);
	
	УчетНДСРФ.УстановитьПараметрыЗапросаПроведенияПоЖурналуСчетаФактурыПолученного(Реквизиты, Запрос);

	ИнформацияПоИсправлению = "";
	Если Реквизиты.Исправление
		И ЗначениеЗаполнено(Реквизиты.НомерИсправления) Тогда
		ИнформацияПоИсправлению = НСтр("ru='Исправление %НомерИсправления% от %ДатаИсправления%'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ИнформацияПоИсправлению = СтрЗаменить(ИнформацияПоИсправлению, "%НомерИсправления%", Реквизиты.НомерИсправления);
		ИнформацияПоИсправлению = СтрЗаменить(ИнформацияПоИсправлению, "%ДатаИсправления%", Реквизиты.ДатаИсправления);
	КонецЕсли;
	Запрос.УстановитьПараметр("ИнформацияПоИсправлению", ИнформацияПоИсправлению);

	ЗначенияПараметровПроведения = ЗначенияПараметровПроведения(Реквизиты);
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла; 
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыЗапросаДляВычисленияСуммДокумента(ДокументСсылка, Запрос)

	ЗапросДляПараметров = Новый Запрос;
	ЗапросДляПараметров.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПокупатели.СчетФактураВыданный КАК СчетФактураВыданный,
		|	ВЫБОР
		|		КОГДА ТаблицаПокупатели.СчетФактураВыданный ССЫЛКА Документ.СчетФактураВыданный
		|			ТОГДА ВЫРАЗИТЬ(ТаблицаПокупатели.СчетФактураВыданный КАК Документ.СчетФактураВыданный).СчетФактураОснование
		|		КОГДА ТаблицаПокупатели.СчетФактураВыданный ССЫЛКА Документ.СчетФактураКомиссионеру
		|			ТОГДА ВЫРАЗИТЬ(ТаблицаПокупатели.СчетФактураВыданный КАК Документ.СчетФактураКомиссионеру).СчетФактураОснование
		|	КОНЕЦ КАК СчетФактураОснование,
		|	ТаблицаПокупатели.Ссылка.НомерИсправления КАК НомерИсправления
		|ПОМЕСТИТЬ ВтОснованияСчетовФактур
		|ИЗ
		|	Документ.СчетФактураКомитента.Покупатели КАК ТаблицаПокупатели
		|ГДЕ
		|	ТаблицаПокупатели.Ссылка = &ДокументСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтОснованияСчетовФактур.СчетФактураВыданный КАК СчетФактураВыданный,
		|	ВтОснованияСчетовФактур.СчетФактураОснование КАК СчетФактураВыданныйОснование
		|ИЗ
		|	ВтОснованияСчетовФактур КАК ВтОснованияСчетовФактур
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПокупатели.Ссылка КАК СчетФактураОснование
		|ИЗ
		|	Документ.СчетФактураКомитента.Покупатели КАК ТаблицаПокупатели
		|ГДЕ
		|	ТаблицаПокупатели.СчетФактураВыданный В
		|				(ВЫБРАТЬ
		|					ВтОснованияСчетовФактур.СчетФактураОснование КАК СчетФактураОснование
		|				ИЗ
		|					ВтОснованияСчетовФактур КАК ВтОснованияСчетовФактур)
		|			И ТаблицаПокупатели.Ссылка.Проведен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Исправления.Ссылка КАК СчетФактураКомитенту,
		|	Исправления.Ссылка.НомерИсправления КАК НомерИсправления
		|ИЗ
		|	Документ.СчетФактураКомитента.Покупатели КАК Исправления
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОснованияСчетовФактур КАК ВтОснованияСчетовФактур
		|		ПО Исправления.СчетФактураВыданный.СчетФактураОснование = ВтОснованияСчетовФактур.СчетФактураОснование
		|			И Исправления.Ссылка.НомерИсправления < ВтОснованияСчетовФактур.НомерИсправления
		|ГДЕ
		|	Исправления.Ссылка.Проведен
		|	И Исправления.Ссылка.Исправление
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВтОснованияСчетовФактур.НомерИсправления УБЫВ";
	
	ЗапросДляПараметров.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	РезультатЗапроса = ЗапросДляПараметров.ВыполнитьПакет();
	ГраницаРезультата = РезультатЗапроса.ВГраница();
	
	СчетФактураВыданный  = Неопределено;
	СчетФактураВыданныйОснование = Неопределено;
	Выборка = РезультатЗапроса[ГраницаРезультата - 2].Выбрать();
	
	Если Выборка.Следующий() Тогда
		СчетФактураВыданный  = Выборка.СчетФактураВыданный;
		СчетФактураВыданныйОснование = Выборка.СчетФактураВыданныйОснование;
	КонецЕсли;
	Запрос.УстановитьПараметр("СчетФактураВыданный", СчетФактураВыданный);
	Запрос.УстановитьПараметр("СчетФактураВыданныйОснование", СчетФактураВыданныйОснование);
	
	СчетФактураОснование = Неопределено;
	Выборка = РезультатЗапроса[ГраницаРезультата - 1].Выбрать();
	
	Если Выборка.Следующий() Тогда
		СчетФактураОснование = Выборка.СчетФактураОснование;
	КонецЕсли;
	Запрос.УстановитьПараметр("СчетФактураОснование", СчетФактураОснование);
	
	ИсправляемыйСчетФактура = Неопределено;
	Выборка = РезультатЗапроса[ГраницаРезультата].Выбрать();
	
	Если Выборка.Следующий() Тогда
		ИсправляемыйСчетФактура = Выборка.СчетФактураКомитенту;
	КонецЕсли;
	
	Если ИсправляемыйСчетФактура = Неопределено Тогда
		ИсправляемыйСчетФактура = СчетФактураОснование;
	КонецЕсли;
	Запрос.УстановитьПараметр("ИсправляемыйСчетФактура", ИсправляемыйСчетФактура);

КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)

	ЗначенияПараметровПроведения = Новый Структура;
	ЗначенияПараметровПроведения.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураКомитента"));

	Возврат ЗначенияПараметровПроведения;
	
КонецФункции

Функция ТекстЗапросаВтДанныеИсправленийСчетовФактур(Запрос, ТекстыЗапроса)

	ИмяРегистра = "ВтДанныеИсправленийСчетовФактур";

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеОснованийСчетовФактур.Регистратор КАК Регистратор,
	|	ДанныеОснованийСчетовФактур.ВидЦенности КАК ВидЦенности,
	|	ДанныеОснованийСчетовФактур.ТипСчетаФактуры КАК ТипСчетаФактуры,
	|	ДанныеОснованийСчетовФактур.ТипЗапасов КАК ТипЗапасов,
	|	ДанныеОснованийСчетовФактур.СтавкаНДС КАК СтавкаНДС,
	|	ДанныеОснованийСчетовФактур.НомерГТД КАК НомерГТД,
	|	ДанныеОснованийСчетовФактур.КодТНВЭД КАК КодТНВЭД,
	|	ДанныеОснованийСчетовФактур.Валюта КАК Валюта,
	|	ДанныеОснованийСчетовФактур.СуммаБезНДС КАК СуммаБезНДС,
	|	ДанныеОснованийСчетовФактур.СуммаНДС КАК СуммаНДС,
	|	ДанныеОснованийСчетовФактур.СуммаБезНДСРегл КАК СуммаБезНДСРегл,
	|	ДанныеОснованийСчетовФактур.БазаНДСРегл КАК БазаНДСРегл,
	|	ДанныеОснованийСчетовФактур.СуммаНДСРегл КАК СуммаНДСРегл,
	|	ДанныеОснованийСчетовФактур.СчетФактураВыданныйКомиссионером КАК СчетФактураВыданныйКомиссионером,
	|	ДанныеОснованийСчетовФактур.ПокупательКомиссионногоТовара КАК ПокупательКомиссионногоТовара
	|ПОМЕСТИТЬ ВтДанныеИсправленийСчетовФактур
	|ИЗ
	|	РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
	|ГДЕ
	|	ДанныеОснованийСчетовФактур.СчетФактураВыданныйКомиссионером = &СчетФактураВыданный
	|	И ДанныеОснованийСчетовФактур.ИсправлениеОшибок";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаСуммДокументов(Запрос, ТекстыЗапроса)

	ИмяРегистра = "ВтТаблицаСуммДокументов";
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтДанныеИсправленийСчетовФактур", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанныеИсправленийСчетовФактур(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеОснованийСчетовФактур.ПокупательКомиссионногоТовара КАК Покупатель,
	|	ДанныеОснованийСчетовФактур.СчетФактураВыданныйКомиссионером КАК СчетФактураВыданныйКомиссионером,
	|	СУММА(ВЫБОР
	|			КОГДА &ВалютаСчетаФактуры = ДанныеОснованийСчетовФактур.Валюта
	|				ТОГДА ДанныеОснованийСчетовФактур.СуммаБезНДС + ДанныеОснованийСчетовФактур.СуммаНДС
	|			ИНАЧЕ ДанныеОснованийСчетовФактур.БазаНДСРегл + ДанныеОснованийСчетовФактур.СуммаНДСРегл
	|		КОНЕЦ) КАК СуммаПоСчетуФактуреЖурнал,
	|	СУММА(ВЫБОР
	|			КОГДА &ВалютаСчетаФактуры = ДанныеОснованийСчетовФактур.Валюта
	|				ТОГДА ДанныеОснованийСчетовФактур.СуммаНДС
	|			ИНАЧЕ ДанныеОснованийСчетовФактур.СуммаНДСРегл
	|		КОНЕЦ) КАК СуммаНДСЖурнал
	|ПОМЕСТИТЬ ВтТаблицаСуммДокументов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеОснованийСчетовФактур.ПокупательКомиссионногоТовара КАК ПокупательКомиссионногоТовара,
	|		ДанныеОснованийСчетовФактур.СчетФактураВыданныйКомиссионером КАК СчетФактураВыданныйКомиссионером,
	|		ДанныеОснованийСчетовФактур.Валюта КАК Валюта,
	|		ДанныеОснованийСчетовФактур.СуммаБезНДС КАК СуммаБезНДС,
	|		ДанныеОснованийСчетовФактур.СуммаНДС КАК СуммаНДС,
	|		ДанныеОснованийСчетовФактур.СуммаБезНДСРегл КАК СуммаБезНДСРегл,
	|		ДанныеОснованийСчетовФактур.БазаНДСРегл КАК БазаНДСРегл,
	|		ДанныеОснованийСчетовФактур.СуммаНДСРегл КАК СуммаНДСРегл
	|	ИЗ
	|		РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
	|	ГДЕ
	|		ДанныеОснованийСчетовФактур.СчетФактураВыданныйКомиссионером = &СчетФактураВыданный
	|		И НЕ ДанныеОснованийСчетовФактур.ИсправлениеОшибок
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеОснованийСчетовФактур.ПокупательКомиссионногоТовара,
	|		ДанныеИсправленийСчетовФактур.СчетФактураВыданныйКомиссионером,
	|		ДанныеОснованийСчетовФактур.Валюта,
	|		ДанныеОснованийСчетовФактур.СуммаБезНДС,
	|		ДанныеОснованийСчетовФактур.СуммаНДС,
	|		ДанныеОснованийСчетовФактур.СуммаБезНДСРегл,
	|		ДанныеОснованийСчетовФактур.БазаНДСРегл,
	|		ДанныеОснованийСчетовФактур.СуммаНДСРегл
	|	ИЗ
	|		ВтДанныеИсправленийСчетовФактур КАК ДанныеИсправленийСчетовФактур
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
	|			ПО ДанныеИсправленийСчетовФактур.ВидЦенности = ДанныеОснованийСчетовФактур.ВидЦенности
	|				И ДанныеИсправленийСчетовФактур.ТипСчетаФактуры = ДанныеОснованийСчетовФактур.ТипСчетаФактуры
	|				И ДанныеИсправленийСчетовФактур.СтавкаНДС = ДанныеОснованийСчетовФактур.СтавкаНДС
	|				И ДанныеИсправленийСчетовФактур.НомерГТД = ДанныеОснованийСчетовФактур.НомерГТД
	|				И ДанныеИсправленийСчетовФактур.КодТНВЭД = ДанныеОснованийСчетовФактур.КодТНВЭД
	|	ГДЕ
	|		ДанныеОснованийСчетовФактур.СчетФактураВыданныйКомиссионером = &СчетФактураВыданныйОснование
	|		И НЕ ДанныеОснованийСчетовФактур.ИсправлениеОшибок
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВтДанныеИсправленийСчетовФактур.ПокупательКомиссионногоТовара,
	|		ВтДанныеИсправленийСчетовФактур.СчетФактураВыданныйКомиссионером,
	|		ВтДанныеИсправленийСчетовФактур.Валюта,
	|		ВтДанныеИсправленийСчетовФактур.СуммаБезНДС,
	|		ВтДанныеИсправленийСчетовФактур.СуммаНДС,
	|		ВтДанныеИсправленийСчетовФактур.СуммаБезНДСРегл,
	|		ВтДанныеИсправленийСчетовФактур.БазаНДСРегл,
	|		ВтДанныеИсправленийСчетовФактур.СуммаНДСРегл
	|	ИЗ
	|		ВтДанныеИсправленийСчетовФактур КАК ВтДанныеИсправленийСчетовФактур) КАК ДанныеОснованийСчетовФактур
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеОснованийСчетовФактур.ПокупательКомиссионногоТовара,
	|	ДанныеОснованийСчетовФактур.СчетФактураВыданныйКомиссионером";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЖурналУчетаСчетовФактур";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаСуммДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаСуммДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЖурналУчетаСчетовФактур.Период КАК Период,
	|	ЖурналУчетаСчетовФактур.Организация КАК Организация,
	|	ЖурналУчетаСчетовФактур.Контрагент КАК Контрагент,
	|	ЖурналУчетаСчетовФактур.СчетФактура КАК СчетФактура,
	|	ЖурналУчетаСчетовФактур.ЧастьЖурнала КАК ЧастьЖурнала,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.КодВидаОперации КАК КодВидаОперации,
	|	ЖурналУчетаСчетовФактур.КодВидаСделки КАК КодВидаСделки,
	|	ЖурналУчетаСчетовФактур.КодСпособаВыставленияПолучения КАК КодСпособаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.Валюта КАК Валюта,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре КАК СуммаПоСчетуФактуре,
	|	ЖурналУчетаСчетовФактур.СуммаНДС КАК СуммаНДС,
	|	ЖурналУчетаСчетовФактур.ИндексСтроки КАК ИндексСтроки,
	|	ЖурналУчетаСчетовФактур.Сторно КАК Сторно,
	|	ЖурналУчетаСчетовФактур.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ЖурналУчетаСчетовФактур.СчетФактураВыданныйПокупателю КАК СчетФактураВыданныйПокупателю,
	|	ЖурналУчетаСчетовФактур.СчетФактураПолученныйОтПродавца КАК СчетФактураПолученныйОтПродавца,
	|	ЖурналУчетаСчетовФактур.ИсправлениеСобственнойОшибки КАК ИсправлениеСобственнойОшибки,
	|	ЖурналУчетаСчетовФактур.ДатаВыставленияПолучения КАК ДатаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ЖурналУчетаСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшение КАК СуммаНДСРазницаУменьшение,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличение КАК СуммаНДСРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.ПоСтавкеБезНДС КАК ПоСтавкеБезНДС,
	|	ЖурналУчетаСчетовФактур.СчетФактураНеВыставляется КАК СчетФактураНеВыставляется,
	|	ЖурналУчетаСчетовФактур.Продавец КАК Продавец,
	|	ЖурналУчетаСчетовФактур.КППКонтрагента КАК КППКонтрагента,
	|	ЖурналУчетаСчетовФактур.Посредник КАК Посредник,
	|	ЖурналУчетаСчетовФактур.УдалитьСчетФактураВыданныйПокупателю КАК УдалитьСчетФактураВыданныйПокупателю,
	|	ЖурналУчетаСчетовФактур.Субкомиссионер КАК Субкомиссионер,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактурыПродавца КАК НомерСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаНДСКомиссия КАК СуммаНДСКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.КодВидаОперацииКомиссия КАК КодВидаОперацииКомиссия,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактурыПродавца КАК ДатаСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ИННКонтрагента КАК ИННКонтрагента,
	|	ЖурналУчетаСчетовФактур.ИННПродавца КАК ИННПродавца,
	|	ЖурналУчетаСчетовФактур.КПППродавца КАК КПППродавца,
	|	ЖурналУчетаСчетовФактур.ИННСубкомиссионера КАК ИННСубкомиссионера,
	|	ЖурналУчетаСчетовФактур.КППСубкомиссионера КАК КППСубкомиссионера
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактур
	|ГДЕ
	|	ЖурналУчетаСчетовФактур.Регистратор = &Ссылка
	|	И &РучнаяКорректировкаЖурналаСФ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЖурналУчетаСчетовФактур.Организация КАК Организация,
	|	ЖурналУчетаСчетовФактур.Контрагент КАК Контрагент,
	|	ЖурналУчетаСчетовФактур.СчетФактура КАК СчетФактура,
	|	ЖурналУчетаСчетовФактур.ЧастьЖурнала КАК ЧастьЖурнала,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.КодВидаОперации КАК КодВидаОперации,
	|	ЖурналУчетаСчетовФактур.КодВидаСделки КАК КодВидаСделки,
	|	ЖурналУчетаСчетовФактур.КодСпособаВыставленияПолучения КАК КодСпособаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.Валюта КАК Валюта,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре КАК СуммаПоСчетуФактуре,
	|	-ЖурналУчетаСчетовФактур.СуммаНДС КАК СуммаНДС,
	|	ЖурналУчетаСчетовФактур.ИндексСтроки КАК ИндексСтроки,
	|	ИСТИНА КАК Сторно,
	|	ЖурналУчетаСчетовФактур.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ЖурналУчетаСчетовФактур.СчетФактураВыданныйПокупателю КАК СчетФактураВыданныйПокупателю,
	|	ЖурналУчетаСчетовФактур.СчетФактураПолученныйОтПродавца КАК СчетФактураПолученныйОтПродавца,
	|	ЖурналУчетаСчетовФактур.ИсправлениеСобственнойОшибки КАК ИсправлениеСобственнойОшибки,
	|	ЖурналУчетаСчетовФактур.ДатаВыставленияПолучения КАК ДатаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ЖурналУчетаСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшение КАК СуммаНДСРазницаУменьшение,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличение КАК СуммаНДСРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.ПоСтавкеБезНДС КАК ПоСтавкеБезНДС,
	|	ЖурналУчетаСчетовФактур.СчетФактураНеВыставляется КАК СчетФактураНеВыставляется,
	|	ЖурналУчетаСчетовФактур.Продавец КАК Продавец,
	|	ЖурналУчетаСчетовФактур.КППКонтрагента КАК КППКонтрагента,
	|	ЖурналУчетаСчетовФактур.Посредник КАК Посредник,
	|	ЖурналУчетаСчетовФактур.УдалитьСчетФактураВыданныйПокупателю КАК УдалитьСчетФактураВыданныйПокупателю,
	|	ЖурналУчетаСчетовФактур.Субкомиссионер КАК Субкомиссионер,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактурыПродавца КАК НомерСчетаФактурыПродавца,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСКомиссия КАК СуммаНДСКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.КодВидаОперацииКомиссия КАК КодВидаОперацииКомиссия,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактурыПродавца КАК ДатаСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ИННКонтрагента КАК ИННКонтрагента,
	|	ЖурналУчетаСчетовФактур.ИННПродавца КАК ИННПродавца,
	|	ЖурналУчетаСчетовФактур.КПППродавца КАК КПППродавца,
	|	ЖурналУчетаСчетовФактур.ИННСубкомиссионера КАК ИННСубкомиссионера,
	|	ЖурналУчетаСчетовФактур.КППСубкомиссионера КАК КППСубкомиссионера
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур.СрезПоследних(
	|		&Период,
	|		НЕ Сторно
	|		И Регистратор <> &Ссылка
	|		И СчетФактура = &ИсправляемыйСчетФактура) КАК ЖурналУчетаСчетовФактур
	|
	|ГДЕ
	|	&Исправление
	|	И (ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия > 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                                                     КАК Период,
	|	&Организация                                                                КАК Организация,
	|	&Комитент                                                                   КАК Контрагент,
	|	&Ссылка                                                                     КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры) КАК ЧастьЖурнала,
	|	&Номер                                                                      КАК НомерСчетаФактуры,
	|	&ДатаСоставления                                                            КАК ДатаСчетаФактуры,
	|	&КодВидаОперации                                                            КАК КодВидаОперации,
	|	""2""                                                                       КАК КодВидаСделки,
	|	&ПолученВЭлектронномВиде                                                    КАК КодСпособаВыставленияПолучения,
	|	&ВалютаСчетаФактуры                                                         КАК Валюта,
	|	СУММА(ТаблицаСуммДокументов.СуммаПоСчетуФактуреЖурнал)                      КАК СуммаПоСчетуФактуре,
	|	СУММА(ТаблицаСуммДокументов.СуммаНДСЖурнал)                                 КАК СуммаНДС,
	|	Покупатели.НомерСтроки                                                      КАК ИндексСтроки,
	|	NULL,
	|	NULL,
	|	Покупатели.СчетФактураВыданный                                              КАК СчетФактураВыданныйПокупателю,
	|	NULL,
	|	NULL,
	|	&ДатаСоставления                                                            КАК ДатаВыставленияПолучения,
	|	&НомерИсправления                                                           КАК НомерИсправления,
	|	&ДатаИсправления                                                            КАК ДатаИсправления,
	|	NULL                                                                        КАК НомерКорректировочногоСчетаФактуры,
	|	NULL                                                                        КАК ДатаКорректировочногоСчетаФактуры,
	|	NULL                                                                        КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	NULL                                                                        КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	0                                                                           КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	0                                                                           КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	0                                                                           КАК СуммаНДСРазницаУменьшение,
	|	0                                                                           КАК СуммаНДСРазницаУвеличение,
	|	ЛОЖЬ                                                                        КАК ПоСтавкеБезНДС,
	|	ЛОЖЬ                                                                        КАК СчетФактураНеВыставляется,
	|	NULL,
	|	&КомитентКПП                                                                КАК КППКонтрагента,
	|	NULL,
	|	NULL,
	|	Покупатели.Субкомиссионер                                                   КАК Субкомиссионер,
	|	NULL,
	|	СУММА(ТаблицаСуммДокументов.СуммаПоСчетуФактуреЖурнал)                      КАК СуммаПоСчетуФактуреКомиссия,
	|	СУММА(ТаблицаСуммДокументов.СуммаНДСЖурнал)                                 КАК СуммаНДСКомиссия,
	|	0                                                                           КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0                                                                           КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0                                                                           КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	0                                                                           КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	&КодВидаОперацииКомиссия                                                    КАК КодВидаОперацииКомиссия,
	|	NULL,
	|	&КомитентИНН                                                                КАК ИННКонтрагента,
	|	NULL,
	|	NULL,
	|	Покупатели.ИННСубкомиссионера                                               КАК ИННСубкомиссионера,
	|	Покупатели.КППСубкомиссионера                                               КАК КППСубкомиссионера
	|
	|ИЗ
	|	Документ.СчетФактураКомитента.Покупатели КАК Покупатели
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтТаблицаСуммДокументов КАК ТаблицаСуммДокументов
	|	ПО
	|		Покупатели.Покупатель = ТаблицаСуммДокументов.Покупатель
	|		И Покупатели.СчетФактураВыданный = ТаблицаСуммДокументов.СчетФактураВыданныйКомиссионером
	|ГДЕ
	|	Покупатели.Ссылка = &Ссылка
	|	И НЕ &РучнаяКорректировкаЖурналаСФ
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И &Период <> ДАТАВРЕМЯ(1,1,1)
	|	
	|СГРУППИРОВАТЬ ПО
	|	Покупатели.НомерСтроки,
	|	Покупатели.СчетФактураВыданный,
	|	Покупатели.Субкомиссионер,
	|	Покупатели.ИННСубкомиссионера,
	|	Покупатели.КППСубкомиссионера
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК ДатаДокументаИБ,
	|	&Номер КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных КАК ТипСсылки,
	|	&Организация КАК Организация,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Партнер КАК Партнер,
	|	&Контрагент КАК Контрагент,
	|	&Договор КАК Договор,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&Склад КАК МестоХранения,
	|	&Подразделение КАК Подразделение,
	|	&Ответственный КАК Ответственный,
	|	&Комментарий КАК Комментарий,
	|	&ВалютаСчетаФактуры КАК Валюта,
	|	&СуммаНДС КАК Сумма,
	|	&Проведен КАК Проведен,
	|	&ПометкаУдаления КАК ПометкаУдаления,
	|	ЛОЖЬ КАК ДополнительнаяЗапись,
	|	НЕОПРЕДЕЛЕНО КАК РазделительЗаписи,
	|	"""" КАК Дополнительно,
	|	ДанныеДокумента.Дата КАК ДатаПервичногоДокумента,
	|	&Номер КАК НомерПервичногоДокумента,
	|	ЛОЖЬ КАК СторноИсправление,
	|	НЕОПРЕДЕЛЕНО КАК СторнируемыйДокумент,
	|	НЕОПРЕДЕЛЕНО КАК ИсправляемыйДокумент,
	|	ДанныеДокумента.Дата КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО КАК Приоритет
	|ИЗ
	|	Документ.СчетФактураКомитента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ФормированиеГиперссылкиВЖурналеДокументовНДС

Функция СформироватьГиперссылкуКОформлению(Параметры) Экспорт
	
	Если Не ПравоДоступа("Изменение", Метаданные.Документы.СчетФактураКомитента) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Параметры.Вставить("МассивОрганизаций",?(ЗначениеЗаполнено(Параметры.Организация), 
											ОбщегоНазначенияУТКлиентСервер.Массив(Параметры.Организация),
											Неопределено));
	
	Если Параметры.Свойство("КраткоеПредставление") Тогда
		ТекстГиперссылки = НСтр("ru = 'СФ комитентов'");
	Иначе
		ТекстГиперссылки = НСтр("ru = 'Счета-фактуры комитентов'");
	КонецЕсли;	
	
	Если ЕстьСчетаФактурыКОформлению(Параметры) Тогда
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,,,
			ИмяФормыСчетФактураКомитента());
	Иначе
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,ЦветаСтиля.НезаполненноеПолеТаблицы,,
			ИмяФормыСчетФактураКомитента());
	КонецЕсли;
	
КонецФункции

Функция ИмяФормыСчетФактураКомитента() Экспорт
	
	Возврат "Документ.СчетФактураКомитента.Форма.ФормаРабочееМесто";
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Документы.СчетФактураКомитента.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.5.2.16";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("38c5e99e-b5ca-4011-b3e5-3aa527dac192");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.СчетФактураКомитента.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Заполняет служебные реквизиты документа ""Счет-фактура полученный от комитента (принципала)"".'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.СчетФактураКомитента.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыСведений.РеестрДокументов.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Документы.СчетФактураКомитента.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.Документы.СчетФактураКомитента.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");

КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаОбъектов = "Документ.СчетФактураКомитента";
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Дата УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Дата УБЫВ");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиСсылки();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СчетФактураКомитента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СчетФактураКомитента КАК СчетФактураКомитента
	|ГДЕ
	|	СчетФактураКомитента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)"
	);
	
	Данные = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Данные);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.СчетФактураКомитента";
	
	НовыеРеквизиты = Новый Массив;
	НовыеРеквизиты.Добавить("Контрагент");
	НовыеРеквизиты.Добавить("Партнер");
	НовыеРеквизиты.Добавить("Договор");
	НовыеРеквизиты.Добавить("Склад");
	НовыеРеквизиты.Добавить("Подразделение");
	НовыеРеквизиты.Добавить("НаправлениеДеятельности");
	РеквизитыСтрокой = СтрСоединить(НовыеРеквизиты, ",");
	
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Если ОбновляемыеДанные.Количество() = 0 Тогда
		Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаОбновляемыхДанных", ОбновляемыеДанные);
	
	Запрос.Текст =
	"ВЫБРАТЬ ТаблицаДанных.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТОбъектыДляОбработки
	|ИЗ &ТаблицаОбновляемыхДанных КАК ТаблицаДанных;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбъектыДляОбработки.Ссылка КАК Ссылка,
	|	ОбъектыДляОбработки.Ссылка.ВерсияДанных КАК ВерсияДанных,
	|	Покупатели.СчетФактураВыданный КАК ДокументОснование,
	|	ЕСТЬNULL(ДанныеРеестра.МестоХранения.Ключ, НЕОПРЕДЕЛЕНО) КАК Склад,
	|	ЕСТЬNULL(ДанныеРеестра.Подразделение, НЕОПРЕДЕЛЕНО) КАК Подразделение,
	|	ЕСТЬNULL(ДанныеРеестра.НаправлениеДеятельности, НЕОПРЕДЕЛЕНО) КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(ДанныеРеестра.Контрагент.Ключ, НЕОПРЕДЕЛЕНО) КАК Контрагент,
	|	ЕСТЬNULL(ДанныеРеестра.Партнер, НЕОПРЕДЕЛЕНО) КАК Партнер,
	|	ЕСТЬNULL(ДанныеРеестра.Договор, НЕОПРЕДЕЛЕНО) КАК Договор
	|ИЗ
	|	ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураКомитента.Покупатели КАК Покупатели
	|	ПО ОбъектыДляОбработки.Ссылка = Покупатели.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК ДанныеРеестра
	|	ПО Покупатели.СчетФактураВыданный = ДанныеРеестра.Ссылка
	|		И НЕ ДанныеРеестра.ДополнительнаяЗапись
	|ИТОГИ ПО Ссылка
	|";
	
	ОтборОснования = Новый Структура("ДокументОснование");
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДокументов = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДокументов.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаДокументов.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			ДокументОбъект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(
				ВыборкаДокументов.Ссылка, ВыборкаДокументов.ВерсияДанных, Параметры.Очередь);
			Если ДокументОбъект = Неопределено Тогда
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтчетКомитенту;
			
			ЗначенияРеквизитов = Новый Структура(РеквизитыСтрокой);
			
			ПерваяСтрока = Истина;
			
			ВыборкаОснований = ВыборкаДокументов.Выбрать();
			Пока ВыборкаОснований.Следующий() Цикл
				
				Если ПерваяСтрока Тогда
					ПерваяСтрока = Ложь;
					ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, ВыборкаОснований);
					Продолжить;
				КонецЕсли;
				
				Для Каждого Реквизит Из НовыеРеквизиты Цикл
					
					Если ЗначенияРеквизитов.Свойство(Реквизит)
						И ЗначенияРеквизитов[Реквизит] <> ВыборкаОснований[Реквизит] Тогда
						ЗначенияРеквизитов.Удалить(Реквизит);
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
			Если ЗначенияРеквизитов.Количество() > 0 Тогда
				ЗаполнитьЗначенияСвойств(ДокументОбъект, ЗначенияРеквизитов);
			КонецЕсли;
			
			ЗначенияРеквизитов = Неопределено;
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект,,, РежимЗаписиДокумента.Запись);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), ВыборкаДокументов.Ссылка);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
