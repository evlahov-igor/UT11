
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоДокументПродажи         = ?(Параметры.Свойство("ЭтоДокументПродажи"),Параметры.ЭтоДокументПродажи,Ложь);
	ЭтоДокументЗакупки         = ?(Параметры.Свойство("ЭтоДокументЗакупки"),Параметры.ЭтоДокументЗакупки,Ложь);
	ДатаДокумента              = Параметры.ДатаДокумента;
	ВалютаДокумента            = Параметры.ВалютаДокумента;
	СуммаДокумента             = Параметры.СуммаДокумента;
	СуммаДокументаПриОткрытии  = Параметры.СуммаДокумента;
	ВалютаДокументаПриОткрытии = Параметры.ВалютаДокумента;
	Организация                = Параметры.Организация;
	ВалютаРегУчета             = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Организация);
	
	ВалютаВзаиморасчетов            = Параметры.ВалютаВзаиморасчетов;
	ВалютаВзаиморасчетовПриОткрытии = Параметры.ВалютаВзаиморасчетов;
	
	ТолькоПросмотр                     = Параметры.ТолькоПросмотр;
	ВалютаДокументаТолькоПросмотр      = Параметры.Свойство("ВалютаДокументаТолькоПросмотр") 
											И Параметры.ВалютаДокументаТолькоПросмотр;
	
	ВалютаВзаиморасчетовТолькоПросмотр = Параметры.Свойство("ВалютаВзаиморасчетовТолькоПросмотр")
											И Параметры.ВалютаВзаиморасчетовТолькоПросмотр;
	
	НеПоказыватьРасчеты                = Параметры.Свойство("НеПоказыватьРасчеты") 
											И Параметры.НеПоказыватьРасчеты;
	
	НеПересчитыватьСуммуДокумента      = Параметры.Свойство("НеПересчитыватьСуммуДокумента") 
											И Параметры.НеПересчитыватьСуммуДокумента;
	
	Если ВалютаВзаиморасчетов = ВалютаДокумента И Параметры.СуммаВзаиморасчетов = 0 Тогда
		СуммаВзаиморасчетов = Параметры.СуммаДокумента;
	Иначе
		СуммаВзаиморасчетов = Параметры.СуммаВзаиморасчетов;
	КонецЕсли;
	
	Если ВалютаДокумента = ВалютаРегУчета И НЕ ВалютаВзаиморасчетов = ВалютаРегУчета Тогда
		ЧислительВалютыВзаиморасчетов = Параметры.КурсЧислитель;
		ЗнаменательВалютыВзаиморасчетов = Параметры.КурсЗнаменатель;
		ЧислительВалютыДокумента = 1;
		ЗнаменательВалютыДокумента = 1;
	Иначе
		ЧислительВалютыДокумента = Параметры.КурсЧислитель;
		ЗнаменательВалютыДокумента = Параметры.КурсЗнаменатель;
		ЧислительВалютыВзаиморасчетов = 1;
		ЗнаменательВалютыВзаиморасчетов = 1;
	КонецЕсли;
	
	ЗаполнитьНадписиЧислителяЗнаменателяВалют();
	
	УстановитьВидимостьЭлементов();
	
	ЗаполнитьСписокКурсовВалют();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если НЕ ЗавершениеРаботы Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если Модифицированность И Не Готово Тогда
			
			Отказ = Истина;
			
			СписокКнопок = Новый СписокЗначений();
			СписокКнопок.Добавить("Закрыть", НСтр("ru = 'Закрыть'"));
			СписокКнопок.Добавить("НеЗакрывать", НСтр("ru = 'Не закрывать'"));
			
			ПоказатьВопрос(
				Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект), 
				НСтр("ru = 'Все измененные данные будут потеряны. Закрыть форму?'"), 
				СписокКнопок);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = "Закрыть" Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЧислительВалютыВзаиморасчетовПриИзменении(Элемент)
	ОчиститьСообщения();
	ПересчитатьСуммуВзаиморасчетов();
КонецПроцедуры

&НаКлиенте
Процедура ЧислительВалютыВзаиморасчетовОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ОбработкаВыбораПолейВалютыВзаиморасчетов(ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ЗнаменательВалютыВзаиморасчетовПриИзменении(Элемент)
	ОчиститьСообщения();
	ПересчитатьСуммуВзаиморасчетов();
КонецПроцедуры

&НаКлиенте
Процедура ЗнаменательВалютыВзаиморасчетовОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ОбработкаВыбораПолейВалютыВзаиморасчетов(ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораПолейВалютыВзаиморасчетов(ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ВыбранноеЗначение = 0 Тогда
		ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения("КурсВалютыВзаиморасчетовОбработкаВыбораЗавершение", ЭтотОбъект);
		ПоказатьВводДаты(ОбработчикОповещенияОЗакрытии, ДатаДокумента, НСтр("ru = 'Укажите дату курса валюты'"), ЧастиДаты.Дата);
	Иначе
		ЧислительВалютыВзаиморасчетов = ВыбранноеЗначение.КурсЧислитель;
		ЗнаменательВалютыВзаиморасчетов = ВыбранноеЗначение.КурсЗнаменатель;
		ОчиститьСообщения();
		ПересчитатьСуммуВзаиморасчетов();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КурсВалютыВзаиморасчетовОбработкаВыбораЗавершение(ДатаКурса, ДополнительныеПараметры) Экспорт
	
	Если ДатаКурса <> Неопределено Тогда
		КурсВалютыВзаиморасчетовОбработкаВыбораНаСервере(ДатаКурса);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЧислительВалютыДокументаПриИзменении(Элемент)
	ОчиститьСообщения();
	ПересчитатьСуммуВзаиморасчетов();
КонецПроцедуры

&НаКлиенте
Процедура ЧислительВалютыДокументаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОбработкаВыбораПолейВалютыДокумента(ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗнаменательВалютыДокументаПриИзменении(Элемент)
	ОчиститьСообщения();
	ПересчитатьСуммуВзаиморасчетов();
КонецПроцедуры

&НаКлиенте
Процедура ЗнаменательВалютыДокументаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ОбработкаВыбораПолейВалютыДокумента(ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораПолейВалютыДокумента(ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ВыбранноеЗначение = 0 Тогда
		ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения("КурсДокументаОбработкаВыбораЗавершение", ЭтотОбъект);
		ПоказатьВводДаты(ОбработчикОповещенияОЗакрытии, ДатаДокумента, НСтр("ru = 'Укажите дату курса валюты'"), ЧастиДаты.Дата);
	Иначе
		ЧислительВалютыДокумента = ВыбранноеЗначение.КурсЧислитель;
		ЗнаменательВалютыДокумента = ВыбранноеЗначение.КурсЗнаменатель;
		ОчиститьСообщения();
		ПересчитатьСуммуВзаиморасчетов();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КурсДокументаОбработкаВыбораЗавершение(ДатаКурса, ДополнительныеПараметры) Экспорт
	
	Если ДатаКурса <> Неопределено Тогда
		КурсДокументаОбработкаВыбораНаСервере(ДатаКурса);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаВзаиморасчетовПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(ВалютаВзаиморасчетов) Тогда
		ВалютаВзаиморасчетов = ВалютаВзаиморасчетовПриОткрытии;
	КонецЕсли;
	
	Если ВалютаВзаиморасчетов = ВалютаРегУчета Тогда
		ЧислительВалютыВзаиморасчетов = 1;
		ЗнаменательВалютыВзаиморасчетов = 1;
	КонецЕсли;
	
	ПересчитатьСуммы();
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаДокументаПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(ВалютаДокументаПриОткрытии) ИЛИ НеПересчитыватьСуммуДокумента Тогда
		Возврат;
	КонецЕсли;
	
	Если СуммаДокумента = 0 Тогда
		
		ПересчитатьСуммуПриИзмененииВалюты(КодВозвратаДиалога.Да, Неопределено);
		
	ИначеЕсли ВалютаДокументаПриОткрытии <> ВалютаДокумента И ЗначениеЗаполнено(ВалютаДокумента) Тогда
		ТекстСообщения = НСтр("ru='Пересчитать суммы в документе в валюту ""%Валюта%""?'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Валюта%", ВалютаДокумента);
		
		Оповещение = Новый ОписаниеОповещения("ПересчитатьСуммуПриИзмененииВалюты", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстСообщения, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		Если ВалютаДокумента = ВалютаРегУчета ИЛИ ВалютаВзаиморасчетов = ВалютаДокумента Тогда
			ЧислительВалютыДокумента = 1;
			ЗнаменательВалютыДокумента = 1;
		КонецЕсли;
		
		ВалютаДокумента = ВалютаДокументаПриОткрытии;
		СуммаДокумента = СуммаДокументаПриОткрытии;
		
		ПересчитатьСуммы();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСуммуПриИзмененииВалюты(ОтветНаВопрос, ДополнительныеПараметры) Экспорт
	
	Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
		ПересчитатьСуммуДокумента();
		НеобходимПересчетСуммДокумента = Истина;
	КонецЕсли;
	
	ОчиститьСообщения();
	
	Если ВалютаДокумента = ВалютаРегУчета ИЛИ ВалютаДокумента = ВалютаВзаиморасчетов Тогда
		ЧислительВалютыДокумента = 1;
		ЗнаменательВалютыДокумента = 1;
	КонецЕсли;
	
	ПересчитатьСуммы();
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаВзаиморасчетовПриИзменении(Элемент)
	ПересчитатьКурс();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	СтруктураРеквизитовФормы = Новый Структура;
	СтруктураРеквизитовФормы.Вставить("ВалютаВзаиморасчетов", ВалютаВзаиморасчетов);
	СтруктураРеквизитовФормы.Вставить("Валюта",               ВалютаДокумента);
	
	Если НЕ ВалютаВзаиморасчетов = ВалютаРегУчета И ВалютаДокумента = ВалютаРегУчета Тогда
		СтруктураРеквизитовФормы.Вставить("КурсЧислитель",   ЧислительВалютыВзаиморасчетов);
		СтруктураРеквизитовФормы.Вставить("КурсЗнаменатель", ЗнаменательВалютыВзаиморасчетов);
	Иначе
		СтруктураРеквизитовФормы.Вставить("КурсЧислитель",   ЧислительВалютыДокумента);
		СтруктураРеквизитовФормы.Вставить("КурсЗнаменатель", ЗнаменательВалютыДокумента);
	КонецЕсли;
	
	СтруктураРеквизитовФормы.Вставить("СуммаВзаиморасчетов", СуммаВзаиморасчетов);
	
	НеобходимПересчет = СуммаДокумента <> 0 И ЗначениеЗаполнено(ВалютаДокументаПриОткрытии);
	
	СтруктураРеквизитовФормы.Вставить("НеобходимПересчетСуммДокумента", НеобходимПересчетСуммДокумента И НеобходимПересчет);
	
	Готово = Истина;
	
	Закрыть(СтруктураРеквизитовФормы);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписокКурсовВалют(ИзмененаВалюта=Ложь)
	
	СписокКурсовВалют = Новый СписокЗначений;
	
	Если ВалютаДокумента = ВалютаРегУчета 
		ИЛИ ВалютаВзаиморасчетов = ВалютаРегУчета Тогда
		
		Если НЕ ВалютаДокумента = ВалютаРегУчета Тогда
			КурсНаДату = РаботаСКурсамиВалютУТ.ПолучитьКурсВалюты(ВалютаДокумента, ДатаДокумента, ВалютаРегУчета);
			Если Не ЗначениеЗаполнено(ЧислительВалютыДокумента) ИЛИ ИзмененаВалюта Тогда
				ЗнаменательВалютыДокумента = КурсНаДату.КурсЗнаменатель;
				ЧислительВалютыДокумента = КурсНаДату.КурсЧислитель;
			КонецЕсли;
			
			Структура = Новый Структура("КурсЧислитель, КурсЗнаменатель", КурсНаДату.КурсЧислитель, КурсНаДату.КурсЗнаменатель); 
			СписокКурсовВалют.Добавить(Структура, Формат(КурсНаДату.КурсЧислитель, "ЧДЦ=4") + " " + ВалютаВзаиморасчетов + " = " + Формат(КурсНаДату.КурсЗнаменатель, "ЧДЦ=4") +
				" " + ВалютаДокумента + " " + СтрШаблон(НСтр("ru = '(на %1)'"), Формат(ДатаДокумента, "ДЛФ = D")));

				
			Для ДеньМинус = 1 По 5 Цикл
				ДатаКурса = ДатаДокумента - (ДеньМинус * 86400);
				КурсНаДату = РаботаСКурсамиВалютУТ.ПолучитьКурсВалюты(ВалютаДокумента, ДатаКурса, ВалютаРегУчета);
				
				Структура = Новый Структура("КурсЧислитель, КурсЗнаменатель", КурсНаДату.КурсЧислитель, КурсНаДату.КурсЗнаменатель); 
				СписокКурсовВалют.Добавить(Структура, Формат(КурсНаДату.КурсЧислитель, "ЧДЦ=4") +" " + ВалютаВзаиморасчетов + " = " + Формат(КурсНаДату.КурсЗнаменатель, "ЧДЦ=4") +
					" " + ВалютаДокумента + " " + СтрШаблон(НСтр("ru = '(на %1)'"), Формат(ДатаКурса, "ДЛФ = D")));
					
			КонецЦикла;
			СписокКурсовВалют.Добавить(0, НСтр("ru = '<Выбрать другую дату>'"));
			
			Элементы.ЧислительВалютыДокумента.СписокВыбора.Очистить();
			Элементы.ЗнаменательВалютыДокумента.СписокВыбора.Очистить();
			
			Для Каждого КурсНаДату Из СписокКурсовВалют Цикл
				Элементы.ЧислительВалютыДокумента.СписокВыбора.Добавить(КурсНаДату.Значение, КурсНаДату.Представление);
				Элементы.ЗнаменательВалютыДокумента.СписокВыбора.Добавить(КурсНаДату.Значение, КурсНаДату.Представление);
			КонецЦикла;
		Иначе
			КурсНаДату = РаботаСКурсамиВалютУТ.ПолучитьКурсВалюты(ВалютаВзаиморасчетов, ДатаДокумента, ВалютаРегУчета);
			Если Не ЗначениеЗаполнено(ЧислительВалютыВзаиморасчетов) ИЛИ ИзмененаВалюта Тогда
				ЧислительВалютыВзаиморасчетов = КурсНаДату.КурсЧислитель;
				ЗнаменательВалютыВзаиморасчетов = КурсНаДату.КурсЗнаменатель;
			КонецЕсли;
			
			Структура = Новый Структура("КурсЧислитель, КурсЗнаменатель", КурсНаДату.КурсЧислитель, КурсНаДату.КурсЗнаменатель); 
			СписокКурсовВалют.Добавить(Структура, Формат(КурсНаДату.КурсЧислитель, "ЧДЦ=4") +" " + ВалютаДокумента + " = " + Формат(КурсНаДату.КурсЗнаменатель, "ЧДЦ=4") +
				" " + ВалютаВзаиморасчетов + " " + СтрШаблон(НСтр("ru = '(на %1)'"), Формат(ДатаДокумента, "ДЛФ = D")));
				
			Для ДеньМинус = 1 По 5 Цикл
				ДатаКурса = ДатаДокумента - (ДеньМинус * 86400);
				КурсНаДату = РаботаСКурсамиВалютУТ.ПолучитьКурсВалюты(ВалютаВзаиморасчетов, ДатаКурса, ВалютаРегУчета);
				
			Структура = Новый Структура("КурсЧислитель, КурсЗнаменатель", КурсНаДату.КурсЧислитель, КурсНаДату.КурсЗнаменатель); 
				СписокКурсовВалют.Добавить(Структура, Формат(КурсНаДату.КурсЧислитель, "ЧДЦ=4") +" " + ВалютаДокумента + " = " + Формат(КурсНаДату.КурсЗнаменатель, "ЧДЦ=4") +
					" " + ВалютаВзаиморасчетов + " " + СтрШаблон(НСтр("ru = '(на %1)'"), Формат(ДатаКурса, "ДЛФ = D")));
					
			КонецЦикла;
			СписокКурсовВалют.Добавить(0, НСтр("ru = '<Выбрать другую дату>'"));
			
			Элементы.ЧислительВалютыВзаиморасчетов.СписокВыбора.Очистить();
			Элементы.ЗнаменательВалютыВзаиморасчетов.СписокВыбора.Очистить();
			
			Для Каждого КурсНаДату Из СписокКурсовВалют Цикл
				Элементы.ЧислительВалютыВзаиморасчетов.СписокВыбора.Добавить(КурсНаДату.Значение, КурсНаДату.Представление);
				Элементы.ЗнаменательВалютыВзаиморасчетов.СписокВыбора.Добавить(КурсНаДату.Значение, КурсНаДату.Представление);
			КонецЦикла;
		КонецЕсли;
		
	ИначеЕсли ЗначениеЗаполнено(ВалютаДокумента) И ЗначениеЗаполнено(ВалютаВзаиморасчетов) Тогда
		
		КурсВалютыДокументаНаДату = РаботаСКурсамиВалютУТ.ПолучитьКурсВалюты(ВалютаДокумента, ДатаДокумента, ВалютаРегУчета);
		КурсВалютыВзаиморасчетовНаДату = РаботаСКурсамиВалютУТ.ПолучитьКурсВалюты(ВалютаВзаиморасчетов, ДатаДокумента, ВалютаРегУчета);
		
		КурсПересчета = РаботаСКурсамиВалютУТ.ПолучитьКроссКурсВалют(КурсВалютыДокументаНаДату, КурсВалютыВзаиморасчетовНаДату);
		Если Не ЗначениеЗаполнено(ЧислительВалютыДокумента) ИЛИ ИзмененаВалюта Тогда
			ЗнаменательВалютыДокумента = КурсПересчета.КурсЗнаменатель;
			ЧислительВалютыДокумента = КурсПересчета.КурсЧислитель;
		КонецЕсли;
		
		Структура = Новый Структура("КурсЧислитель, КурсЗнаменатель", ЧислительВалютыДокумента, ЗнаменательВалютыДокумента); 
		СписокКурсовВалют.Добавить(Структура, Формат(КурсПересчета.КурсЧислитель, "ЧДЦ=4") +" " + ВалютаВзаиморасчетов + " = " + Формат(КурсПересчета.КурсЗнаменатель, "ЧДЦ=4") +
			" " + ВалютаДокумента + " " + СтрШаблон(НСтр("ru = '(на %1)'"), Формат(ДатаДокумента, "ДЛФ = D")));
		
		Для ДеньМинус = 1 По 5 Цикл
			ДатаКурса = ДатаДокумента - (ДеньМинус * 86400);
			КурсВалютыДокументаНаДату = РаботаСКурсамиВалютУТ.ПолучитьКурсВалюты(ВалютаДокумента, ДатаКурса, ВалютаРегУчета);
			КурсВалютыВзаиморасчетовНаДату = РаботаСКурсамиВалютУТ.ПолучитьКурсВалюты(ВалютаВзаиморасчетов, ДатаКурса, ВалютаРегУчета);
			КурсПересчета = РаботаСКурсамиВалютУТ.ПолучитьКроссКурсВалют(КурсВалютыДокументаНаДату,КурсВалютыВзаиморасчетовНаДату);
			Структура = Новый Структура("КурсЧислитель, КурсЗнаменатель", КурсПересчета.КурсЧислитель, КурсПересчета.КурсЗнаменатель); 
			СписокКурсовВалют.Добавить(Структура, Формат(КурсПересчета.КурсЧислитель, "ЧДЦ=4") +" " + ВалютаВзаиморасчетов + " = " + Формат(КурсПересчета.КурсЗнаменатель, "ЧДЦ=4") +
				" " + ВалютаДокумента + " " + СтрШаблон(НСтр("ru = '(на %1)'"), Формат(ДатаКурса, "ДЛФ = D")));
		КонецЦикла;
		СписокКурсовВалют.Добавить(0, НСтр("ru = '<Выбрать другую дату>'"));
		
		Элементы.ЧислительВалютыДокумента.СписокВыбора.Очистить();
		Элементы.ЗнаменательВалютыДокумента.СписокВыбора.Очистить();
		
		Для Каждого КурсНаДату Из СписокКурсовВалют Цикл
			Элементы.ЧислительВалютыДокумента.СписокВыбора.Добавить(КурсНаДату.Значение, КурсНаДату.Представление);
			Элементы.ЗнаменательВалютыДокумента.СписокВыбора.Добавить(КурсНаДату.Значение, КурсНаДату.Представление);
		КонецЦикла;
		
	КонецЕсли;
	
	Если Элементы.ЧислительВалютыДокумента.СписокВыбора.Количество()>0
			И Элементы.ЧислительВалютыДокумента.СписокВыбора.НайтиПоЗначению(ЧислительВалютыДокумента) = Неопределено 
			И ЗначениеЗаполнено(ЧислительВалютыДокумента) Тогда
		Структура = Новый Структура("КурсЧислитель, КурсЗнаменатель", ЧислительВалютыДокумента, ЗнаменательВалютыДокумента);
		Представление = Формат(ЧислительВалютыДокумента, "ЧДЦ=4") +" " + ВалютаВзаиморасчетов + " = " +
			Формат(ЗнаменательВалютыДокумента, "ЧДЦ=4") + " " + ВалютаДокумента;
		Элементы.ЧислительВалютыДокумента.СписокВыбора.Добавить(Структура, Представление);
		Элементы.ЗнаменательВалютыДокумента.СписокВыбора.Добавить(Структура, Представление);
	КонецЕсли;
	
	Если Элементы.ЧислительВалютыВзаиморасчетов.СписокВыбора.Количество()>0 
			И Элементы.ЧислительВалютыВзаиморасчетов.СписокВыбора.НайтиПоЗначению(ЧислительВалютыВзаиморасчетов) = Неопределено 
			И ЗначениеЗаполнено(ЧислительВалютыВзаиморасчетов) Тогда
		Структура = Новый Структура("КурсЧислитель, КурсЗнаменатель", ЧислительВалютыВзаиморасчетов, ЗнаменательВалютыВзаиморасчетов); 
		Представление = Формат(ЧислительВалютыВзаиморасчетов, "ЧДЦ=4") +" " + ВалютаДокумента + " = " +
			Формат(ЗнаменательВалютыВзаиморасчетов, "ЧДЦ=4") + " " + ВалютаВзаиморасчетов;
		Элементы.ЧислительВалютыВзаиморасчетов.СписокВыбора.Добавить(Структура, Представление);
		Элементы.ЗнаменательВалютыВзаиморасчетов.СписокВыбора.Добавить(Структура, Представление);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура КурсВалютыВзаиморасчетовОбработкаВыбораНаСервере(ДатаКурса)
	
	Если НЕ ДатаКурса > ТекущаяДатаСеанса() Тогда
		ТекстНаДату = " " + СтрШаблон(НСтр("ru = '(на %1)'"), Формат(ДатаКурса, "ДЛФ = D"));
	Иначе
		ТекстНаДату = "";
	КонецЕсли;
	
	КурсНаДату = РаботаСКурсамиВалютУТ.ПолучитьКурсВалюты(ВалютаВзаиморасчетов, ДатаКурса, ВалютаРегУчета);
	ЧислительВалютыВзаиморасчетов = КурсНаДату.КурсЧислитель;
	ЗнаменательВалютыВзаиморасчетов = КурсНаДату.КурсЗнаменатель;
	
	Если Элементы.ЧислительВалютыВзаиморасчетов.СписокВыбора.НайтиПоЗначению(ЧислительВалютыВзаиморасчетов) = Неопределено Тогда
		Структура = Новый Структура("КурсЧислитель, КурсЗнаменатель", ЧислительВалютыВзаиморасчетов, ЗнаменательВалютыВзаиморасчетов); 
		Элементы.ЧислительВалютыВзаиморасчетов.СписокВыбора.Добавить(Структура, Формат(КурсНаДату.КурсЧислитель, "ЧДЦ=4") + ТекстНаДату);
	КонецЕсли;
	
	ПересчитатьСуммуВзаиморасчетов();
	
КонецПроцедуры

&НаСервере
Процедура КурсДокументаОбработкаВыбораНаСервере(ДатаКурса)
	
	Если НЕ ДатаКурса > ТекущаяДатаСеанса() Тогда
		ТекстНаДату = " " + СтрШаблон(НСтр("ru = '(на %1)'"), Формат(ДатаКурса, "ДЛФ = D"));
	Иначе
		ТекстНаДату = "";
	КонецЕсли;
	
	Если ВалютаВзаиморасчетов = ВалютаРегУчета Тогда
	
		КурсНаДату = РаботаСКурсамиВалютУТ.ПолучитьКурсВалюты(ВалютаДокумента, ДатаКурса, ВалютаРегУчета);
		ЧислительВалютыДокумента = КурсНаДату.КурсЧислитель;
		ЗнаменательВалютыДокумента = КурсНаДату.КурсЗнаменатель;
		
		Если Элементы.ЧислительВалютыДокумента.СписокВыбора.НайтиПоЗначению(ЧислительВалютыДокумента) = Неопределено Тогда
			Структура = Новый Структура("КурсЧислитель, КурсЗнаменатель", ЧислительВалютыДокумента, ЗнаменательВалютыДокумента); 
			Элементы.ЧислительВалютыДокумента.СписокВыбора.Добавить(Структура,
																Формат(КурсНаДату.КурсЧислитель, "ЧДЦ=4") + ТекстНаДату);
		КонецЕсли;
		
	Иначе
		
		КурсВалютыДокументаНаДату = РаботаСКурсамиВалютУТ.ПолучитьКурсВалюты(ВалютаДокумента, ДатаКурса, ВалютаРегУчета);
		КурсВалютыВзаиморасчетовНаДату = РаботаСКурсамиВалютУТ.ПолучитьКурсВалюты(ВалютаВзаиморасчетов, ДатаКурса, ВалютаРегУчета);
		
		КурсПересчета = РаботаСКурсамиВалютУТ.ПолучитьКроссКурсВалют(КурсВалютыДокументаНаДату,КурсВалютыВзаиморасчетовНаДату);
		
		ЗнаменательВалютыДокумента = КурсПересчета.КурсЗнаменатель;
		ЧислительВалютыДокумента = КурсПересчета.КурсЧислитель;
		
		Если Элементы.ЧислительВалютыДокумента.СписокВыбора.НайтиПоЗначению(ЗнаменательВалютыДокумента) = Неопределено Тогда
			Структура = Новый Структура("КурсЧислитель, КурсЗнаменатель", ЧислительВалютыДокумента, ЗнаменательВалютыДокумента); 
			Элементы.ЧислительВалютыДокумента.СписокВыбора.Добавить(Структура,
																Формат(КурсПересчета.КурсЧислитель, "ЧДЦ=4") + ТекстНаДату);
		КонецЕсли;
		
	КонецЕсли;
	
	ПересчитатьСуммуВзаиморасчетов();
	
	ЗаполнитьНадписиЧислителяЗнаменателяВалют();
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьСуммуДокумента()
	
	Если СуммаДокументаПриОткрытии > 0 Тогда
		СуммаДокумента = РаботаСКурсамиВалютУТ.ПересчитатьВВалюту(СуммаДокументаПриОткрытии, ВалютаРегУчета,
							ВалютаДокументаПриОткрытии, ВалютаДокумента, ДатаДокумента);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьСуммуВзаиморасчетов()
	
	Если СуммаДокумента <> 0 И ЗначениеЗаполнено(ВалютаВзаиморасчетов) Тогда
		Если ВалютаВзаиморасчетов = ВалютаРегУчета Или ВалютаДокумента = ВалютаРегУчета Тогда
			
			ПараметрыВалютыДок = Новый Структура("Валюта, КурсЧислитель, КурсЗнаменатель",
				ВалютаДокумента, ЧислительВалютыДокумента, ЗнаменательВалютыДокумента);
			ПараметрыВалютыВР  = Новый Структура("Валюта, КурсЧислитель, КурсЗнаменатель",
				ВалютаВзаиморасчетов, ЧислительВалютыВзаиморасчетов, ЗнаменательВалютыВзаиморасчетов);
			
			СуммаВзаиморасчетов = РаботаСКурсамиВалютУТ.ПересчитатьПоКурсу(СуммаДокумента,
				ПараметрыВалютыДок,ПараметрыВалютыВР);
			
		Иначе
			
			Если ЗнаменательВалютыДокумента = 0 Тогда
				СуммаВзаиморасчетов = 0;
			Иначе
				СуммаВзаиморасчетов = СуммаДокумента*ЧислительВалютыДокумента/ЗнаменательВалютыДокумента;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьКурс()
	
	Если НЕ ЗначениеЗаполнено(ВалютаДокумента) Тогда
		ЧислительВалютыДокумента = 1;
	ИначеЕсли НЕ ВалютаДокумента = ВалютаРегУчета И ВалютаВзаиморасчетов = ВалютаРегУчета Тогда
		ЧислительВалютыДокумента = СуммаВзаиморасчетов/СуммаДокумента/ЗнаменательВалютыВзаиморасчетов;
	ИначеЕсли НЕ ВалютаВзаиморасчетов = ВалютаРегУчета И ВалютаДокумента = ВалютаРегУчета Тогда
		ЧислительВалютыВзаиморасчетов = ?(СуммаВзаиморасчетов=0,0,СуммаДокумента*ЗнаменательВалютыВзаиморасчетов/СуммаВзаиморасчетов);
	Иначе
		ЧислительВалютыДокумента = СуммаВзаиморасчетов*ЗнаменательВалютыДокумента/СуммаДокумента/ЗнаменательВалютыВзаиморасчетов;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементов()
	
	ОбеВалютыЗаполнены = ЗначениеЗаполнено(ВалютаВзаиморасчетов) И ЗначениеЗаполнено(ВалютаДокумента);
	
	ВидимостьКурсаВзаиморасчетов = (ВалютаВзаиморасчетов <> ВалютаРегУчета 
									И ВалютаДокумента = ВалютаРегУчета 
									И ОбеВалютыЗаполнены И НЕ НеПоказыватьРасчеты);
	
	Элементы.ЧислительВалютыВзаиморасчетов.Видимость = ВидимостьКурсаВзаиморасчетов;
	Элементы.ЧислительВалютыВзаиморасчетовНадпись.Видимость = ВидимостьКурсаВзаиморасчетов;
	Элементы.ЗнаменательВалютыВзаиморасчетов.Видимость = ВидимостьКурсаВзаиморасчетов;
	Элементы.ЗнаменательВалютыВзаиморасчетовНадпись.Видимость = ВидимостьКурсаВзаиморасчетов;
	Элементы.ЗаголовокЧислительВалютыВзаиморасчетов.Видимость = ВидимостьКурсаВзаиморасчетов;
	
	ВидимостьКурсаДокумента = (ВалютаДокумента <> ВалютаРегУчета 
								И ВалютаВзаиморасчетов <> ВалютаДокумента 
								И ОбеВалютыЗаполнены И НЕ НеПоказыватьРасчеты);
	
	Элементы.ЧислительВалютыДокумента.Видимость = ВидимостьКурсаДокумента;
	Элементы.ЧислительВалютыДокументаНадпись.Видимость = ВидимостьКурсаДокумента;
	Элементы.ЗнаменательВалютыДокумента.Видимость = ВидимостьКурсаДокумента;
	Элементы.ЗнаменательВалютыДокументаНадпись.Видимость = ВидимостьКурсаДокумента;
	Элементы.ЗаголовокКурсДокумента.Видимость = ВидимостьКурсаДокумента;
	
	Элементы.ПолеСуммаДокумента.Видимость = СуммаДокумента <> 0;
	Элементы.СуммаВзаиморасчетов.Видимость = НЕ НеПоказыватьРасчеты И СуммаДокумента <> 0;
	Элементы.ЗаголовокСуммаВзаиморасчетов.Видимость = НЕ НеПоказыватьРасчеты;
	Элементы.ВалютаВзаиморасчетов.Видимость = НЕ НеПоказыватьРасчеты;
	
	Если ЭтоДокументПродажи И НЕ Пользователи.РолиДоступны("ИзменениеКурсаВДокументахПродажи") 
		ИЛИ ЭтоДокументЗакупки И НЕ Пользователи.РолиДоступны("ИзменениеКурсаВДокументахЗакупки") Тогда
		
		ТолькоПросмотр = Истина;
		
	Иначе
		
		Элементы.СуммаВзаиморасчетов.Доступность = ВалютаДокумента <> ВалютаВзаиморасчетов 
													И СуммаДокумента <> 0 И НЕ ТолькоПросмотр;
		
		Элементы.ВалютаДокумента.ТолькоПросмотр = ВалютаДокументаТолькоПросмотр ИЛИ ТолькоПросмотр;
		Элементы.ВалютаВзаиморасчетов.ТолькоПросмотр = ВалютаВзаиморасчетовТолькоПросмотр ИЛИ ТолькоПросмотр;
		Элементы.ЧислительВалютыВзаиморасчетов.ТолькоПросмотр = ТолькоПросмотр;
		Элементы.ЧислительВалютыДокумента.ТолькоПросмотр = ТолькоПросмотр;
	КонецЕсли;
	
	Элементы.ФормаПеренестиВДокумент.Доступность = НЕ ТолькоПросмотр;
	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьСуммы()
	
	ЗаполнитьСписокКурсовВалют(Истина);
	ПересчитатьСуммуВзаиморасчетов();
	ЗаполнитьНадписиЧислителяЗнаменателяВалют();
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНадписиЧислителяЗнаменателяВалют()
	
	ЧислительВалютыВзаиморасчетовНадпись = "" + ВалютаДокумента + " =";
	ЗнаменательВалютыВзаиморасчетовНадпись = "" + ВалютаВзаиморасчетов;
	
	ЧислительВалютыДокументаНадпись = "" + ВалютаВзаиморасчетов + " =";
	ЗнаменательВалютыДокументаНадпись = "" + ВалютаДокумента;
	
КонецПроцедуры

#КонецОбласти

