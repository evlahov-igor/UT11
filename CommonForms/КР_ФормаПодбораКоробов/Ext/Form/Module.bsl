////////////////////////////////////////////////////
//// Объект КР_ФормаПодбораКоробов - предназначен для подбора товаров
//// Создан: 16.08.2022, Мельников А.А., КРОК, Jira№ A2105505-377
//// На момент создания вызывался из команд ТЧ Товары Заказа на перемещение

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МассивКоробов = Новый Массив;
	Если Параметры.Свойство("СписокПодобранныхКоробов") И ТипЗнч(Параметры.СписокПодобранныхКоробов) = Тип("Массив") Тогда
		Для Каждого ДанныеСтроки Из Параметры.СписокПодобранныхКоробов Цикл
			СтрокаКорзины = Корзина.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаКорзины, ДанныеСтроки);
			МассивКоробов.Добавить(СтрокаКорзины.КР_Короб);
		КонецЦикла;
	КонецЕсли;
	МассивКоробов = ОбщегоНазначенияКлиентСервер.СвернутьМассив(МассивКоробов);
	СписокКоробов.ЗагрузитьЗначения(МассивКоробов);
	КоличествоПодобранныхТоваров = Корзина.Количество();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	// << 28.11.2022,  Федоров Д.Е.,  КРОК,  Jira№A2105505-933
	ОбъектВладелец		= ВладелецФормы.Объект;
	СсылкаВладелец		= ОбъектВладелец.Ссылка;
	ТипЗначенияСсылки	= ТипЗнч(СсылкаВладелец);
	Если ТипЗначенияСсылки = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		ДокументПодбораКоробов	= СсылкаВладелец;
		Склад					= ОбъектВладелец.Склад;
	ИначеЕсли ТипЗначенияСсылки = Тип("ДокументСсылка.ЗаказНаПеремещение") Тогда
		ДокументПодбораКоробов = СсылкаВладелец;
		Склад					= ОбъектВладелец.СкладОтправитель;
	Иначе
		ШаблонСообщения = НСтр("ru='Для типа документа %1 не предусмотрена работа с формой подбора коробов.'");
		Сообщение		= СтрШаблон(ШаблонСообщения, ТипЗначенияСсылки);
		ОбщегоНазначенияКлиент.СообщитьПользователю(Сообщение);
	КонецЕсли;
	// >> 28.11.2022,  Федоров Д.Е.,  КРОК,  Jira№A2105505-933
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// Логика скопирована из типового ПодборТоваровВДокументПродажи
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если ПеренестиВДокумент Тогда
		АдресТоваровВХранилище = АдресТоваровВХранилище(ЭтотОбъект.ВладелецФормы.УникальныйИдентификатор);
		
		Структура = Новый Структура("АдресТоваровВХранилище", АдресТоваровВХранилище);
		Структура.Вставить("ДатаОтгрузкиВсехСтрокОднойДатой", Дата(1, 1, 1));
		
		ОбеспечениеВДокументахКлиент.ВставитьПараметрыПодобранныхТоваров(
																	Структура,
																	Корзина,
																	Дата(1, 1, 1));
		
		ОповеститьОВыборе(Структура);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКорзина

&НаКлиенте
Процедура КорзинаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина; 
	
КонецПроцедуры

&НаКлиенте
Процедура КорзинаПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;

	МассивКоробов = Новый Массив;
	Для Каждого ИдентификаторСтрокиПодбора Из Элементы.Корзина.ВыделенныеСтроки Цикл
		СтрокаПодбора = Корзина.НайтиПоИдентификатору(ИдентификаторСтрокиПодбора);
		МассивКоробов.Добавить(СтрокаПодбора.КР_Короб);	
	КонецЦикла;                                        
	
	ОбщегоНазначенияКлиентСервер.СвернутьМассив(МассивКоробов);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПодтвержденияУдаленияКороба", ЭтотОбъект, 
								Новый Структура("Короб", МассивКоробов));	
	ПоказатьВопрос(ОписаниеОповещения, 
								НСтр("ru = 'Будут удалены все строки товаров с текущим коробом.	
									 |Удалить текущий короб из списка подобранных товаров?'"), 
								РежимДиалогаВопрос.ДаНет); 
	
КонецПроцедуры

// << 28.11.2022,  Федоров Д.Е.,  КРОК,  Jira№A2105505-933
// Команда"Заполнить по штрихкодам"
//
// Параметры:
//  Команда - КомандаФормы - Вызываемая команда формы.
//
&НаКлиенте
Процедура ПеренестиПоШтрихкодам(Команда)
	
	МассивДобавленныхКоробов = Новый Массив;
	ПеренестиПоШтрихкодамНаСервере(МассивДобавленныхКоробов);
	Для Каждого ДобавленныйКороб Из МассивДобавленныхКоробов Цикл
		ПослеВыбораКоробаПродолжение(ДобавленныйКороб);
	КонецЦикла;
	
КонецПроцедуры // >> 28.11.2022,  Федоров Д.Е.,  КРОК,  Jira№A2105505-933

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыСписокКоробов

&НаКлиенте
Процедура СписокКоробовПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;  
	МассивКоробов = Новый Массив;
	Для Каждого ИндексСтроки Из Элементы.СписокКоробов.ВыделенныеСтроки Цикл
		Короб = СписокКоробов.НайтиПоИдентификатору(ИндексСтроки).Значение;                  	
		МассивКоробов.Добавить(Короб);                                          
	КонецЦикла;
	
	УдалитьКоробИзПодбора(МассивКоробов); 
	
КонецПроцедуры

&НаКлиенте
Процедура СписокКоробовЗначениеПриИзменении(Элемент)
	
	КоробПослеИзменения = Элементы.СписокКоробов.ТекущиеДанные.Значение;
	Если КоробПослеИзменения = ТекущийКороб Тогда
		Возврат;
	КонецЕсли;                                  
	
	УдалитьКоробИзПодбора(ТекущийКороб);
	ДобавитьКоробНаКлиенте(КоробПослеИзменения);
	ТекущийКороб = КоробПослеИзменения;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокКоробовПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.СписокКоробов.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийКороб = ТекущиеДанные.Значение;
	
КонецПроцедуры

// << 28.11.2022,  Федоров Д.Е.,  КРОК,  Jira№A2105505-933
// Обработчик начала выбора значения короба из в списке коробов
//
// Параметры:
//  Элемент - Элемент - Элемент списка коробов.
//  ДанныеВыбора - СписокЗначений - Данные для выбора
//  СтандартнаяОбработка - Булево - Рризнак выполнения стандартной обработки события
//
&НаКлиенте
Процедура СписокКоробовЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора",				Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор",		Ложь);
	ПараметрыФормы.Вставить("ДокументПодбораКоробов",	ДокументПодбораКоробов);
	ПараметрыФормы.Вставить("Склад",					Склад);
	ОбработкаВыбора = Новый ОписаниеОповещения("ПриЗакрытииСписокКоробовЗначение", ЭтотОбъект);
	
	ОткрытьФорму("Документ.УпаковочныйЛист.Форма.КР_ФормаВыбораПоОстаткам",
		ПараметрыФормы, ЭтотОбъект, , , , ОбработкаВыбора);
	
КонецПроцедуры // >> 28.11.2022,  Федоров Д.Е.,  КРОК,  Jira№A2105505-933

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Короб = Элементы.Список.ТекущиеДанные.Ссылка;
    ДобавитьКоробНаКлиенте(Короб);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьКоробНаКлиенте(Короб)
	
	// << 28.11.2022,  Федоров Д.Е.,  КРОК,  Jira№A2105505-933
	// Проверка изменена в связи с изменением механизма выбора коробок:
	//Если Элементы.Список.ТекущиеДанные.ПометкаУдаления Тогда
	Если ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(Короб, "ПометкаУдаления") Тогда
	// >> 28.11.2022,  Федоров Д.Е.,  КРОК,  Jira№A2105505-933
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораДействияСУдаленнымКоробом", ЭтотОбъект,
															Новый Структура("Короб", Короб));
		ПоказатьВопрос(ОписаниеОповещения,
							НСтр("ru = 'Данный короб помечен на удаление.
							|Выполнить выбор этих данных?'"),
							РежимДиалогаВопрос.ДаНет);
	Иначе
		ПослеВыбораКоробаПродолжение(Короб);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	ПеренестиВДокумент = Истина;
	Закрыть(КодВозвратаДиалога.OK); 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПослеВыбораДействияСУдаленнымКоробом(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ПослеВыбораКоробаПродолжение(ДополнительныеПараметры.Короб);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораКоробаПродолжение(Короб) Экспорт
	
	КоробВСписке = Ложь;
	Для Каждого СтрокаКорзины Из Корзина Цикл
		Если СтрокаКорзины.КР_Короб = Короб Тогда
			КоробВСписке = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если КоробВСписке Тогда
		КнопкиДиалога = Новый СписокЗначений;
		КнопкиДиалога.Добавить("ОбновитьКоличество", "Обновить количество");
		КнопкиДиалога.Добавить("Отмена", "Отмена");                 
		ПараметрыОповещения = Новый Структура("Короб", Короб);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораДействияДубляКороба", ЭтотОбъект, ПараметрыОповещения);
		ПоказатьВопрос(ОписаниеОповещения, 
							НСтр("ru = 'Данный короб уже находится в списке подобранных товаров.	
										|Что Вы хотите сделать?'"), КнопкиДиалога);
	Иначе
		ДобавитьКоробВКорзину(Короб); 
	КонецЕсли;
	 
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораДействияДубляКороба(Результат, ДополнительныеПараметры) Экспорт
	
    УдалитьКоробИзПодбора(ДополнительныеПараметры.Короб);

	Если Результат <> "ОбновитьКоличество" Тогда		
		Возврат;                   
	КонецЕсли;

	ДобавитьКоробВКорзину(ДополнительныеПараметры.Короб);
	
КонецПроцедуры 

&НаКлиенте
Процедура ДобавитьКоробВКорзину(Короб) 
	
	ДобавитьКоробВКорзинуНаСервере(Короб);
	
КонецПроцедуры     

&НаСервере
Процедура ДобавитьКоробВКорзинуНаСервере(Короб) 
	
	Если СписокКоробов.НайтиПоЗначению(Короб) = Неопределено Тогда
		СписокКоробов.Добавить(Короб);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УпаковочныйЛистТовары.Ссылка КАК КР_Короб,
	|	УпаковочныйЛистТовары.Номенклатура КАК Номенклатура,
	|	УпаковочныйЛистТовары.Характеристика КАК Характеристика,
	|	УпаковочныйЛистТовары.Серия КАК Серия,
	|	ВЫБОР
	|		КОГДА УпаковочныйЛистТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА УпаковочныйЛистТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ УпаковочныйЛистТовары.Упаковка
	|	КОНЕЦ КАК Упаковка,
	|	УпаковочныйЛистТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА УпаковочныйЛистТовары.Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ХарактеристикиИспользуются,
	|	УпаковочныйЛистТовары.Номенклатура.ИспользованиеХарактеристик КАК ИспользованиеХарактеристик
	|ИЗ
	|	Документ.УпаковочныйЛист.Товары КАК УпаковочныйЛистТовары
	|ГДЕ
	|	УпаковочныйЛистТовары.Ссылка = &Короб
	|	И УпаковочныйЛистТовары.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("Короб", Короб);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрокаКорзины = Корзина.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаКорзины, ВыборкаДетальныеЗаписи);
	КонецЦикла;
	       
	КоличествоПодобранныхТоваров = Корзина.Количество();
	
КонецПроцедуры

&НаСервере
Функция АдресТоваровВХранилище(УникальныйИдентификаторВладельца)
	
	Товары = Корзина.Выгрузить();
	
	АдресВХранилище = ПоместитьВоВременноеХранилище(Товары, УникальныйИдентификаторВладельца);
	
	Возврат АдресВХранилище;
	
КонецФункции

&НаКлиенте
Процедура ПослеПодтвержденияУдаленияКороба(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;

	УдалитьКоробИзПодбора(ДополнительныеПараметры.Короб);
	
КонецПроцедуры

// Удаляет короб/короба в строках таблиц СписокКоробов и Корзина
// Входные параметры:
// Короба - ДокументСсылка.УпаковочныйЛист, Массив из ДокументСсылка.УпаковочныйЛист
//
&НаКлиенте
Процедура УдалитьКоробИзПодбора(Короба) 
    
	Если ТипЗнч(Короба) <> Тип("Массив") Тогда
		МассивКоробов = Новый Массив;
		МассивКоробов.Добавить(Короба);
	Иначе
		МассивКоробов = ОбщегоНазначенияКлиентСервер.СвернутьМассив(Короба);
	КонецЕсли; 	    
	
	Для Каждого Короб Из МассивКоробов Цикл
		СтрокиКороба = Корзина.НайтиСтроки(Новый Структура("КР_Короб", Короб)); 
		Для Каждого СтрокаКороба Из  СтрокиКороба Цикл
			Корзина.Удалить(СтрокаКороба);	
		КонецЦикла;   
		
		ЭлементСпискаЗначений = СписокКоробов.НайтиПоЗначению(Короб);
		Если ЭлементСпискаЗначений <> Неопределено Тогда
			СписокКоробов.Удалить(ЭлементСпискаЗначений);	                       
		КонецЕсли;
	КонецЦикла;
	
	КоличествоПодобранныхТоваров = Корзина.Количество();
	
КонецПроцедуры

// << 28.11.2022,  Федоров Д.Е.,  КРОК,  Jira№A2105505-933
// Заполнение коробов по штрихкодам
//
// Параметры:
//  МассивДобавленныхКоробов - Массив - Массив, который будет заполнен добавленными коробами
//
&НаСервере
Процедура ПеренестиПоШтрихкодамНаСервере(МассивДобавленныхКоробов)

	МассивШтрихкодов = МассивШтрихкодов();
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаУпаковочноеЛистыПоШтрихкодам();
	Запрос.УстановитьПараметр("МассивШтрихкодов",	МассивШтрихкодов);
	Запрос.УстановитьПараметр("Склад",				Склад);
	Запрос.УстановитьПараметр("Регистратор",		ДокументПодбораКоробов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	КоробаСтрокойНеДоступныеДляОтгрузки = "";
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ОбработкаДанныхШтрихкода(ВыборкаДетальныеЗаписи, МассивДобавленныхКоробов, КоробаСтрокойНеДоступныеДляОтгрузки);
		// После обработки выборки удалим из исходного массива элементы.
		// Таким образом останутся только те, для которых не найдены документы "Упаковочный лист"
		МассивШтрихкодов.Удалить(МассивШтрихкодов.Найти(ВыборкаДетальныеЗаписи.Код));
		
	КонецЦикла;
	
	Если КоробаСтрокойНеДоступныеДляОтгрузки <> "" Тогда
		ШаблонСообщенияНеДоступныДляОтгрузки	= НСтр("ru='Короба %1 не доступны для отгрузки.'");
		Сообщение								= СтрШаблон(ШаблонСообщенияНеДоступныДляОтгрузки, КоробаСтрокойНеДоступныеДляОтгрузки);
		ОбщегоНазначения.СообщитьПользователю(Сообщение);
	КонецЕсли;
	
	// Вывод сообщений о не найденных по штрихкодам коробах
	Если МассивШтрихкодов.Количество() <> 0 Тогда
		
		СписокШтрихкодовСтрокой = "";
		Для Каждого ТекущийШтрихкод Из МассивШтрихкодов Цикл	
			Если СписокШтрихкодовСтрокой <> "" Тогда
				СписокШтрихкодовСтрокой = СписокШтрихкодовСтрокой + ", ";
			КонецЕсли;
			СписокШтрихкодовСтрокой = СписокШтрихкодовСтрокой + ТекущийШтрихкод;
		КонецЦикла;
		ШаблонСообщенияНеНайденныеКороба	= НСтр("ru='Короба по штрихкодам %1 не найдены.'");
		Сообщение							= СтрШаблон(ШаблонСообщенияНеНайденныеКороба, СписокШтрихкодовСтрокой);
		ОбщегоНазначения.СообщитьПользователю(Сообщение);
		
	КонецЕсли;
	
КонецПроцедуры // >> 28.11.2022,  Федоров Д.Е.,  КРОК,  Jira№A2105505-933

// << 28.11.2022,  Федоров Д.Е.,  КРОК,  Jira№A2105505-933
// Обработка данных выборки по штрихкоду
//
// Параметры:
//  ВыборкаДетальныеЗаписи - ЗаписьРезультатаЗапроса - Данные по текущему штрихкоду.
//  МассивДобавленныхКоробов - Массив - Массив, который будет заполнен добавленными коробами.
//  КоробаСтрокойНеДоступныеДляОтгрузки - Строка - Перечисление через запятую коробов, недоступных для отгрузки
//
&НаСервере
Процедура ОбработкаДанныхШтрихкода(ВыборкаДетальныеЗаписи, МассивДобавленныхКоробов,
	КоробаСтрокойНеДоступныеДляОтгрузки)

	Если ВыборкаДетальныеЗаписи.ВНаличииОстаток - ВыборкаДетальныеЗаписи.КОтгрузке = 1 Тогда
		ТекущийКороб = ВыборкаДетальныеЗаписи.УпаковочныйЛист;
		Если СписокКоробов.НайтиПоЗначению(ТекущийКороб) = Неопределено Тогда
			СписокКоробов.Добавить(ТекущийКороб);
			МассивДобавленныхКоробов.Добавить(ТекущийКороб);
		КонецЕсли;
	Иначе
		Если КоробаСтрокойНеДоступныеДляОтгрузки <> "" Тогда
			КоробаСтрокойНеДоступныеДляОтгрузки = КоробаСтрокойНеДоступныеДляОтгрузки + ", ";
		КонецЕсли;
		КоробаСтрокойНеДоступныеДляОтгрузки = КоробаСтрокойНеДоступныеДляОтгрузки + ВыборкаДетальныеЗаписи.УпаковочныйЛист;
	КонецЕсли;

КонецПроцедуры // >> 28.11.2022,  Федоров Д.Е.,  КРОК,  Jira№A2105505-933

// << 28.11.2022,  Федоров Д.Е.,  КРОК,  Jira№A2105505-933
// Обрабатывает табличный документ, заполняет МассивШтрихкодов
//
// Возвращаемое значение:
//  Массив - Массив штрихкодов
//
&НаСервере
Функция МассивШтрихкодов()

	МассивШтрихкодов		= Новый Массив;
	
	Для НомерСтроки = 2 По СписокШтрихкодовКоробов.ВысотаСтраницы Цикл
		
		ШаблонОбласти		= "R%1C%2";
		ОбластьСтрокой		= СтрШаблон(ШаблонОбласти, Формат(НомерСтроки, "ЧГ="), "1");
		ТекущийШтрихкод		= СписокШтрихкодовКоробов.Область(ОбластьСтрокой).Текст;
		
		Если ЗначениеЗаполнено(ТекущийШтрихкод) И МассивШтрихкодов.Найти(ТекущийШтрихкод) = Неопределено Тогда
			МассивШтрихкодов.Добавить(ТекущийШтрихкод);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат МассивШтрихкодов;
	
КонецФункции // >> 28.11.2022,  Федоров Д.Е.,  КРОК,  Jira№A2105505-933

// << 28.11.2022,  Федоров Д.Е.,  КРОК,  Jira№A2105505-933
// Обработка результа выбора коробов
//
// Параметры:
//  Значение - ДокументСсылка.УпаковочныйЛист - Результат выбора.
//  ДопПараметры - Структура - Дополнительные параметры выбора.
//
&НаКлиенте
Процедура ПриЗакрытииСписокКоробовЗначение(Значение, ДопПараметры) Экспорт
	
	Если Значение <> Неопределено Тогда
		
		Если СписокКоробов.НайтиПоЗначению(Значение) = Неопределено Тогда
			Для Каждого СтрокаСписка Из СписокКоробов Цикл
				Если СтрокаСписка.Значение = ТекущийКороб Тогда
					СтрокаСписка.Значение	= Значение;
					ТекущийКороб			= Значение;
					// Выполним функционал, который был бы выполнен, если выбор короба не был перехвачен
					// в СписокКоробовЗначениеНачалоВыбора() в режиме "СтандартнаяОбработка" = Ложь.
					ПослеВыбораКоробаПродолжение(Значение);
					Возврат;
				КонецЕсли;
			КонецЦикла;
		Иначе
			ШаблонСообщения					= НСтр("ru='Короб %1 уже присутствует в списке.'");
			Сообщение						= СтрШаблон(ШаблонСообщения, Значение);
			ОбщегоНазначенияКлиент.СообщитьПользователю(Сообщение);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // >> 28.11.2022,  Федоров Д.Е.,  КРОК,  Jira№A2105505-933

// << 28.11.2022,  Федоров Д.Е.,  КРОК,  Jira№A2105505-933
// Текст запроса получения данных упаковочных листов по штрихкодам
//
// Возвращаемое значение:
//  Строка - Текст запроса
//
&НаСервере
Функция ТекстЗапросаУпаковочноеЛистыПоШтрихкодам()
	
	Возврат 
	"ВЫБРАТЬ
	|	УпаковочныйЛист.Ссылка КАК Ссылка,
	|	УпаковочныйЛист.Код КАК Код
	|ПОМЕСТИТЬ УпаковочныеЛисты
	|ИЗ
	|	Документ.УпаковочныйЛист КАК УпаковочныйЛист
	|ГДЕ
	|	УпаковочныйЛист.Код В(&МассивШтрихкодов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КР_КоробаНаСкладахОбороты.Короб КАК Короб,
	|	КР_КоробаНаСкладахОбороты.ВНаличииОборот КАК ВНаличии,
	|	КР_КоробаНаСкладахОбороты.КОтгрузкеОборот КАК КОтгрузке
	|ПОМЕСТИТЬ ДвиженияДокументаПодбора
	|ИЗ
	|	РегистрНакопления.КР_КоробаНаСкладах.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			(Склад, Короб) В
	|				(ВЫБРАТЬ
	|					&Склад КАК Склад,
	|					УпаковочныеЛисты.Ссылка КАК Ссылка
	|				ИЗ
	|					УпаковочныеЛисты КАК УпаковочныеЛисты)) КАК КР_КоробаНаСкладахОбороты
	|ГДЕ
	|	КР_КоробаНаСкладахОбороты.Регистратор = &Регистратор
	|;
	| 
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	КР_КоробаНаСкладахОстатки.Короб КАК Короб,
	|	КР_КоробаНаСкладахОстатки.ВНаличииОстаток КАК ВНаличииОстаток,
	|	КР_КоробаНаСкладахОстатки.КОтгрузкеОстаток КАК КОтгрузкеОстаток
	|ПОМЕСТИТЬ КоробаНаСкладахОстатки
	|ИЗ
	|	РегистрНакопления.КР_КоробаНаСкладах.Остатки(
	|				,
	|				(Склад, Короб) В
	|					(ВЫБРАТЬ
	|						&Склад КАК Склад,
	|						УпаковочныеЛисты.Ссылка КАК Ссылка
	|					ИЗ
	|						УпаковочныеЛисты КАК УпаковочныеЛисты)) КАК КР_КоробаНаСкладахОстатки;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УпаковочныеЛисты.Ссылка КАК УпаковочныйЛист,
	|	УпаковочныеЛисты.Код КАК Код,
	|	ЕСТЬNULL(КР_КоробаНаСкладахОстатки.ВНаличииОстаток, 0) КАК ВНаличииОстаток,
	|	ЕСТЬNULL(КР_КоробаНаСкладахОстатки.КОтгрузкеОстаток, 0) КАК КОтгрузке
	|ПОМЕСТИТЬ ОстаткиБезГруппировки
	|ИЗ
	|	УпаковочныеЛисты КАК УпаковочныеЛисты
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоробаНаСкладахОстатки КАК КР_КоробаНаСкладахОстатки
	|		ПО УпаковочныеЛисты.Ссылка = КР_КоробаНаСкладахОстатки.Короб
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДвиженияДокументаПодбора.Короб,
	|	ДвиженияДокументаПодбора.Короб.Код,
	|	-ДвиженияДокументаПодбора.ВНаличии,
	|	-ДвиженияДокументаПодбора.КОтгрузке
	|ИЗ
	|	ДвиженияДокументаПодбора КАК ДвиженияДокументаПодбора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиБезГруппировки.УпаковочныйЛист КАК УпаковочныйЛист,
	|	ОстаткиБезГруппировки.Код КАК Код,
	|	СУММА(ОстаткиБезГруппировки.ВНаличииОстаток) КАК ВНаличииОстаток,
	|	СУММА(ОстаткиБезГруппировки.КОтгрузке) КАК КОтгрузке
	|ИЗ
	|	ОстаткиБезГруппировки КАК ОстаткиБезГруппировки
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиБезГруппировки.УпаковочныйЛист,
	|	ОстаткиБезГруппировки.Код";
	
КонецФункции // >> 28.11.2022,  Федоров Д.Е.,  КРОК,  Jira№A2105505-933

#КонецОбласти
