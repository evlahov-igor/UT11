
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	РабочееМесто = МенеджерОборудованияВызовСервера.ПолучитьРабочееМестоКлиента();
	
	Весы.Параметры.УстановитьЗначениеПараметра("ТекущееРабочееМесто", РабочееМесто);
	КассыККМ.Параметры.УстановитьЗначениеПараметра("ТекущееРабочееМесто", РабочееМесто);
	
	// << 26.10.2023 Марченко С.Н., КРОК, JIRA№A2105505-2441
	//Элементы.КассыККМКассыТоварыЗагрузитьОтчетОРозничныхПродажах.Доступность = ПравоДоступа("Добавление", Метаданные.Документы.ОтчетОРозничныхПродажах);
	// >> 26.10.2023 Марченко С.Н., КРОК, JIRA№A2105505-2441
	
	// << 02.02.2023, Гашников А.П., КРОК, Jira№ A2105505-1150
	КР_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка);
	// >> 02.02.2023, Гашников А.П., КРОК, Jira№ A2105505-1150
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	СкладККМOffline = Настройки.Получить("СкладККМOffline");
	СкладВесы = Настройки.Получить("СкладВесы");
	
	ПравилоОбменаВесы = Настройки.Получить("ПравилоОбменаВесы");
	ПравилоОбменаККМOffline = Настройки.Получить("ПравилоОбменаККМOffline");
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(КассыККМ, "Склад", СкладККМOffline, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(СкладККМOffline));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(КассыККМ, "ПравилоОбмена", ПравилоОбменаККМOffline, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(ПравилоОбменаККМOffline));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Весы, "Склад", СкладВесы, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(СкладВесы));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Весы, "ПравилоОбмена", ПравилоОбменаВесы, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(ПравилоОбменаВесы));
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Весы, "ПодключеноКТекущемуРабочемуМесту", Истина, ВидСравненияКомпоновкиДанных.Равно,, ВсеОборудованиеВесы = Ложь);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(КассыККМ, "ПодключеноКТекущемуРабочемуМесту", Истина, ВидСравненияКомпоновкиДанных.Равно,, ВсеОборудованиеККМOffline = Ложь);
	
КонецПроцедуры // ПриЗагрузкеДанныхИзНастроекНаСервере()

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененоРабочееМестоТекущегоСеанса" Тогда
		
		РабочееМесто = МенеджерОборудованияВызовСервера.ПолучитьРабочееМестоКлиента();
		
		Весы.Параметры.УстановитьЗначениеПараметра("ТекущееРабочееМесто", РабочееМесто);
		КассыККМ.Параметры.УстановитьЗначениеПараметра("ТекущееРабочееМесто", РабочееМесто);
		
	ИначеЕсли ИмяСобытия = "Запись_ПравилаОбменаСПодключаемымОборудованиемOffline"
		ИЛИ ИмяСобытия = "Запись_КодыТоваровПодключаемогоОборудования" Тогда
		
		Элементы.Весы.Обновить();
		Элементы.КассыККМ.Обновить();
		
	ИначеЕсли ИмяСобытия = "ВыполненОбменСПодключаемымОборудованиемOffline" Тогда
		
		Элементы.Весы.Обновить();
		Элементы.КассыККМ.Обновить();
		
	КонецЕсли;
	
КонецПроцедуры

#Область ПроцедурыОбработчикиКоманд

&НаКлиенте
Процедура ВесыПосмотретьСписокТоваров(Команда)
	
	ТекущиеДанные = Элементы.Весы.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.ПравилоОбмена) Тогда
		
		ПараметрыФормы = Новый Структура("Устройство, ПравилоОбмена", ТекущиеДанные.ПодключаемоеОборудование, ТекущиеДанные.ПравилоОбмена);
		ОткрытьФорму("РегистрСведений.КодыТоваровПодключаемогоОборудованияOffline.Форма.СписокТоваров", ПараметрыФормы, УникальныйИдентификатор);
		
	Иначе
		
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Команда не может быть выполнена для указанного объекта'"));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВесыНазначитьПравилоДляВыделенных(Команда)
	
	Устройства = Новый Массив;
	Для Каждого ВыделеннаяСтрока Из Элементы.Весы.ВыделенныеСтроки Цикл
		Устройства.Добавить(ВыделеннаяСтрока);
	КонецЦикла;
	
	Если Устройства.Количество() > 0 Тогда
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("ТипПодключаемогоОборудования", ПредопределенноеЗначение("Перечисление.ТипыПодключаемогоОборудования.ВесыСПечатьюЭтикеток"));
		ПравилоОбмена = Неопределено;

		ОткрытьФорму("Справочник.ПравилаОбменаСПодключаемымОборудованиемOffline.ФормаВыбора", ПараметрыОткрытия, УникальныйИдентификатор,,,, Новый ОписаниеОповещения("ВесыНазначитьПравилоДляВыделенныхЗавершение", ЭтотОбъект, Новый Структура("Устройства", Устройства)), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		
	Иначе
		
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Команда не может быть выполнена для указанного объекта'"));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВесыНазначитьПравилоДляВыделенныхЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    Устройства = ДополнительныеПараметры.Устройства;
    
    
    ПравилоОбмена = Результат;
    
    Если ЗначениеЗаполнено(ПравилоОбмена) Тогда
        НазначитьПравилоДляВыделенныхУстройствНаСервере(Устройства, ПравилоОбмена);
    КонецЕсли;
    
    Элементы.Весы.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура ВесыТоварыВыгрузить(Команда)
	
	ТекущиеДанные = Элементы.Весы.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.ПравилоОбмена) Тогда
		
		Устройства = Новый Массив;
		Устройства.Добавить(ТекущиеДанные.ПодключаемоеОборудование);
		ПодключаемоеОборудованиеOfflineКлиент.ВыгрузитьТоварыВВесы(Неопределено, Устройства);

	Иначе
		
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Команда не может быть выполнена для указанного объекта'"));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВесыТоварыОчистить(Команда)
	
	ТекущиеДанные = Элементы.Весы.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.ПравилоОбмена) Тогда
		
		Устройства = Новый Массив;
		Устройства.Добавить(ТекущиеДанные.ПодключаемоеОборудование);
		ПодключаемоеОборудованиеOfflineКлиент.ОчиститьТоварыВВесах(Неопределено, Устройства);
	
	Иначе
		
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Команда не может быть выполнена для указанного объекта'"));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВесыТоварыПерезагрузить(Команда)
	
	ТекущиеДанные = Элементы.Весы.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.ПравилоОбмена) Тогда
		
		Устройства = Новый Массив;
		Устройства.Добавить(ТекущиеДанные.ПодключаемоеОборудование);
		ПодключаемоеОборудованиеOfflineКлиент.ВыгрузитьПолныйСписокТоваровВВесы(Неопределено, Устройства);
	
	Иначе
		
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Команда не может быть выполнена для указанного объекта'"));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КассыПосмотретьСписокТоваров(Команда)
	
	ТекущиеДанные = Элементы.КассыККМ.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.ПравилоОбмена) Тогда
		
		ПараметрыФормы = Новый Структура("Устройство, ПравилоОбмена", ТекущиеДанные.ПодключаемоеОборудование, ТекущиеДанные.ПравилоОбмена);
		ОткрытьФорму("РегистрСведений.КодыТоваровПодключаемогоОборудованияOffline.Форма.СписокТоваров", ПараметрыФормы, УникальныйИдентификатор);
		
	Иначе
		
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Команда не может быть выполнена для указанного объекта'"));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КассыНазначитьПравилоДляВыделенных(Команда)
	
	Устройства = Новый Массив;
	Для Каждого ВыделеннаяСтрока Из Элементы.КассыККМ.ВыделенныеСтроки Цикл
		Устройства.Добавить(ВыделеннаяСтрока);
	КонецЦикла;
	
	Если Устройства.Количество() > 0 Тогда
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("ТипПодключаемогоОборудования", ПредопределенноеЗначение("Перечисление.ТипыПодключаемогоОборудования.ККМОфлайн"));
		ПравилоОбмена = Неопределено;

		ОткрытьФорму("Справочник.ПравилаОбменаСПодключаемымОборудованиемOffline.ФормаВыбора", ПараметрыОткрытия, УникальныйИдентификатор,,,, Новый ОписаниеОповещения("КассыНазначитьПравилоДляВыделенныхЗавершение", ЭтотОбъект, Новый Структура("Устройства", Устройства)), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		
	Иначе
		
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Команда не может быть выполнена для указанного объекта'"));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КассыНазначитьПравилоДляВыделенныхЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    Устройства = ДополнительныеПараметры.Устройства;
    
    
    ПравилоОбмена = Результат;
    
    Если ЗначениеЗаполнено(ПравилоОбмена) Тогда
        НазначитьПравилоДляВыделенныхУстройствНаСервере(Устройства, ПравилоОбмена);
    КонецЕсли;
    
    Элементы.КассыККМ.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура КассыТоварыВыгрузить(Команда)
	
	ТекущиеДанные = Элементы.КассыККМ.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.ПравилоОбмена) Тогда
		// << 01.02.2023, Гашников А.П., КРОК, Jira№ A2105505-1150
		Драйвер = ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(
			ТекущиеДанные.ПодключаемоеОборудование,
			"ДрайверОборудования");
		Если Драйвер = ПредопределенноеЗначение("Справочник.ДрайверыОборудования.КР_ДрайверArtix") Тогда
			Результат = КР_ВыгрузитьТоварыArtix(ТекущиеДанные.ПодключаемоеОборудование);
			ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.ТекстСообщения);
			Возврат;
		КонецЕсли;
		// >> 01.02.2023, Гашников А.П., КРОК, Jira№ A2105505-1150
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыполненияОбмена", ЭтотОбъект);
		МенеджерОфлайнОборудованияКлиент.НачатьВыгрузкуДанныхНаККМ(ТекущиеДанные.ПодключаемоеОборудование, УникальныйИдентификатор, ОписаниеОповещения);
	Иначе
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Команда не может быть выполнена для указанного объекта'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КассыТоварыОчистить(Команда)
	
	ТекущиеДанные = Элементы.КассыККМ.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.ПравилоОбмена) Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыполненияОбмена", ЭтотОбъект);
		МенеджерОфлайнОборудованияКлиент.НачатьОчисткуПрайсЛистаНаККМ(ТекущиеДанные.ПодключаемоеОборудование, УникальныйИдентификатор, ОписаниеОповещения);
	Иначе
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Команда не может быть выполнена для указанного объекта'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КассыТоварыПерезагрузить(Команда)
	
	ТекущиеДанные = Элементы.КассыККМ.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.ПравилоОбмена) Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыполненияОбмена", ЭтотОбъект);
		МенеджерОфлайнОборудованияКлиент.НачатьПолнуюВыгрузкуПрайсЛистаНаККМ(ТекущиеДанные.ПодключаемоеОборудование, УникальныйИдентификатор, ОписаниеОповещения);
	Иначе
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Команда не может быть выполнена для указанного объекта'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КассыТоварыЗагрузитьОтчетОРозничныхПродажах(Команда)
	
	ТекущиеДанные = Элементы.КассыККМ.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.ПравилоОбмена) Тогда
		// << 23.03.2023, Гашников А.П., КРОК, Jira№ A2105505-1150
		Драйвер = ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(
			ТекущиеДанные.ПодключаемоеОборудование,
			"ДрайверОборудования");
		Если Драйвер = ПредопределенноеЗначение("Справочник.ДрайверыОборудования.КР_ДрайверArtix") Тогда
			Результат = КР_ЗагрузкаОперативныхПродажИзКассовогоПО(ТекущиеДанные.ПодключаемоеОборудование);
			ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.ТекстСообщения);
			Возврат;
		КонецЕсли;
		// >> 23.03.2023, Гашников А.П., КРОК, Jira№ A2105505-1150
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ЭтоЗагрузка");
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыполненияОбмена", ЭтотОбъект, ДополнительныеПараметры);
		МенеджерОфлайнОборудованияКлиент.НачатьЗагрузкуДанныхИзККМ(ТекущиеДанные.ПодключаемоеОборудование, УникальныйИдентификатор, ОписаниеОповещения);
	Иначе
		
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Команда не может быть выполнена для указанного объекта'"));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьНастройки(Команда)
	
	ТекущиеДанные = Элементы.КассыККМ.ТекущиеДанные;
	
	Если НЕ ТекущиеДанные = Неопределено Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыполненияОбмена", ЭтотОбъект);
		МенеджерОфлайнОборудованияКлиент.НачатьВыгрузкуНастроекНаККМ(ТекущиеДанные.ПодключаемоеОборудование, УникальныйИдентификатор, ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВесыОткрытьПравилоОбмена(Команда)
	
	ТекущиеДанные = Элементы.Весы.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.ПравилоОбмена) Тогда
		
		ПоказатьЗначение(Неопределено, ТекущиеДанные.ПравилоОбмена);
		
	Иначе
		
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Команда не может быть выполнена для указанного объекта'"));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КассыОткрытьПравилоОбмена(Команда)
	
	ТекущиеДанные = Элементы.КассыККМ.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.ПравилоОбмена) Тогда
		
		ПоказатьЗначение(Неопределено, ТекущиеДанные.ПравилоОбмена);
		
	Иначе
		
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Команда не может быть выполнена для указанного объекта'"));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АвтоматическийОбмен(Команда)
	
	ПараметрыФормы = Новый Структура("РабочееМесто", РабочееМесто);
	ОткрытьФорму("ОбщаяФорма.АвтоматическийОбменСПодключаемымОборудованиемOffline", ПараметрыФормы);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

&НаКлиенте
Процедура СкладВесыПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Весы, "Склад", СкладВесы, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(СкладВесы));
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилоОбменаВесыПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Весы, "ПравилоОбмена", ПравилоОбменаВесы, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(ПравилоОбменаВесы));
	
КонецПроцедуры

&НаКлиенте
Процедура СкладККМOfflineПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(КассыККМ, "Склад", СкладККМOffline, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(СкладККМOffline));
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилоОбменаККМOfflineПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(КассыККМ, "ПравилоОбмена", ПравилоОбменаККМOffline, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(ПравилоОбменаККМOffline));
	
КонецПроцедуры

&НаКлиенте
Процедура ОборудованиеККМOfflineПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(КассыККМ, "ПодключеноКТекущемуРабочемуМесту", Истина, ВидСравненияКомпоновкиДанных.Равно,, ВсеОборудованиеККМOffline = Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОборудованиеВесыПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Весы, "ПодключеноКТекущемуРабочемуМесту", Истина, ВидСравненияКомпоновкиДанных.Равно,, ВсеОборудованиеВесы = Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура КассыККМВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если Поле = Элементы.КассыККМДатаЗагрузки И ЗначениеЗаполнено(ТекущиеДанные.ДатаЗагрузки) Тогда
		СтандартнаяОбработка = Ложь;
		Отчет = ПолучитьОтчетОРозничныхПродажахПоКассе(ТекущиеДанные.КассаККМ, ТекущиеДанные.ДатаЗагрузки);
		
		Если ЗначениеЗаполнено(Отчет) Тогда
			ПоказатьЗначение(Неопределено, Отчет);
		Иначе
			ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Отчет о розничных продажах не найден.'"));
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НазначитьПравилоДляВыделенныхУстройствНаСервере(Устройства, ПравилоОбмена)
	
	УстановитьПривилегированныйРежим(Истина);
	
	НачатьТранзакцию();
	Попытка
		
		Для Каждого Устройство Из Устройства Цикл
			
			УстройствоОбъект = Устройство.ПолучитьОбъект(); // СправочникОбъект.ПодключаемоеОборудование
			УстройствоОбъект.ПравилоОбмена = ПравилоОбмена;
			УстройствоОбъект.Записать();
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
	Исключение
		
		ОтменитьТранзакцию();
		
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Розничные продажи'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,,,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьОтчетОРозничныхПродажахПоКассе(КассаККМ, ДатаЗагрузки)
	
	Отчет = Неопределено;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОтчетОРозничныхПродажах.Ссылка КАК Отчет
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|ГДЕ
	|	ОтчетОРозничныхПродажах.КассаККМ = &КассаККМ
	|	И ОтчетОРозничныхПродажах.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания");
	
	Запрос.УстановитьПараметр("КассаККМ", КассаККМ);
	Запрос.УстановитьПараметр("ДатаНачала",    ДатаЗагрузки - 5);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаЗагрузки + 5);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Отчет = Выборка.Отчет;
	КонецЕсли;
	
	Возврат Отчет;
	
КонецФункции

&НаКлиенте
Процедура ПослеВыполненияОбмена(Результат, ДополнительныеПараметры) Экспорт
	ОчиститьСообщения();
	
	Если ТипЗнч(Результат) = Тип("Структура") И Результат.Свойство("Результат") Тогда
		
		Если Результат.Результат Тогда
			
			Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура")
				И ДополнительныеПараметры.Свойство("ЭтоЗагрузка") Тогда
				
				ТекстСообщения = НСтр("ru='Данные успешно загружены'");
			Иначе
				ТекстСообщения = НСтр("ru='Данные успешно выгружены'");
			КонецЕсли;
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Иначе
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ОписаниеОшибки);
		КонецЕсли;
		
	Иначе
		Возврат;
	КонецЕсли;
	
	Элементы.КассыККМ.Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область КР_ДополнительныеПроцедурыИФункции

// << 02.02.2023, Гашников А.П., КРОК, Jira№ A2105505-1150
&НаСервере
Процедура КР_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// << 26.10.2023 Марченко С.Н., КРОК, JIRA№A2105505-2441
	НоваяКоманда = КР_МетодыМодификацииФорм.ДобавитьКомандуФормы(ЭтотОбъект,
		"КР_ЗагрузитьОтчетОПродажахЗаСмену",
		НСтр("ru = 'Загрузить отчет о продажах за смену'"));
		
	ЭлементФормы = КР_МетодыМодификацииФорм.ВставитьЭлементФормы(ЭтотОбъект,
		НоваяКоманда, , Элементы.КассыККМКассыТоварыОчистить);  
		
	Элементы.КассыККМКассыТоварыЗагрузитьОтчетОРозничныхПродажах.Заголовок
		= НСтр("ru = 'Загрузить отчет об опер. продажах'");
	// >> 26.10.2023 Марченко С.Н., КРОК, JIRA№A2105505-2441
	
	Команда = КР_МетодыМодификацииФорм.ДобавитьКомандуФормы(
		ЭтотОбъект,
		"КР_ВыгрузитьПользователейArtix",
		"Выгрузить пользователей (Artix)",
		"КР_ВыгрузитьПользователейArtix");
		
	КР_МетодыМодификацииФорм.ВставитьЭлементФормы(
		ЭтотОбъект,
		Команда,
		Элементы.КассыККМОперации,
		Элементы.КассыККМКассыТоварыОчистить);
		
	Элементы.КассыККМ.ПутьКДаннымКартинкиСтроки = "";//A2105505-2405    
	
КонецПроцедуры // >> 02.02.2023, Гашников А.П., КРОК, Jira№ A2105505-1150

// << 02.02.2023, Гашников А.П., КРОК, Jira№ A2105505-1150
&НаКлиенте
Процедура КР_ВыгрузитьПользователейArtix(Команда)
	
	ТекущиеДанные = Элементы.КассыККМ.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.ПравилоОбмена) Тогда
		Драйвер = ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(
			ТекущиеДанные.ПодключаемоеОборудование,
			"ДрайверОборудования");
		Если Драйвер = ПредопределенноеЗначение("Справочник.ДрайверыОборудования.КР_ДрайверArtix") Тогда
			Результат = КР_ВыгрузитьПользователейArtixНаСервере(ТекущиеДанные.ПодключаемоеОборудование);
			ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.ТекстСообщения);
		Иначе
			ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Команда не может быть выполнена для указанного объекта'"));
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры // >> 02.02.2023, Гашников А.П., КРОК, Jira№ A2105505-1150

&НаСервереБезКонтекста
Функция КР_ВыгрузитьПользователейArtixНаСервере(ПодключаемоеОборудование)

	// << 07.11.2023 Марченко С.Н., КРОК, JIRA№A2105505-2478
	УстановитьПривилегированныйРежим(Истина);
	// >> 07.11.2023 Марченко С.Н., КРОК, JIRA№A2105505-2478
	
	Возврат КР_ИнтеграцияСВнешнимиСистемами.ВыгрузкаПользователиArtix(ПодключаемоеОборудование);
	
КонецФункции // >> 02.02.2023, Гашников А.П., КРОК, Jira№ A2105505-1150

// << 01.02.2023, Гашников А.П., КРОК, Jira№ A2105505-1150
&НаСервереБезКонтекста
Функция КР_ВыгрузитьТоварыArtix(ПодключаемоеОборудование)
	
	Возврат КР_ИнтеграцияСВнешнимиСистемами.ВыгрузкаТоварыArtix(ПодключаемоеОборудование);
	
КонецФункции // >> 01.02.2023, Гашников А.П., КРОК, Jira№ A2105505-1150

// << 23.03.2023, Гашников А.П., КРОК, Jira№ A2105505-1150
&НаСервереБезКонтекста
Функция КР_ЗагрузкаОперативныхПродажИзКассовогоПО(ПодключаемоеОборудование)
	
	// << 26.10.2023 Марченко С.Н., КРОК, JIRA№A2105505-2441
	УстановитьПривилегированныйРежим(Истина);
	// >> 26.10.2023 Марченко С.Н., КРОК, JIRA№A2105505-2441
	
	Возврат КР_ИнтеграцияСВнешнимиСистемами.ЗагрузкаПродажArtix(ПодключаемоеОборудование);
	
КонецФункции
// >> 23.03.2023, Гашников А.П., КРОК, Jira№ A2105505-1150

// << 26.10.2023 Марченко С.Н., КРОК, JIRA№№A2105505-2441
&НаКлиенте
Процедура КР_ЗагрузитьОтчетОПродажахЗаСмену(Команда)
	
	// A2105505-2468	
	ТекущиеДанные = Элементы.КассыККМ.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли; 
	
	КР_ЗагрузитьОтчетОПродажахЗаСменуНаСервере(ТекущиеДанные.ПодключаемоеОборудование);   
	
	Элементы.КассыККМ.Обновить();
	//
	
КонецПроцедуры // >> 26.10.2023 Марченко С.Н., КРОК, JIRA№№A2105505-2441

// << 26.10.2023 Марченко С.Н., КРОК, JIRA№№A2105505-2441
&НаСервере
Процедура КР_ЗагрузитьОтчетОПродажахЗаСменуНаСервере(ПодключаемоеОборудование)
	
	УстановитьПривилегированныйРежим(Истина);
	
	// A2105505-2468
	КР_ИнтеграцияСВнешнимиСистемами.ЗагрузкаПродажArtix(ПодключаемоеОборудование, Истина);
	
КонецПроцедуры // >> 26.10.2023 Марченко С.Н., КРОК, JIRA№№A2105505-2441

#КонецОбласти
