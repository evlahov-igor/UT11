/////////////////////////////////////////////////////////////////
//// Общий модуль "КР_АвтоматическоеСозданиеСкладскихАктов" /////
//// Создан: 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860////
//// Разработка по ФДР С11.033, Документы инвентаризации товаров

#Область ПрограммныйИнтерфейс

// << 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860
Процедура СоздатьАктуализироватьСкладскиеАкты(ПересчетТоваров, Отказ) Экспорт

	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЗаполнения = ПолучитьОбщиеПараметрыЗаполнения(ПересчетТоваров);
	
	ПересортицаТоваров = ПолучитьДокументОбъектСкладскойАкт("ПересортицаТоваров", ПересчетТоваров.Ссылка);
	ПересортицаТоваров.Заполнить(ПересчетТоваров.Ссылка);
	ЗаполнитьЗначенияСвойств(ПересортицаТоваров, ПараметрыЗаполнения);
	ЗаполнитьТоварыПересортицыТоваров(ПересортицаТоваров, ПересчетТоваров.Ссылка, ПересчетТоваров.Дата);
	
	Если ПересортицаТоваров.Товары.Количество() <> 0 Тогда
		ЗаполнитьНомераГТД(ПересортицаТоваров.Товары, ПересчетТоваров.Дата);
		
		СинонимДокумента = Метаданные.Документы.ПересортицаТоваров.Синоним;
		ВыполнитьЗаписьПроведениеДокумента(ПересортицаТоваров, СинонимДокумента, ПересчетТоваров.Ссылка, Отказ);
	КонецЕсли;

	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ОприходованиеИзлишковТоваров = ПолучитьДокументОбъектСкладскойАкт("ОприходованиеИзлишковТоваров", ПересчетТоваров.Ссылка);
	ОприходованиеИзлишковТоваров.Заполнить(ПересчетТоваров.Ссылка);
	Если ОприходованиеИзлишковТоваров.Товары.Количество() <> 0 Тогда
		
		ЗаполнитьЗначенияСвойств(ОприходованиеИзлишковТоваров, ПараметрыЗаполнения);
		ЗаполнитьНомераГТД(ОприходованиеИзлишковТоваров.Товары, ПересчетТоваров.Дата);
		ЗаполнитьЦеныНоменклатуры(ОприходованиеИзлишковТоваров.Товары, ПересчетТоваров.Дата);
		
		СинонимДокумента = Метаданные.Документы.ОприходованиеИзлишковТоваров.Синоним;
		ВыполнитьЗаписьПроведениеДокумента(ОприходованиеИзлишковТоваров, СинонимДокумента, ПересчетТоваров.Ссылка, Отказ);
		
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СписаниеНедостачТоваров = ПолучитьДокументОбъектСкладскойАкт("СписаниеНедостачТоваров", ПересчетТоваров.Ссылка);
	СписаниеНедостачТоваров.Заполнить(ПересчетТоваров.Ссылка);
	Если СписаниеНедостачТоваров.Товары.Количество() <> 0 Тогда
		
		ЗаполнитьЗначенияСвойств(СписаниеНедостачТоваров, ПараметрыЗаполнения);
		
		СинонимДокумента = Метаданные.Документы.СписаниеНедостачТоваров.Синоним;
		ВыполнитьЗаписьПроведениеДокумента(СписаниеНедостачТоваров, СинонимДокумента, ПересчетТоваров.Ссылка, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры // >> 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860

// << 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860
Процедура ПометитьНаУдалениеСвязанныеСкладскиеАкты(ПересчетТоваров, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаПометитьНаУдалениеСвязанныеСкладскиеАкты();
	Запрос.УстановитьПараметр("ПересчетТоваров", ПересчетТоваров.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбъектДокумент = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		Попытка
			ОбъектДокумент.УстановитьПометкуУдаления(Истина);
		Исключение
			ОписаниеОшибки = ОписаниеОшибки();
			Текст = НСтр("ru='Не удалось пометить на удаление документа %1 по причине:%2%3'");
			Ошибка = СтрШаблон(Текст, ВыборкаДетальныеЗаписи.Ссылка, Символы.ПС, ОписаниеОшибки);
			ОбщегоНазначения.СообщитьПользователю(Ошибка, ВыборкаДетальныеЗаписи.Ссылка, , , Отказ);
			Возврат;
		КонецПопытки;
	КонецЦикла;

КонецПроцедуры // >> 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860

// << 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860
Функция ПропуститьВыводОшибкиОбОтсутствииТоваров(ДокументОснование) Экспорт
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПересчетТоваров") Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции // >> 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860

#КонецОбласти

#Область СлужебныеПроцедурыФункции

// << 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860
Функция ПолучитьДокументОбъектСкладскойАкт(ИмяДокумента, ПересчетТоваровСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СкладскойАкт.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ПересортицаТоваров КАК СкладскойАкт
		|ГДЕ
		|	СкладскойАкт.ПересчетТоваров = &ПересчетТоваров
		|	И СкладскойАкт.Проведен";
	
	Запрос.УстановитьПараметр("ПересчетТоваров", ПересчетТоваровСсылка);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПересортицаТоваров", ИмяДокумента);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		ДокументСкладскойАкт = Документы[ИмяДокумента].СоздатьДокумент();
	Иначе
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		ДокументСкладскойАкт = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
	КонецЕсли;
	
	Возврат ДокументСкладскойАкт;
	
КонецФункции // >> 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860

// << 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860
Функция ПолучитьОбщиеПараметрыЗаполнения(ПересчетТоваров)

	СтатьяДоходов = 	КР_ДополнительныеНастройкиПовтИсп.Значение("СтатьяДоходовДляОприходованияИзлишковТоваров");
	СтатьяРасходов =	КР_ДополнительныеНастройкиПовтИсп.Значение("СтатьяРасходовДляСписанияНедостачТоваров");
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("СтатьяДоходов",								СтатьяДоходов);
	ПараметрыЗаполнения.Вставить("СтатьяРасходов",								СтатьяРасходов);
	ПараметрыЗаполнения.Вставить("ВидДеятельностиНДС",							Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
	ПараметрыЗаполнения.Вставить("ПриходоватьТоварыПоСебестоимостиСписания", 	Истина);
	ПараметрыЗаполнения.Вставить("Дата",										ПересчетТоваров.Дата);
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции // >> 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860

// << 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860
Процедура ЗаполнитьТоварыПересортицыТоваров(ПересортицаТоваров, ПересчетТоваровСсылка, ПересчетТоваровДата)
	
	ПересортицаТоваров.Товары.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЗаполнитьТоварыПересортицыТоваров();
	Запрос.УстановитьПараметр("Регистратор", ПересчетТоваровСсылка);
	
	МассивРезультатовЗапросов = Запрос.ВыполнитьПакет();
	
	ВыборкаОтрицательныйОстаток = МассивРезультатовЗапросов[1].Выбрать();
	ПоложительныйОстаток = МассивРезультатовЗапросов[2].Выгрузить();
	
	Пока ВыборкаОтрицательныйОстаток.Следующий() Цикл
		
		ОстатокКРаспределению = - ВыборкаОтрицательныйОстаток.Количество;
		
		// Ключ связи первой итерации
		СтруктураПоискаПоНоменклатуре = Новый Структура;
		СтруктураПоискаПоНоменклатуре.Вставить("Номенклатура", 		ВыборкаОтрицательныйОстаток.Номенклатура);
		СтруктураПоискаПоНоменклатуре.Вставить("ОстатокБольшеНуля", Истина);
		// Ключ связи второй итерации
		СтруктураПоискаРазмерМодель = Новый Структура;
		СтруктураПоискаРазмерМодель.Вставить("Размер", 				ВыборкаОтрицательныйОстаток.Размер);
		СтруктураПоискаРазмерМодель.Вставить("Модель", 				ВыборкаОтрицательныйОстаток.Модель);
		СтруктураПоискаРазмерМодель.Вставить("ОстатокБольшеНуля",	Истина);
		// Ключ связи третьей итерации
		СтруктураПоискаМодель= Новый Структура;
		СтруктураПоискаМодель.Вставить("Модель",					ВыборкаОтрицательныйОстаток.Модель);
		СтруктураПоискаМодель.Вставить("ОстатокБольшеНуля",			Истина);

		// Первая итерация распределения положительного остатка
		СписатьПоложительныйОстаток(ПересортицаТоваров, ВыборкаОтрицательныйОстаток, ПоложительныйОстаток,
			ОстатокКРаспределению, СтруктураПоискаПоНоменклатуре);
			
		Если ЗначениеЗаполнено(ВыборкаОтрицательныйОстаток.Модель) Тогда
				
			// Вторая итерация распределения положительного остатка
			СписатьПоложительныйОстаток(ПересортицаТоваров, ВыборкаОтрицательныйОстаток, ПоложительныйОстаток,
				ОстатокКРаспределению, СтруктураПоискаРазмерМодель);
				
			// Третья итерация распределения положительного остатка
			СписатьПоложительныйОстаток(ПересортицаТоваров, ВыборкаОтрицательныйОстаток, ПоложительныйОстаток,
				ОстатокКРаспределению, СтруктураПоискаМодель);
				
		КонецЕсли;
			
	КонецЦикла;
	
КонецПроцедуры // >> 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860

// << 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860
Процедура СписатьПоложительныйОстаток(ПересортицаТоваров, ВыборкаОтрицательныйОстаток, ПоложительныйОстаток,
	ОстатокКРаспределению, СтруктураПоиска)
	
	Если ОстатокКРаспределению = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрок = ПоложительныйОстаток.НайтиСтроки(СтруктураПоиска);
	Для Каждого СтрокаПоложительныйОстаток ИЗ МассивСтрок Цикл
		
		Если ОстатокКРаспределению = 0 Тогда
			Возврат;
		КонецЕсли;
		
		КоличествоКСписанию = ?(ОстатокКРаспределению <= СтрокаПоложительныйОстаток.Количество, 
			ОстатокКРаспределению, СтрокаПоложительныйОстаток.Количество);
			
		ОстатокКРаспределению = ОстатокКРаспределению - КоличествоКСписанию;
		
		СтрокаПоложительныйОстаток.Количество = СтрокаПоложительныйОстаток.Количество - КоличествоКСписанию;
		Если СтрокаПоложительныйОстаток.Количество = 0 Тогда
			СтрокаПоложительныйОстаток.ОстатокБольшеНуля = Ложь;
		КонецЕсли;
		
		СтрокаТоваров = ПересортицаТоваров.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТоваров, ВыборкаОтрицательныйОстаток);
		СтрокаТоваров.НоменклатураОприходование 	= СтрокаПоложительныйОстаток.Номенклатура;
		СтрокаТоваров.ХарактеристикаОприходование 	= СтрокаПоложительныйОстаток.Характеристика;
		СтрокаТоваров.НазначениеОприходование		= СтрокаПоложительныйОстаток.Назначение;
		СтрокаТоваров.СерияОприходование 			= СтрокаПоложительныйОстаток.Серия;
		СтрокаТоваров.Количество					= КоличествоКСписанию;
		
	КонецЦикла;
	
КонецПроцедуры // >> 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860

// << 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860
Процедура ВыполнитьЗаписьПроведениеДокумента(Документ, СинонимДокумента, СсылкаОснование, Отказ)
	
	ПроверкаЗаполненияВыполненаУспешно = Документ.ПроверитьЗаполнение();
	Если Не ПроверкаЗаполненияВыполненаУспешно Тогда
		ШаблонСообщения = НСтр("ru='Не удалось создать и провести документ ""%1"" в связи с проверкой заполнения'");
		Сообщение = СтрШаблон(ШаблонСообщения, СинонимДокумента);
		ОбщегоНазначения.СообщитьПользователю(Сообщение, , , , Отказ);
		Возврат;
	КонецЕсли;
	
	Попытка
		Документ.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		Шаблон = НСтр("ru='Не удалось создать и провести документ ""%1"" на основе %2 по причине:%3%4'");
		Сообщение = СтрШаблон(Шаблон, СинонимДокумента, СсылкаОснование, Символы.ПС, ОписаниеОшибки);
		ОбщегоНазначения.СообщитьПользователю(Сообщение, , , , Отказ);
	КонецПопытки;

КонецПроцедуры // >> 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860

// << 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860
Процедура ЗаполнитьНомераГТД(ТабличнаяЧастьДокумента, Дата)
	
	Ключ = "Номенклатура, Характеристика, Назначение, Серия";
	Выгрузка = ТабличнаяЧастьДокумента.Выгрузить( , Ключ);
	ДанныеГТД = ПолучитьБлижайшиеНомераГТД(Выгрузка, Дата);
	Для Каждого СтрокаДанныхГТД Из ДанныеГТД Цикл
		
		СтруктураПоиска = Новый Структура(Ключ);
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДанныхГТД);
		МассивСтрок = ТабличнаяЧастьДокумента.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого Строка Из МассивСтрок Цикл
			Строка.НомерГТД				= СтрокаДанныхГТД.НомерГТД;
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры // >> 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860

// << 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860
Функция ПолучитьБлижайшиеНомераГТД(Таблица, Дата) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаПолучитьБлижайшиеНомераГТД();
	Запрос.УстановитьПараметр("Таблица",	Таблица);
	Запрос.УстановитьПараметр("Дата",		Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выгрузка = РезультатЗапроса.Выгрузить();
	
	Возврат Выгрузка;

КонецФункции // >> 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860

// << 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860
Процедура ЗаполнитьЦеныНоменклатуры(ТабличнаяЧастьДокумента, Дата)
	
	Ключ = "Номенклатура";
	Выгрузка = ТабличнаяЧастьДокумента.Выгрузить( , Ключ);
	ЦеныНоменклатуры = ПолучитьЦеныНоменклатуры(Выгрузка, Дата);
	Для Каждого СтрокаЦенаНоменклатуры Из ЦеныНоменклатуры Цикл
		
		СтруктураПоиска = Новый Структура(Ключ);
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаЦенаНоменклатуры);
		МассивСтрок = ТабличнаяЧастьДокумента.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого Строка Из МассивСтрок Цикл
			Строка.Цена				= СтрокаЦенаНоменклатуры.Цена;
			Строка.Сумма			= Строка.Цена * Строка.Количество;
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры // >> 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860

// << 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860
Функция ПолучитьЦеныНоменклатуры(Таблица, Дата)
	
	ВидЦены = Константы.НормативныйВидЦен.Получить();
	
	Если Не ЗначениеЗаполнено(ВидЦены) Тогда
		ТекстСообщения = НСтр("ru = 'Не заполнено значение константы ""Нормативный вид цен""!'"); 
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЦеныНоменклатуры();
	Запрос.УстановитьПараметр("Таблица",	Таблица);
	Запрос.УстановитьПараметр("Дата",		Дата);
	Запрос.УстановитьПараметр("ВидЦены",	ВидЦены);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выгрузка = РезультатЗапроса.Выгрузить();
	
	Возврат Выгрузка;

КонецФункции // >> 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860

// << 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860
Процедура ЗаполнитьНомераГТДПересортицаТоваров()
	
КонецПроцедуры // >> 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860

#Область ТекстыЗапросов

// << 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860
Функция ТекстЗапросаПометитьНаУдалениеСвязанныеСкладскиеАкты()
	
	Возврат
	"ВЫБРАТЬ
	|	ПересортицаТоваров.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПересортицаТоваров КАК ПересортицаТоваров
	|ГДЕ
	|	ПересортицаТоваров.ПересчетТоваров = &ПересчетТоваров
	|	И НЕ ПересортицаТоваров.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписаниеНедостачТоваров.Ссылка
	|ИЗ
	|	Документ.СписаниеНедостачТоваров КАК СписаниеНедостачТоваров
	|ГДЕ
	|	СписаниеНедостачТоваров.ПересчетТоваров = &ПересчетТоваров
	|	И НЕ СписаниеНедостачТоваров.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОприходованиеИзлишковТоваров.Ссылка
	|ИЗ
	|	Документ.ОприходованиеИзлишковТоваров КАК ОприходованиеИзлишковТоваров
	|ГДЕ
	|	ОприходованиеИзлишковТоваров.ПересчетТоваров = &ПересчетТоваров
	|	И НЕ ОприходованиеИзлишковТоваров.ПометкаУдаления";
	
КонецФункции // >> 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860

// << 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860
Функция ТекстЗапросаПолучитьБлижайшиеНомераГТД()
	
	Возврат
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.Номенклатура КАК Номенклатура,
	|	Таблица.Характеристика КАК Характеристика,
	|	Таблица.Назначение КАК Назначение,
	|	Таблица.Серия КАК Серия
	|ПОМЕСТИТЬ ИсходныеДанные
	|ИЗ
	|	&Таблица КАК Таблица
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыОрганизацийОбороты.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТоварыОрганизацийОбороты.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ТоварыОрганизацийОбороты.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	ТоварыОрганизацийОбороты.НомерГТД КАК НомерГТД,
	|	ВЫБОР
	|		КОГДА РАЗНОСТЬДАТ(&Дата, ТоварыОрганизацийОбороты.Период, СЕКУНДА) >= 0
	|			ТОГДА РАЗНОСТЬДАТ(&Дата, ТоварыОрганизацийОбороты.Период, СЕКУНДА)
	|		ИНАЧЕ -РАЗНОСТЬДАТ(&Дата, ТоварыОрганизацийОбороты.Период, СЕКУНДА)
	|	КОНЕЦ КАК ОтклонениеОтДаты
	|ПОМЕСТИТЬ ТоварыОрганизаций
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			(АналитикаУчетаНоменклатуры.Номенклатура, АналитикаУчетаНоменклатуры.Характеристика, АналитикаУчетаНоменклатуры.Серия) В
	|					(ВЫБРАТЬ
	|						ИсходныеДанные.Номенклатура КАК Номенклатура,
	|						ИсходныеДанные.Характеристика КАК Характеристика,
	|						ИсходныеДанные.Серия КАК Серия
	|					ИЗ
	|						ИсходныеДанные КАК ИсходныеДанные)
	|				И НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)) КАК ТоварыОрганизацийОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Серия,
	|	ОтклонениеОтДаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ТоварыОрганизаций.ОтклонениеОтДаты) КАК ОтклонениеОтДаты,
	|	ТоварыОрганизаций.Номенклатура КАК Номенклатура,
	|	ТоварыОрганизаций.Характеристика КАК Характеристика,
	|	ТоварыОрганизаций.Серия КАК Серия
	|ПОМЕСТИТЬ МинимальноеОтклонение
	|ИЗ
	|	ТоварыОрганизаций КАК ТоварыОрганизаций
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрганизаций.Номенклатура,
	|	ТоварыОрганизаций.Характеристика,
	|	ТоварыОрганизаций.Серия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Серия,
	|	ОтклонениеОтДаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.Номенклатура КАК Номенклатура,
	|	ТоварыОрганизаций.Характеристика КАК Характеристика,
	|	ТоварыОрганизаций.Серия КАК Серия,
	|	МАКСИМУМ(ТоварыОрганизаций.НомерГТД) КАК НомерГТД,
	|	ТоварыОрганизаций.ОтклонениеОтДаты КАК ОтклонениеОтДаты
	|ПОМЕСТИТЬ ПриближенныйГТД
	|ИЗ
	|	ТоварыОрганизаций КАК ТоварыОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МинимальноеОтклонение КАК МинимальноеОтклонение
	|		ПО ТоварыОрганизаций.Номенклатура = МинимальноеОтклонение.Номенклатура
	|			И ТоварыОрганизаций.Характеристика = МинимальноеОтклонение.Характеристика
	|			И ТоварыОрганизаций.Серия = МинимальноеОтклонение.Серия
	|			И ТоварыОрганизаций.ОтклонениеОтДаты = МинимальноеОтклонение.ОтклонениеОтДаты
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрганизаций.Номенклатура,
	|	ТоварыОрганизаций.Характеристика,
	|	ТоварыОрганизаций.Серия,
	|	ТоварыОрганизаций.ОтклонениеОтДаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПриближенныйГТД.Номенклатура КАК Номенклатура,
	|	ПриближенныйГТД.Характеристика КАК Характеристика,
	|	ПриближенныйГТД.Серия КАК Серия,
	|	ПриближенныйГТД.НомерГТД КАК НомерГТД,
	|	ПриближенныйГТД.ОтклонениеОтДаты КАК ОтклонениеОтДаты,
	|	ПриближенныйГТД.НомерГТД.СтранаПроисхождения КАК НомерГТДСтранаПроисхождения
	|ПОМЕСТИТЬ ПриближенныйГТД_Итог
	|ИЗ
	|	ПриближенныйГТД КАК ПриближенныйГТД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсходныеДанные.Номенклатура КАК Номенклатура,
	|	ИсходныеДанные.Характеристика КАК Характеристика,
	|	ИсходныеДанные.Назначение КАК Назначение,
	|	ИсходныеДанные.Серия КАК Серия,
	|	ЕСТЬNULL(ПриближенныйГТД_Итог.НомерГТД, ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)) КАК НомерГТД,
	|	ЕСТЬNULL(ПриближенныйГТД_Итог.НомерГТДСтранаПроисхождения, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) КАК НомерГТДСтранаПроисхождения
	|ИЗ
	|	ИсходныеДанные КАК ИсходныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПриближенныйГТД_Итог КАК ПриближенныйГТД_Итог
	|		ПО ИсходныеДанные.Номенклатура = ПриближенныйГТД_Итог.Номенклатура
	|			И ИсходныеДанные.Характеристика = ПриближенныйГТД_Итог.Характеристика
	|			И ИсходныеДанные.Серия = ПриближенныйГТД_Итог.Серия";
	
КонецФункции // >> 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860

// << 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860
Функция ТекстЗапросаЗаполнитьТоварыПересортицыТоваров()
	
	Возврат
	"ВЫБРАТЬ
	|	ТоварыКОформлениюИзлишковНедостачОбороты.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлениюИзлишковНедостачОбороты.Характеристика КАК Характеристика,
	|	ТоварыКОформлениюИзлишковНедостачОбороты.Назначение КАК Назначение,
	|	ТоварыКОформлениюИзлишковНедостачОбороты.Серия КАК Серия,
	|	СУММА(ТоварыКОформлениюИзлишковНедостачОбороты.КОформлениюАктовОборот) КАК Количество,
	|	ТоварыКОформлениюИзлишковНедостачОбороты.Номенклатура.КР_Модель КАК Модель,
	|	ТоварыКОформлениюИзлишковНедостачОбороты.Характеристика.КР_Размер КАК Размер
	|ПОМЕСТИТЬ ИзлишкиНедостач
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюИзлишковНедостач.Обороты(, , Регистратор, ) КАК ТоварыКОформлениюИзлишковНедостачОбороты
	|ГДЕ
	|	ТоварыКОформлениюИзлишковНедостачОбороты.Регистратор = &Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлениюИзлишковНедостачОбороты.Номенклатура,
	|	ТоварыКОформлениюИзлишковНедостачОбороты.Характеристика,
	|	ТоварыКОформлениюИзлишковНедостачОбороты.Назначение,
	|	ТоварыКОформлениюИзлишковНедостачОбороты.Серия,
	|	ТоварыКОформлениюИзлишковНедостачОбороты.Номенклатура.КР_Модель,
	|	ТоварыКОформлениюИзлишковНедостачОбороты.Характеристика.КР_Размер
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлениюИзлишковНедостачОбороты.КОформлениюАктовОборот) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИзлишкиНедостач.Номенклатура КАК Номенклатура,
	|	ИзлишкиНедостач.Характеристика КАК Характеристика,
	|	ИзлишкиНедостач.Назначение КАК Назначение,
	|	ИзлишкиНедостач.Серия КАК Серия,
	|	ИзлишкиНедостач.Количество КАК Количество,
	|	ИзлишкиНедостач.Модель КАК Модель,
	|	ИзлишкиНедостач.Размер КАК Размер
	|ИЗ
	|	ИзлишкиНедостач КАК ИзлишкиНедостач
	|ГДЕ
	|	ИзлишкиНедостач.Количество < 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Назначение,
	|	Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИзлишкиНедостач.Номенклатура КАК Номенклатура,
	|	ИзлишкиНедостач.Характеристика КАК Характеристика,
	|	ИзлишкиНедостач.Назначение КАК Назначение,
	|	ИзлишкиНедостач.Серия КАК Серия,
	|	ИзлишкиНедостач.Количество КАК Количество,
	|	ИзлишкиНедостач.Модель КАК Модель,
	|	ИзлишкиНедостач.Размер КАК Размер,
	|	ИСТИНА КАК ОстатокБольшеНуля
	|ИЗ
	|	ИзлишкиНедостач КАК ИзлишкиНедостач
	|ГДЕ
	|	ИзлишкиНедостач.Количество > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Назначение,
	|	Серия";
	
КонецФункции // >> 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860

// << 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860
Функция ТекстЗапросаЦеныНоменклатуры()
	
	Возврат
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ИсходныеДанные
	|ИЗ
	|	&Таблица КАК Таблица
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныНоменклатуры25СрезПоследних.Номенклатура КАК Номенклатура,
	|	ЦеныНоменклатуры25СрезПоследних.Цена КАК Цена
	|ПОМЕСТИТЬ Цены
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры25.СрезПоследних(
	|			&Дата,
	|			(Номенклатура, ВидЦены) В
	|				(ВЫБРАТЬ
	|					ИсходныеДанные.Номенклатура КАК Номенклатура,
	|					&ВидЦены КАК ВидЦены
	|				ИЗ
	|					ИсходныеДанные КАК ИсходныеДанные)) КАК ЦеныНоменклатуры25СрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсходныеДанные.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(Цены.Цена, 0) КАК Цена
	|ИЗ
	|	ИсходныеДанные КАК ИсходныеДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Цены КАК Цены
	|		ПО ИсходныеДанные.Номенклатура = Цены.Номенклатура";
	
КонецФункции // >> 03.02.2023 Федоров Д.Е., КРОК, JIRA№A2105505-860

#КонецОбласти

#КонецОбласти
