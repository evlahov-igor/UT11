////////////////////////////////////////////////////
//// Общий модуль "КР_РегламентныеЗаданияСервер"
//// Создан: 25.10.2022 Марченко С.Н., КРОК   

#Область ПрограммныйИнтерфейс

// << 09.06.2023, Маскаев П.Ю., КРОК, Jira№ A2105505-1766
// Определяет следующие свойств регламентных заданий:
//  - зависимость от функциональных опций;
//  - возможность выполнения в различных режимах работы программы;
//  - прочие параметры.
//
// Параметры:
//  Настройки - ТаблицаЗначений:
//    * РегламентноеЗадание - ОбъектМетаданныхРегламентноеЗадание - регламентное задание.
//    * ФункциональнаяОпция - ОбъектМетаданныхФункциональнаяОпция - функциональная опция,
//        от которой зависит регламентное задание.
//    * ЗависимостьПоИ      - Булево - если регламентное задание зависит более чем
//        от одной функциональной опции и его необходимо включать только тогда,
//        когда все функциональные опции включены, то следует указывать Истина
//        для каждой зависимости.
//        По умолчанию Ложь - если хотя бы одна функциональная опция включена,
//        то регламентное задание тоже включено.
//    * ВключатьПриВключенииФункциональнойОпции - Булево
//                                              - Неопределено - если Ложь, то при
//        включении функциональной опции регламентное задание не будет включаться. Значение
//        Неопределено соответствует значению Истина.
//        По умолчанию - Неопределено.
//    * ДоступноВПодчиненномУзлеРИБ - Булево
//                                  - Неопределено - Истина или Неопределено, если регламентное
//        задание доступно в РИБ.
//        По умолчанию - Неопределено.
//    * ДоступноВАвтономномРабочемМесте - Булево
//                                      - Неопределено - Истина или Неопределено, если регламентное
//        задание доступно в автономном рабочем месте.
//        По умолчанию - Неопределено.
//    * ДоступноВМоделиСервиса - Булево
//                             - Неопределено - Ложь, если необходимо блокировать выполнение регламентного
//        задания (в т.ч. задания очереди) в информационной базе с включенным использованием разделителя.
//        Значение Неопределено трактуется как Истина.
//        По умолчанию - Неопределено.
//    * РаботаетСВнешнимиРесурсами  - Булево - Истина, если регламентное задание модифицирует данные
//        во внешних источниках (получение почты, синхронизация данных и т.п.). Не следует устанавливать
//        значение Истина для регламентных заданий, не модифицирующих данные во внешних источниках.
//        Например, регламентное задание ЗагрузкаКурсовВалют. Регламентные задания, работающие с внешними ресурсами,
//        автоматически отключаются в копии информационной базы. По умолчанию - Ложь.
//    * Параметризуется             - Булево - Истина, если регламентное задание параметризованное.
//        По умолчанию - Ложь.
//
// Пример:
//	Настройка = Настройки.Добавить();
//	Настройка.РегламентноеЗадание = Метаданные.РегламентныеЗадания.ОбновлениеСтатусовДоставкиSMS;
//	Настройка.ФункциональнаяОпция = Метаданные.ФункциональныеОпции.ИспользоватьПочтовыйКлиент;
//	Настройка.ДоступноВМоделиСервиса = Ложь;
//
Процедура ПриОпределенииНастроекРегламентныхЗаданий(Настройки) Экспорт
	
	// << 03.07.2024 Петухов А.В., Фактор, #4286
	Настройка = Настройки.Добавить();
	Настройка.РегламентноеЗадание = Метаданные.РегламентныеЗадания.КР_ОбменRabbitИнтеграция;
	Настройка.РаботаетСВнешнимиРесурсами = Истина;

	Настройка = Настройки.Добавить();
	Настройка.РегламентноеЗадание = Метаданные.РегламентныеЗадания.КР_ОбработкаПродажИнтернетМагазина;
	Настройка.РаботаетСВнешнимиРесурсами = Истина;

	Настройка = Настройки.Добавить();
	Настройка.РегламентноеЗадание = Метаданные.РегламентныеЗадания.КР_ВыгрузкаТоваровВКассовоеПО;
	Настройка.РаботаетСВнешнимиРесурсами = Истина;

	Настройка = Настройки.Добавить();
	Настройка.РегламентноеЗадание = Метаданные.РегламентныеЗадания.КР_ВыгрузкаПользователейВКассовоеПО;
	Настройка.РаботаетСВнешнимиРесурсами = Истина;

	Настройка = Настройки.Добавить();
	Настройка.РегламентноеЗадание = Метаданные.РегламентныеЗадания.КР_ЗагрузкаОперативныхПродажИзКассовогоПО;
	Настройка.РаботаетСВнешнимиРесурсами = Истина;

	Настройка = Настройки.Добавить();
	Настройка.РегламентноеЗадание = Метаданные.РегламентныеЗадания.КР_ЗагрузкаПродажЗаСменуИзКассовогоПО;
	Настройка.РаботаетСВнешнимиРесурсами = Истина;
	// >> 03.07.2024 Петухов А.В., Фактор, #4286
	
КонецПроцедуры // >> 09.06.2023, Маскаев П.Ю., КРОК, Jira№ A2105505-1766

// << 25.10.2022 Марченко С.Н., КРОК, JIRA№A2105505-725
Процедура ОбработкаПродажИнтернетМагазина() Экспорт
	
	// << 03.07.2024 Петухов А.В., Фактор, #4286
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.КР_ОбработкаПродажИнтернетМагазина);
	// >> 03.07.2024 Петухов А.В., Фактор, #4286
	
	МенеджерОбработкиДанных = РегистрыСведений.КР_РеестрДокументовКОтражениюПродажИнтернетМагазина;
	
	МенеджерОбработкиДанных.ОтразитьРеализацииТоваров();
	МенеджерОбработкиДанных.ОтразитьОплатыКартой();
	МенеджерОбработкиДанных.ОтразитьОплатыНаличными();

	МенеджерОбработкиДанных.ОтразитьВозвратыТоваров();
	МенеджерОбработкиДанных.ОтразитьВозвратыОплатыКартой();
	МенеджерОбработкиДанных.ОтразитьВозвратыОплатыНаличными();
		
КонецПроцедуры // >> 25.10.2022 Марченко С.Н., КРОК, JIRA№A2105505-725

// << 14.11.2022 Маскаев П.Ю., КРОК, JIRA№ A2105505-742
Процедура ЗаполнитьВесНоменклатуры() Экспорт
	
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(
		Метаданные.РегламентныеЗадания.КР_ЗаполнитьВесНоменклатуры);
	
	ЗаписьЖурналаРегистрации(НСтр("ru = 'Заполнение веса номенклатуры'", ОбщегоНазначения.КодОсновногоЯзыка()),
		УровеньЖурналаРегистрации.Информация, , ,
		НСтр("ru = 'Начато регламентное заполнение веса номенклатуры.'"));
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВесЕдиницаИзмерения", Константы.ЕдиницаИзмеренияВеса.Получить());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаДокумента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Период,
	|	КР_ВесНеттоТовара.Регистратор КАК Регистратор,
	|	КР_ВесНеттоТовара.Номенклатура КАК Номенклатура,
	|	ИСТИНА КАК ВесИспользовать,
	|	ЛОЖЬ КАК ВесМожноУказыватьВДокументах,
	|	&ВесЕдиницаИзмерения КАК ВесЕдиницаИзмерения,
	|	КР_ВесНеттоТовара.ВесНетто КАК ВесЧислитель,
	|	1 КАК ВесЗнаменатель
	|ПОМЕСТИТЬ врт_ДанныеРегистра
	|ИЗ
	|	РегистрСведений.КР_ВесНеттоТовара КАК КР_ВесНеттоТовара
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ТаблицаДокумента
	|		ПО КР_ВесНеттоТовара.Регистратор = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	НЕ КР_ВесНеттоТовара.Обработано
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	врт_ДанныеРегистра.Период КАК Период,
	|	врт_ДанныеРегистра.Регистратор КАК Регистратор,
	|	врт_ДанныеРегистра.Номенклатура КАК Номенклатура,
	|	врт_ДанныеРегистра.ВесИспользовать КАК ВесИспользовать,
	|	врт_ДанныеРегистра.ВесМожноУказыватьВДокументах КАК ВесМожноУказыватьВДокументах,
	|	врт_ДанныеРегистра.ВесЕдиницаИзмерения КАК ВесЕдиницаИзмерения,
	|	врт_ДанныеРегистра.ВесЧислитель КАК ВесЧислитель,
	|	врт_ДанныеРегистра.ВесЗнаменатель КАК ВесЗнаменатель,
	|	ВЫБОР
	|		КОГДА врт_ДанныеРегистра.ВесЕдиницаИзмерения <> ТаблицаСправочника.ВесЕдиницаИзмерения
	|				ИЛИ врт_ДанныеРегистра.ВесЗнаменатель <> ТаблицаСправочника.ВесЗнаменатель
	|				ИЛИ врт_ДанныеРегистра.ВесИспользовать <> ТаблицаСправочника.ВесИспользовать
	|				ИЛИ врт_ДанныеРегистра.ВесМожноУказыватьВДокументах <> ТаблицаСправочника.ВесМожноУказыватьВДокументах
	|				ИЛИ врт_ДанныеРегистра.ВесЧислитель <> ТаблицаСправочника.ВесЧислитель
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК АктуализироватьНСИ
	|ИЗ
	|	врт_ДанныеРегистра КАК врт_ДанныеРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаСправочника
	|		ПО врт_ДанныеРегистра.Номенклатура = ТаблицаСправочника.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|ИТОГИ ПО
	|	Регистратор";
	
	НачатьТранзакцию();
	
	Попытка
		
		ВыборкаДокумент = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаДокумент.Следующий() Цикл
			
			Выборка = ВыборкаДокумент.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				Если Не Выборка.АктуализироватьНСИ Тогда
					Продолжить;
				КонецЕсли;
				
				НоменклатураОбъект = Выборка.Номенклатура.ПолучитьОбъект();
				ЗаполнитьЗначенияСвойств(НоменклатураОбъект, Выборка);
				НоменклатураОбъект.Записать();
				
			КонецЦикла;
			
			НаборЗаписей = РегистрыСведений.КР_ВесНеттоТовара.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
			НаборЗаписей.Прочитать();
			Для Каждого Запись Из НаборЗаписей Цикл
				Запись.Обработано = Истина;
			КонецЦикла;
			НаборЗаписей.Записать();
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		Если ТранзакцияАктивна() Тогда
			ОтменитьТранзакцию();
		КонецЕсли;
		
		ТекстОшибки = НСтр("ru = 'Не удалось выполнить алгоритм регламентного задания. Подробности: %1'");
		ТекстОшибки = СтрШаблон(ТекстОшибки, ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Заполнение веса номенклатуры'", ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка, , , ТекстОшибки);
		ВызватьИсключение ТекстОшибки;
		
	КонецПопытки;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	ЗаписьЖурналаРегистрации(
		НСтр("ru = 'Заполнение веса номенклатуры'", ОбщегоНазначения.КодОсновногоЯзыка()),
		УровеньЖурналаРегистрации.Информация, , ,
		НСтр("ru = 'Закончено регламентное заполнение веса номенклатуры.'"));
	
КонецПроцедуры// >> 14.11.2022 Маскаев П.Ю., КРОК, JIRA№ A2105505-742

// << 07.02.2023, Гашников А.П., КРОК, Jira№ A2105505-1150
Процедура ВыгрузкаТоваровВКассовоеПО() Экспорт
	
	// << 03.07.2024 Петухов А.В., Фактор, #4286
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.КР_ВыгрузкаТоваровВКассовоеПО);
	// >> 03.07.2024 Петухов А.В., Фактор, #4286
	
	КР_ИнтеграцияСВнешнимиСистемами.ВыгрузкаТоварыArtix();
	
КонецПроцедуры // >> 07.02.2023, Гашников А.П., КРОК, Jira№ A2105505-1150

// << 07.02.2023, Гашников А.П., КРОК, Jira№ A2105505-1150
Процедура ВыгрузкаПользователейВКассовоеПО() Экспорт
	
	// << 03.07.2024 Петухов А.В., Фактор, #4286
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.КР_ВыгрузкаПользователейВКассовоеПО);
	// >> 03.07.2024 Петухов А.В., Фактор, #4286
	
	КР_ИнтеграцияСВнешнимиСистемами.ВыгрузкаПользователиArtix();
	
КонецПроцедуры
// >> 07.02.2023, Гашников А.П., КРОК, Jira№ A2105505-1150

// << 07.02.2023, Гашников А.П., КРОК, Jira№ A2105505-1150
Процедура ЗагрузкаОперативныхПродажИзКассовогоПО() Экспорт
	
	// << 03.07.2024 Петухов А.В., Фактор, #4286
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.КР_ЗагрузкаОперативныхПродажИзКассовогоПО);
	// >> 03.07.2024 Петухов А.В., Фактор, #4286
	
	КР_ИнтеграцияСВнешнимиСистемами.ЗагрузкаПродажArtix();
	
КонецПроцедуры
// >> 07.02.2023, Гашников А.П., КРОК, Jira№ A2105505-1150

// << 07.02.2023, Гашников А.П., КРОК, Jira№ A2105505-1150
Процедура ЗагрузкаПродажЗаСменуИзКассовогоПО() Экспорт
	
	// << 03.07.2024 Петухов А.В., Фактор, #4286
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.КР_ЗагрузкаПродажЗаСменуИзКассовогоПО);
	// >> 03.07.2024 Петухов А.В., Фактор, #4286
	
	КР_ИнтеграцияСВнешнимиСистемами.ЗагрузкаПродажArtix(, Истина);
	
КонецПроцедуры
// >> 07.02.2023, Гашников А.П., КРОК, Jira№ A2105505-1150

// << 27.03.2023 Марченко С.Н., КРОК, JIRA№A2105505-1148
Процедура ОбеспечениеПотребностей() Экспорт   
	
	// << 03.07.2024 Петухов А.В., Фактор, #4286
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.КР_ОбеспечениеПотребностей);
	// >> 03.07.2024 Петухов А.В., Фактор, #4286

	// A2105505-2331 
	// Доработка реализует вызов исключения регзадания если есть сообщения пользователю
	
	// Очищаем сообщения
	ПолучитьСообщенияПользователю(Истина);
	
	ОбработкаОбъект = Обработки.ОбеспечениеПотребностей.Создать();
	ОбработкаОбъект.КР_ЗапуститьФормированиеЗаказовПоПотребоностям();
	
	МассивСообщений = Новый Массив;   
	ШаблонСообщения = НСтр("ru = '%1: %2'");

	МассивСообщенийСеанса = ПолучитьСообщенияПользователю(Истина);
	Для Каждого СообщениеПользователю Из МассивСообщенийСеанса Цикл
		Если СтрНачинаетсяС(СообщениеПользователю.Текст, "{") Тогда 
			Продолжить;
		КонецЕсли;	            
		ТекстСообщения = СтрШаблон(ШаблонСообщения, 
			СообщениеПользователю.КлючДанных, СообщениеПользователю.Текст);
		МассивСообщений.Добавить(ТекстСообщения);
	КонецЦикла;
	
	Если ЗначениеЗаполнено(МассивСообщений) Тогда 
		ВызватьИсключение СтрСоединить(МассивСообщений, Символы.ПС); 
	КонецЕсли;	
	
КонецПроцедуры // >> 27.03.2023 Марченко С.Н., КРОК, JIRA№A2105505-1148

// << 11.07.2023 Марченко С.Н., КРОК, JIRA№A2105505-1720
Процедура ФормированиеПрогнознойПотребностиВПодсортировке() Экспорт   

	// << 03.07.2024 Петухов А.В., Фактор, #4286
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.КР_ФормированиеПрогнознойПотребностиВПодсортировке);
	// >> 03.07.2024 Петухов А.В., Фактор, #4286

	ОбработкаОбъект = Обработки.ОбеспечениеПотребностей.Создать();
	ОбработкаОбъект.КР_ЗапуститьФормированиеПрогнознойПотребностиВПодсортировке();
		
КонецПроцедуры // >> 11.07.2023 Марченко С.Н., КРОК, JIRA№A2105505-1720

// << 26.07.2023 Марченко С.Н., КРОК, JIRA№A2105505-2046
Процедура ОтложеннаяОбработкаПриемкиПеремещенийТоваров() Экспорт
	
	// << 03.07.2024 Петухов А.В., Фактор, #4286
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.КР_ОтложеннаяОбработкаПриемкиПеремещенийТоваров);
	// >> 03.07.2024 Петухов А.В., Фактор, #4286
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КР_ПриемкаПеремещенийТоваров.Накладная КАК Накладная,
	|	КР_ПриемкаПеремещенийТоваров.ДатаПотоварнойПриемки КАК ДатаПотоварнойПриемки
	|ИЗ
	|	РегистрСведений.КР_ПриемкаПеремещенийТоваров КАК КР_ПриемкаПеремещенийТоваров
	|ГДЕ
	|	КР_ПриемкаПеремещенийТоваров.ОтложеннаяОбработка");   
	
	РезультатЗапроса = Запрос.Выполнить(); 
	Выборка = РезультатЗапроса.Выбрать();
	
	МереджерРегистра = РегистрыСведений.КР_ПриемкаПеремещенийТоваров;
	НаборЗаписей = МереджерРегистра.СоздатьНаборЗаписей(); 
	НаборЗаписей.ДополнительныеСвойства.Вставить("ОтложеннаяОбработка", Ложь);
	Пока Выборка.Следующий() Цикл 
		
		Отказ = Ложь;
		Накладная = Выборка.Накладная;
		ДатаПотоварнойПриемки = Выборка.ДатаПотоварнойПриемки;
		
		МереджерРегистра.СоздатьПерезаполнитьАктОРасхожденияхПослеПеремещения( 
			Накладная, ДатаПотоварнойПриемки, Отказ);
			
		Если Не Отказ Тогда       
				
			НаборЗаписей.Отбор.Накладная.Установить(Накладная);		  
			НаборЗаписей.Прочитать();
			Если НаборЗаписей.Количество() = 0 Тогда 
				Продолжить;
			КонецЕсли;
						
			НаборЗаписей.Записать();
			
		КонецЕсли;		
		
	КонецЦикла;	
	
КонецПроцедуры // >> 26.07.2023 Марченко С.Н., КРОК, JIRA№A2105505-2046

// << 14.10.2023 Марченко С.Н., КРОК, JIRA№A2105505-2384
Процедура ОбработкаОтложенныхДействийСистемы() Экспорт

	// << 03.07.2024 Петухов А.В., Фактор, #4286
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.КР_ОбработкаОтложенныхДействийСистемы);
	// >> 03.07.2024 Петухов А.В., Фактор, #4286
	
	ОтложенныеДействияСистемы = РегистрыСведений.КР_ОтложенныеДействияСистемы;
   	ОтложенныеДействияСистемы.ВыполнитьЗапланированныеДействияСистемы();
	
КонецПроцедуры // >> 14.10.2023 Марченко С.Н., КРОК, JIRA№A2105505-2384

#КонецОбласти
