
#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

// Добавляет в текст запроса реквизиты табличной части "Товары".
//  Реквизиты добавляются вместо параметра "&ЗаказНаВнутреннееПотребление_ТоварыЛокализация".
//
// Параметры:
//  ТекстЗапроса - Строка				 - Исходный текст запроса.
//  ИмяТаблицы	 - Строка, Неопределено	 - Синоним таблицы документа в запросе.
//  	Для получения пустых значений нужно передать "Неопределено".
//
Процедура ДобавитьВТекстЗапросаРеквизитыТаблицыТовары(ТекстЗапроса, ИмяТаблицы) Экспорт

	ПоляЛокализация = "NULL";
	
	//++ Локализация
	
	Если ИмяТаблицы = Неопределено Тогда
		ПоляЛокализация = 
		"	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)             КАК ФизическоеЛицо,
		|	ЗНАЧЕНИЕ(Справочник.КатегорииЭксплуатации.ПустаяСсылка)      КАК КатегорияЭксплуатации";
	Иначе
		ПоляЛокализация = 
		"	Таблица.ФизическоеЛицо               КАК ФизическоеЛицо,
		|	Таблица.КатегорияЭксплуатации        КАК КатегорияЭксплуатации";
	КонецЕсли; 
	
	ПоляЛокализация = СтрЗаменить(ПоляЛокализация, "Таблица", ИмяТаблицы);
	
	//-- Локализация

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЗаказНаВнутреннееПотребление_ТоварыЛокализация", ПоляЛокализация);
	
КонецПроцедуры

// Добавляет в текст запроса реквизиты табличной части "Товары".
//  Реквизиты добавляются вместо параметра "&ЗаказНаВнутреннееПотребление_ТоварыЛокализация".
//
// Параметры:
//  ТекстЗапроса - Строка				 - Исходный текст запроса.
//  ИмяТаблицы	 - Строка, Неопределено	 - Синоним таблицы документа в запросе.
//  	Для получения пустых значений нужно передать "Неопределено".
//
Процедура ДобавитьВТекстЗапросаМаксимумРеквизитыТаблицыТовары(ТекстЗапроса, ИмяТаблицы) Экспорт

	ПоляЛокализация = "NULL";
	
	//++ Локализация
	
	Если ИмяТаблицы = Неопределено Тогда
		ПоляЛокализация = 
		"	МАКСИМУМ(ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК ФизическоеЛицо,
		|	МАКСИМУМ(ЗНАЧЕНИЕ(Справочник.КатегорииЭксплуатации.ПустаяСсылка)) КАК КатегорияЭксплуатации";
	Иначе
		ПоляЛокализация = 
		"	МАКСИМУМ(Таблица.ФизическоеЛицо) КАК ФизическоеЛицо,
		|	МАКСИМУМ(Таблица.КатегорияЭксплуатации) КАК КатегорияЭксплуатации";
	КонецЕсли; 
	
	ПоляЛокализация = СтрЗаменить(ПоляЛокализация, "Таблица", ИмяТаблицы);
	
	//-- Локализация

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЗаказНаВнутреннееПотребление_ТоварыЛокализация", ПоляЛокализация);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ФормаДокумента

// Вызывается из соответствующего обработчика документа
//
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт

	//++ Локализация
	Элементы = Форма.Элементы;

	Элементы.ХозяйственнаяОперация.СписокВыбора.Добавить(Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию);
	Элементы.ХозяйственнаяОперация.Видимость = Истина;
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
Процедура ПриЧтенииСозданииНаСервере(Форма) Экспорт

	//++ Локализация
	
	НастроитьПанельНавигации(Форма);
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается при изменении реквизита ХозяйственнаяОперация в документе
//
Процедура ХозяйственнаяОперацияПриИзменении(Форма, ИзмененныеРеквизиты, ДополнительныеПараметры) Экспорт

	//++ Локализация
	
	НастроитьПанельНавигации(Форма);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ПриВыполненииКоманды(ИмяКоманды, Форма, ДополнительныеПараметры) Экспорт
	
	//++ Локализация
	
	Элементы = Форма.Элементы;

	Если ИмяКоманды = Элементы.ТоварыЗаполнитьТМЦ.ИмяКоманды Тогда
		ЗаполнитьТМЦСИстекающимСроком(Форма, ДополнительныеПараметры);
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

Процедура УстановитьУсловноеОформление(Форма) Экспорт

//++ Локализация


//-- Локализация
	
КонецПроцедуры

Процедура ЗаполнитьСлужебныеРеквизитыТабличнойЧасти(Объект) Экспорт

	//++ Локализация
	
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
	Движения = Объект.Движения;
	ДополнительныеСвойства = Объект.ДополнительныеСвойства;
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	//++ Локализация
	

	//-- Локализация
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	//++ Локализация
	

	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект.ЗаказНаВнутреннееПотребление - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт

	//++ Локализация
	//-- Локализация

КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
		
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти


#Область Прочее

Процедура ПараметрыЗаполненияВидаДеятельностиНДС(Объект, ПараметрыЗаполнения) Экспорт
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию Тогда
		ПараметрыЗаполнения.ПередачаВЭксплуатацию = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Формирует массивы имен реквизитов, зависимых от хозяйственной операции документа.
//
// Параметры:
//  ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - хозяйственная операция документа.
//	ВсеРеквизиты - Массив - возвращает все реквизиты
//  РеквизитыОперации - Массив - возвращает реквизиты операции.
//
Процедура ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(ХозяйственнаяОперация, ВсеРеквизиты, РеквизитыОперации) Экспорт
	
	//++ Локализация
	
	ВсеРеквизиты.Добавить("Товары.ФизическоеЛицо");
	ВсеРеквизиты.Добавить("Товары.КатегорияЭксплуатации");
	// --> Евлахов Игорь Николаевич (Начало) 11.03.2024
	// Задача #3848
	ВсеРеквизиты.Добавить("Товары.злДатаВыдачи");
	// <-- Евлахов Игорь Николаевич (Конец) 11.03.2024
		
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию Тогда
		
		РеквизитыОперации.Добавить("Товары.ФизическоеЛицо");
		РеквизитыОперации.Добавить("Товары.КатегорияЭксплуатации");
		
		// --> Евлахов Игорь Николаевич (Начало) 11.03.2024
		// Задача #3848
		РеквизитыОперации.Добавить("Товары.злДатаВыдачи");
		// <-- Евлахов Игорь Николаевич (Конец) 11.03.2024
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ЗаполнитьИменаЭлементовПоХозяйственнойОперации(ХозяйственнаяОперация, МассивВсехЭлементов, МассивЭлементовОперации) Экспорт
	
	//++ Локализация

	МассивВсехЭлементов.Добавить("ТоварыЗаполнитьТМЦ");
	
	// --> Евлахов Игорь Николаевич (Начало) 11.03.2024
	// Задача #3848
	МассивВсехЭлементов.Добавить("злКомандаЗаполнитьДатуВыдачи");
	МассивВсехЭлементов.Добавить("злКомандаЗаполнитьДатуВыдачиДляВыделенныхСтрок");
	// <-- Евлахов Игорь Николаевич (Конец) 11.03.2024 
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию Тогда
		МассивЭлементовОперации.Добавить("ТоварыЗаполнитьТМЦ");
		// --> Евлахов Игорь Николаевич (Начало) 11.03.2024
		// Задача #3848
		МассивЭлементовОперации.Добавить("злКомандаЗаполнитьДатуВыдачи");
		МассивЭлементовОперации.Добавить("злКомандаЗаполнитьДатуВыдачиДляВыделенныхСтрок");
		// <-- Евлахов Игорь Николаевич (Конец) 11.03.2024
	КонецЕсли;

	//-- Локализация
	
КонецПроцедуры

Процедура ПараметрыВыбораСтатейИАналитик(ПараметрыВыбора, ХозяйственнаяОперация) Экспорт
	
	//++ Локализация
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию Тогда
		
		ПараметрыВыбора.ВыборСтатьиАктивовПассивов = Ложь;
		
		СписокУсловий = Новый Структура;
		СписокУсловий.Вставить("АналитикаРасходовОбязательна", Истина);
		СписокУсловий.Вставить("УчитыватьВВидеГрупповогоОС", Ложь);
		ПараметрыВыбора.УсловияОбязательногоЗаполненияАналитикиВСтроках = СписокУсловий;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ФормаДокумента

//++ Локализация

Процедура НастроитьПанельНавигации(Форма)

	Объект = Форма.Объект;
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ИспользоватьМатериалыВЭксплуатации",
		Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратИзЭксплуатации);
	
	ОбщегоНазначенияУТ.НастроитьФормуПоПараметрам(Форма, СтруктураНастроек);
	
КонецПроцедуры

Процедура ЗаполнитьТМЦСИстекающимСроком(Форма, ДополнительныеПараметры)
	
	Объект = Форма.Объект;
	
	Объект.Товары.Очистить();
	
	Если ПолучитьФункциональнуюОпцию("УправлениеТорговлей") Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ПартииТМЦВЭксплуатации.Ссылка
		|ПОМЕСТИТЬ Партии
		|ИЗ
		|	Справочник.ПартииТМЦВЭксплуатации КАК ПартииТМЦВЭксплуатации
		|ГДЕ
		|	НЕ ПартииТМЦВЭксплуатации.ПометкаУдаления
		|	И КОНЕЦПЕРИОДА(ПартииТМЦВЭксплуатации.ДатаЗавершенияЭксплуатации, МЕСЯЦ) = &Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТовары.Номенклатура,
		|	ТаблицаТовары.Характеристика,
		|	ТаблицаТовары.ФизическоеЛицо,
		|	ТаблицаТовары.КатегорияЭксплуатации КАК КатегорияЭксплуатации,
		|	ТаблицаТовары.Количество КАК Количество,
		|	ТаблицаТовары.Количество КАК КоличествоУпаковок
		|ИЗ
		|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК ТаблицаТовары
		|ГДЕ
		|	ТаблицаТовары.Ссылка.Организация = &Организация
		|	И ТаблицаТовары.Ссылка.Подразделение = &Подразделение
		|	И ТаблицаТовары.Ссылка.Проведен
		|	И ТаблицаТовары.Партия В
		|		(ВЫБРАТЬ
		|			Партии.Ссылка
		|		ИЗ
		|			Партии КАК Партии)";
	
	Иначе
		
		
	КонецЕсли;
		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Период", КонецМесяца(?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса())));
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	ИзмененныеСтроки = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		ИзмененныеСтроки.Добавить(НоваяСтрока);
	КонецЦикла;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ВыполнитьДействие_ПриИзмененииСтрок", ИзмененныеСтроки);
	
КонецПроцедуры

//-- Локализация

#КонецОбласти

#Область Проведение

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
