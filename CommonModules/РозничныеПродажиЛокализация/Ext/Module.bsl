
#Область ПрограммныйИнтерфейс

#Область ФискальныеОперации

//++ Локализация

// Получить данные для передачи МОТП сведений о розничной продаже
//
// Параметры:
//  ДокументСсылка - ДокументСсылка - Документ
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - 
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Данные о продажах
//
Функция ДанныеДляИСМП(ДокументСсылка, МенеджерВременныхТаблиц) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ШтрихкодыУпаковок.ШтрихкодУпаковки               КАК ШтрихкодУпаковки,
	|	ШтрихкодыУпаковок.ЧастичноеВыбытиеВариантУчета   КАК ЧастичноеВыбытиеВариантУчета,
	|	ШтрихкодыУпаковок.ЧастичноеВыбытиеНоменклатура   КАК ЧастичноеВыбытиеНоменклатура,
	|	ШтрихкодыУпаковок.ЧастичноеВыбытиеХарактеристика КАК ЧастичноеВыбытиеХарактеристика,
	|	ШтрихкодыУпаковок.ЧастичноеВыбытиеКоличество     КАК ЧастичноеВыбытиеКоличество
	|ИЗ
	|	ТаблицаАкцизныеМарки КАК ШтрихкодыУпаковок";
	
	МассивУпаковок                  = Новый Массив();
	ВыборкаИзРезультатаПоШтрихкодам = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаИзРезультатаПоШтрихкодам.Следующий() Цикл
		
		НовыйЭлемент = ШтрихкодированиеИСМП.НовыйЭлементКоллекцииУпаковокДляРаспределенияПоТоварам();
		ЗаполнитьЗначенияСвойств(НовыйЭлемент, ВыборкаИзРезультатаПоШтрихкодам);
		
		МассивУпаковок.Добавить(НовыйЭлемент);
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Серии.НомерСтроки КАК НомерСтроки,
	|	Серии.СерияТаблицыСерий КАК СерияТаблицыСерий,
	|	Серии.КоличествоУпаковок КАК КоличествоУпаковок,
	|	Серии.Номенклатура КАК Номенклатура,
	|	Серии.Характеристика КАК Характеристика
	|ИЗ
	|	Серии КАК Серии";
	
	ТаблицаСерий = Запрос.Выполнить().Выгрузить();
	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Товары.НомерСтроки,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия КАК СерияТаблицыТоваров,
	|	Товары.СтатусУказанияСерий,
	|	Товары.ОсобенностьУчета,
	|	Товары.Упаковка,
	|	Товары.Количество,
	|	Товары.КоличествоУпаковок,
	|	Товары.Цена,
	|	Товары.СуммаСкидки КАК СуммаСкидки,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	Товары.СуммаНДС КАК СуммаНДС,
	|	Товары.СуммаСНДС КАК СуммаСНДС
	|ИЗ
	|	Товары КАК Товары
	|ГДЕ
	|	Товары.ОсобенностьУчета В (
	|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ТабачнаяПродукция),
	|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция),
	|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ЛегкаяПромышленность),
	|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияБезВЕТИС),
	|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС),
	|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Шины),
	|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Фотоаппараты),
	|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Велосипеды),
	|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.КреслаКоляски),
	|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Духи),
	|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.АльтернативныйТабак),
	|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.УпакованнаяВода),
	|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Антисептики),
	|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.БАДы),
	|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.НикотиносодержащаяПродукция),
	|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Пиво))";

	
	ТаблицаТовары = Запрос.Выполнить().Выгрузить();
	
	
	ПоляИзмерения = Новый Массив;
	ПоляИзмерения.Добавить("Номенклатура");
	ПоляИзмерения.Добавить("Характеристика");
	
	ПоляДетализации = Новый Массив;
	ПоляДетализации.Добавить("СерияТаблицыСерий");
	
	ПоляСумм = Новый Массив;
	ПоляСумм.Добавить("СуммаСкидки");
	ПоляСумм.Добавить("СуммаНДС");
	ПоляСумм.Добавить("СуммаСНДС");
	ПоляСумм.Добавить("Количество");
	
	ТаблицаРезультатРаспределения = РаспределитьДанныеПоТаблицам(ТаблицаТовары, ТаблицаСерий, ПоляИзмерения, ПоляДетализации, ПоляСумм, "КоличествоУпаковок");
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаРезультатРаспределения.НомерСтроки КАК НомерСтроки,
	|	ТаблицаРезультатРаспределения.Номенклатура КАК Номенклатура,
	|	ТаблицаРезультатРаспределения.Характеристика КАК Характеристика,
	|	ТаблицаРезультатРаспределения.СерияТаблицыТоваров КАК СерияТаблицыТоваров,
	|	ТаблицаРезультатРаспределения.СерияТаблицыСерий КАК СерияТаблицыСерий,
	|	ТаблицаРезультатРаспределения.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	ТаблицаРезультатРаспределения.ОсобенностьУчета КАК ОсобенностьУчета,
	|	ТаблицаРезультатРаспределения.Упаковка КАК Упаковка,
	|	ТаблицаРезультатРаспределения.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаРезультатРаспределения.Количество КАК Количество,
	|	ТаблицаРезультатРаспределения.Цена КАК Цена,
	|	ТаблицаРезультатРаспределения.СуммаСкидки КАК СуммаСкидки,
	|	ТаблицаРезультатРаспределения.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаРезультатРаспределения.СуммаНДС КАК СуммаНДС,
	|	ТаблицаРезультатРаспределения.СуммаСНДС КАК СуммаСНДС
	|ПОМЕСТИТЬ ТаблицаРезультатРаспределения
	|ИЗ
	|	&ТаблицаРезультатРаспределения КАК ТаблицаРезультатРаспределения
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРезультатРаспределения.НомерСтроки,
	|	ТаблицаРезультатРаспределения.Номенклатура,
	|	ТаблицаРезультатРаспределения.Характеристика,
	|	ТаблицаРезультатРаспределения.СерияТаблицыТоваров,
	|	ТаблицаРезультатРаспределения.СерияТаблицыСерий,
	|	ТаблицаРезультатРаспределения.СтатусУказанияСерий,
	|	ТаблицаРезультатРаспределения.ОсобенностьУчета,
	|	ТаблицаРезультатРаспределения.Упаковка,
	|	ТаблицаРезультатРаспределения.КоличествоУпаковок,
	|	ТаблицаРезультатРаспределения.Цена,
	|	ТаблицаРезультатРаспределения.СуммаСкидки,
	|	ТаблицаРезультатРаспределения.СтавкаНДС,
	|	ТаблицаРезультатРаспределения.СуммаНДС,
	|	ТаблицаРезультатРаспределения.СуммаСНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаРезультатРаспределения.СерияТаблицыСерий = НЕОПРЕДЕЛЕНО
	|			ТОГДА ТаблицаРезультатРаспределения.СерияТаблицыТоваров
	|		ИНАЧЕ ТаблицаРезультатРаспределения.СерияТаблицыСерий
	|	КОНЕЦ КАК Серия,
	|	ТаблицаРезультатРаспределения.Количество КАК Количество
	|ИЗ
	|	ТаблицаРезультатРаспределения КАК ТаблицаРезультатРаспределения";
	Запрос.УстановитьПараметр("ТаблицаРезультатРаспределения", ТаблицаРезультатРаспределения);
	
	Товары = Запрос.Выполнить().Выгрузить();
	
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ЧекККМ")
		ИЛИ ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ЧекККМВозврат")
		ИЛИ ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ЧекККМКоррекции") Тогда
		
		ДокументСтруктурой = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "Склад,Статус,Дата");
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		ДокументСтруктурой = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "Склад,ХозяйственнаяОперация,Статус,Дата");
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		
		ДокументСтруктурой = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "Склад,Дата,ДокументОснование");
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") Тогда
		
		ДокументСтруктурой = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "Склад,Дата,ХозяйственнаяОперация");
	Иначе
		
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Некорректно встроен механизм распределения серий по товаром для расчета данных ИСМП: %1'"), 
				ОписаниеОшибки());
	КонецЕсли;
	
	ПолноеИмя = ДокументСсылка.Метаданные().ПолноеИмя();
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмя);
	
	ПараметрыУказанияСерий = МенеджерОбъекта.ПараметрыУказанияСерий(ДокументСтруктурой);
	
	ТоварыРазобранные =
		РаспределитьШтрихкодыПоТаблицеТоваров(
			ДокументСсылка,
			МассивУпаковок,
			ПараметрыУказанияСерий,
			Товары);
	
	Возврат ТоварыРазобранные;
	
КонецФункции

Функция РаспределитьШтрихкодыПоТаблицеТоваров(ДокументСсылка, МассивУпаковок, ПараметрыУказанияСерий, Товары) Экспорт
	
	ДанныеРаспределения = ДанныеРаспределенияШтрихкодовУпаковокПоТоварам(
		ДокументСсылка, МассивУпаковок, ПараметрыУказанияСерий, Товары);
	
	Если ДанныеРаспределения.ЕстьОшибки Тогда
		ВызватьИсключение СтрСоединить(ДанныеРаспределения.Ошибки, Символы.ПС);
	КонецЕсли;
	
	ТоварыРазобранные = Товары.СкопироватьКолонки(); // ТаблицаЗначений -
	Если Не ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТоварыРазобранные, "Штрихкод") Тогда
		ТоварыРазобранные.Колонки.Добавить("Штрихкод");
	КонецЕсли;
	Если Не ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТоварыРазобранные, "КоэффициентПересчетаУпаковки") Тогда
		ТоварыРазобранные.Колонки.Добавить("КоэффициентПересчетаУпаковки");
	КонецЕсли;
	Если Не ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТоварыРазобранные, "РезультатРаспределения") Тогда
		ТоварыРазобранные.Колонки.Добавить("РезультатРаспределения");
	КонецЕсли;
	Если Не ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТоварыРазобранные, "ДополнениеКНаименованиюТовара") Тогда
		ТоварыРазобранные.Колонки.Добавить("ДополнениеКНаименованиюТовара");
	КонецЕсли;
	
	ОписанияНоменклатурыСЧастичнымВыбытием = Новый Соответствие;
	
	Для Каждого СтрокаТовары Из Товары Цикл
		
		РаспределениеПоСтроке = ДанныеРаспределения.РаспределенныеСтроки.Получить(СтрокаТовары);
		
		Если РаспределениеПоСтроке = Неопределено Тогда
			СтрокаТоварыРазобранные = ТоварыРазобранные.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТоварыРазобранные, СтрокаТовары);
			Продолжить;
		КонецЕсли;
		
		Для Каждого СтрокаРаспределения Из РаспределениеПоСтроке Цикл
			
			Если СтрокаТовары.КоличествоУпаковок = 0 Тогда
				Прервать;
			КонецЕсли;
			
			СтрокаТоварыРазобранные = ТоварыРазобранные.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТоварыРазобранные, СтрокаТовары);
			
			Коэффициент                                = 1;
			СтрокаТоварыРазобранные.КоличествоУпаковок = 1;
			СтрокаТоварыРазобранные.Количество         = 1;
			ЦенаИзТоваров                              = Истина;
			
			Если ЗначениеЗаполнено(СтрокаРаспределения.Штрихкод) Тогда
				
				Если СтрокаРаспределения.ЧастичноеВыбытие
					ИЛИ СтрокаРаспределения.Количество <> 1 Тогда
					
					СтруктураНаименованияТовара = Новый Структура;
					СтруктураНаименованияТовара.Вставить("Упаковка",           СтрокаТовары.Упаковка);
					СтруктураНаименованияТовара.Вставить("Количество",         СтрокаРаспределения.Количество);
					СтруктураНаименованияТовара.Вставить("КоличествоУпаковок", СтрокаРаспределения.ЧастичноеВыбытиеКоличество);
					СтруктураНаименованияТовара.Вставить("Цена",               СтрокаТовары.Цена);
					
					СтрокаТоварыРазобранные.Количество                    = СтрокаРаспределения.Количество;
					СтрокаТоварыРазобранные.ДополнениеКНаименованиюТовара = СтруктураНаименованияТовара;
					
					ЦенаИзТоваров = Ложь;
					
					Если СтрокаРаспределения.Количество <> 1 Тогда
						Коэффициент = СтрокаРаспределения.Количество;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
			СтрокаТоварыРазобранные.КоэффициентПересчетаУпаковки = Коэффициент;
			
			КоэффициентПересчетаУпаковки = 1;
			БазоваяЕдиница = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТовары.Номенклатура, "ЕдиницаИзмерения");
			ДанныеЕдиницыИзмеренияЧастичногоВыбытия = Неопределено;
			
			Если СтрокаТовары.КоличествоУпаковок <> СтрокаТовары.Количество Тогда
				
				РеквизитыУпаковки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрокаТовары.Упаковка, "Знаменатель,Числитель");
				КоэффициентПересчетаУпаковки = РеквизитыУпаковки.Знаменатель / РеквизитыУпаковки.Числитель;
				
				Если НЕ СтрокаРаспределения.ЧастичноеВыбытие Тогда
					СтрокаТоварыРазобранные.Упаковка = БазоваяЕдиница;
				КонецЕсли;
				
			ИначеЕсли СтрокаРаспределения.ЧастичноеВыбытие
				И НЕ ЗначениеЗаполнено(СтрокаТовары.Упаковка)
				И СтрокаТовары.КоличествоУпаковок <> СтрокаРаспределения.ЧастичноеВыбытиеКоличество Тогда
				
				ОписаниеНоменклатуры = ОписанияНоменклатурыСЧастичнымВыбытием.Получить(СтрокаТовары.Номенклатура);
				Если ОписаниеНоменклатуры = Неопределено Тогда
					СоответствиеОписаниеНоменклатуры = РегистрыСведений.ОписаниеНоменклатурыИС.ПолучитьОписание(СтрокаТовары.Номенклатура);
					ОписаниеНоменклатуры = СоответствиеОписаниеНоменклатуры[СтрокаТовары.Номенклатура];
					
					ОписанияНоменклатурыСЧастичнымВыбытием.Вставить(СтрокаТовары.Номенклатура, ОписаниеНоменклатуры);
				КонецЕсли;
				
				СтрокаТоварыРазобранные.Упаковка = ОписаниеНоменклатуры.УпаковкаЧастичногоВыбытия;
				КоэффициентПересчетаУпаковки = ОписаниеНоменклатуры.ЕмкостьПотребительскойУпаковки
				                                   / ОписаниеНоменклатуры.КоличествоВПотребительскойУпаковке;
				
			КонецЕсли;
			
			КоличествоУпаковокКВыбытию = 0;
			Если СтрокаРаспределения.ЧастичноеВыбытие Тогда
				КоличествоУпаковокКВыбытию = СтрокаРаспределения.ЧастичноеВыбытиеКоличество;
			ИначеЕсли СтрокаРаспределения.Количество <> 1
				И Справочники.УпаковкиЕдиницыИзмерения.ЭтоМернаяЕдиница(БазоваяЕдиница, "") Тогда
				КоличествоУпаковокКВыбытию = СтрокаРаспределения.Количество;
			Иначе
				КоличествоУпаковокКВыбытию = СтрокаРаспределения.Количество * КоэффициентПересчетаУпаковки;
			КонецЕсли;
			
			Если СтрокаТовары.Количество = Коэффициент Тогда
				СуммаСкидки = СтрокаТовары.СуммаСкидки;
				СуммаНДС    = СтрокаТовары.СуммаНДС;
				СуммаСНДС   = СтрокаТовары.СуммаСНДС;
			ИначеЕсли ЗначениеЗаполнено(СтрокаТовары.Упаковка) Тогда
				СуммаСкидки = Окр(СтрокаТовары.СуммаСкидки / СтрокаТовары.КоличествоУпаковок * КоличествоУпаковокКВыбытию, 2);
				СуммаНДС    = Окр(СтрокаТовары.СуммаНДС    / СтрокаТовары.КоличествоУпаковок * КоличествоУпаковокКВыбытию, 2);
				СуммаСНДС   = Окр(СтрокаТовары.СуммаСНДС   / СтрокаТовары.КоличествоУпаковок * КоличествоУпаковокКВыбытию, 2);
			Иначе
				СуммаСкидки = Окр(СтрокаТовары.СуммаСкидки / СтрокаТовары.КоличествоУпаковок * СтрокаРаспределения.Количество, 2);
				СуммаНДС    = Окр(СтрокаТовары.СуммаНДС    / СтрокаТовары.КоличествоУпаковок * СтрокаРаспределения.Количество, 2);
				СуммаСНДС   = Окр(СтрокаТовары.СуммаСНДС   / СтрокаТовары.КоличествоУпаковок * СтрокаРаспределения.Количество, 2);
			КонецЕсли;
			
			Если ЦенаИзТоваров Тогда
				Цена = СтрокаТовары.Цена * КоэффициентПересчетаУпаковки;
			Иначе
				Цена = СуммаСНДС - СуммаСкидки;
			КонецЕсли;
			
			СтрокаТоварыРазобранные.СуммаСкидки = СуммаСкидки;
			СтрокаТоварыРазобранные.СуммаНДС    = СуммаНДС;
			СтрокаТоварыРазобранные.СуммаСНДС   = СуммаСНДС;
			СтрокаТоварыРазобранные.Цена        = Цена;
			СтрокаТоварыРазобранные.Штрихкод    = СтрокаРаспределения.Штрихкод;
			СтрокаТоварыРазобранные.РезультатРаспределения = СтрокаРаспределения;
			
			Если ЗначениеЗаполнено(СтрокаТовары.Упаковка) Тогда
				СтрокаТовары.КоличествоУпаковок = СтрокаТовары.КоличествоУпаковок - КоличествоУпаковокКВыбытию;
			Иначе
				СтрокаТовары.КоличествоУпаковок = СтрокаТовары.КоличествоУпаковок - СтрокаРаспределения.Количество;
			КонецЕсли;
			
			СтрокаТовары.Количество  = СтрокаТовары.Количество  - СтрокаРаспределения.Количество;
			СтрокаТовары.СуммаСкидки = СтрокаТовары.СуммаСкидки - СтрокаТоварыРазобранные.СуммаСкидки;
			СтрокаТовары.СуммаНДС    = СтрокаТовары.СуммаНДС    - СтрокаТоварыРазобранные.СуммаНДС;
			СтрокаТовары.СуммаСНДС   = СтрокаТовары.СуммаСНДС   - СтрокаТоварыРазобранные.СуммаСНДС;
			
		КонецЦикла;
		
		Если СтрокаТовары.Количество > 0 Тогда
			СтрокаТоварыРазобранные = ТоварыРазобранные.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТоварыРазобранные, СтрокаТовары);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТоварыРазобранные;

КонецФункции

Функция ДанныеРаспределенияШтрихкодовУпаковокПоТоварам(ДокументСсылка, МассивУпаковок, ПараметрыУказанияСерий, Товары) Экспорт
	
	ПараметрыРаспределения                         = ШтрихкодированиеИСМП.НовыеПараметрыРаспределенияШтрихкодовУпаковок();
	ПараметрыРаспределения.ДокументСсылка          = ДокументСсылка;
	ПараметрыРаспределения.ПараметрыУказанияСерий  = ПараметрыУказанияСерий;
	ПараметрыРаспределения.ДопустимыТоварыБезМарок = РозничныеПродажиЛокализация.ДопустимыТоварыБезМарокВДокументе(ДокументСсылка);
	
	ДанныеРаспределения = ШтрихкодированиеИСМП.РаспределениеШтрихкодовУпаковокПоТоварам(
		ПараметрыРаспределения,
		Товары,
		МассивУпаковок);
	
	Возврат ДанныеРаспределения;

КонецФункции

// Функция получает данные для формирования печатной формы КМ-6.
//
// Возвращаемое значение:
// 	Структура:
//		* РезультатЗапроса - РезультатЗапроса - Содержит информацию для заполнения печатной формы
//		* ЗаголовокДокумента - Строка - Отображаемый заголовок табличного документа
Функция ПолучитьДанныеДляПечатнойФормыКМ6(ПараметрыПечати, МассивОбъектов) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	// МассивОбъектов содержит документы одного вида.	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ТЧТовары.Сумма), 0) КАК СуммаПродаж,
	|	ЕСТЬNULL(СУММА(ТЧТовары.СуммаНДС), 0) КАК СуммаПродажНДС,
	|	0 КАК СуммаПродажОтчет,
	|	0 КАК СуммаПродажОтчетНДС,
	|	0 КАК СуммаВозвратов,
	|	0 КАК СуммаВозвратовНДС,
	|	0 КАК СуммаПродажПодарочныхСертификатов,
	|	0 КАК СуммаВозвратовПодарочныхСертификатов,	
	|	ОтчетОРозничныхПродажах.Ссылка КАК Ссылка,
	|	ОтчетОРозничныхПродажах.Ссылка КАК ОтчетОРозничныхПродажах	
	|ПОМЕСТИТЬ ПродажиИВозвраты
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЧекККМ.Товары КАК ТЧТовары
	|		ПО (ТЧТовары.Ссылка.КассоваяСмена = ОтчетОРозничныхПродажах.КассоваяСмена)
	|			И (ТЧТовары.Ссылка.Проведен)
	|			И (ТЧТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит))
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетОРозничныхПродажах.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ТЧТовары.Сумма), 0) КАК СуммаПродаж,
	|	ЕСТЬNULL(СУММА(ТЧТовары.СуммаНДС), 0) КАК СуммаПродажНДС,
	|	0 КАК СуммаПродажОтчет,
	|	0 КАК СуммаПродажОтчетНДС,
	|	0 КАК СуммаВозвратов,
	|	0 КАК СуммаВозвратовНДС,
	|	0 КАК СуммаПродажПодарочныхСертификатов,
	|	0 КАК СуммаВозвратовПодарочныхСертификатов,
	|	ОтчетОРозничныхВозвратах.Ссылка КАК Ссылка,
	|	ОтчетОРозничныхПродажах.Ссылка КАК ОтчетОРозничныхПродажах	
	|ИЗ
	|	Документ.ОтчетОРозничныхВозвратах КАК ОтчетОРозничныхВозвратах
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах 
	|	ПО ОтчетОРозничныхПродажах.КассоваяСмена = ОтчетОРозничныхВозвратах.КассоваяСмена
	|		И ОтчетОРозничныхПродажах.НалогообложениеНДС = ОтчетОРозничныхВозвратах.НалогообложениеНДС	
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЧекККМ.Товары КАК ТЧТовары
	|		ПО (ТЧТовары.Ссылка.КассоваяСмена = ОтчетОРозничныхПродажах.КассоваяСмена)
	|			И (ТЧТовары.Ссылка.Проведен)
	|			И (ТЧТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит))
	|ГДЕ
	|	ОтчетОРозничныхВозвратах.Ссылка В(&МассивОбъектов)
	|	И ОтчетОРозничныхПродажах.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетОРозничныхПродажах.Ссылка,
	|	ОтчетОРозничныхВозвратах.Ссылка
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	0,
	|	ЕСТЬNULL(СУММА(ТЧТоварыОтчет.Сумма), 0),
	|	ЕСТЬNULL(СУММА(ТЧТоварыОтчет.СуммаНДС), 0),
	|	0,
	|	0,
	|	0,
	|	0,
	|	ОтчетОРозничныхПродажах.Ссылка КАК Ссылка,
	|	ОтчетОРозничныхПродажах.Ссылка КАК ОтчетОРозничныхПродажах	
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.Товары КАК ТЧТоварыОтчет
	|		ПО (ТЧТоварыОтчет.Ссылка = ОтчетОРозничныхПродажах.Ссылка)
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетОРозничныхПродажах.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	0,
	|	ЕСТЬNULL(СУММА(ТЧТоварыОтчет.Сумма), 0),
	|	ЕСТЬNULL(СУММА(ТЧТоварыОтчет.СуммаНДС), 0),
	|	0,
	|	0,
	|	0,
	|	0,
	|	ОтчетОРозничныхВозвратах.Ссылка КАК Ссылка,
	|	ОтчетОРозничныхПродажах.Ссылка КАК ОтчетОРозничныхПродажах
	|ИЗ
	|	Документ.ОтчетОРозничныхВозвратах КАК ОтчетОРозничныхВозвратах
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах 
	|	ПО ОтчетОРозничныхПродажах.КассоваяСмена = ОтчетОРозничныхВозвратах.КассоваяСмена
	|		И ОтчетОРозничныхПродажах.НалогообложениеНДС = ОтчетОРозничныхВозвратах.НалогообложениеНДС
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.Товары КАК ТЧТоварыОтчет
	|	ПО (ТЧТоварыОтчет.Ссылка = ОтчетОРозничныхПродажах.Ссылка)
	|ГДЕ
	|	ОтчетОРозничныхВозвратах.Ссылка В(&МассивОбъектов)
	|	И ОтчетОРозничныхПродажах.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетОРозничныхПродажах.Ссылка,
	|	ОтчетОРозничныхВозвратах.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	0,
	|	0,
	|	0,
	|	ЕСТЬNULL(СУММА(ТЧТовары.Сумма), 0),
	|	ЕСТЬNULL(СУММА(ТЧТовары.СуммаНДС), 0),
	|	0,
	|	0,
	|	ОтчетОРозничныхПродажах.Ссылка,
	|	ОтчетОРозничныхПродажах.Ссылка КАК ОтчетОРозничныхПродажах	
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЧекККМВозврат.Товары КАК ТЧТовары
	|		ПО (ТЧТовары.Ссылка.КассоваяСмена = ОтчетОРозничныхПродажах.КассоваяСмена)
	|			И (ТЧТовары.Ссылка.Проведен)
	|			И (ТЧТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит))
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетОРозничныхПродажах.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	0,
	|	0,
	|	0,
	|	ЕСТЬNULL(СУММА(ТЧТовары.Сумма), 0),
	|	ЕСТЬNULL(СУММА(ТЧТовары.СуммаНДС), 0),
	|	0,
	|	0,
	|	ОтчетОРозничныхВозвратах.Ссылка КАК Ссылка,
	|	ОтчетОРозничныхПродажах.Ссылка КАК ОтчетОРозничныхПродажах	
	|ИЗ
	|	Документ.ОтчетОРозничныхВозвратах КАК ОтчетОРозничныхВозвратах
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах 
	|	ПО ОтчетОРозничныхПродажах.КассоваяСмена = ОтчетОРозничныхВозвратах.КассоваяСмена
	|		И ОтчетОРозничныхПродажах.НалогообложениеНДС = ОтчетОРозничныхВозвратах.НалогообложениеНДС	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЧекККМВозврат.Товары КАК ТЧТовары
	|	ПО (ТЧТовары.Ссылка.КассоваяСмена = ОтчетОРозничныхПродажах.КассоваяСмена)
	|		И (ТЧТовары.Ссылка.Проведен)
	|		И (ТЧТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит))
	|ГДЕ
	|	ОтчетОРозничныхВозвратах.Ссылка В(&МассивОбъектов)
	|	И ОтчетОРозничныхПродажах.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетОРозничныхПродажах.Ссылка,
	|	ОтчетОРозничныхВозвратах.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ЕСТЬNULL(СУММА(ТЧПодарочныеСертификаты.Сумма), 0),
	|	0,	
	|	ОтчетОРозничныхПродажах.Ссылка,
	|	ОтчетОРозничныхПродажах.Ссылка КАК ОтчетОРозничныхПродажах
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияПодарочныхСертификатов.ПодарочныеСертификаты КАК ТЧПодарочныеСертификаты
	|		ПО (ТЧПодарочныеСертификаты.Ссылка.КассоваяСмена = ОтчетОРозничныхПродажах.КассоваяСмена)
	|			И (ТЧПодарочныеСертификаты.Ссылка.Проведен)
	|			И (ТЧПодарочныеСертификаты.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит))
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетОРозничныхПродажах.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ЕСТЬNULL(СУММА(ТЧПодарочныеСертификаты.Сумма), 0),
	|	0,
	|	ОтчетОРозничныхВозвратах.Ссылка КАК Ссылка,
	|	ОтчетОРозничныхПродажах.Ссылка КАК ОтчетОРозничныхПродажах	
	|ИЗ
	|	Документ.ОтчетОРозничныхВозвратах КАК ОтчетОРозничныхВозвратах
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах 
	|	ПО ОтчетОРозничныхПродажах.КассоваяСмена = ОтчетОРозничныхВозвратах.КассоваяСмена
	|		И ОтчетОРозничныхПродажах.НалогообложениеНДС = ОтчетОРозничныхВозвратах.НалогообложениеНДС		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияПодарочныхСертификатов.ПодарочныеСертификаты КАК ТЧПодарочныеСертификаты
	|		ПО (ТЧПодарочныеСертификаты.Ссылка.КассоваяСмена = ОтчетОРозничныхПродажах.КассоваяСмена)
	|			И (ТЧПодарочныеСертификаты.Ссылка.Проведен)
	|			И (ТЧПодарочныеСертификаты.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит))
	|ГДЕ
	|	ОтчетОРозничныхВозвратах.Ссылка В(&МассивОбъектов)
	|	И ОтчетОРозничныхПродажах.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетОРозничныхПродажах.Ссылка,
	|	ОтчетОРозничныхВозвратах.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ЕСТЬNULL(СУММА(ТЧПодарочныеСертификаты.Сумма), 0),
	|	ОтчетОРозничныхПродажах.Ссылка,
	|	ОтчетОРозничныхПродажах.Ссылка КАК ОтчетОРозничныхПродажах	
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратПодарочныхСертификатов.ПодарочныеСертификаты КАК ТЧПодарочныеСертификаты
	|		ПО (ТЧПодарочныеСертификаты.Ссылка.КассоваяСмена = ОтчетОРозничныхПродажах.КассоваяСмена)
	|			И (ТЧПодарочныеСертификаты.Ссылка.Проведен)
	|			И (ТЧПодарочныеСертификаты.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит))
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетОРозничныхПродажах.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ЕСТЬNULL(СУММА(ТЧПодарочныеСертификаты.Сумма), 0),
	|	ОтчетОРозничныхВозвратах.Ссылка КАК Ссылка,
	|	ОтчетОРозничныхПродажах.Ссылка КАК ОтчетОРозничныхПродажах	
	|ИЗ
	|	Документ.ОтчетОРозничныхВозвратах КАК ОтчетОРозничныхВозвратах
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах 
	|	ПО ОтчетОРозничныхПродажах.КассоваяСмена = ОтчетОРозничныхВозвратах.КассоваяСмена
	|		И ОтчетОРозничныхПродажах.НалогообложениеНДС = ОтчетОРозничныхВозвратах.НалогообложениеНДС	
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратПодарочныхСертификатов.ПодарочныеСертификаты КАК ТЧПодарочныеСертификаты
	|		ПО (ТЧПодарочныеСертификаты.Ссылка.КассоваяСмена = ОтчетОРозничныхПродажах.КассоваяСмена)
	|			И (ТЧПодарочныеСертификаты.Ссылка.Проведен)
	|			И (ТЧПодарочныеСертификаты.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит))
	|ГДЕ
	|	ОтчетОРозничныхВозвратах.Ссылка В(&МассивОбъектов)
	|	И ОтчетОРозничныхПродажах.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетОРозничныхПродажах.Ссылка,
	|	ОтчетОРозничныхВозвратах.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПродажиИВозвраты.Ссылка КАК Ссылка,
	|	ПродажиИВозвраты.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах,
	|	СУММА(ПродажиИВозвраты.СуммаПродаж) КАК СуммаПродаж,
	|	СУММА(ПродажиИВозвраты.СуммаПродажНДС) КАК СуммаПродажНДС,
	|	СУММА(ПродажиИВозвраты.СуммаПродажОтчет) КАК СуммаПродажОтчет,
	|	СУММА(ПродажиИВозвраты.СуммаПродажОтчетНДС) КАК СуммаПродажОтчетНДС,
	|	СУММА(ПродажиИВозвраты.СуммаВозвратов) КАК СуммаВозвратов,
	|	СУММА(ПродажиИВозвраты.СуммаВозвратовНДС) КАК СуммаВозвратовНДС,
	|	СУММА(ПродажиИВозвраты.СуммаПродажПодарочныхСертификатов) КАК СуммаПродажПодарочныхСертификатов,
	|	СУММА(ПродажиИВозвраты.СуммаВозвратовПодарочныхСертификатов) КАК СуммаВозвратовПодарочныхСертификатов
	|ПОМЕСТИТЬ ПродажиВозвратыСгруппировано
	|ИЗ
	|	ПродажиИВозвраты КАК ПродажиИВозвраты
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродажиИВозвраты.Ссылка,
	|	ПродажиИВозвраты.ОтчетОРозничныхПродажах	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПродажиВозвратыСгруппировано.ОтчетОРозничныхПродажах КАК Ссылка,
	|	ПродажиВозвратыСгруппировано.ОтчетОРозничныхПродажах.Дата КАК ДатаДокумента,
	|	ПродажиВозвратыСгруппировано.ОтчетОРозничныхПродажах.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ПродажиВозвратыСгруппировано.ОтчетОРозничныхПродажах.Номер КАК НомерДокумента,
	|	ПродажиВозвратыСгруппировано.ОтчетОРозничныхПродажах.Валюта КАК Валюта,
	|	ПродажиВозвратыСгруппировано.ОтчетОРозничныхПродажах.КассаККМ КАК КассаККМ,
	|	ПродажиВозвратыСгруппировано.ОтчетОРозничныхПродажах.КассаККМ.ТипКассы КАК ТипКассы,
	|	ПродажиВозвратыСгруппировано.ОтчетОРозничныхПродажах.КассаККМ.Представление КАК ККМПредставление,
	|	ПродажиВозвратыСгруппировано.ОтчетОРозничныхПродажах.КассаККМ.СерийныйНомер КАК СерийныйНомер,
	|	ПродажиВозвратыСгруппировано.ОтчетОРозничныхПродажах.КассаККМ.РегистрационныйНомер КАК РегистрационныйНомер,
	|	ПродажиВозвратыСгруппировано.ОтчетОРозничныхПродажах.Организация КАК Организация,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	ПродажиВозвратыСгруппировано.ОтчетОРозничныхПродажах.Организация.Префикс КАК Префикс,
	|	ПродажиВозвратыСгруппировано.ОтчетОРозничныхПродажах.Ответственный.ФизическоеЛицо КАК Ответственный,
	|	ПродажиВозвратыСгруппировано.ОтчетОРозничныхПродажах.КассоваяСмена КАК КассоваяСмена,
	|	ПродажиВозвратыСгруппировано.ОтчетОРозничныхПродажах.КассоваяСмена.НачалоКассовойСмены КАК НачалоСмены,
	|	ПродажиВозвратыСгруппировано.ОтчетОРозничныхПродажах.КассоваяСмена.ОкончаниеКассовойСмены КАК ОкончаниеСмены,
	|	ПродажиВозвратыСгруппировано.СуммаПродаж КАК СуммаПродаж,
	|	ПродажиВозвратыСгруппировано.СуммаПродажНДС КАК СуммаПродажНДС,
	|	ПродажиВозвратыСгруппировано.СуммаПродажОтчет КАК СуммаПродажОтчет,
	|	ПродажиВозвратыСгруппировано.СуммаПродажОтчетНДС КАК СуммаПродажОтчетНДС,
	|	ПродажиВозвратыСгруппировано.СуммаВозвратов КАК СуммаВозвратов,
	|	ПродажиВозвратыСгруппировано.СуммаВозвратовНДС КАК СуммаВозвратовНДС,
	|	ПродажиВозвратыСгруппировано.СуммаПродажПодарочныхСертификатов КАК СуммаПродажПодарочныхСертификатов,
	|	ПродажиВозвратыСгруппировано.СуммаВозвратовПодарочныхСертификатов КАК СуммаВозвратовПодарочныхСертификатов
	|ИЗ
	|	ПродажиВозвратыСгруппировано КАК ПродажиВозвратыСгруппировано
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ПродажиВозвратыСгруппировано.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	РезультатЗапроса = Запрос.Выполнить();
	СтруктураДанныхДляПечати    = Новый Структура("РезультатЗапроса", РезультатЗапроса);
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции	
	
// Функция получает данные для формирования печатной формы КМ-3.
//
// Возвращаемое значение:
// 	Структура:
//		* РезультатЗапроса - РезультатЗапроса - Содержит информацию для заполнения печатной формы
//		* ЗаголовокДокумента - Строка - Отображаемый заголовок табличного документа
Функция ПолучитьДанныеДляПечатнойФормыКМ3(ПараметрыПечати, МассивОбъектов) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	// МассивОбъектов содержит документы одного вида.	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Ссылка КАК Ссылка,
	|	Док.Номер КАК Номер,
	|	Док.Дата КАК ДатаДокумента,
	|	Док.КассаККМ КАК КассаККМ,
	|	Док.КассаККМ.ТипКассы КАК ТипКассы,
	|	Док.КассаККМ.Представление КАК Покупатель,
	|	Док.Ответственный.ФизическоеЛицо КАК КассирККМ,
	|	Док.Валюта КАК Валюта,
	|	Док.Организация КАК Организация,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	Док.Организация.Представление КАК Поставщик,
	|	Док.КассаККМ.СерийныйНомер КАК СерийныйНомерККМ,
	|	Док.КассаККМ.РегистрационныйНомер КАК РегистрационныйНомерККМ,
	|	Док.КассаККМ.Наименование КАК ПредставлениеККМ
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК Док
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО Док.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	Док.Ссылка В(&МассивОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Док.Ссылка КАК Ссылка,
	|	Док.Номер КАК Номер,
	|	Док.Дата КАК ДатаДокумента,
	|	Док.КассаККМ КАК КассаККМ,
	|	Док.КассаККМ.ТипКассы КАК ТипКассы,
	|	Док.КассаККМ.Представление КАК Покупатель,
	|	Док.Ответственный.ФизическоеЛицо КАК КассирККМ,
	|	Док.Валюта КАК Валюта,
	|	Док.Организация КАК Организация,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	Док.Организация.Представление КАК Поставщик,
	|	Док.КассаККМ.СерийныйНомер КАК СерийныйНомерККМ,
	|	Док.КассаККМ.РегистрационныйНомер КАК РегистрационныйНомерККМ,
	|	Док.КассаККМ.Наименование КАК ПредставлениеККМ
	|ИЗ
	|	Документ.ОтчетОРозничныхВозвратах КАК Док
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО Док.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	Док.Ссылка В(&МассивОбъектов)	
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокОтчетОРозничныхПродажах.Ссылка КАК Документ,
	|	ФискальныеОперации.НомерЧекаККМ КАК НомерЧека,
	|	ДокЧек.СуммаДокумента КАК СуммаДокумента
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ДокОтчетОРозничныхПродажах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМВозврат КАК ДокЧек
	|		ПО ДокОтчетОРозничныхПродажах.КассоваяСмена = ДокЧек.КассоваяСмена
	|			И (ДокЧек.Проведен)
	|			И (ДокЧек.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит))
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФискальныеОперации КАК ФискальныеОперации
	|		ПО ФискальныеОперации.ДокументОснование = ДокЧек.ЧекККМ
	|ГДЕ
	|	ДокОтчетОРозничныхПродажах.Ссылка В(&МассивОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокОтчетОРозничныхПродажах.Ссылка КАК Документ,
	|	ФискальныеОперации.НомерЧекаККМ КАК НомерЧека,
	|	ДокЧек.СуммаДокумента КАК СуммаДокумента
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ДокОтчетОРозничныхПродажах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратПодарочныхСертификатов КАК ДокЧек
	|		ПО ДокОтчетОРозничныхПродажах.КассоваяСмена = ДокЧек.КассоваяСмена
	|			И (ДокЧек.Проведен)
	|			И (ДокЧек.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит))
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФискальныеОперации КАК ФискальныеОперации
	|		ПО ФискальныеОперации.ДокументОснование = ДокЧек.РеализацияПодарочныхСертификатов
	|ГДЕ
	|	ДокОтчетОРозничныхПродажах.Ссылка В(&МассивОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокОтчетОРозничныхВозвратах.Ссылка КАК Документ,
	|	ФискальныеОперации.НомерЧекаККМ КАК НомерЧека,
	|	ДокЧек.СуммаДокумента КАК СуммаДокумента
	|ИЗ
	|	Документ.ОтчетОРозничныхВозвратах КАК ДокОтчетОРозничныхВозвратах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМВозврат КАК ДокЧек
	|		ПО ДокОтчетОРозничныхВозвратах.КассоваяСмена = ДокЧек.КассоваяСмена
	|			И (ДокЧек.Проведен)
	|			И (ДокЧек.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит))
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФискальныеОперации КАК ФискальныеОперации
	|		ПО ФискальныеОперации.ДокументОснование = ДокЧек.ЧекККМ
	|ГДЕ
	|	ДокОтчетОРозничныхВозвратах.Ссылка В(&МассивОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокОтчетОРозничныхВозвратах.Ссылка КАК Документ,
	|	ФискальныеОперации.НомерЧекаККМ КАК НомерЧека,
	|	ДокЧек.СуммаДокумента КАК СуммаДокумента
	|ИЗ
	|	Документ.ОтчетОРозничныхВозвратах КАК ДокОтчетОРозничныхВозвратах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратПодарочныхСертификатов КАК ДокЧек
	|		ПО ДокОтчетОРозничныхВозвратах.КассоваяСмена = ДокЧек.КассоваяСмена
	|			И (ДокЧек.Проведен)
	|			И (ДокЧек.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит))
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФискальныеОперации КАК ФискальныеОперации
	|		ПО ФискальныеОперации.ДокументОснование = ДокЧек.РеализацияПодарочныхСертификатов
	|ГДЕ
	|	ДокОтчетОРозничныхВозвратах.Ссылка В(&МассивОбъектов)
	|УПОРЯДОЧИТЬ ПО
	|	Документ
	|ИТОГИ ПО
	|	Документ";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	СтруктураДанныхДляПечати    = Новый Структура("РезультатЗапроса", РезультатЗапроса);
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

//-- Локализация


Функция ДопустимыТоварыБезМарокВДокументе(ДокументСсылка) Экспорт
	
	ДопустимыТоварыБезМарокДляДокумента = Ложь;
	
	//++ Локализация
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента")
		ИЛИ ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ЧекККМВозврат") Тогда
		
		ДопустимыТоварыБезМарокДляДокумента = Истина;
	КонецЕсли;
	//-- Локализация
	
	Возврат ДопустимыТоварыБезМарокДляДокумента;
	
КонецФункции

Функция ТекстЗапросаДокументыПоРаспоряжению() Экспорт
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	ОбъектыРасчетов.Ссылка КАК ОбъектРасчетов
	|ПОМЕСТИТЬ ВТОбъектыРасчетов
	|ИЗ
	|	Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
	|ГДЕ
	|	ОбъектыРасчетов.Объект = &ОбъектРасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	РеализацияТоваровУслуг.Дата КАК Дата
	|ПОМЕСТИТЬ ВТДокументыПоРаспоряжению
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Проведен
	|	И РеализацияТоваровУслуг.ЗаказКлиента = &Распоряжение
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ПриходныйКассовыйОрдер.Ссылка,
	|	ПриходныйКассовыйОрдер.Ссылка.Дата
	|ИЗ
	|	Документ.ПриходныйКассовыйОрдер.РасшифровкаПлатежа КАК ПриходныйКассовыйОрдер
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыРасчетов КАК ОбъектыРасчетов
	|		ПО ПриходныйКассовыйОрдер.ОбъектРасчетов = ОбъектыРасчетов.ОбъектРасчетов
	|			И (ПриходныйКассовыйОрдер.Ссылка.Проведен)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОперацияПоПлатежнойКарте.Ссылка,
	|	ОперацияПоПлатежнойКарте.Ссылка.Дата
	|ИЗ
	|	Документ.ОперацияПоПлатежнойКарте.РасшифровкаПлатежа КАК ОперацияПоПлатежнойКарте
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыРасчетов КАК ОбъектыРасчетов
	|		ПО ОперацияПоПлатежнойКарте.ОбъектРасчетов = ОбъектыРасчетов.ОбъектРасчетов
	|			И (ОперацияПоПлатежнойКарте.Ссылка.Проведен)
	//++ Локализация
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОперацияПоЯндексКассе.Ссылка,
	|	ОперацияПоЯндексКассе.Ссылка.Дата
	|ИЗ
	|	Документ.ОперацияПоЯндексКассе КАК ОперацияПоЯндексКассе
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыРасчетов КАК ОбъектыРасчетов
	|		ПО ОперацияПоЯндексКассе.ОбъектРасчетов = ОбъектыРасчетов.ОбъектРасчетов
	|			И (ОперацияПоЯндексКассе.Ссылка.Проведен)
	//-- Локализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыПоРаспоряжению.Ссылка КАК Ссылка,
	|	ДокументыПоРаспоряжению.Дата КАК Дата,
	|	НАЧАЛОПЕРИОДА(ДокументыПоРаспоряжению.Дата, ДЕНЬ) КАК ДатаДень
	|ИЗ
	|	ВТДокументыПоРаспоряжению КАК ДокументыПоРаспоряжению
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОчередьЧековККТ КАК ОчередьЧековККТ
	|		ПО ДокументыПоРаспоряжению.Ссылка = ОчередьЧековККТ.ДокументОснование
	|ГДЕ
	|	ОчередьЧековККТ.ДокументОснование ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументыПоРаспоряжению.Дата УБЫВ
	|ИТОГИ ПО
	|	ДатаДень";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает систему налогообложения организации на дату
// 
// Параметры:
// 	Организация - СправочникСсылка.Организации - Организация, для которой определяется система налогообложения
// 	Дата - Дата - Дата, на которую определяется система налогообложения
// Возвращаемое значение:
// 	ПеречислениеСсылка.ТипыСистемНалогообложенияККТ - Система налогообложения для параметров фискальных чеков
Функция СистемаНалогообложенияФискальнойОперации(Организация, Дата = Неопределено) Экспорт
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	Т.СистемаНалогообложения КАК СистемаНалогообложения,
	|	&ПараметрДляПодстановки КАК ОбъектНалогообложенияУСН
	|ИЗ
	|	РегистрСведений.НастройкиСистемыНалогообложения.СрезПоследних(&ТекущаяДата, Организация = &Организация) КАК Т
	|";
//++ Локализация
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПараметрДляПодстановки", "ЕСТЬNULL(Т2.ОбъектНалогообложенияУСН, НЕОПРЕДЕЛЕНО)");
	ТекстЗапроса = ТекстЗапроса + "
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаУСН.СрезПоследних(&ТекущаяДата, Организация = &Организация) КАК Т2
	|		ПО Т.Организация = Т2.Организация
	|";
//-- Локализация

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ПараметрДляПодстановки", Неопределено);
	
	Если Дата = Неопределено Тогда
		Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Иначе
		Запрос.УстановитьПараметр("ТекущаяДата", Дата);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	ДанныеСистемыНалогообложения = Запрос.Выполнить().Выбрать();
	ДанныеСистемыНалогообложения.Следующий();
	
	СистемаНалогообложения = Неопределено;
	
	Если ДанныеСистемыНалогообложения.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Общая Тогда
		
		СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ОСН;

//++ Локализация		
	ИначеЕсли ДанныеСистемыНалогообложения.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Упрощенная Тогда
		
		Если ДанныеСистемыНалогообложения.ОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.Доходы Тогда
			
			СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.УСНДоход;
			
		ИначеЕсли ДанныеСистемыНалогообложения.ОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы Тогда
			
			СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.УСНДоходРасход;
			
		КонецЕсли;
//-- Локализация
		
	КонецЕсли;
	
	Возврат СистемаНалогообложения;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ Локализация

Функция СтруктураТаблицаРезультатРаспределения(ТаблицаОсновная, ТаблицаДополнительная, ПоляДетализации)
	
	ТаблицаРезультатРаспределения = ТаблицаОсновная.СкопироватьКолонки();
	
	Для Каждого СтрокаДетализации Из ПоляДетализации Цикл
		
		КолонкаДетализации = ТаблицаДополнительная.Колонки.Найти(СтрокаДетализации);
		
		Если КолонкаДетализации <> Неопределено Тогда
			ТаблицаРезультатРаспределения.Колонки.Добавить(КолонкаДетализации.Имя, КолонкаДетализации.ТипЗначения);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТаблицаРезультатРаспределения;
	
КонецФункции

Функция РаспределитьДанныеПоТаблицам(ТаблицаОсновная, ТаблицаДополнительная, ПоляИзмерения, ПоляДетализации, ПоляСумм, ПолеРасчетаБазы)
	
	ТаблицаРезультатРаспределения = СтруктураТаблицаРезультатРаспределения(ТаблицаОсновная, ТаблицаДополнительная, ПоляДетализации);
	
	// 
	Для Каждого СтрокаТаблицыОсновная Из ТаблицаОсновная Цикл
		
		СтруктураОтбора = Новый Структура;
		Для Каждого ПолеИзмерения Из ПоляИзмерения Цикл
			СтруктураОтбора.Вставить(ПолеИзмерения, СтрокаТаблицыОсновная[ПолеИзмерения]);
		КонецЦикла;
		
		МассивСтрокДляДобавленияВТаблицуРаспределения = ТаблицаДополнительная.НайтиСтроки(СтруктураОтбора);
		
		Если МассивСтрокДляДобавленияВТаблицуРаспределения.Количество() = 0 Тогда
			СтрокаТаблицыРезультатРаспределения = ТаблицаРезультатРаспределения.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыРезультатРаспределения, СтрокаТаблицыОсновная);
			
			Продолжить;
		КонецЕсли;
		
		Для каждого СтрокаДляДобавленияВТаблицуРаспределения из МассивСтрокДляДобавленияВТаблицуРаспределения Цикл
			
			Если СтрокаТаблицыОсновная[ПолеРасчетаБазы] = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если СтрокаДляДобавленияВТаблицуРаспределения[ПолеРасчетаБазы] = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаТаблицыРезультатРаспределения = ТаблицаРезультатРаспределения.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыРезультатРаспределения, СтрокаТаблицыОсновная);
			
			Для Каждого ПолеДетализации Из ПоляДетализации Цикл
				СтрокаТаблицыРезультатРаспределения[ПолеДетализации] = СтрокаДляДобавленияВТаблицуРаспределения[ПолеДетализации];
			КонецЦикла;
			
			Если СтрокаДляДобавленияВТаблицуРаспределения[ПолеРасчетаБазы] < СтрокаТаблицыОсновная[ПолеРасчетаБазы] Тогда
				
				СтрокаТаблицыРезультатРаспределения[ПолеРасчетаБазы] = СтрокаДляДобавленияВТаблицуРаспределения[ПолеРасчетаБазы];
				
				Для Каждого ПолеСуммы Из ПоляСумм Цикл
					Если ПолеСуммы = ПолеРасчетаБазы Тогда
						Продолжить;
					КонецЕсли;
					
					СтрокаТаблицыРезультатРаспределения[ПолеСуммы] = СтрокаТаблицыОсновная[ПолеСуммы] / СтрокаТаблицыОсновная[ПолеРасчетаБазы] * СтрокаТаблицыРезультатРаспределения[ПолеРасчетаБазы];
				КонецЦикла;
				
			КонецЕсли;
			
			СтрокаТаблицыОсновная[ПолеРасчетаБазы] = СтрокаТаблицыОсновная[ПолеРасчетаБазы] - СтрокаТаблицыРезультатРаспределения[ПолеРасчетаБазы];
			Для Каждого ПолеСуммы Из ПоляСумм Цикл
				Если ПолеСуммы = ПолеРасчетаБазы Тогда
					Продолжить;
				КонецЕсли;
				
				СтрокаТаблицыОсновная[ПолеСуммы] = СтрокаТаблицыОсновная[ПолеСуммы] - СтрокаТаблицыРезультатРаспределения[ПолеСуммы];
			КонецЦикла;
			
			СтрокаДляДобавленияВТаблицуРаспределения[ПолеРасчетаБазы] = СтрокаДляДобавленияВТаблицуРаспределения[ПолеРасчетаБазы] - СтрокаТаблицыРезультатРаспределения[ПолеРасчетаБазы];
		
		КонецЦикла;
		
		Если СтрокаТаблицыОсновная[ПолеРасчетаБазы] > 0 Тогда
			СтрокаТаблицыРезультатРаспределения = ТаблицаРезультатРаспределения.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыРезультатРаспределения, СтрокаТаблицыОсновная);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТаблицаРезультатРаспределения;
	
КонецФункции

//-- Локализация

#КонецОбласти