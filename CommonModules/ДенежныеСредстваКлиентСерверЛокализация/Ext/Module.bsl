
#Область ПрограммныйИнтерфейс

// Проверка корректности банковского счета
//
// Параметры:
//  Номер        - Строка - Номер банковского счета.
//  ВалютныйСчет - Булево - Признак, является ли счет валютным.
//  ТекстОшибки  - Строка - Текст сообщения о найденных ошибках.
//
// Возвращаемое значение:
//  Булево - Истина - контрольный ключ верен, Ложь - контрольный ключ не верен.
//
Функция ПроверитьКорректностьНомераСчета(Знач Номер, ВалютныйСчет = Ложь, ТекстОшибки = "") Экспорт
	
	Результат = Истина;
	
	//++ Локализация
	Номер = СокрЛП(Номер);
	Если ПустаяСтрока(Номер) Тогда
		Возврат Результат;
	КонецЕсли;
	
	ТекстОшибки = "";
	ДлинаНомера = СтрДлина(Номер);
	Если Не ВалютныйСчет И Не (ДлинаНомера = 20 Или ДлинаНомера = 11) Тогда
		ТекстОшибки = ТекстОшибки + ?(ПустаяСтрока(ТекстОшибки), "", " ")
			+ СтрШаблон(НСтр("ru = 'Номер счета должен состоять из 20 или 11 разрядов. Введено %1 разрядов'"), ДлинаНомера);
		Результат = Ложь;
	ИначеЕсли ДлинаНомера = 20 И Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Номер) Тогда
		ТекстОшибки = ТекстОшибки + ?(ПустаяСтрока(ТекстОшибки), "", " ")
			+ НСтр("ru = 'В номере банковского счета присутствуют не только цифры.
				|Возможно, номер указан неверно.'");
		Результат = Ложь;
	КонецЕсли;
	//-- Локализация
	
	Возврат Результат;
	
КонецФункции

// Проверяет, что переданный номер счета является казначейским.
//
// Параметры:
//  НомерСчета - Строка
//  
// Возвращаемое значение:
//  Булево
//
Функция ЭтоКазначейскийСчет(НомерСчета) Экспорт
	
	Результат = Ложь;
	
	//++ Локализация
	НачинаетсяНаНоль = СтрНачинаетсяС(НомерСчета, "0");
	
	КодВалютыРубль = Сред(НомерСчета, 6,3) = "643";
	
	ДлинаНомераСчетаВерна = СтрДлина(НомерСчета) = 20;
	
	Результат = НачинаетсяНаНоль И ДлинаНомераСчетаВерна И КодВалютыРубль;
	//-- Локализация
	
	Возврат Результат;
	
КонецФункции

// Проверяет, что переданный БИК является кодом Территориального органа Федерального казначейства.
//
// Параметры:
//  КодБанка - Строка
//  
// Возвращаемое значение:
//  Булево
//
Функция ЭтоБИКТОФК(КодБанка) Экспорт
	
	Результат = Ложь;
	
	//++ Локализация
	ПервыеЦифрыБИК = Лев(КодБанка, 2);
	
	Результат = СтрДлина(СокрЛП(КодБанка)) = 9
		И (ПервыеЦифрыБИК = "00" Или ПервыеЦифрыБИК = "01" Или ПервыеЦифрыБИК = "02");
	//-- Локализация
	
	Возврат Результат;
	
КонецФункции

// Проверяет, что переданный номер счета является единым казначейским счетом.
//
// Параметры:
//  НомерСчета - Строка
//  
// Возвращаемое значение:
//  Булево
///
Функция ЭтоЕдиныйКазначейскийСчет(НомерСчета) Экспорт
	
	Результат = Ложь;
	
	//++ Локализация
	Результат = Лев(НомерСчета, 5) = "40102";
	//-- Локализация
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

//++ Локализация

// Проверяет, может ли номер счета соответствовать Российскому банку
// 
// Параметры:
// 	НомерСчета - Строка - номер счета 
// Возвращаемое значение:
// 	Булево - если Истина, то счет может принадлежать Российскому банку.
Функция СтрокаСоответствуетФорматуБанковскогоСчетаРФ(НомерСчета) Экспорт
	
	Если Не СтрДлина(НомерСчета) = 20 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(НомерСчета) Тогда
		Возврат Истина;
	КонецЕсли;
	
	// Проверяем особый случай: алфавитный символ в номере счета
	
	ЗаведомоЦифровыеСимволы = Лев(НомерСчета, 5) + Сред(НомерСчета, 7);
	Если Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ЗаведомоЦифровыеСимволы) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	АлфавитныйСимвол = Сред(НомерСчета, 6, 1);
	Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(АлфавитныйСимвол) Тогда
		Возврат Истина;
	КонецЕсли;
	
	ЦифраШестогоРазряда = СтрНайти(ДопустимыеАлфавитныеСимволыНомераБанковскогоСчетаРФ(), АлфавитныйСимвол);
	Возврат ЦифраШестогоРазряда <> Неопределено;
	
КонецФункции


// Проверяет соответвие значения номера счета формату банковского счета РФ.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения
Процедура ПроверитьФорматСчетаРФ(Форма) Экспорт
	
	Если ЗначениеЗаполнено(Форма.Объект.НомерСчета)
		И Форма.СтранаБанка = ПредопределенноеЗначение("Справочник.СтраныМира.Россия")
		И НЕ СтрокаСоответствуетФорматуБанковскогоСчетаРФ(Форма.Объект.НомерСчета) Тогда
		
		Форма.Элементы.ОшибкаВНомереСчета.Заголовок = НСтр("ru = 'Номер не соответствует формату банковского счета РФ'");
		Форма.Элементы.ГруппаОшибкаВНомереСчета.Видимость = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

//-- Локализация

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ Локализация

Функция ДопустимыеАлфавитныеСимволыНомераБанковскогоСчетаРФ()
	// Символы приведены в порядке, определенном письмом ЦБР от 8 сентября 1997 г. N 515
	// См. также ПроверитьКонтрольныйКлючВНомереБанковскогоСчета()
	Возврат "ABCEHKMPTX";
КонецФункции

//-- Локализация

#КонецОбласти
