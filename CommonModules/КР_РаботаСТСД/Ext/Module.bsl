//////////////////////////////////////////////////////////////////////////////////
//// Общий модуль "КР_РаботаСТСД"
//// Создан: 22.03.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1260
//// Разработка по ФДР С31.013, Загрузка номенклатуры через ТСД

#Область ПрограммныйИнтерфейс

// << 22.03.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1260
Функция ПолучитьДаннныеТСДДляРежимаОтладки(СтруктураДанных = "Массив") Экспорт
	
	ЗначениеНастройки = Справочники.КР_ДополнительныеНастройкиСистемы["ТестовыеДанныеТСД"].Значение;
	Если Не ЗначениеЗаполнено(ЗначениеНастройки) ИЛИ ТипЗнч(ЗначениеНастройки) <> Тип("Строка") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если СтруктураДанных = "Строка" Тогда
		ДанныеТСДДляРежимаОтладки = СтрЗаменить(ЗначениеНастройки, ";", Символы.ПС);
		Возврат ДанныеТСДДляРежимаОтладки;
	КонецЕсли;
	
	Сообщение = НСтр("ru='Внимание! При загрузке данных использовались данные из настройки ""Тестовые данные ТСД""!'");
	ОбщегоНазначения.СообщитьПользователю(Сообщение);
	
	// СтруктураДанных = "Массив"
	МассивСтрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ЗначениеНастройки, ";", Истина, Истина);
	
	ДанныеТСДДляРежимаОтладки = Новый Массив;
	Для Каждого Строка Из МассивСтрок Цикл
		
		МассивДанных = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Строка, ",");
		НС = Новый Структура();
		НС.Вставить("Штрихкод",		МассивДанных[0]);
		НС.Вставить("Количество", 	МассивДанных[1]);
		ДанныеТСДДляРежимаОтладки.Добавить(НС);
		
	КонецЦикла;
	
	Возврат ДанныеТСДДляРежимаОтладки;
	
КонецФункции // >> 22.03.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1260

// << 22.03.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1260
Функция ОбработатьТаблицуДанныхШтрихкодовСУчетомЯчеек(МассивШтрихкодов, Склад, Ошибка) Экспорт
	
	Если Тип(МассивШтрихкодов) <> Тип("Массив") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СтруктураПараметры = Новый Структура;
	СтруктураПараметры.Вставить("ОбработкаВыполненаБезОшибок", 	Истина);
	СтруктураПараметры.Вставить("Склад", 						Склад);
	СтруктураПараметры.Вставить("ТекущаяЯчейка", 				Справочники.СкладскиеЯчейки.ПустаяСсылка());
	СтруктураПараметры.Вставить("ЕстьНоменклатура", 			Ложь);
	СтруктураПараметры.Вставить("ЭлементыМассиваДляУдаления", 	Новый Массив);
	СтруктураПараметры.Вставить("СоответствиеЯчеек", 			Новый Соответствие);
	СтруктураПараметры.Вставить("НомерЭлементМассива", 			-1);
	
	Для Каждого Строка Из МассивШтрихкодов Цикл
		ТипЭлемента = ОбработатьСтроку(Строка, СтруктураПараметры);
	КонецЦикла;
	
	// Если последняя строка является ячейкой, то не забудем добавить её в соответствие
	Если ТипЭлемента = "Ячейка" Тогда
		СтруктураПараметры.СоответствиеЯчеек.Вставить(СтруктураПараметры.ТекущаяЯчейка, Новый Массив);
	КонецЕсли;
	
	УдалитьСтрокиЯчеек(МассивШтрихкодов, СтруктураПараметры.ЭлементыМассиваДляУдаления);
	
	Ошибка = Не СтруктураПараметры.ОбработкаВыполненаБезОшибок;
	
	Возврат СтруктураПараметры.СоответствиеЯчеек;
	
КонецФункции // >> 22.03.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1260

// << 22.03.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1260
Функция ПолучитьСоответствиеГУИДовУпаковочнымЛистам(МассивГУИДовЛистов) Экспорт
	
	СоответствиеГУИДовЛистов = Новый Соответствие;
	Для Каждого ТекущийГУИД Из МассивГУИДовЛистов Цикл
		
		ДлинаСтроки = СтрДлина(ТекущийГУИД);
		Если ДлинаСтроки = 32 Тогда
			ШаблонГуида = "%1-%2-%3-%4-%5"; // 8-4-4-4-12
			ГУИДПоиска = СтрШаблон(
				ШаблонГуида, 
				Сред(ТекущийГУИД, 1, 8),
				Сред(ТекущийГУИД, 9, 4),
				Сред(ТекущийГУИД, 13, 4),
				Сред(ТекущийГУИД, 17, 4),
				Сред(ТекущийГУИД, 21, 12)
				);
		// << 05.05.2023 Федоров Д.Е., КРОК, JIRA№A2105505-955
		ИначеЕсли ДлинаСтроки = 20 Или ДлинаСтроки = 21 Тогда
			ГУИДПоиска = Преобразовать78_GUID(ТекущийГУИД);
		// >> 05.05.2023 Федоров Д.Е., КРОК, JIRA№A2105505-955
		Иначе
			// ДлинаСтроки = 36
			ГУИДПоиска = ТекущийГУИД;
		КонецЕсли;
		// << 12.09.2023 Фомичев А.Е., КРОК, JIRA№A2105505-2249
		Если ДлинаСтроки = 10 Тогда 
			УпаковочныйЛист = Документы.УпаковочныйЛист.НайтиПоРеквизиту("КР_Штрихкод", ТекущийГУИД);
		Иначе	
			УникальныйИдентификаторЛиста = Новый УникальныйИдентификатор(ГУИДПоиска);
			УпаковочныйЛист = Документы.УпаковочныйЛист.ПолучитьСсылку(УникальныйИдентификаторЛиста);
		КонецЕсли;
		// >> 12.09.2023 Фомичев А.Е., КРОК, JIRA№A2105505-2249
		Если Не ОбщегоНазначения.СсылкаСуществует(УпаковочныйЛист.Ссылка) Тогда
			Шаблон							= НСтр("ru='Не удалось найти упаковочный лист по строке: %1'");
			Сообщение						= СтрШаблон(Шаблон, ТекущийГУИД);
			ОбщегоНазначения.СообщитьПользователю(Сообщение);
		Иначе
			СоответствиеГУИДовЛистов.Вставить(ТекущийГУИД, УпаковочныйЛист);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СоответствиеГУИДовЛистов;
	
КонецФункции // >> 22.03.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1260

// << 22.03.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1260
Функция ПолучитьСоответствиеЭлементовШтрихкодам(ДанныеШтрихкодов, ТипЭлемента = "Короб") Экспорт
	
	МассивЭлементов = Новый Массив;
	Для Каждого Строка Из ДанныеШтрихкодов Цикл
		ОшибкаПоиска		= Ложь;
		ТекущийТипШтрихкода = ПолучитьТипШтрихкода(Строка.Штрихкод, ОшибкаПоиска);
		Если ОшибкаПоиска Тогда
			Продолжить;
		КонецЕсли;
		Если ТекущийТипШтрихкода = ТипЭлемента Тогда
			МассивЭлементов.Добавить(Строка.Штрихкод);
		Иначе
			Шаблон = НСтр("ru='""[%1]"" не является штрихкодом типа ""%2"". Отсканируйте штрихкоды типа ""%2""'");
			Сообшение = СтрШаблон(Шаблон, Строка.Штрихкод, ТипЭлемента);
			ОбщегоНазначения.СообщитьПользователю(Сообшение);
		КонецЕсли;
	КонецЦикла;
	
	Если ТипЭлемента = "Короб" Тогда
		СоответствиеЭлементовШтрихкодам = ПолучитьСоответствиеГУИДовУпаковочнымЛистам(МассивЭлементов);
	ИначеЕсли ТипЭлемента = "Номенклатура" Тогда
		СоответствиеЭлементовШтрихкодам = ПолучитьСоответствиеШтрихкодовНоменклатуры(МассивЭлементов);
	ИначеЕсли ТипЭлемента = "Ячейка" Тогда
		// Поиск ячеек не осуществляется в рамках данной функции
		СоответствиеЭлементовШтрихкодам = Новый Соответствие;
	КонецЕсли;
	Возврат СоответствиеЭлементовШтрихкодам;
	
КонецФункции // >> 22.03.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1260

// << 22.03.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1260
&НаСервере
Функция ПолучитьСоответствиеШтрихкодовНоменклатуры(МассивШтрихкодовНоменклатуры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура,
		|	ШтрихкодыНоменклатуры.Характеристика КАК Характеристика,
		|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод
		|ИЗ
		|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		|ГДЕ
		|	ШтрихкодыНоменклатуры.Штрихкод В(&МассивШтрихкод)";
	
	Запрос.УстановитьПараметр("МассивШтрихкод", МассивШтрихкодовНоменклатуры);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	СоответствиеШтрихкодовНоменклатуры = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		СтруктураНоменклатуры = Новый Структура;
		СтруктураНоменклатуры.Вставить("Номенклатура", 		Выборка.Номенклатура);
		СтруктураНоменклатуры.Вставить("Характеристика", 	Выборка.Характеристика);
		СоответствиеШтрихкодовНоменклатуры.Вставить(Выборка.Штрихкод, СтруктураНоменклатуры);
	КонецЦикла;

	Возврат СоответствиеШтрихкодовНоменклатуры;
	
КонецФункции // >> 22.03.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1260

#Область ФункцииКонвертацииФорматовГУИДИзУТ10ЗаказчикаПрограммныйИнтерфейс

// << 05.05.2023 Федоров Д.Е., КРОК, JIRA№A2105505-955
// Преобразования ГУИД-а формата 78-ричной системы в 16-ричную.
// 
// Параметры:
//  СтрокаДанных - Строка - входящий ГУИД 78-ричный
//
// Возвращамое значение:
//  Строка - ГУИД 16-ричный c разделителями
//
Функция Преобразовать78_GUID(Знач СтрокаДанных) Экспорт
	
	СтрокаДанных = Преобразовать10_16(Преобразовать78_10(СтрокаДанных));
	
	СтрокаДанных = Прав("00000000000000000000000000000000" + СтрокаДанных, 32);
	
	СтрокаДанных = Сред(СтрокаДанных,1,8) + "-" 
		+ Сред(СтрокаДанных,9,4) + "-" 
		+ Сред(СтрокаДанных,13,4) + "-" 
		+ Сред(СтрокаДанных,17,4) + "-" 
		+ Сред(СтрокаДанных,21,12);
		
	Возврат(СтрокаДанных);
	
КонецФункции // >> 05.05.2023 Федоров Д.Е., КРОК, JIRA№A2105505-955

// << 05.05.2023 Федоров Д.Е., КРОК, JIRA№A2105505-955
// Преобразования ГУИД-а формата 16-ричной системы в 78-ричную.
// 
// Параметры:
//  СтрокаДанных - Строка - входящий ГУИД 16-ричный
//
// Возвращамое значение:
//  Строка - ГУИД 78-ричный (без разделителей)
//
Функция ПреобразоватьGUID_78(Знач СтрокаДанных) Экспорт
	
	Если СтрДлина(СтрокаДанных) > 32 Тогда
		
		СтрокаДанных = Сред(СтрокаДанных,1,8)
		+ Сред(СтрокаДанных,10,4)
		+ Сред(СтрокаДанных,15,4)
		+ Сред(СтрокаДанных,20,4)
		+ Сред(СтрокаДанных,25,12);
		
	КонецЕсли;
	
	СтрокаДанных = Преобразовать10_78(Преобразовать16_10(СтрокаДанных));
	
	Возврат СтрокаДанных;

КонецФункции // >> 05.05.2023 Федоров Д.Е., КРОК, JIRA№A2105505-955

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыФункции

// << 22.03.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1260
Функция ПолучитьТипШтрихкода(Штрихкод, Отказ)
	
	ДлинаШтрихкода				= СтрДлина(Штрихкод);
	Если ДлинаШтрихкода = 32
		// << 05.05.2023 Федоров Д.Е., КРОК, JIRA№A2105505-955
		// Данные по коробу могут поступать в 78-ричном формате
		ИЛИ ДлинаШтрихкода = 21 ИЛИ ДлинаШтрихкода = 20
		// >> 05.05.2023 Федоров Д.Е., КРОК, JIRA№A2105505-955
		ИЛИ ДлинаШтрихкода = 36 
		// << 12.09.2023 Фомичев А.Е., КРОК, JIRA№A2105505-2249  
		//тип штрихкода сформированный в WMS
		ИЛИ ДлинаШтрихкода = 10 Тогда
		// >> 12.09.2023 Фомичев А.Е., КРОК, JIRA№A2105505-2249
		ТекущийТипШтрихКода 		= "Короб";
	ИначеЕсли ДлинаШтрихкода = 8 Тогда
		ТекущийТипШтрихКода 		= "Ячейка";
	ИначеЕсли ДлинаШтрихкода = 13 Тогда
		ТекущийТипШтрихКода 		= "Номенклатура";
	Иначе
		ТекущийТипШтрихКода			= "";
		Шаблон					= НСтр("ru='Не удалось определить тип штрикхода по строке: %1'");
		Сообщение				= СтрШаблон(Шаблон, Штрихкод);
		ОбщегоНазначения.СообщитьПользователю(Сообщение, , , , Отказ);
		ТекущийТипШтрихКода			= "";
	КонецЕсли;
	
	Возврат ТекущийТипШтрихКода;
	
КонецФункции // >> 22.03.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1260

// << 22.03.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1260
Функция ОбработатьСтроку(Строка, Параметры)
	
	Параметры.НомерЭлементМассива = Параметры.НомерЭлементМассива + 1;
	
	ТипЭлемента = ПолучитьТипШтрихкода(Строка.Штрихкод, Параметры.ОбработкаВыполненаБезОшибок);
	Если ТипЭлемента = "" Тогда
		Возврат ТипЭлемента;
	ИначеЕсли ТипЭлемента = "Короб" Тогда
		Шаблон						= НСтр("ru='""%1"" не является штрихкодом товара или складской ячейки.
		|Отсканируйте штрихкоды ячеек или ячеек и товаров в них'");
		Сообщение					= СтрШаблон(Шаблон, Строка.Штрихкод);
		ОбщегоНазначения.СообщитьПользователю(Сообщение, , , , Параметры.ОбработкаВыполненаБезОшибок);
	КонецЕсли;
	
	Если ТипЭлемента = "Номенклатура" Тогда
		
		Если ЗначениеЗаполнено(Параметры.ТекущаяЯчейка) Тогда
			ЭлементСоответствия = Параметры.СоответствиеЯчеек.Получить(Параметры.ТекущаяЯчейка);
			Если ЭлементСоответствия = Неопределено Тогда
				ТекущиеШтрихкоды = Новый Массив;
				ДанныеНоменклатуры = Новый Структура;
				ДанныеНоменклатуры.Вставить("Штрихкод", 	Строка.Штрихкод);
				ДанныеНоменклатуры.Вставить("Количество", 	Строка.Количество);
				ТекущиеШтрихкоды.Добавить(ДанныеНоменклатуры);
				Параметры.СоответствиеЯчеек.Вставить(Параметры.ТекущаяЯчейка, ТекущиеШтрихкоды);
			Иначе
				ДанныеНоменклатуры = Новый Структура;
				ДанныеНоменклатуры.Вставить("Штрихкод", 	Строка.Штрихкод);
				ДанныеНоменклатуры.Вставить("Количество", 	Строка.Количество);
				ЭлементСоответствия.Добавить(ДанныеНоменклатуры);
			КонецЕсли;
			Параметры.ЕстьНоменклатура = Истина;
		КонецЕсли;
		
	ИначеЕсли ТипЭлемента = "Ячейка" Тогда
		
		Если ЗначениеЗаполнено(Параметры.ТекущаяЯчейка) И Не Параметры.ЕстьНоменклатура Тогда
			Параметры.СоответствиеЯчеек.Вставить(Параметры.ТекущаяЯчейка, Новый Массив);
		КонецЕсли;
		
		// В дальнейшем удалим эту строку, т.к. она не явлется номенклатурой
		Параметры.ТекущаяЯчейка 		= НайтиЯчейку(Строка.Штрихкод, Параметры.Склад, Параметры.ОбработкаВыполненаБезОшибок);
		Параметры.ЭлементыМассиваДляУдаления.Добавить(Параметры.НомерЭлементМассива);
		Параметры.ЕстьНоменклатура = Ложь;
		
	КонецЕсли;
	
	Возврат ТипЭлемента;
	
КонецФункции // >> 22.03.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1260

// << 22.03.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1260
Функция НайтиЯчейку(Код, Склад, ОбработкаВыполненаБезОшибок)
	
	МетаданныеОбъект = Метаданные.Справочники.СкладскиеЯчейки;
	ПараметрыПоиска = Новый Структура;
	ПараметрыПоиска.Вставить("Владелец", 				Склад);
	ПараметрыПоиска.Вставить("Код", 					Код);
	ПараметрыПоиска.Вставить("ПометкаУдаления", 		Ложь);
	МассивОшибок = Новый Массив;
	РезультатПоиска = КР_ОбщегоНазначениеСервер.ПоискСсылки(МетаданныеОбъект, ПараметрыПоиска, МассивОшибок);
	Для Каждого Сообщение Из МассивОшибок Цикл
		ОбщегоНазначения.СообщитьПользователю(Сообщение, , , , ОбработкаВыполненаБезОшибок);
	КонецЦикла;
	Возврат РезультатПоиска;
	
КонецФункции // >> 22.03.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1260

// << 22.03.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1260
Процедура УдалитьСтрокиЯчеек(МассивШтрихкодов, ЭлементыМассиваДляУдаления)
	
	ИндексМассива = ЭлементыМассиваДляУдаления.Количество();
	Пока ИндексМассива > 0 Цикл
		ИндексДляУдаления 	= ЭлементыМассиваДляУдаления[ИндексМассива - 1];
		МассивШтрихкодов.Удалить(ИндексДляУдаления);
		ИндексМассива		= ИндексМассива - 1;
	КонецЦикла;
	
КонецПроцедуры // >> 22.03.2023 Федоров Д.Е., КРОК, JIRA№A2105505-1260

#Область ФункцииКонвертацииФорматовГУИДИзУТ10ЗаказчикаСлужебныеПроцедурыФункции

// << 05.05.2023 Федоров Д.Е., КРОК, JIRA№A2105505-955
Функция Преобразовать78_10(Знач СтрокаДанных)
	
	ДлинаСтроки = СтрДлина(Строка(СтрокаДанных));
	Итог = 0;
	Степень = 1;
	КодСимвола = КодСимвола(Прав(СтрокаДанных, 1), 1) - 48;
	
	Пока СтрДлина(СтрокаДанных) > 0 Цикл
		
		Если КодСимвола > 9 И КодСимвола < 78 Тогда
			Итог = Итог + (Степень * КодСимвола);
		ИначеЕсли КодСимвола >= 0 И КодСимвола < 10 Тогда
			Итог = Итог + (Степень * Число(Врег(Прав(СтрокаДанных, 1))));
		КонецЕсли;
		СтрокаДанных = Лев(СтрокаДанных, СтрДлина(СтрокаДанных) - 1);
		КодСимвола = КодСимвола(Прав(СтрокаДанных, 1), 1) - 48;
		Степень = Степень * 78;
		
	КонецЦикла;
	
	Возврат Формат(Итог, "ЧГ=0");
	
КонецФункции // >> 05.05.2023 Федоров Д.Е., КРОК, JIRA№A2105505-955

// << 05.05.2023 Федоров Д.Е., КРОК, JIRA№A2105505-955
Функция Преобразовать16_10(Знач СтрокаДанных)
	
	ДлинаСтроки = СтрДлина(Строка(СтрокаДанных));
	Итог = 0;
	Степень = 1;
	
	Пока СтрДлина(СтрокаДанных) > 0 Цикл
		Если Врег(Прав(СтрокаДанных, 1)) = "F" Тогда
			Итог = Итог + (Степень * 15);
		ИначеЕсли Врег(Прав(СтрокаДанных, 1)) = "E" Тогда
			Итог = Итог + (Степень * 14);
		ИначеЕсли Врег(Прав(СтрокаДанных, 1)) = "D" Тогда
			Итог = Итог + (Степень * 13);
		ИначеЕсли Врег(Прав(СтрокаДанных, 1)) = "C" Тогда
			Итог = Итог + (Степень * 12);
		ИначеЕсли Врег(Прав(СтрокаДанных, 1)) = "B" Тогда
			Итог = Итог + (Степень * 11);
		ИначеЕсли Врег(Прав(СтрокаДанных, 1)) = "A" Тогда
			Итог = Итог + (Степень * 10);
		Иначе 
			Итог = Итог + (Степень * Число(Врег(Прав(СтрокаДанных, 1))));
		КонецЕсли;
		Степень = Степень * 16;
		СтрокаДанных = Лев(СтрокаДанных,СтрДлина(СтрокаДанных)-1);
		
	КонецЦикла;
	
	Возврат Формат(Итог,"ЧГ=0");
	
КонецФункции // >> 05.05.2023 Федоров Д.Е., КРОК, JIRA№A2105505-955

// << 05.05.2023 Федоров Д.Е., КРОК, JIRA№A2105505-955
Функция Преобразовать10_78(Знач СтрокаДанных)
	
	ДлинаСтроки = Число(СтрокаДанных);
	Итог = "";
	Остаток = 0;
	
	Пока Число(СтрокаДанных) >= 1 Цикл
		Остаток = СтрокаДанных % 78;
		СтрокаДанных = Цел(СтрокаДанных / 78);
		
		Если Остаток < 10 Тогда
			Итог = Строка(Остаток) + Строка(Итог);
		ИначеЕсли Остаток < 78 Тогда
			Итог = Символ(48 + Остаток) + Итог;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Итог;
	
КонецФункции // >> 05.05.2023 Федоров Д.Е., КРОК, JIRA№A2105505-955

// << 05.05.2023 Федоров Д.Е., КРОК, JIRA№A2105505-955
Функция Преобразовать10_16(Знач СтрокаДанных)
	
	ДлинаСтроки = Число(СтрокаДанных);
	Итог = "";
	Остаток = 0;
	
	Пока Число(СтрокаДанных) >= 1 Цикл
		
		Остаток = СтрокаДанных % 16;
		СтрокаДанных = Цел(СтрокаДанных / 16);
		
		Если Остаток < 10 Тогда
			Итог = Строка(Остаток) + Строка(Итог);
		ИначеЕсли Остаток = 10 Тогда
			Итог = "A" + Итог;
		ИначеЕсли Остаток = 11 Тогда
			Итог = "B" + Итог;
		ИначеЕсли Остаток = 12 Тогда
			Итог = "C" + Итог;
		ИначеЕсли Остаток = 13 Тогда
			Итог = "D" + Итог;
		ИначеЕсли Остаток = 14 Тогда
			Итог = "E" + Итог;
		ИначеЕсли Остаток = 15 Тогда
			Итог = "F" + Итог;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Итог;
	
КонецФункции // >> 05.05.2023 Федоров Д.Е., КРОК, JIRA№A2105505-955

#КонецОбласти

#КонецОбласти
