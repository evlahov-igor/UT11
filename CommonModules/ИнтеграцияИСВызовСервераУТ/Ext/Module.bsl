// Общие механизмы интеграции ГосИС-ERP

#Область ПрограммныйИнтерфейс

// Получает массив GTIN для переданного товара и характеристики
//
// Параметры:
//  Номенклатура   - СправочникСсылка.Номенклатура - номенклатура (маркируемый товар).
//  Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - характеристика номенклатуры (маркируемого товара).
// 
// Возвращаемое значение:
//  Массив - массив GTIN
//
Функция МассивGTINМаркированногоТовара(Номенклатура, Характеристика) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ШтрихкодыНоменклатуры.Штрихкод
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|ГДЕ
	|	ШтрихкодыНоменклатуры.Номенклатура = &Номенклатура
	|	И ШтрихкодыНоменклатуры.Характеристика = &Характеристика");
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", Характеристика);
	
	МассивШтрихкодов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Штрихкод");
	СписокGTIN =  Новый Массив;
	
	Для Каждого Штрихкод Из МассивШтрихкодов Цикл
		
		Если МенеджерОборудованияКлиентСервер.ПроверитьКорректностьGTIN(Штрихкод) Тогда
			СписокGTIN.Добавить(Штрихкод);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СписокGTIN;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ВидыПродукцииВТоварах(Знач Товары) Экспорт
	
	Возврат ИнтеграцияИСУТ.ВидыПродукцииВТоварах(Товары);
	
КонецФункции

// ГИСМ. Получение доступных пользователю вариантов списков документов возврата.
// Возвращаемое значение:
//  СписокЗначений - варианты форм (и их настроек) которые могут быть открыты
Функция ВозвратыТоваровОтРозничныхКлиентов(СтруктураВозврата) Экспорт
	
	Результат = Новый СписокЗначений;
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.ВозвратТоваровОтКлиента)
			И ПравоДоступа("Чтение", Метаданные.Документы.ЗаявкаНаВозвратТоваровОтКлиента) Тогда
		
		Элемент = Результат.Добавить();
		Элемент.Представление = НСтр("ru = 'Возвраты товаров от клиента'");
		Элемент.Значение = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураВозврата);
		Элемент.Значение.ИмяФормы = "Документ.ВозвратТоваровОтКлиента.Форма.ФормаСпискаДокументовГИСМ";
		Элемент.Значение.ИмяПоляОтветственный = "Менеджер";
		
	КонецЕсли;
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.ОтчетОРозничныхВозвратах) Тогда
		
		Элемент = Результат.Добавить();
		Элемент.Представление = НСтр("ru = 'Отчеты о розничных возвратах'");
		Элемент.Значение = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураВозврата);
		Элемент.Значение.ИмяФормы = "Документ.ОтчетОРозничныхВозвратах.Форма.ФормаСпискаГИСМ";
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Возвращает признак: партнер это розничный клиент, для торгового документа (реализация товаров, возврат от клиента).
// 
// Параметры:
//  ДокументСсылка  - ДокументСсылка.РеализацияТоваровУслуг, ДокументСсылка.ВозвратТоваровОтКлиента, ДокументСсылка.КорректировкаРеализации - Документ
// 
// Возвращаемое значение:
//  Булево - Партнер это розничный клиент в документе
Функция ПартнерЭтоРозничныйКлиентВДокументе(ДокументСсылка) Экспорт
	
	Возврат РозничныеПродажиВызовСервера.ПартнерЭтоРозничныйКлиент(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСсылка, "Партнер"));
	
КонецФункции

Функция ЭтоМернаяЕдиницаХранения(ЕдиницаИзмерения) Экспорт
	Возврат Справочники.УпаковкиЕдиницыИзмерения.ЭтоМернаяЕдиница(ЕдиницаИзмерения)
КонецФункции

Функция ДанныеУпаковкиНоменклатурыЧастичногоВыбытия(Номенклатура, ПотребительскаяУпаковка, КоэффициентУпаковкиИСМП) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура();
	ВозвращаемоеЗначение.Вставить("Упаковка",           Неопределено);
	ВозвращаемоеЗначение.Вставить("Числитель",          1);
	ВозвращаемоеЗначение.Вставить("Знаменатель",        КоэффициентУпаковкиИСМП);
	ВозвращаемоеЗначение.Вставить("ТипУпаковки",        Перечисления.ТипыУпаковокНоменклатуры.Разупаковка);
	ВозвращаемоеЗначение.Вставить("КоличествоУпаковок", 0);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Владелец", Номенклатура);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Таблица.Ссылка                    КАК Ссылка,
	|	Таблица.Числитель                 КАК Числитель,
	|	Таблица.Знаменатель               КАК Знаменатель,
	|	Таблица.ТипУпаковки               КАК ТипУпаковки,
	|	Таблица.КоличествоУпаковок        КАК КоличествоУпаковок,
	|	&ТекстЗапросаКоэффициентаУпаковки КАК КоэффициентУпаковки
	|ИЗ
	|	Справочник.УпаковкиЕдиницыИзмерения КАК Таблица
	|ГДЕ
	|	Таблица.Владелец = &Владелец";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентаУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки("Таблица.Ссылка"));
	
	ЕдиницаХранения = Справочники.УпаковкиЕдиницыИзмерения.ЕдиницаХраненияНоменклатуры(Номенклатура);
	
	Если ЗначениеЗаполнено(ПотребительскаяУпаковка)
		И ПотребительскаяУпаковка <> ЕдиницаХранения Тогда
		ВозвращаемоеЗначение.ТипУпаковки        = Перечисления.ТипыУпаковокНоменклатуры.Составная;
		КоэффициентПотребительской              = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(ПотребительскаяУпаковка, Номенклатура);
		ВозвращаемоеЗначение.Знаменатель        = 1;
		ВозвращаемоеЗначение.Числитель          = КоэффициентУпаковкиИСМП * КоэффициентПотребительской;
		ВозвращаемоеЗначение.КоличествоУпаковок = КоэффициентПотребительской;
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если ВозвращаемоеЗначение.ТипУпаковки <> Выборка.ТипУпаковки Тогда
			Продолжить
		КонецЕсли;
		
		Если ВозвращаемоеЗначение.ТипУпаковки = Перечисления.ТипыУпаковокНоменклатуры.Разупаковка Тогда
			Если Выборка.Знаменатель <> КоэффициентУпаковкиИСМП
				Или Выборка.Числитель <> 1 Тогда
				Продолжить;
			КонецЕсли;
		ИначеЕсли ВозвращаемоеЗначение.ТипУпаковки = Перечисления.ТипыУпаковокНоменклатуры.Составная Тогда
			Если Выборка.КоличествоУпаковок <> ВозвращаемоеЗначение.КоличествоУпаковок
				Или Выборка.Знаменатель <> 1
				Или Выборка.Числитель <> ВозвращаемоеЗначение.Числитель Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		ВозвращаемоеЗначение.Упаковка = Выборка.Ссылка;
		Прервать;
		
	КонецЦикла;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#КонецОбласти