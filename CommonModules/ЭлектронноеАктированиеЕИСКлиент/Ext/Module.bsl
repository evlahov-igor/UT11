#Область ПрограммныйИнтерфейс


// Открыть форму контракта ЕИС.
// 
// Параметры:
//  Форма Форма
//  СсылкаНаКонтракт - справочник- Ссылка на контракт
//  ОповещениеОЗавершении Оповещение о завершении
Процедура ОткрытьФормуКонтракта(Форма, СсылкаНаКонтракт, ОповещениеОЗавершении) Экспорт
	
	ЭлектронноеАктированиеЕИСКлиентПереопределяемый.ОткрытьФормуКонтракта(Форма, СсылкаНаКонтракт, ОповещениеОЗавершении);
	
КонецПроцедуры

// Открыть форму настроек обмена ЕИС для поставщиков.
Процедура ОткрытьФормуНастройкиОбменаЕИС() Экспорт

	ОткрытьФорму("РегистрСведений.НастройкиОбменаЕИС.ФормаСписка");
		
КонецПроцедуры

// Открыть форму настроек обмена ЕИС для заказчиков.
Процедура ОткрытьФормуНастройкиОбменаЕИСДляЗаказчиков() Экспорт
	
	Если НЕ ЭлектронноеАктированиеЕИСВызовСервера.ЕстьПодсистемаДляЗаказчиков() Тогда
		Возврат;
	КонецЕсли;
	
	МодульПодсистемы = ОбщегоНазначенияКлиент.ОбщийМодуль("ЭлектронноеАктированиеЗаказчикаЕИСКлиент");
	МодульПодсистемы.ОткрытьФормуНастройкиОбменаЕИСДляЗаказчиков();
		
КонецПроцедуры

// Открыть форму выбора контракта.
// 
// Параметры:
//  Организация - ОпределяемыйТип.Организация - организация.
//  Контрагент - ОпределяемыйТип.КонтрагентБЭД - контрагент.
//  ФормаВладелец - ФормаКлиентскогоПриложения - форма владелец.
//  ОповещениеОЗакрытии - ОписаниеОповещения, Неопределено - оповещение о закрытии.
Процедура ОткрытьФормуВыбораКонтракта(Организация,
		Контрагент,
		ФормаВладелец,
		ОповещениеОЗакрытии = Неопределено) Экспорт

	ЭлектронноеАктированиеЕИСКлиентПереопределяемый.ОткрытьФормуВыбораКонтракта(Организация,
		Контрагент,
		ФормаВладелец,
		ОповещениеОЗакрытии);
	
КонецПроцедуры

Функция СпособОбменаЧерезСерверЕИС() Экспорт
	
	Возврат ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезСерверЕИС");
	
КонецФункции

Процедура ВывестиОшибку(ТекстОшибки) Экспорт

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекстОшибки", ТекстОшибки);
	ОткрытьФорму("Обработка.ЭлектронноеАктированиеЕИС.Форма.ФормаОшибки", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры
	
Функция ГиперссылкаСтрокиКонтракта() Экспорт
	
	Возврат НСтр("ru='Открыть данные строки контракта'");
	
КонецФункции

Процедура ПриИзмененииИдентификатораДляАктированияЕИС(Форма, ТабЧасть, ДанныеФормыКоллекция) Экспорт
	
	ДанныеСтроки = Новый Структура(
		"ИдентификаторДляАктированияЕИС, ПредставлениеДляАктированияЕИС");
	ЗаполнитьЗначенияСвойств(ДанныеСтроки, ДанныеФормыКоллекция);
	ЭлектронноеАктированиеЕИСВызовСервера.ПриИзмененииИдентификатораДляАктированияЕИС(
		Форма, ТабЧасть, ДанныеСтроки);
	ЗаполнитьЗначенияСвойств(ДанныеФормыКоллекция, ДанныеСтроки);
	
КонецПроцедуры

Функция ИмяСобытияИзмененияВладельцаКонтрактаЕИС() Экспорт
	Возврат "ИзмененВладелецГосударственногоКонтракта";
КонецФункции

Функция ИмяФормыВыбораГосударственногоКонтракта() Экспорт
	
	Возврат ЭлектронноеАктированиеЕИСКлиентПереопределяемый.ИмяФормыВыбораГосударственногоКонтракта();
	
КонецФункции

Функция ИмяФормыСпискаПодписантов() Экспорт
	
	Возврат "Обработка.ЭлектронноеАктированиеЕИС.Форма.ФормаПодписиДляЕИС";
	
КонецФункции

Функция ИмяФормыПриложенийДляЕИС() Экспорт
	
	Возврат "Обработка.ЭлектронноеАктированиеЕИС.Форма.ФормаПриложенныеДокументыДляЕИС";
	
КонецФункции

Функция ИмяФормыМестДоставкиДляЕИС() Экспорт
	
	Возврат "Обработка.ЭлектронноеАктированиеЕИС.Форма.ФормаДоставкаДляЕИС";
	
КонецФункции

Процедура ОткрытьГосударственныйКонтракт(СсылкаНаКонтракт, Параметры = Неопределено) Экспорт
	
	ЭлектронноеАктированиеЕИСКлиентПереопределяемый.ОткрытьГосударственныйКонтракт(СсылкаНаКонтракт, Параметры);
	
КонецПроцедуры

Процедура ОткрытьПодборТоваровПоГосударственномуКонтрактуВДокументе(ПараметрКоманды, ПараметрыВыполнения) Экспорт
	
	Документ = ПараметрыВыполнения.Источник.Ссылка;
	ДоговорКонтрагента = ЭлектронноеАктированиеЕИСВызовСервера.
		ДоговорКонтрагентаИсточникаКоманды(ПараметрыВыполнения.Источник);
	Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
		ГосударственныйКонтракт = ЭлектронноеАктированиеЕИСВызовСервера.
			НайтиГосударственныйКонтрактПоВладельцу(ДоговорКонтрагента);
		Если ЗначениеЗаполнено(ГосударственныйКонтракт) Тогда
			Форма = ПараметрыВыполнения.Форма;
			
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Документ", Документ);
			ПараметрыФормы.Вставить("ГосударственныйКонтракт", ГосударственныйКонтракт);
			МестаПоставки = ЭлектронноеАктированиеЕИСВызовСервера.МестаПоставкиДокумента(Документ);
			ПараметрыФормы.Вставить("МестаПоставкиДокумента",
				МестаПоставки);
			ОтображатьМестаПоставки =
				ЭлектронноеАктированиеЕИСВызовСервера.ДляДокументаЗаполняютсяМестаПоставки(Документ);
			ПараметрыФормы.Вставить("ОтображатьМестаПоставки", ОтображатьМестаПоставки);
			ОтображатьСудебноеРешение =
				ЭлектронноеАктированиеЕИСВызовСервера.ДляДокументаОтображаетсяСудебноеРешение(Документ);
			ПараметрыФормы.Вставить("ОтображатьСудебноеРешение", ОтображатьСудебноеРешение);
			
			ОткрытьФорму("Обработка.ЭлектронноеАктированиеЕИС.Форма.ФормаПараметровДляДокумента",
				ПараметрыФормы, Форма,
				Форма.УникальныйИдентификатор);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьСписокПриложенныхФайловДокумента(Объект, Форма) Экспорт
	
	ПараметрыФормы = Новый Структура;
		
	Приложения = Новый Массив;
	ПараметрыФормы.Вставить("Документ", Объект);
	
	ПриложенныеДокументыДляЕИС = ЭлектронноеАктированиеЕИСВызовСервера.ПриложенныеДокументыДляЕИС(Объект);
	
	Для каждого Строка Из ПриложенныеДокументыДляЕИС Цикл
		Документ = Новый Структура;
		Документ.Вставить("ВидВложения");
		Документ.Вставить("ПрисоединенныйФайл");
		ЗаполнитьЗначенияСвойств(Документ, Строка);
		Приложения.Добавить(Документ);
	КонецЦикла;
	ПараметрыФормы.Вставить("ПриложенныеДокументы", Приложения);
	
	ОткрытьФорму(
		"Обработка.ЭлектронноеАктированиеЕИС.Форма.ФормаПриложенныеДокументыДляЕИС",
		ПараметрыФормы,
		Форма,
		Форма.УникальныйИдентификатор);
	
КонецПроцедуры

Процедура ОткрытьДанныеОбжалованияОтказаОПриемке(Объект, Форма) Экспорт

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВидДокументаОбжалованияОтказаОПриемке",
		Форма.ВидДокументаОбжалованияОтказаОПриемке);
	ПараметрыФормы.Вставить("РеквизитыДокументаОбжалованияОтказаОПриемке",
		Форма.РеквизитыДокументаОбжалованияОтказаОПриемке);
	ПараметрыФормы.Вставить("Документ",
		Форма.Документ);
	ПараметрыФормы.Вставить("Организация",
		Форма.Организация);
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("СудебноеДосудебноеРешениеЗавершение", Форма);
	
	ОткрытьФорму(
		"Обработка.ЭлектронноеАктированиеЕИС.Форма.ФормаДанныхОбжалованияОтказаОПриемке",
		ПараметрыФормы,
		Форма, 
		Форма.УникальныйИдентификатор, , ,
		ОповещениеОЗакрытии);
	
КонецПроцедуры

Процедура ОткрытьФормуСтрокиКонтракта(ГосударственныйКонтракт,
		ИдентификаторДляАктированияЕИС,
		Форма,
		ТолькоПросмотр = Ложь) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ИдентификаторДляАктированияЕИС) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ГосударственныйКонтракт", ГосударственныйКонтракт);
	ПараметрыФормы.Вставить("Идентификатор", ИдентификаторДляАктированияЕИС);
	ПараметрыФормы.Вставить("ТолькоПросмотр", ТолькоПросмотр);
	
	ОткрытьФорму("Обработка.ЭлектронноеАктированиеЕИС.Форма.ФормаСтрокиКонтракта",
		ПараметрыФормы,
		Форма,
		Форма.УникальныйИдентификатор);

КонецПроцедуры

Процедура ОткрытьВыборПодписантовДокумента(Организация, Объект, Форма) Экспорт
	
	Подписанты = ПодписантыДокумента(Объект);
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ТолькоПросмотр", 			Форма.ТолькоПросмотр);
	ПараметрыФормы.Вставить("Организация", 				Организация);
	ПараметрыФормы.Вставить("Документ", 				Объект);
	ПараметрыФормы.Вставить("Подписанты", 				Подписанты);
	ОткрытьФорму(
		"Обработка.ЭлектронноеАктированиеЕИС.Форма.ФормаПодписиДляЕИС",
		ПараметрыФормы,
		Форма,
		Форма.УникальныйИдентификатор);
	
КонецПроцедуры

Функция ПодписантыДокумента(Объект) Экспорт
	
	ПодписантыЕИС = ЭлектронноеАктированиеЕИСВызовСервера.ПодписантыЕИС(Объект);
	
	Подписанты = Новый Массив;
	Для каждого Подписант Из ПодписантыЕИС Цикл
		ДанныеПодписанта = ЭлектронноеАктированиеЕИСКлиентСервер.НовыеСведенияОПодписантеДляДокумента();
		ЗаполнитьЗначенияСвойств(ДанныеПодписанта, Подписант);
		Подписанты.Добавить(ДанныеПодписанта);
	КонецЦикла;
	
	Возврат Подписанты;
	
КонецФункции

Процедура ОткрытьМестаДоставкиДокументаДляЕИС(Объект, Форма) Экспорт
	
	МестаПоставкиДляЕИС = ЭлектронноеАктированиеЕИСВызовСервера.МестаПоставкиДляЕИС(Объект);
	
	МестаПоставки = Новый Массив;
	Для каждого Строка Из МестаПоставкиДляЕИС Цикл
		МестоПоставки = ЭлектронноеАктированиеЕИСКлиентСервер.НовоеМестоПоставки();
		ЗаполнитьЗначенияСвойств(МестоПоставки, Строка);
		МестаПоставки.Добавить(МестоПоставки);
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ТолькоПросмотр", 			Форма.ТолькоПросмотр);
	ПараметрыФормы.Вставить("МестаПоставки", 			МестаПоставки);
	ПараметрыФормы.Вставить("Документ", 				Объект);
	
	ОткрытьФорму("Обработка.ЭлектронноеАктированиеЕИС.Форма.ФормаДоставкаДляЕИС", ПараметрыФормы, Форма);
	
КонецПроцедуры

Процедура ОткрытьЛичныйКабинетПоставщикаЕИС(ОповещениеОбратногоВызова = Неопределено) Экспорт
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ОповещениеОбратногоВызова", ОповещениеОбратногоВызова);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьЛичныйКабинетПоставщикаЕИСЗавершение",
		ЭтотОбъект,
		ДополнительныеПараметры);
	ГиперссылкаЛКП = ЭлектронноеАктированиеЕИСКлиентСервер.ГиперссылкаОткрытияЛичногоКабинетаПоставщика();
	НачатьЗапускПриложения(ОписаниеОповещения,
		"powershell -windowStyle hidden Start-Process 'iexplore.exe' -ArgumentList "
			+ ГиперссылкаЛКП + " -Verb RunAs -Wait", ,
		Истина); 
	
КонецПроцедуры

Процедура ОткрытьМастерНастроек(Организация, УникальныйИдентификаторФормы, ОповещениеОЗакрытии = Неопределено) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация", Организация);
	
	ОткрытьФорму("РегистрСведений.НастройкиОбменаЕИС.Форма.ФормаМастера", ПараметрыФормы,
		ЭтотОбъект,
		УникальныйИдентификаторФормы, , , ОповещениеОЗакрытии,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

// Открыть мастер настроек для заказчика.
// 
// Параметры:
//  Организация - ОпределяемыйТип.Организация - организация.
//  УникальныйИдентификаторФормы - УникальныйИдентификатор - уникальный идентификатор формы.
//  ОповещениеОЗакрытии - Неопределено, ОписаниеОповещения - оповещение о закрытии.
Процедура ОткрытьМастерНастроекДляЗаказчика(Организация,
				УникальныйИдентификаторФормы,
				ОповещениеОЗакрытии = Неопределено) Экспорт
	
	Если НЕ ЭлектронноеАктированиеЕИСВызовСервера.ЕстьПодсистемаДляЗаказчиков() Тогда
		Возврат;
	КонецЕсли;
	
	МодульПодсистемы = ОбщегоНазначенияКлиент.ОбщийМодуль("ЭлектронноеАктированиеЗаказчикаЕИСКлиент");
	МодульПодсистемы.ОткрытьМастерНастроекДляЗаказчика(
		Организация, УникальныйИдентификаторФормы, ОповещениеОЗакрытии);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИмяСобытияСохраненияНастроекПодключения() Экспорт
	
	Возврат "ЕИС_СобытиеСохраненияНастроекПодключения";
		
КонецФункции

&НаКлиенте
Процедура ОткрытьЛичныйКабинетПоставщикаЕИСЗавершение(КодВозврата, ДополнительныеПараметры) Экспорт
	
	ОповещениеОбратногоВызова = ДополнительныеПараметры.ОповещениеОбратногоВызова;
	Если ЗначениеЗаполнено(ОповещениеОбратногоВызова) Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОбратногоВызова, КодВозврата = 0);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти