
#Область ПрограммныйИнтерфейс

#Область ЗаполнениеНоменклатурыПартнеровВДокументах

// Формирует текст запроса для проверки табличной части Товары на наличие дублей номенклатуры партнера.
//
// Параметры:
//  ТекстЗапроса     - Строка    - текстовая строка, к которой необходимо добавить текст запроса.
//  ПараметрыЗапроса - Структура - структура, содержащая параметры запроса.
//
Процедура СформироватьЗапросКорректностьЗаполненияНоменклатурыПартнера(ТекстЗапроса, ПараметрыЗапроса) Экспорт
	
	ТекстЗапросаПоиска = "ВЫБРАТЬ
	|	МАКСИМУМ(ВложенныйЗапросПоДублям.НомерСтроки) КАК НомерСтроки,
	|	ВложенныйЗапросПоДублям.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ДокументТовары.НомерСтроки) КАК НомерСтроки,
	|		ДокументТовары.НоменклатураКонтрагента КАК НоменклатураКонтрагента,
	|		ДокументТовары.Номенклатура КАК Номенклатура,
	|		ДокументТовары.Характеристика КАК Характеристика,
	|		ДокументТовары.Упаковка КАК Упаковка
	|	ИЗ
	|		ВременнаяТаблицаТовары КАК ДокументТовары
	|	ГДЕ
	|		ДокументТовары.Номенклатура <> &ПустаяНоменклатура
	|		И ИСТИНА В
	|				(ВЫБРАТЬ ПЕРВЫЕ 1
	|					ИСТИНА
	|				ИЗ
	|					Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
	|				ГДЕ
	|					НоменклатураКонтрагентов.Ссылка = ДокументТовары.НоменклатураКонтрагента
	|					И НоменклатураКонтрагентов.Номенклатура =&ПустаяНоменклатура)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДокументТовары.НоменклатураКонтрагента,
	|		ДокументТовары.Номенклатура,
	|		ДокументТовары.Характеристика,
	|		ДокументТовары.Упаковка) КАК ВложенныйЗапросПоДублям
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапросПоДублям.НоменклатураКонтрагента
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(*) > 1";
	
	ТекстЗапроса = ТекстЗапроса + ТекстЗапросаПоиска + ОбщегоНазначения.РазделительПакетаЗапросов();
	ПараметрыЗапроса.Вставить("ПустаяНоменклатура", Справочники.Номенклатура.ПустаяСсылка());
		
КонецПроцедуры

// Выводит сообщения об ошибках наличия дублей в табличной части Товары документов.
//
// Параметры:
//  Выборка         - ВыборкаИзРезультатаЗапроса - выборка результата запроса:
//   * НоменклатураКонтрагента - СправочникСсылка.НоменклатураКонтрагентов - ссылка на номенклатуру партнера.
//   * НомерСтроки             - Число                                     - номер строки в документе.
//  Документ        - ДокументОбъект             - документ, для которого необходимо вывести сообщения об ошибках
//  Отказ           - Булево                     - признак отказа от проведения документа.
//
Процедура СообщитьОбОшибкахКорректностьЗаполненияНоменклатурыПартнера(Выборка, Документ, Отказ) Экспорт
	
	Пока Выборка.Следующий() Цикл
		
		ТекстОшибки = НСтр("ru = 'В строке не может быть выбрана ""%НоменклатураПартнера%"", т.к. в предыдущих строках она соответствует другой номенклатуре.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НоменклатураПартнера%", Выборка.НоменклатураКонтрагента);
		
		ОбщегоНазначения.СообщитьПользователю(
			ТекстОшибки,
			Документ,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "НоменклатураПартнера"),
			,
			Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет номенклатуру партнера при изменении партнера в документе
//
// Параметры:
//  Таблица - ДанныеФормыКоллекция, ТаблицаЗначений - таблица, в которой необходимо заполнить номенклатуру партнера.
//  Партнер - СправочникСсылка.Партнеры             - партнер, которому принадлежит номенклатура.
//
Процедура ЗаполнитьНоменклатуруПартнераПоНоменклатуреПриИзмененииПартнера(Таблица, Партнер) Экспорт

	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНоменклатуруПартнеров") Или Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаТовары = СформироватьТаблицуТоваровДляСопоставленияНоменклатурыПартнеров(Таблица);
	РезультатЗапроса = СопоставлениеНоменклатурыКонтрагентов.РезультатЗапросаПоискаНоменклатурыКонтрагентаПриИзмененииВладельца(Партнер, ТаблицаТовары);
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Для Каждого ТекСтрока Из Таблица Цикл
		
		Если Выборка.НайтиСледующий(ТекСтрока.НомерСтроки, "НомерСтроки") Тогда
			ТекСтрока.НоменклатураПартнера = Выборка.НоменклатураКонтрагента;
			Выборка.Сбросить();
		Иначе
			ТекСтрока.НоменклатураПартнера = Справочники.НоменклатураКонтрагентов.ПустаяСсылка();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет номенклатуру партнера по номенклатуре в строке табличной части.
//
// Параметры:
//  Партнер              - СправочникСсылка.Партнеры - ссылка партнера.
//  ТекущаяСтрока        - Структура                 - данные обрабатываемой строки.
//  СтруктураДействий    - Структура                 - описывает действия.
//  КэшированныеЗначения - Структура                 - сохраненные значения параметров, используемых при обработке.
//
Процедура ЗаполнитьНоменклатуруПартнераПоНоменклатуреВСтрокеТЧ(Партнер, ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", ТекущаяСтрока.Номенклатура);
	Запрос.УстановитьПараметр("Упаковка"    , ТекущаяСтрока.Упаковка);
	
	ТекстЗапроса = ТекстЗапросаПоискаТоваровДругогоКачестваВСтрокеТЧ();
	Запрос.Текст = ТекстЗапроса + "
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТоварыДругогоКачества.Номенклатура ЕСТЬ NULL
	|			ТОГДА &Номенклатура
	|		ИНАЧЕ ТоварыДругогоКачества.Номенклатура
	|	КОНЕЦ КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА &Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(ТоварыДругогоКачества.ЕдиницаИзмерения, СправочникНоменклатура.ЕдиницаИзмерения)
	|		ИНАЧЕ ЕСТЬNULL(ТоварыДругогоКачества.Упаковка, &Упаковка)
	|	КОНЕЦ КАК Упаковка
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДругогоКачества КАК ТоварыДругогоКачества
	|		ПО СправочникНоменклатура.Ссылка = ТоварыДругогоКачества.НоменклатураБрак
	|ГДЕ
	|	СправочникНоменклатура.Ссылка = &Номенклатура";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	НоменклатураИБ = СопоставлениеНоменклатурыКонтрагентовКлиентСервер.НоваяНоменклатураКонтрагентаИнформационнойБазы();

	НоменклатураИБ.Характеристика          = ТекущаяСтрока.Характеристика;
	НоменклатураИБ.НоменклатураКонтрагента = ТекущаяСтрока.НоменклатураПартнера;

	Если Выборка.Следующий() Тогда
		НоменклатураИБ.Номенклатура = Выборка.Номенклатура;
		НоменклатураИБ.Упаковка     = Выборка.Упаковка;
	КонецЕсли;
	
	НоменклатураПартнера = СопоставлениеНоменклатурыКонтрагентов.НоменклатураКонтрагентаПоНоменклатуреВСтрокеТаблицы(Партнер, НоменклатураИБ);
	
	ТекущаяСтрока.НоменклатураПартнера = НоменклатураПартнера;

КонецПроцедуры

// Заполняет номенклатуру по номенклатуре партнера в строке табличной части.
//
// Параметры:
//  ТекущаяСтрока        - Структура - данные обрабатываемой строки.
//  СтруктураДействий    - Структура - описывает действия.
//  КэшированныеЗначения - Структура - сохраненные значения параметров, используемых при обработке.
//
Процедура ЗаполнитьНоменклатуруПоНоменклатуреПартнераВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =  
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НоменклатураПартнеров.Номенклатура КАК Номенклатура,
	|	НоменклатураПартнеров.Характеристика КАК Характеристика,
	|	НоменклатураПартнеров.Упаковка КАК Упаковка,
	|	ВЫБОР
	|		КОГДА НоменклатураПартнеров.Номенклатура.ИспользованиеХарактеристик В
	|		(ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ХарактеристикиИспользуются,
	|	ВЫБОР
	|		КОГДА НоменклатураПартнеров.Номенклатура <> &Номенклатура
	|		И ТоварыДругогоКачества.Номенклатура ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеобходимоПерезаполнитьНоменклатуру,
	|	ВЫБОР
	|		КОГДА НоменклатураПартнеров.Характеристика <> &Характеристика
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеобходимоПерезаполнитьХарактеристики,
	|	ВЫБОР
	|		КОГДА ТоварыДругогоКачества.НоменклатураБрак ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВДокументеНоменклатураДругогоКачества,
	|	СправочникНоменклатура.ЕдиницаИзмерения КАК БазоваяЕдиницаИзмеренияНоменклатурыВДокументе,
	|	ТоварыДругогоКачества.НоменклатураБрак КАК НоменклатураБрак
	|ПОМЕСТИТЬ НоменклатураПартнера
	|ИЗ
	|	Справочник.НоменклатураКонтрагентов КАК НоменклатураПартнеров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварыДругогоКачества КАК ТоварыДругогоКачества
	|			ПО СправочникНоменклатура.Ссылка = ТоварыДругогоКачества.НоменклатураБрак
	|		ПО СправочникНоменклатура.Ссылка = &Номенклатура
	|ГДЕ
	|	НоменклатураПартнеров.Ссылка = &НоменклатураПартнера
	|	И НоменклатураПартнеров.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(УпаковкиЕдиницыИзмеренияПоиск.Ссылка) КАК УпаковкаБрака,
	|	УпаковкиЕдиницыИзмерения.Ссылка КАК УпаковкаНоменклатурыПартнера
	|ПОМЕСТИТЬ УпаковкаНоменклатурыБракаВДокументе
	|ИЗ
	|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмеренияПоиск
	|		ПО УпаковкиЕдиницыИзмерения.Наименование = УпаковкиЕдиницыИзмеренияПоиск.Наименование
	|		И УпаковкиЕдиницыИзмеренияПоиск.Владелец = &Номенклатура
	|		И
	|		НЕ УпаковкиЕдиницыИзмеренияПоиск.ПометкаУдаления
	|		И ЕСТЬNULL(&ТекстЗапросаКоэффициентаУпаковки, 1) = ЕСТЬNULL(&ПоискТекстЗапросаКоэффициентаУпаковки, 1)
	|ГДЕ
	|	ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			НоменклатураПартнера КАК НоменклатураПартнера
	|		ГДЕ
	|			НоменклатураПартнера.Упаковка = УпаковкиЕдиницыИзмерения.Ссылка)
	|СГРУППИРОВАТЬ ПО
	|	УпаковкиЕдиницыИзмерения.Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НоменклатураПартнера.ВДокументеНоменклатураДругогоКачества
	|			ТОГДА НоменклатураПартнера.НоменклатураБрак
	|		ИНАЧЕ НоменклатураПартнера.Номенклатура
	|	КОНЕЦ КАК Номенклатура,
	|	НоменклатураПартнера.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА НоменклатураПартнера.ВДокументеНоменклатураДругогоКачества
	|		И НоменклатураПартнера.Упаковка.Владелец <> ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.БазовыеЕдиницыИзмерения)
	|			ТОГДА УпаковкаНоменклатурыБракаВДокументе.УпаковкаБрака
	|		ИНАЧЕ НоменклатураПартнера.Упаковка
	|	КОНЕЦ КАК Упаковка,
	|	НоменклатураПартнера.ХарактеристикиИспользуются КАК ХарактеристикиИспользуются,
	|	НоменклатураПартнера.НеобходимоПерезаполнитьНоменклатуру КАК НеобходимоПерезаполнитьНоменклатуру,
	|	НоменклатураПартнера.НеобходимоПерезаполнитьХарактеристики КАК НеобходимоПерезаполнитьХарактеристики,
	|	ВЫБОР
	|		КОГДА НоменклатураПартнера.Упаковка.Владелец <> ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.БазовыеЕдиницыИзмерения)
	|			ТОГДА ВЫБОР
	|				КОГДА НоменклатураПартнера.ВДокументеНоменклатураДругогоКачества
	|					ТОГДА ВЫБОР
	|						КОГДА НоменклатураПартнера.Упаковка <> &Упаковка
	|						И НоменклатураПартнера.Упаковка <> УпаковкаНоменклатурыБракаВДокументе.УпаковкаБрака
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|				ИНАЧЕ ВЫБОР
	|					КОГДА НоменклатураПартнера.Упаковка <> &Упаковка
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|			КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|			КОГДА НоменклатураПартнера.Упаковка <> НоменклатураПартнера.БазоваяЕдиницаИзмеренияНоменклатурыВДокументе
	|			ИЛИ &Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	КОНЕЦ КАК НеобходимоПерезаполнитьУпаковки
	|ИЗ
	|	НоменклатураПартнера КАК НоменклатураПартнера
	|		ЛЕВОЕ СОЕДИНЕНИЕ УпаковкаНоменклатурыБракаВДокументе КАК УпаковкаНоменклатурыБракаВДокументе
	|		ПО НоменклатураПартнера.Упаковка = УпаковкаНоменклатурыБракаВДокументе.УпаковкаНоменклатурыПартнера";
	
	Запрос.УстановитьПараметр("НоменклатураПартнера", ТекущаяСтрока.НоменклатураПартнера);
	Запрос.УстановитьПараметр("Номенклатура"        , ТекущаяСтрока.Номенклатура);
	Запрос.УстановитьПараметр("Характеристика"      , ТекущаяСтрока.Характеристика);
	Запрос.УстановитьПараметр("Упаковка"            , ТекущаяСтрока.Упаковка);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентаУпаковки", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки("УпаковкиЕдиницыИзмерения", "УпаковкиЕдиницыИзмерения.Владелец"));
		
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ПоискТекстЗапросаКоэффициентаУпаковки", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки("УпаковкиЕдиницыИзмеренияПоиск", "УпаковкиЕдиницыИзмеренияПоиск.Владелец"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Если Выборка.НеобходимоПерезаполнитьНоменклатуру Тогда
			ТекущаяСтрока.Номенклатура   = Выборка.Номенклатура;
		КонецЕсли;
		Если Выборка.НеобходимоПерезаполнитьХарактеристики Тогда
			ТекущаяСтрока.Характеристика = Выборка.Характеристика;
			Если СтруктураДействий.Свойство("ПроверитьХарактеристикуПоВладельцу") Тогда
				СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу", Выборка.Характеристика);
			КонецЕсли;
			ТекущаяСтрока.ХарактеристикиИспользуются = Выборка.ХарактеристикиИспользуются;
		КонецЕсли;
		Если Выборка.НеобходимоПерезаполнитьУпаковки Тогда
			ТекущаяСтрока.Упаковка = Выборка.Упаковка;
			Если СтруктураДействий.Свойство("ПроверитьЗаполнитьУпаковкуПоВладельцу") Тогда
				СтруктураДействий.Вставить("ПроверитьЗаполнитьУпаковкуПоВладельцу", Выборка.Упаковка);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

// Заполняет номенклатуру, характеристику, упаковку в номенклатуре партнера с пустой номенклатурой в сопоставление.
//
// Параметры:
//  Товары - ТаблицаЗначений - таблица, содержащая данные для связывания номенклатуры с номенклатурой партнера.
//  Отказ  - Булево - Истина, если не удалось связать номенклатуру с номенклатурой поставщика.
//
Процедура ЗаполнитьПустоеСопоставлениеВНоменклатуреПартнераПоНоменклатуреИБ(Товары, Отказ) Экспорт

	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНоменклатуруПартнеров") Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаТоваров = Товары.Выгрузить(,"НоменклатураПартнера,Номенклатура,Характеристика,Упаковка");
	
	СопоставлениеНоменклатурыКонтрагентов.ЗаполнитьПустоеСопоставлениеВНоменклатуреКонтрагентаПоНоменклатуреИБ(ТаблицаТоваров, Отказ);
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ТекстЗапросаПоискаНеСопоставленнойНоменклатурыКонтрагентовПоНоменклатуреИБ
Процедура ТекстЗапросаПоискаНеСопоставленнойНоменклатурыКонтрагентовПоНоменклатуреИБ(ТекстЗапроса, Знач ТаблицаТоваровПоУмолчанию) Экспорт
	
	Если Не ТаблицаТоваровПоУмолчанию Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Товары.НоменклатураПартнера КАК НоменклатураКонтрагента,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Упаковка КАК Упаковка
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&Товары КАК Товары
		|ГДЕ
		|	Товары.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|	И Товары.НоменклатураПартнера <> ЗНАЧЕНИЕ(Справочник.НоменклатураКонтрагентов.ПустаяСсылка)";
		
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов();
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.НоменклатураКонтрагента КАК НоменклатураКонтрагента,
	|	ВЫБОР
	|		КОГДА НЕ ТоварыДругогоКачества.Номенклатура ЕСТЬ NULL
	|			ТОГДА ТоварыДругогоКачества.Номенклатура
	|		ИНАЧЕ Товары.Номенклатура
	|	КОНЕЦ КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА СправочникНоменклатура.ЕдиницаИзмерения
	|		ИНАЧЕ Товары.Упаковка
	|	КОНЕЦ КАК Упаковка,
	|	ВЫБОР
	|		КОГДА НЕ ТоварыДругогоКачества.Номенклатура ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоТоварДругогоКачества,
	|	ВЫБОР
	|		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК БазоваяУпаковка
	|ПОМЕСТИТЬ ВременнаяТаблица_Товары
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварыДругогоКачества КАК ТоварыДругогоКачества
	|		ПО Товары.Номенклатура = ТоварыДругогоКачества.НоменклатураБрак
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
	|		ПО Товары.НоменклатураКонтрагента = НоменклатураКонтрагентов.Ссылка
	|ГДЕ
	|	НоменклатураКонтрагентов.Номенклатура = &ПустаяНоменклатура
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблица_Товары.НоменклатураКонтрагента КАК НоменклатураКонтрагента,
	|	ВременнаяТаблица_Товары.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблица_Товары.Характеристика КАК Характеристика,
	|	МАКСИМУМ(ЕСТЬNULL(УпаковкиЕдиницыИзмерения.Ссылка, ВременнаяТаблица_Товары.Упаковка)) КАК Упаковка
	|ИЗ
	|	ВременнаяТаблица_Товары КАК ВременнаяТаблица_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|		ПО (ВременнаяТаблица_Товары.ЭтоТоварДругогоКачества)
	|		И (НЕ ВременнаяТаблица_Товары.БазоваяУпаковка)
	|		И ВременнаяТаблица_Товары.Упаковка.Наименование = УпаковкиЕдиницыИзмерения.Наименование
	|		И (ЕСТЬNULL(&ТекстЗапросаКоэффициентаУпаковки, 1) = ЕСТЬNULL(&ПоискТекстЗапросаКоэффициентаУпаковки, 1))
	|		И ВременнаяТаблица_Товары.Номенклатура = УпаковкиЕдиницыИзмерения.Владелец
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблица_Товары.НоменклатураКонтрагента,
	|	ВременнаяТаблица_Товары.Номенклатура,
	|	ВременнаяТаблица_Товары.Характеристика";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентаУпаковки", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки("ВременнаяТаблица_Товары.Упаковка", "ВременнаяТаблица_Товары.Номенклатура"));
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоискТекстЗапросаКоэффициентаУпаковки", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки("УпаковкиЕдиницыИзмерения", "УпаковкиЕдиницыИзмерения.Владелец"));
		
КонецПроцедуры

// Заполняет номенклатуру партнера по номенклатуре в таблице.
//
// Параметры:
//  Товары  -ТаблицаЗначений            - таблица, содержащая данные для связывания номенклатуры с номенклатурой партнера.
//  Партнер - СправочникСсылка.Партнеры - ссылка партнера.
//
Процедура ЗаполнитьНоменклатуруПартнераПоНоменклатуреВТаблице(Товары, Партнер) Экспорт

	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНоменклатуруПартнеров") Или Товары.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаТовары = СформироватьТаблицуТоваровДляСопоставленияНоменклатурыПартнеров(Товары);
	РезультатЗапроса = СопоставлениеНоменклатурыКонтрагентов.РезультатЗапросаПоискаНоменклатурыКонтрагентаПоНоменклатуреИБ(Партнер, ТаблицаТовары);

	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Для Каждого ТекСтрока Из Товары Цикл
		
		Если Выборка.НайтиСледующий(ТекСтрока.НомерСтроки, "НомерСтроки") Тогда
			ТекСтрока.НоменклатураПартнера = Выборка.НоменклатураКонтрагента;
			Выборка.Сбросить();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.СформироватьТаблицуСопоставленияНоменклатурыКонтрагентовВДокументах
Процедура СформироватьТаблицуСопоставленияНоменклатурыКонтрагентовВДокументах(
		Знач НаборДокументов, ТаблицаСопоставления, ОткрыватьФормуДляИзмененияСопоставления) Экспорт
	
	ОткрыватьФормуДляИзмененияСопоставления = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НаборДокументов", НаборДокументов);
	Запрос.УстановитьПараметр("ПредставлениеНоменклатурыКлиента", НСтр("ru = 'Номенклатура клиента'"));
	Запрос.УстановитьПараметр("ПредставлениеНоменклатурыПоставщика", НСтр("ru = 'Номенклатура поставщика'"));
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗаказКлиентаТовары.Ссылка КАК СсылкаНаДокумент,
	|	ЗаказКлиентаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗаказКлиентаТовары.Номенклатура КАК Номенклатура,
	|	ЗаказКлиентаТовары.Характеристика КАК Характеристика,
	|	ЗаказКлиентаТовары.Упаковка КАК Упаковка,
	|	ЗаказКлиентаТовары.НоменклатураПартнера КАК НоменклатураКонтрагента,
	|	ЗаказКлиентаТовары.Ссылка.Партнер КАК Владелец,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""НоменклатураПартнера"" КАК ИмяКолонкиНоменклатурыКонтрагента,
	|	&ПредставлениеНоменклатурыКлиента КАК ПредставлениеНоменклатурыКонтрагента
	|ПОМЕСТИТЬ ВременнаяТаблица_Товары
	|ИЗ
	|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|ГДЕ
	|	ЗаказКлиентаТовары.Ссылка В (&НаборДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаказПоставщикуТовары.Ссылка,
	|	ЗаказПоставщикуТовары.НомерСтроки,
	|	ЗаказПоставщикуТовары.Номенклатура,
	|	ЗаказПоставщикуТовары.Характеристика,
	|	ЗаказПоставщикуТовары.Упаковка,
	|	ЗаказПоставщикуТовары.НоменклатураПартнера,
	|	ЗаказПоставщикуТовары.Ссылка.Партнер,
	|	""Товары"",
	|	""НоменклатураПартнера"",
	|	&ПредставлениеНоменклатурыПоставщика
	|ИЗ
	|	Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
	|ГДЕ
	|	ЗаказПоставщикуТовары.Ссылка В (&НаборДокументов)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТоварыДругогоКачества.Номенклатура,
	|	ТоварыДругогоКачества.НоменклатураБрак,
	|	МАКСИМУМ(УпаковкиЕдиницыИзмеренияПоиск.Ссылка) КАК Упаковка
	|ПОМЕСТИТЬ ТоварыДругогоКачества
	|ИЗ
	|	РегистрСведений.ТоварыДругогоКачества КАК ТоварыДругогоКачества
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмеренияПоиск
	|			ПРАВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|			ПО ИСТИНА В
	|				(ВЫБРАТЬ ПЕРВЫЕ 1
	|					ИСТИНА
	|				ИЗ
	|					ВременнаяТаблица_Товары КАК ВременнаяТаблица_Товары
	|				ГДЕ
	|					ВременнаяТаблица_Товары.Упаковка = УпаковкиЕдиницыИзмерения.Ссылка)
	|			И УпаковкиЕдиницыИзмерения.Наименование = УпаковкиЕдиницыИзмеренияПоиск.Наименование
	|			И ЕСТЬNULL(&ПоискТекстЗапросаКоэффициентаУпаковки, 1) = ЕСТЬNULL(&ТекстЗапросаКоэффициентаУпаковки, 1)
	|		ПО ТоварыДругогоКачества.Номенклатура = УпаковкиЕдиницыИзмеренияПоиск.Владелец
	|ГДЕ
	|	ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			ВременнаяТаблица_Товары КАК ВременнаяТаблица_Товары
	|		ГДЕ
	|			ВременнаяТаблица_Товары.Номенклатура = ТоварыДругогоКачества.НоменклатураБрак)
	|СГРУППИРОВАТЬ ПО
	|	ТоварыДругогоКачества.Номенклатура,
	|	ТоварыДругогоКачества.НоменклатураБрак
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблица_Товары.Владелец,
	|	ВременнаяТаблица_Товары.НомерСтроки,
	|	ВременнаяТаблица_Товары.ПредставлениеНоменклатурыКонтрагента,
	|	ВременнаяТаблица_Товары.ИмяТабличнойЧасти,
	|	ВременнаяТаблица_Товары.ИмяКолонкиНоменклатурыКонтрагента,
	|	ВременнаяТаблица_Товары.СсылкаНаДокумент,
	|	ВременнаяТаблица_Товары.Номенклатура,
	|	ВременнаяТаблица_Товары.Характеристика,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблица_Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ВременнаяТаблица_Товары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ВременнаяТаблица_Товары.Упаковка
	|	КОНЕЦ КАК Упаковка,
	|	ВЫБОР
	|		КОГДА ТоварыДругогоКачества.Номенклатура ЕСТЬ NULL
	|			ТОГДА ВременнаяТаблица_Товары.Номенклатура
	|		ИНАЧЕ ТоварыДругогоКачества.Номенклатура
	|	КОНЕЦ КАК НоменклатураПоиск,
	|	ВременнаяТаблица_Товары.Характеристика КАК ХарактеристикаПоиск,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблица_Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(ТоварыДругогоКачества.Номенклатура.ЕдиницаИзмерения,
	|				ВременнаяТаблица_Товары.Номенклатура.ЕдиницаИзмерения)
	|		ИНАЧЕ ЕСТЬNULL(ТоварыДругогоКачества.Упаковка, ВременнаяТаблица_Товары.Упаковка)
	|	КОНЕЦ КАК УпаковкаПоиск,
	|	ВременнаяТаблица_Товары.НоменклатураКонтрагента
	|ИЗ
	|	ВременнаяТаблица_Товары КАК ВременнаяТаблица_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДругогоКачества КАК ТоварыДругогоКачества
	|		ПО ВременнаяТаблица_Товары.Номенклатура = ТоварыДругогоКачества.НоменклатураБрак";
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентаУпаковки", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки("УпаковкиЕдиницыИзмерения", "УпаковкиЕдиницыИзмерения.Владелец"));
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоискТекстЗапросаКоэффициентаУпаковки", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки("УпаковкиЕдиницыИзмеренияПоиск", "УпаковкиЕдиницыИзмеренияПоиск.Владелец"));
	
	Запрос.Текст = ТекстЗапроса;
	
	ТаблицаСопоставления = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ТекстЗапросаСпискаВыбораНоменклатурыКонтрагента
Процедура ТекстЗапросаСпискаВыбораНоменклатурыКонтрагента(Запрос) Экспорт
		
	ТекстЗапроса = ТекстЗапросаПоискаТоваровДругогоКачестваВСтрокеТЧ();

	Запрос.Текст = ТекстЗапроса +
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НоменклатураПартнеров.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.НоменклатураКонтрагентов КАК НоменклатураПартнеров
	|ГДЕ
	|	НоменклатураПартнеров.ВладелецНоменклатуры = &ВладелецНоменклатуры
	|	И ((НоменклатураПартнеров.Номенклатура = &Номенклатура
	|	И ВЫБОР
	|		КОГДА &Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА НоменклатураПартнеров.Упаковка = НоменклатураПартнеров.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ НоменклатураПартнеров.Упаковка = &Упаковка
	|	КОНЕЦ)
	|	ИЛИ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			ТоварыДругогоКачества КАК ТоварыДругогоКачества
	|		ГДЕ
	|			ТоварыДругогоКачества.Номенклатура = НоменклатураПартнеров.Номенклатура
	|			И ВЫБОР
	|				КОГДА &Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА ТоварыДругогоКачества.ЕдиницаИзмерения = НоменклатураПартнеров.Упаковка
	|				ИНАЧЕ ТоварыДругогоКачества.Упаковка = НоменклатураПартнеров.Упаковка
	|			КОНЕЦ))
	|	И НоменклатураПартнеров.Характеристика = &Характеристика
	|	И
	|	НЕ НоменклатураПартнеров.ПометкаУдаления
	|	И
	|	НЕ НоменклатураПартнеров.Недействителен";
	
КонецПроцедуры

#КонецОбласти

#Область ПереопределениеСправочникаНоменклатураКонтрагентов

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ПриСозданииНаСервере_ФормаГруппыНоменклатурыКонтрагентов
Процедура ПриСозданииНаСервере_ФормаГруппыНоменклатурыКонтрагентов(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(Форма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	СобытияФорм.ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ПриСозданииНаСервере_ФормаСпискаНоменклатурыКонтрагентов
Процедура ПриСозданииНаСервере_ФормаСпискаНоменклатурыКонтрагентов(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	Если Форма.Параметры.Свойство("Отбор")
		И Форма.Параметры.Отбор.Свойство("ВладелецНоменклатуры") Тогда
		Форма.Параметры.Отбор.Вставить("Владелец", Форма.Параметры.Отбор.ВладелецНоменклатуры);
	КонецЕсли;
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(Форма);
	// Конец ИнтеграцияС1СДокументооборотом

	СобытияФорм.ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ПриЧтенииНаСервере_ФормаЭлементаНоменклатурыКонтрагентов
Процедура ПриЧтенииНаСервере_ФормаЭлементаНоменклатурыКонтрагентов(Форма, ТекущийОбъект) Экспорт
	
	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(Форма, ТекущийОбъект);
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ПередЗаписьюНаСервере_ФормаЭлементаНоменклатурыКонтрагентов
Процедура ПередЗаписьюНаСервере_ФормаЭлементаНоменклатурыКонтрагентов(Форма, Отказ, ТекущийОбъект, ПараметрыЗаписи) Экспорт
	
	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(Форма, Отказ, ТекущийОбъект, ПараметрыЗаписи);

	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПередЗаписьюНаСервере(Форма, ТекущийОбъект, ПараметрыЗаписи);
	// Конец ИнтеграцияС1СДокументооборотом
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ПослеЗаписиНаСервере_ФормаЭлементаНоменклатурыКонтрагентов
Процедура ПослеЗаписиНаСервере_ФормаЭлементаНоменклатурыКонтрагентов(Форма, ТекущийОбъект, ПараметрыЗаписи) Экспорт
	
	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(Форма, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ПриСозданииНаСервере_ФормаЭлементаНоменклатурыКонтрагентов
Процедура ПриСозданииНаСервере_ФормаЭлементаНоменклатурыКонтрагентов(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(Форма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(Форма);
	// Конец ИнтеграцияС1СДокументооборотом

	СобытияФорм.ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ОбработкаПолученияДанныхВыбора_НоменклатураКонтрагентов
Процедура ОбработкаПолученияДанныхВыбора_НоменклатураКонтрагентов(ДанныеВыбора, Параметры, СтандартнаяОбработка) Экспорт
	
	Если Параметры.Отбор.Свойство("Номенклатура") Тогда
		Номенклатура = Параметры.Отбор.Номенклатура;
		Параметры.Отбор.Удалить("Номенклатура");
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("Характеристика") Тогда
		Характеристика = Параметры.Отбор.Характеристика;
		Параметры.Отбор.Удалить("Характеристика");
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("Упаковка") Тогда
		Упаковка = Параметры.Отбор.Упаковка;
		Параметры.Отбор.Удалить("Упаковка");
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("ВладелецНоменклатуры") Тогда
		ВладелецНоменклатуры = Параметры.Отбор.ВладелецНоменклатуры;
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("ТипНоменклатуры") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если Параметры.Отбор.Свойство("ТипНоменклатуры") Тогда
			ТипНоменклатуры = Параметры.Отбор.ТипНоменклатуры;
		Иначе
			ТипНоменклатуры = Параметры.ТипНоменклатуры;
		КонецЕсли;
	
		СтрокаПоиска = СокрЛП(Параметры.СтрокаПоиска);
		
		Запрос = Новый Запрос;
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НоменклатураКонтрагентов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
		|ГДЕ
		|	НЕ НоменклатураКонтрагентов.ПометкаУдаления
		|	И НоменклатураКонтрагентов.Номенклатура.ТипНоменклатуры В(&ТипНоменклатуры)
		|	И (НоменклатураКонтрагентов.Артикул ПОДОБНО &СтрокаПоиска
		|			ИЛИ НоменклатураКонтрагентов.Код ПОДОБНО &СтрокаПоиска
		|			ИЛИ НоменклатураКонтрагентов.Наименование ПОДОБНО &СтрокаПоиска)
		|	И НЕ НоменклатураКонтрагентов.Недействителен
		|	И &ПрочиеУсловия";
		
		Запрос.УстановитьПараметр("ТипНоменклатуры", ТипНоменклатуры);
		Запрос.УстановитьПараметр("СтрокаПоиска", ?(СтрокаПоиска = Неопределено, "", СтрокаПоиска) + "%");
		
		ПрочиеУсловия = "Истина";
		ЧастьУсловия = " И НоменклатураКонтрагентов.%Параметр = &%Параметр";
		Если ЗначениеЗаполнено(ВладелецНоменклатуры) Тогда
			Запрос.УстановитьПараметр("ВладелецНоменклатуры", ВладелецНоменклатуры);
			ПрочиеУсловия = ПрочиеУсловия + СтрЗаменить(ЧастьУсловия, "%Параметр", "ВладелецНоменклатуры");
		КонецЕсли;
		Если ЗначениеЗаполнено(Номенклатура) Тогда
			Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
			ПрочиеУсловия = ПрочиеУсловия + СтрЗаменить(ЧастьУсловия, "%Параметр", "Номенклатура");
		КонецЕсли;
		Если ЗначениеЗаполнено(Характеристика) Тогда
			Запрос.УстановитьПараметр("Характеристика", Характеристика);
			ПрочиеУсловия = ПрочиеУсловия + СтрЗаменить(ЧастьУсловия, "%Параметр", "Характеристика");
		КонецЕсли;
		Если ЗначениеЗаполнено(Упаковка) Тогда
			Запрос.УстановитьПараметр("Упаковка", Упаковка);
			ПрочиеУсловия = ПрочиеУсловия + СтрЗаменить(ЧастьУсловия, "%Параметр", "Упаковка");
		КонецЕсли;
		Запрос.Текст = СтрЗаменить(ТекстЗапроса,"&ПрочиеУсловия", ПрочиеУсловия);
		
		ДанныеВыбора = Новый СписокЗначений;
		ДанныеВыбора.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	КонецЕсли;
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ПриИзмененииНоменклатурыСопоставления_НоменклатураКонтрагентов
Процедура ПриИзмененииНоменклатурыСопоставления_НоменклатураКонтрагентов(Форма, ДанныеСопоставления) Экспорт
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу"   , ДанныеСопоставления.Характеристика);
	СтруктураДействий.Вставить("ПроверитьЗаполнитьУпаковкуПоВладельцу", ДанныеСопоставления.Упаковка);

	СтруктураДействий.Вставить("НоменклатураПриИзмененииПереопределяемый", 
		Новый Структура("ИмяФормы, ИмяТабличнойЧасти",
		Форма.ИмяФормы, "Объект"));
		
	ДанныеСопоставления.Вставить("ХарактеристикиИспользуются", ДанныеСопоставления.ИспользоватьХарактеристики);

	ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ДанныеСопоставления, СтруктураДействий, Неопределено);

	ДанныеСопоставления.ИспользоватьХарактеристики = ДанныеСопоставления.ХарактеристикиИспользуются;
	ДанныеСопоставления.Удалить("ХарактеристикиИспользуются");
	
	ДанныеСопоставления.ЕдиницаИзмеренияПоУмолчанию = Справочники.УпаковкиЕдиницыИзмерения.ЕдиницаХраненияНоменклатуры(ДанныеСопоставления.Номенклатура);
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ПриСозданииНаСервере_ФормаВыбораНоменклатурыКонтрагентов
Процедура ПриСозданииНаСервере_ФормаВыбораНоменклатурыКонтрагентов(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	СобытияФорм.ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);

	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(Форма);
	// Конец ИнтеграцияС1СДокументооборотом

КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ТекстЗапросаДинамическогоСписка_ФормаВыбораНоменклатурыКонтрагента
Процедура ТекстЗапросаДинамическогоСписка_ФормаВыбораНоменклатурыКонтрагента(ТекстЗапроса) Экспорт
	
	ТекстЗапроса =  
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НоменклатураКонтрагентовПереопределяемый.Ссылка КАК Ссылка,
	|	НоменклатураКонтрагентовПереопределяемый.ПометкаУдаления КАК ПометкаУдаления,
	|	НоменклатураКонтрагентовПереопределяемый.Предопределенный КАК Предопределенный,
	|	НоменклатураКонтрагентовПереопределяемый.ВладелецНоменклатуры КАК ВладелецНоменклатуры,
	|	НоменклатураКонтрагентовПереопределяемый.Родитель КАК Родитель,
	|	НоменклатураКонтрагентовПереопределяемый.ЭтоГруппа КАК ЭтоГруппа,
	|	НоменклатураКонтрагентовПереопределяемый.Код КАК Код,
	|	НоменклатураКонтрагентовПереопределяемый.Наименование КАК Наименование,
	|	НоменклатураКонтрагентовПереопределяемый.Номенклатура КАК Номенклатура,
	|	НоменклатураКонтрагентовПереопределяемый.Характеристика КАК Характеристика,
	|	НоменклатураКонтрагентовПереопределяемый.Упаковка КАК Упаковка,
	|	НоменклатураКонтрагентовПереопределяемый.Артикул КАК Артикул,
	|	НоменклатураКонтрагентовПереопределяемый.Штрихкод КАК Штрихкод,
	|	НоменклатураКонтрагентовПереопределяемый.СтавкаНДС КАК СтавкаНДС,
	|	НоменклатураКонтрагентовПереопределяемый.ИдентификаторНоменклатурыСервиса КАК ИдентификаторНоменклатурыСервиса,
	|	НоменклатураКонтрагентовПереопределяемый.ИдентификаторХарактеристикиСервиса КАК ИдентификаторХарактеристикиСервиса,
	|	НоменклатураКонтрагентовПереопределяемый.НаименованиеНоменклатуры КАК НаименованиеНоменклатуры,
	|	НоменклатураКонтрагентовПереопределяемый.НаименованиеХарактеристики КАК НаименованиеХарактеристики,
	|	НоменклатураКонтрагентовПереопределяемый.НаименованиеУпаковки КАК НаименованиеУпаковки,
	|	НоменклатураКонтрагентовПереопределяемый.НаименованиеБазовойЕдиницыИзмерения КАК НаименованиеБазовойЕдиницыИзмерения,
	|	НоменклатураКонтрагентовПереопределяемый.КодОКЕИБазовойЕдиницыИзмерения КАК КодОКЕИБазовойЕдиницыИзмерения,
	|	ВЫБОР
	|		КОГДА НоменклатураКонтрагентовПереопределяемый.Номенклатура = &ПустаяНоменклатура
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НоменклатураКонтрагентаНеСопоставлена,
	|	ВЫБОР
	|		КОГДА &НоменклатураОтбор <> &ПустаяНоменклатура
	|		И (&НоменклатураОтбор <> НоменклатураКонтрагентовПереопределяемый.Номенклатура
	|		И НоменклатураДругогоКачества.Номенклатура ЕСТЬ NULL
	|		ИЛИ &ХарактеристикаОтбор <> НоменклатураКонтрагентовПереопределяемый.Характеристика
	|		ИЛИ &УпаковкаОтбор <> НоменклатураКонтрагентовПереопределяемый.Упаковка
	|		И НоменклатураДругогоКачества.Упаковка ЕСТЬ NULL)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НоменклатураКонтрагентаНеСовпадаетСОтбором,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА НоменклатураКонтрагентовПереопределяемый.Номенклатура = &ПустаяНоменклатура
	|			ТОГДА &Подсказка1
	|		КОГДА &НоменклатураОтбор <> &ПустаяНоменклатура
	|		И (&НоменклатураОтбор <> НоменклатураКонтрагентовПереопределяемый.Номенклатура
	|		И НоменклатураДругогоКачества.Номенклатура ЕСТЬ NULL
	|		ИЛИ &ХарактеристикаОтбор <> НоменклатураКонтрагентовПереопределяемый.Характеристика
	|		ИЛИ &УпаковкаОтбор <> НоменклатураКонтрагентовПереопределяемый.Упаковка
	|		И НоменклатураДругогоКачества.Упаковка <> НоменклатураКонтрагентовПереопределяемый.Упаковка)
	|			ТОГДА &Подсказка2
	|		ИНАЧЕ &Подсказка3
	|	КОНЕЦ КАК СТРОКА(100)) КАК Подсказка,
	|	(ВЫБОР
	|		КОГДА (&НоменклатураОтбор = НоменклатураКонтрагентовПереопределяемый.Номенклатура
	|		ИЛИ
	|		НЕ НоменклатураДругогоКачества.Номенклатура ЕСТЬ NULL)
	|		И &ХарактеристикаОтбор = НоменклатураКонтрагентовПереопределяемый.Характеристика
	|		И (&УпаковкаОтбор = НоменклатураКонтрагентовПереопределяемый.Упаковка
	|		ИЛИ НоменклатураДругогоКачества.Упаковка = НоменклатураКонтрагентовПереопределяемый.Упаковка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ) КАК НоменклатураКонтрагентаСопоставленаПолностью,
	|	ВЫБОР
	|		КОГДА (&НоменклатураОтбор = НоменклатураКонтрагентовПереопределяемый.Номенклатура
	|		ИЛИ
	|		НЕ НоменклатураДругогоКачества.Номенклатура ЕСТЬ NULL)
	|		И &ХарактеристикаОтбор = НоменклатураКонтрагентовПереопределяемый.Характеристика
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НоменклатураКонтрагентаСопоставленаПоНоменклатуреХарактеристики
	|{ГДЕ
	|	(НоменклатураКонтрагентовПереопределяемый.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	ИЛИ НоменклатураКонтрагентовПереопределяемый.Номенклатура.ТипНоменклатуры В (&ТипыНоменклатуры))}
	|ИЗ
	|	Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентовПереопределяемый
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТоварыДругогоКачества.Номенклатура,
	|			МАКСИМУМ(УпаковкиЕдиницыИзмеренияПоиск.Ссылка) КАК Упаковка
	|		ИЗ
	|			РегистрСведений.ТоварыДругогоКачества КАК ТоварыДругогоКачества
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмеренияПоиск
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|					ПО УпаковкиЕдиницыИзмеренияПоиск.Наименование = УпаковкиЕдиницыИзмерения.Наименование
	|					И ЕСТЬNULL(&ПоискТекстЗапросаКоэффициентаУпаковки, 1) = ЕСТЬNULL(&ТекстЗапросаКоэффициентаУпаковки, 1)
	|					И УпаковкиЕдиницыИзмерения.Ссылка = &УпаковкаОтбор
	|				ПО ТоварыДругогоКачества.Номенклатура = УпаковкиЕдиницыИзмеренияПоиск.Владелец
	|		ГДЕ
	|			ТоварыДругогоКачества.НоменклатураБрак = &НоменклатураОтбор
	|		СГРУППИРОВАТЬ ПО
	|			ТоварыДругогоКачества.Номенклатура) КАК НоменклатураДругогоКачества
	|		ПО НоменклатураКонтрагентовПереопределяемый.Номенклатура = НоменклатураДругогоКачества.Номенклатура
	|ГДЕ
	|	НЕ НоменклатураКонтрагентовПереопределяемый.Недействителен";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентаУпаковки", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки("УпаковкиЕдиницыИзмерения", "УпаковкиЕдиницыИзмерения.Владелец"));
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоискТекстЗапросаКоэффициентаУпаковки", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки("УпаковкиЕдиницыИзмеренияПоиск", "УпаковкиЕдиницыИзмеренияПоиск.Владелец"));
		
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.УстановитьПараметрыДинамическогоСписка_ФормаВыбораНоменклатурыКонтрагентов
Процедура УстановитьПараметрыДинамическогоСписка_ФормаВыбораНоменклатурыКонтрагентов(Параметры, Список) Экспорт
	
	Если Параметры.Свойство("Отбор")
		И Параметры.Отбор.Свойство("ВладелецНоменклатуры") Тогда
		Параметры.Отбор.Вставить("Владелец", Параметры.Отбор.ВладелецНоменклатуры);
	КонецЕсли;
	
	Если Параметры.Свойство("Отбор") Тогда
	
		Если Параметры.Отбор.Свойство("ТипНоменклатуры") Тогда
			
			Если ТипЗнч(Параметры.Отбор.ТипНоменклатуры) = Тип("ПеречислениеСсылка.ТипыНоменклатуры") Тогда
				ОтборНоменклатуры = Новый Массив();
				ОтборНоменклатуры.Добавить(Параметры.Отбор.ТипНоменклатуры);
			ИначеЕсли ТипЗнч(Параметры.Отбор.ТипНоменклатуры) = Тип("ФиксированныйМассив") Тогда
				ОтборНоменклатуры = Параметры.Отбор.ТипНоменклатуры;
			КонецЕсли;
			
			Список.Параметры.УстановитьЗначениеПараметра("ТипыНоменклатуры", ОтборНоменклатуры);
			Параметры.Отбор.Удалить("ТипНоменклатуры");
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Параметры.Свойство("ТипНоменклатуры") Тогда
		Если ТипЗнч(Параметры.ТипНоменклатуры) = Тип("ПеречислениеСсылка.ТипыНоменклатуры") Тогда
			ОтборНоменклатуры = Новый Массив();
			ОтборНоменклатуры.Добавить(Параметры.ТипНоменклатуры);
		ИначеЕсли ТипЗнч(Параметры.ТипНоменклатуры) = Тип("ФиксированныйМассив") Тогда
			ОтборНоменклатуры = Параметры.ТипНоменклатуры;
		ИначеЕсли ТипЗнч(Параметры.ТипНоменклатуры) = Тип("СписокЗначений") Тогда
			ОтборНоменклатуры = Параметры.ТипНоменклатуры.ВыгрузитьЗначения();
		КонецЕсли;
		Если ЗначениеЗаполнено(ОтборНоменклатуры) Тогда
			Список.Параметры.УстановитьЗначениеПараметра("ТипыНоменклатуры", ОтборНоменклатуры);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область УправлениеДоступом

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ПриЗаполненииВидовОграниченийПравОбъектовМетаданных_НоменклатураКонтрагентов
Процедура ПриЗаполненииВидовОграниченийПравОбъектовМетаданных_НоменклатураКонтрагентов(Описание) Экспорт
	
	Описание = Описание + "
	|Справочник.НоменклатураКонтрагентов.Чтение.ГруппыПартнеров
	|Справочник.НоменклатураКонтрагентов.Изменение.ГруппыПартнеров
	|";
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ПриЗаполненииОграниченияДоступа_НоменклатураКонтрагентов
Процедура ПриЗаполненииОграниченияДоступа_НоменклатураКонтрагентов(Ограничение) Экспорт
	
	Ограничение.Текст =
		"РазрешитьЧтениеИзменение
		|ГДЕ
		|	ЭтоГруппа ИЛИ
		|	ЗначениеРазрешено(ВладелецНоменклатуры)";
	
	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;

КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа_НоменклатураКонтрагентов
Процедура ПриЗаполненииСписковСОграничениемДоступа_НоменклатураКонтрагентов(Списки) Экспорт
	
	Списки.Вставить(Метаданные.Справочники.НоменклатураКонтрагентов, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСДаннымиИБ

// Возвращает ссылку номенклатуры по номенклатуре партнера.
//
// Параметры:
//  НоменклатураПартнеров - СправочникСсылка.НоменклатураКонтрагентов - ссылка номенклатуры партнера.
//
// Возвращаемое значение:
//  СправочникСсылка.Номенклатура - ссылка номенклатуры.
//
Функция НайтиСсылкуНаНоменклатуруПоНоменклатуреПартнера(НоменклатураПартнеров) Экспорт
	
	Результат = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпрНоменклатура.Номенклатура КАК Ссылка
	|ИЗ
	|	Справочник.НоменклатураКонтрагентов КАК СпрНоменклатура
	|ГДЕ
	|	СпрНоменклатура.Ссылка = &НоменклатураПартнеров";
	
	Запрос.УстановитьПараметр("НоменклатураПартнеров", НоменклатураПартнеров);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат = Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Возвращает ссылку номенклатуры по идентификатору номенклатуре партнера.
//
// Параметры:
//  Идентификатор - Строка - идентификатор номенклатуры партнера.
//
// Возвращаемое значение:
//  СправочникСсылка.Номенклатура - ссылка номенклатуры.
//
Функция НайтиСсылкуНаНоменклатуруПоИдентификаторуНоменклатурыПартнера(Идентификатор) Экспорт
	
	Результат = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпрНоменклатура.Номенклатура КАК Ссылка
	|ИЗ
	|	Справочник.НоменклатураКонтрагентов КАК СпрНоменклатура
	|ГДЕ
	|	СпрНоменклатура.Идентификатор = &Идентификатор";
	
	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат = Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ПриОпределенииСтруктурыНоменклатурыИнформационнойБазы
Процедура ПриОпределенииСтруктурыНоменклатурыИнформационнойБазы(СтруктураНоменклатуры) Экспорт
	
	//++ НЕ ГОСИС
	СтруктураНоменклатуры.ИмяПараметраСвязиХарактеристики = "Номенклатура";
	СтруктураНоменклатуры.ИмяПараметраСвязиУпаковки       = "Номенклатура";
	//-- НЕ ГОСИС
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ПриОпределенииВладельцаНоменклатурыКонтрагента
Процедура ПриОпределенииВладельцаНоменклатурыКонтрагента(Знач Контрагент, Владелец) Экспорт
	
	//++ НЕ ГОСИС
	Владелец = Контрагент.Партнер;
	//-- НЕ ГОСИС
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ПриОпределенииСвойствНоменклатурыИнформационнойБазы
Процедура ПриОпределенииСвойствНоменклатурыИнформационнойБазы(Знач НаборНоменклатуры, СвойстваНоменклатурИБ) Экспорт
	
	//++ НЕ ГОСИС
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	ЕСТЬNULL(ВидыНоменклатуры.ИспользоватьХарактеристики, ЛОЖЬ) КАК ИспользоватьХарактеристики,
	|	Номенклатура.ИспользованиеХарактеристик КАК ИспользованиеХарактеристик,
	|	Номенклатура.ИспользоватьУпаковки КАК ИспользоватьУпаковки,
	|	Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияПоУмолчанию
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО Номенклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка
	|ГДЕ
	|	Номенклатура.Ссылка В(&НаборНоменклатуры)";
	
	Запрос.УстановитьПараметр("НаборНоменклатуры", НаборНоменклатуры);
	РезультатЗапроса = Запрос.Выполнить();
	
	ФОИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры");
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать Тогда
			ИспользоватьХарактеристики = Ложь;
		Иначе
			ВидНоменклатурыИспользоватьХарактеристики = Выборка.ИспользоватьХарактеристики;
			ИспользоватьХарактеристики = ФОИспользоватьХарактеристикиНоменклатуры И ВидНоменклатурыИспользоватьХарактеристики;
		КонецЕсли;
		ИспользоватьУпаковки        = Выборка.ИспользоватьУпаковки;
		ЕдиницаИзмеренияПоУмолчанию = Выборка.ЕдиницаИзмеренияПоУмолчанию;
		
		СвойстваНоменклатуры = СопоставлениеНоменклатурыКонтрагентовКлиентСервер.НовыеСвойстваНоменклатурыИБ();
		СвойстваНоменклатуры.Вставить("ИспользоватьХарактеристики"          , ИспользоватьХарактеристики);
		СвойстваНоменклатуры.Вставить("ИспользоватьУпаковки"                , ИспользоватьУпаковки);
		СвойстваНоменклатуры.Вставить("ЕдиницаИзмеренияПоУмолчанию"         , ЕдиницаИзмеренияПоУмолчанию);

		СвойстваНоменклатурИБ.Вставить(Выборка.Номенклатура, СвойстваНоменклатуры);
		
	КонецЦикла;
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Параметры:
//  НоменклатураКонтрагента - Структура - данные контрагента для заполнения формы номенклатуры.
//                                        См. СопоставлениеНоменклатурыКонтрагентовКлиентСервер.НоваяНоменклатураКонтрагента.
// 	Форма - ФормаКлиентскогоПриложения - Форма, содержит в том числе:
// 		* Объект - СправочникОбъект.Номенклатура
// 
Процедура ПриЗаполненииФормыНоменклатурыПоДаннымКонтрагента(Знач НоменклатураКонтрагента, Форма) Экспорт
	
	//++ НЕ ГОСИС
	Форма.Объект.Наименование = НоменклатураКонтрагента.Наименование;
		
	Если ЗначениеЗаполнено(НоменклатураКонтрагента.Характеристика) Тогда
		
		Форма.Объект.Наименование = Форма.Объект.Наименование
			+ " (" + НоменклатураКонтрагента.Характеристика + ")";
		
	КонецЕсли;
	
	Форма.Объект.Артикул = НоменклатураКонтрагента.Артикул;
	
	Если ЗначениеЗаполнено(НоменклатураКонтрагента.ЕдиницаИзмерения) Тогда
		Форма.Объект.ЕдиницаИзмерения = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоНаименованию(НоменклатураКонтрагента.ЕдиницаИзмерения, Истина);
	КонецЕсли;
	//-- НЕ ГОСИС
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ПриОпределенииШтрихкодовНоменклатурыКонтрагента
Процедура ПриОпределенииШтрихкодовНоменклатурыКонтрагента(Знач НоменклатураИБ, Штрихкод, ДругиеШтрихкодыНоменклатуры) Экспорт
	
		Если НоменклатураИБ.Упаковка = Справочники.УпаковкиЕдиницыИзмерения.ЕдиницаХраненияНоменклатуры(НоменклатураИБ.Номенклатура) Тогда
			Упаковка = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
		Иначе
			Упаковка = НоменклатураИБ.Упаковка;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Номенклатура", НоменклатураИБ.Номенклатура);
		Запрос.УстановитьПараметр("Характеристика", НоменклатураИБ.Характеристика);
		Запрос.УстановитьПараметр("Упаковка", Упаковка);
		Запрос.Текст = ТекстЗапросаПоискаШтрихкодовПоСтрокеТоваров();
		
		РезультатПакетов = Запрос.ВыполнитьПакет();
		
		ВыборкаШтрихкодаКомбинации = РезультатПакетов[1].Выбрать();
		Если ВыборкаШтрихкодаКомбинации.Следующий() Тогда
			Штрихкод = ВыборкаШтрихкодаКомбинации.Штрихкод;
		КонецЕсли;
		
		
		ВыборкаШтрихкодыНоменклатуры = РезультатПакетов[2].Выбрать();
		Пока ВыборкаШтрихкодыНоменклатуры.Следующий() Цикл
			ДругиеШтрихкодыНоменклатуры.Добавить(ВыборкаШтрихкодыНоменклатуры.Штрихкод);
		КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

#Область РаботаСЕдиницамиИзмерения

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.НайтиНаименованиеЕдиницыИзмеренияПоКодуОКЕИ
Процедура НайтиНаименованиеЕдиницыИзмеренияПоКодуОКЕИ(КодОКЕИЕдиницыИзмерения, НаименованиеЕдиницыИзмерения) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УпаковкиЕдиницыИзмерения.Наименование КАК Наименование,
	|	УпаковкиЕдиницыИзмерения.ТипИзмеряемойВеличины
	|ИЗ
	|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|ГДЕ
	|	УпаковкиЕдиницыИзмерения.Код = &Код
	|	И
	|	НЕ УпаковкиЕдиницыИзмерения.ПометкаУдаления
	|	И УпаковкиЕдиницыИзмерения.Владелец = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.БазовыеЕдиницыИзмерения)";
	
	Запрос.УстановитьПараметр("Код", КодОКЕИЕдиницыИзмерения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		НаименованиеЕдиницыИзмерения = "";
		Возврат;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		НаименованиеЕдиницыИзмерения = Выборка.Наименование;
		
	КонецЕсли;
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.БазоваяЕдиницаИзмеренияНоменклатуры
Процедура БазоваяЕдиницаИзмеренияНоменклатуры(Знач Номенклатура, ЕдиницаИзмерения) Экспорт

	ЕдиницаИзмерения = Справочники.УпаковкиЕдиницыИзмерения.ЕдиницаХраненияНоменклатуры(Номенклатура);
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ВладелецУпаковкиЕдиницыИзмеренияНоменклатура
Процедура ВладелецУпаковкиЕдиницыИзмеренияНоменклатура(Знач Упаковка, ВладелецУпаковкиНоменклатура) Экспорт
	
	//++ НЕ ГОСИС
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Упаковка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УпаковкиЕдиницыИзмерения.Наименование
	|ИЗ
	|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|ГДЕ
	|	УпаковкиЕдиницыИзмерения.Владелец ССЫЛКА Справочник.Номенклатура
	|	И УпаковкиЕдиницыИзмерения.Ссылка = &Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВладелецУпаковкиНоменклатура = Не РезультатЗапроса.Пустой();
	//-- НЕ ГОСИС
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ПриОпределенииСвойствУпаковкиЕдиницыИзмеренияНоменклатуры
Процедура ПриОпределенииСвойствУпаковкиЕдиницыИзмеренияНоменклатуры(Знач Упаковка, Знач Номенклатура, СвойстваУпаковки) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Упаковка", Упаковка);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Номенклатура.ЕдиницаИзмерения.Наименование КАК НаименованиеБазовойЕдиницыИзмерения,
	|	Номенклатура.ЕдиницаИзмерения.Код КАК КодОКЕИБазовойЕдиницыИзмерения,
	|	УпаковкиЕдиницыИзмерения.Наименование КАК НаименованиеУпаковки,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентаУпаковки, 1) КАК КоличествоБазовойЕдиницыИзмерения,
	|	1 КАК КоличествоУпаковок
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|		ПО УпаковкиЕдиницыИзмерения.Ссылка = &Упаковка
	|ГДЕ
	|	Номенклатура.Ссылка = &Номенклатура";

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентаУпаковки", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки("УпаковкиЕдиницыИзмерения", "УпаковкиЕдиницыИзмерения.Владелец"));

	Запрос.Текст = ТекстЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(СвойстваУпаковки, Выборка);
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеФормНаОснованииНоменклатурыКонтрагентов

// Параметры:
//  НоменклатураКонтрагента - Структура - данные контрагента для заполнения формы номенклатуры.
//                                        См. СопоставлениеНоменклатурыКонтрагентовКлиентСервер.НоваяНоменклатураКонтрагента.
// 	Форма - ФормаКлиентскогоПриложения - Форма, содержит в том числе:
// 		* Объект - СправочникОбъект.Номенклатура
// 
Процедура ПриЗаполненииФормыХарактеристикиПоДаннымКонтрагента(Знач НоменклатураКонтрагента, Форма) Экспорт
	
	//++ НЕ ГОСИС
	Форма.Объект.Наименование = НоменклатураКонтрагента.Характеристика;
	//-- НЕ ГОСИС
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ПриОпределенииПредставленийСопоставленияНоменклатуры
Процедура ПриОпределенииПредставленийСопоставленияНоменклатуры(Представления) Экспорт
	
	//++ НЕ ГОСИС
	Представления.ХарактеристикаПредставлениеОбъекта = НСтр("ru = 'Характеристика'");

	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда
		Представления.НоменклатураКонтрагентаПредставлениеСписка  = НСтр("ru = 'Номенклатура партнеров'");
		Представления.НоменклатураКонтрагентаПредставлениеОбъекта = НСтр("ru = 'Номенклатура партнера'");
		Представления.ВладелецНоменклатурыПредставлениеОбъекта    = НСтр("ru = 'Партнер'");
		Представления.ВладелецНоменклатурыВРодительномПадеже      = НСтр("ru = 'Партнера'");
		
	Иначе
		Представления.ВладелецНоменклатурыПредставлениеОбъекта = НСтр("ru = 'Контрагент'");
		Представления.ВладелецНоменклатурыВРодительномПадеже   = НСтр("ru = 'Контрагента'");
	КонецЕсли;
	//-- НЕ ГОСИС
	
КонецПроцедуры

#КонецОбласти

#Область ПоискСопоставленияНоменклатуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ОпределитьНаименованиеТипаОбъектаСопоставленияНоменклатурыБЭД
Процедура ОпределитьНаименованиеТипаОбъектаСопоставленияНоменклатурыБЭД(Знач СсылкаНаОбъект, НаименованиеТипаОбъекта) Экспорт

	//++ НЕ ГОСИС
	ТипСсылкиНаОбъект = ТипЗнч(СсылкаНаОбъект);
	Если ТипСсылкиНаОбъект = Тип("СправочникСсылка.Номенклатура") Тогда
		НаименованиеТипаОбъекта = "Номенклатура";
	ИначеЕсли ТипСсылкиНаОбъект = Тип("СправочникСсылка.ХарактеристикиНоменклатуры") Тогда
		НаименованиеТипаОбъекта = "Характеристика";
	КонецЕсли;
	//-- НЕ ГОСИС
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ЗначениеНаименованияДанныхСопоставленияНоменклатурыБЭД
Процедура ЗначениеНаименованияДанныхСопоставленияНоменклатурыБЭД(Знач СсылкаНаОбъект, ЗначениеНаименования) Экспорт

	//++ НЕ ГОСИС
	НаименованиеРеквизита = НаименованиеРеквизитаСопоставленияНоменклатурыБЭД(ТипЗнч(СсылкаНаОбъект));
	
	Если НаименованиеРеквизита = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ЗначениеНаименования = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СсылкаНаОбъект, НаименованиеРеквизита);
	//-- НЕ ГОСИС

КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ЗначенияНаименованийДанныхСопоставленияНоменклатурыБЭД
Процедура ЗначенияНаименованийДанныхСопоставленияНоменклатурыБЭД(Знач НаборСсылокНаОбъекты, СоответствиеЗначенийНаименований) Экспорт

	//++ НЕ ГОСИС
	НаименованиеРеквизита = НаименованиеРеквизитаСопоставленияНоменклатурыБЭД(ТипЗнч(НаборСсылокНаОбъекты[0]));
	
	Если НаименованиеРеквизита = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СоответствиеЗначенийНаименований = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(НаборСсылокНаОбъекты, НаименованиеРеквизита);
	//-- НЕ ГОСИС

КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ИнициализацияТекстаЗапросаПоискаСопоставленияПоНатуральнымКлючам
Процедура ИнициализацияТекстаЗапросаПоискаСопоставленияПоНатуральнымКлючам(ТекстЗапроса) Экспорт

	//++ НЕ ГОСИС
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТаблицаНатуральныхКлючей.ИдентификаторНоменклатуры КАК ИдентификаторНоменклатуры,
	|	ТаблицаНатуральныхКлючей.Штрихкод КАК Штрихкод,
	|	ТаблицаНатуральныхКлючей.ЭтоВнутреннийШтрихкод КАК ЭтоВнутреннийШтрихкод,
	|	Штрихкоды.Номенклатура КАК Номенклатура,
	|	ИСТИНА КАК ШтрихкодСопоставлен,
	|	ТаблицаНатуральныхКлючей.ЭтоНашаНоменклатура КАК ЭтоНашаНоменклатура
	|ПОМЕСТИТЬ ТаблицаСопоставленныхПоШтрихкодам
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаНатуральныхКлючей КАК ТаблицаНатуральныхКлючей
	|		ПО Штрихкоды.Штрихкод = ТаблицаНатуральныхКлючей.Штрихкод
	|ГДЕ
	|	ТаблицаНатуральныхКлючей.Штрихкод <> """"
	|	И НЕ Штрихкоды.Номенклатура.ПометкаУдаления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторНоменклатуры,
	|	Номенклатура
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	СправочникНоменклатура.Артикул КАК Артикул,
	|	ТаблицаНатуральныхКлючей.ИдентификаторНоменклатуры КАК ИдентификаторНоменклатуры,
	|	СправочникНоменклатура.Ссылка КАК Номенклатура,
	|	ИСТИНА КАК АртикулСопоставлен,
	|	ТаблицаНатуральныхКлючей.ЭтоНашаНоменклатура КАК ЭтоНашаНоменклатура
	|ПОМЕСТИТЬ ТаблицаСопоставленныхПоАртикулам
	|ИЗ
	|	ТаблицаНатуральныхКлючей КАК ТаблицаНатуральныхКлючей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаНатуральныхКлючей.Артикул = СправочникНоменклатура.Артикул
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСопоставленныхПоШтрихкодам КАК ТаблицаСопоставленныхПоШтрихкодам
	|		ПО ТаблицаНатуральныхКлючей.ИдентификаторНоменклатуры = ТаблицаСопоставленныхПоШтрихкодам.ИдентификаторНоменклатуры
	|		И (НЕ ТаблицаСопоставленныхПоШтрихкодам.ЭтоВнутреннийШтрихкод)
	|ГДЕ
	|	ТаблицаНатуральныхКлючей.Артикул <> """"
	|	И ТаблицаСопоставленныхПоШтрихкодам.ЭтоВнутреннийШтрихкод ЕСТЬ NULL
	|	И НЕ СправочникНоменклатура.ПометкаУдаления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторНоменклатуры,
	|	Номенклатура
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТаблицаНатуральныхКлючей.ИдентификаторНоменклатуры КАК ИдентификаторНоменклатуры,
	|	СправочникНоменклатура.Ссылка КАК Номенклатура,
	|	ИСТИНА КАК НаименованиеСопоставлено,
	|	ТаблицаНатуральныхКлючей.ЭтоНашаНоменклатура КАК ЭтоНашаНоменклатура
	|ПОМЕСТИТЬ ТаблицаСопоставленныхПоНаименованию
	|ИЗ
	|	ТаблицаНатуральныхКлючей КАК ТаблицаНатуральныхКлючей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаНатуральныхКлючей.Наименование = СправочникНоменклатура.Наименование
	|ГДЕ
	|	НЕ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			ТаблицаСопоставленныхПоШтрихкодам КАК ТаблицаСопоставленныхПоШтрихкодам
	|		ГДЕ
	|			ТаблицаСопоставленныхПоШтрихкодам.ИдентификаторНоменклатуры = ТаблицаНатуральныхКлючей.ИдентификаторНоменклатуры
	|			И
	|			НЕ ТаблицаСопоставленныхПоШтрихкодам.ЭтоВнутреннийШтрихкод)
	|	И ТаблицаНатуральныхКлючей.ЭтоНашаНоменклатура
	|	И НЕ СправочникНоменклатура.ЭтоГруппа
	|	И НЕ СправочникНоменклатура.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаНатуральныхКлючей.ИдентификаторНоменклатуры,
	|	СправочникНоменклатура.Ссылка,
	|	ИСТИНА,
	|	ТаблицаНатуральныхКлючей.ЭтоНашаНоменклатура
	|ИЗ
	|	ТаблицаНатуральныхКлючей КАК ТаблицаНатуральныхКлючей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаНатуральныхКлючей.Наименование = СправочникНоменклатура.НаименованиеПолное
	|ГДЕ
	|	НЕ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			ТаблицаСопоставленныхПоШтрихкодам КАК ТаблицаСопоставленныхПоШтрихкодам
	|		ГДЕ
	|			ТаблицаСопоставленныхПоШтрихкодам.ИдентификаторНоменклатуры = ТаблицаНатуральныхКлючей.ИдентификаторНоменклатуры
	|			И
	|			НЕ ТаблицаСопоставленныхПоШтрихкодам.ЭтоВнутреннийШтрихкод)
	|	И ТаблицаНатуральныхКлючей.ЭтоНашаНоменклатура
	|	И НЕ СправочникНоменклатура.ЭтоГруппа
	|	И НЕ СправочникНоменклатура.ПометкаУдаления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторНоменклатуры,
	|	Номенклатура";

	//-- НЕ ГОСИС
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ТекстЗапросаПоискаВариантовСопоставленияПоШтрихкодамКомбинаций
Процедура ТекстЗапросаПоискаВариантовСопоставленияПоШтрихкодамКомбинаций(ТекстЗапроса) Экспорт

	//++ НЕ ГОСИС
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Штрихкоды.Штрихкод КАК ШтрихкодКомбинации,
	|	Штрихкоды.Номенклатура КАК Номенклатура,
	|	Штрихкоды.Характеристика КАК Характеристика,
	|	Штрихкоды.Упаковка КАК Упаковка
	|ПОМЕСТИТЬ НайденныеКомбинации
	|ИЗ
	|	ТаблицаШтрихкодовКомбинации КАК ТаблицаШтрихкодовКомбинации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды
	|		ПО ТаблицаШтрихкодовКомбинации.ШтрихкодКомбинации = Штрихкоды.Штрихкод
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ШтрихкодКомбинации,
	|	Номенклатура,
	|	Характеристика,
	|	Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НайденныеКомбинации.ШтрихкодКомбинации КАК ШтрихкодКомбинации
	|ПОМЕСТИТЬ СписокУникальныхШтрихкодовКомбинаций
	|ИЗ
	|	НайденныеКомбинации КАК НайденныеКомбинации
	|
	|СГРУППИРОВАТЬ ПО
	|	НайденныеКомбинации.ШтрихкодКомбинации
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(НайденныеКомбинации.Номенклатура) = 1 И
	|	КОЛИЧЕСТВО(НайденныеКомбинации.Характеристика) = 1 И
	|	КОЛИЧЕСТВО(НайденныеКомбинации.Упаковка) = 1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ШтрихкодКомбинации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НайденныеКомбинации.ШтрихкодКомбинации КАК ШтрихкодКомбинации,
	|	НайденныеКомбинации.Номенклатура КАК НоменклатураИБ,
	|	НайденныеКомбинации.Характеристика КАК ХарактеристикаИБ,
	|	НайденныеКомбинации.Упаковка КАК УпаковкаИБ
	|ИЗ
	|	НайденныеКомбинации КАК НайденныеКомбинации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокУникальныхШтрихкодовКомбинаций КАК СписокУникальныхШтрихкодовКомбинаций
	|		ПО НайденныеКомбинации.ШтрихкодКомбинации = СписокУникальныхШтрихкодовКомбинаций.ШтрихкодКомбинации";

	//-- НЕ ГОСИС
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ТекстЗапросаОтбораХарактеристикНоменклатурыБЭДПоВладельцу
Процедура ТекстЗапросаОтбораХарактеристикНоменклатурыБЭДПоВладельцу(ТекстЗапроса) Экспорт

	//++ НЕ ГОСИС
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВариантыСопоставленияПоСловарю.Идентификатор КАК Идентификатор,
	|	ВариантыСопоставленияПоСловарю.СсылкаНаОбъект КАК СсылкаНаОбъект,
	|	ТаблицаНоменклатуры.НоменклатураИБ КАК НоменклатураИБ
	|ПОМЕСТИТЬ ХарактеристикиПоВладельцу
	|ИЗ
	|	ВариантыСопоставленияПоСловарю КАК ВариантыСопоставленияПоСловарю
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|		ПО ВариантыСопоставленияПоСловарю.Идентификатор = ТаблицаНоменклатуры.ИдентификаторХарактеристики
	|			И (ВариантыСопоставленияПоСловарю.СсылкаНаОбъект.Владелец ССЫЛКА Справочник.Номенклатура)
	|			И ВариантыСопоставленияПоСловарю.СсылкаНаОбъект.Владелец = ТаблицаНоменклатуры.НоменклатураИБ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВариантыСопоставленияПоСловарю.Идентификатор,
	|	ВариантыСопоставленияПоСловарю.СсылкаНаОбъект,
	|	ТаблицаНоменклатуры.НоменклатураИБ
	|ИЗ
	|	ВариантыСопоставленияПоСловарю КАК ВариантыСопоставленияПоСловарю
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|		ПО ВариантыСопоставленияПоСловарю.Идентификатор = ТаблицаНоменклатуры.ИдентификаторХарактеристики
	|			И (ВариантыСопоставленияПоСловарю.СсылкаНаОбъект.Владелец ССЫЛКА Справочник.ВидыНоменклатуры)
	|			И ВариантыСопоставленияПоСловарю.СсылкаНаОбъект.Владелец = ТаблицаНоменклатуры.НоменклатураИБ.ВидНоменклатуры
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Идентификатор,
	|	СсылкаНаОбъект";
	
	//-- НЕ ГОСИС
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ТекстЗапросаПоискаВариантовСопоставленияХарактеристикиСНашейНоменклатурой
Процедура ТекстЗапросаПоискаВариантовСопоставленияХарактеристикиСНашейНоменклатурой(ТекстЗапроса) Экспорт

	//++ НЕ ГОСИС
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаНоменклатуры.ИдентификаторХарактеристики КАК ИдентификаторХарактеристики,
	|	ТаблицаНоменклатуры.Характеристика КАК Характеристика,
	|	ТаблицаНоменклатуры.НоменклатураИБ КАК НоменклатураИБ,
	|	ХарактеристикиНоменклатуры.Ссылка КАК ХарактеристикаИБ
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО ТаблицаНоменклатуры.Характеристика = ХарактеристикиНоменклатуры.Наименование
	|		И ТаблицаНоменклатуры.НоменклатураИБ = ХарактеристикиНоменклатуры.Владелец
	|		И (ХарактеристикиНоменклатуры.Владелец ССЫЛКА Справочник.Номенклатура)
	|ГДЕ
	|	НЕ ХарактеристикиНоменклатуры.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТаблицаНоменклатуры.ИдентификаторХарактеристики,
	|	ТаблицаНоменклатуры.Характеристика,
	|	ТаблицаНоменклатуры.НоменклатураИБ,
	|	ХарактеристикиНоменклатуры.Ссылка
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО ТаблицаНоменклатуры.Характеристика = ХарактеристикиНоменклатуры.НаименованиеПолное
	|		И ТаблицаНоменклатуры.НоменклатураИБ = ХарактеристикиНоменклатуры.Владелец
	|		И (ХарактеристикиНоменклатуры.Владелец ССЫЛКА Справочник.Номенклатура)
	|ГДЕ
	|	НЕ ХарактеристикиНоменклатуры.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТаблицаНоменклатуры.ИдентификаторХарактеристики,
	|	ТаблицаНоменклатуры.Характеристика,
	|	ТаблицаНоменклатуры.НоменклатураИБ,
	|	ХарактеристикиНоменклатуры.Ссылка
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО ТаблицаНоменклатуры.Характеристика = ХарактеристикиНоменклатуры.НаименованиеПолное
	|		И ТаблицаНоменклатуры.НоменклатураИБ.ВидНоменклатуры = ХарактеристикиНоменклатуры.Владелец
	|		И (ХарактеристикиНоменклатуры.Владелец ССЫЛКА Справочник.ВидыНоменклатуры)
	|ГДЕ
	|	НЕ ХарактеристикиНоменклатуры.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТаблицаНоменклатуры.ИдентификаторХарактеристики,
	|	ТаблицаНоменклатуры.Характеристика,
	|	ТаблицаНоменклатуры.НоменклатураИБ,
	|	ХарактеристикиНоменклатуры.Ссылка
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО ТаблицаНоменклатуры.Характеристика = ХарактеристикиНоменклатуры.Наименование
	|		И ТаблицаНоменклатуры.НоменклатураИБ.ВидНоменклатуры = ХарактеристикиНоменклатуры.Владелец
	|		И (ХарактеристикиНоменклатуры.Владелец ССЫЛКА Справочник.ВидыНоменклатуры)
	|ГДЕ
	|	НЕ ХарактеристикиНоменклатуры.ПометкаУдаления";

	//-- НЕ ГОСИС
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ТекстЗапросаПоискаВариантовСопоставленияУпаковкиНоменклатурыБЭД
Процедура ТекстЗапросаПоискаВариантовСопоставленияУпаковкиНоменклатурыБЭД(ТекстЗапроса) Экспорт
	
	//++ НЕ ГОСИС
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	УпаковкиНоменклатуры.Ссылка,
	|	ТаблицаНоменклатуры.ИдентификаторУпаковки,
	|	ТаблицаНоменклатуры.НоменклатураИБ
	|ПОМЕСТИТЬ УпаковкаПоНаименованию
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	|		ПО ВЫБОР
	|			КОГДА
	|				ТаблицаНоменклатуры.НоменклатураИБ.НаборУпаковок = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ИндивидуальныйДляНоменклатуры)
	|				ТОГДА УпаковкиНоменклатуры.Владелец = ТаблицаНоменклатуры.НоменклатураИБ.Ссылка
	|			КОГДА ТаблицаНоменклатуры.НоменклатураИБ.НаборУпаковок <> ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ПустаяСсылка)
	|				ТОГДА УпаковкиНоменклатуры.Владелец = ТаблицаНоменклатуры.НоменклатураИБ.НаборУпаковок
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|		И ТаблицаНоменклатуры.НаименованиеУпаковки = УпаковкиНоменклатуры.Наименование
	|		И ВЫБОР
	|			КОГДА ТаблицаНоменклатуры.КоличествоБазовойЕдиницыИзмерения <> 0
	|			И ТаблицаНоменклатуры.КоличествоУпаковок <> 0
	|				ТОГДА ТаблицаНоменклатуры.КоличествоБазовойЕдиницыИзмерения = УпаковкиНоменклатуры.Числитель
	|				И ТаблицаНоменклатуры.КоличествоУпаковок = УпаковкиНоменклатуры.Знаменатель
	|		КОНЕЦ
	|ГДЕ
	|	ТаблицаНоменклатуры.НаименованиеУпаковки <> """"
	|	И ТаблицаНоменклатуры.ИспользоватьУпаковки
	|	И ТаблицаНоменклатуры.УпаковкаЗадана
	|	И
	|	НЕ УпаковкиНоменклатуры.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УпаковкиНоменклатуры.Ссылка,
	|	ТаблицаНоменклатуры.ИдентификаторУпаковки,
	|	ТаблицаНоменклатуры.НоменклатураИБ
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	|		ПО ВЫБОР
	|			КОГДА
	|				ТаблицаНоменклатуры.НоменклатураИБ.НаборУпаковок = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ИндивидуальныйДляНоменклатуры)
	|				ТОГДА УпаковкиНоменклатуры.Владелец = ТаблицаНоменклатуры.НоменклатураИБ.Ссылка
	|			КОГДА ТаблицаНоменклатуры.НоменклатураИБ.НаборУпаковок <> ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ПустаяСсылка)
	|				ТОГДА УпаковкиНоменклатуры.Владелец = ТаблицаНоменклатуры.НоменклатураИБ.НаборУпаковок
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|		И ТаблицаНоменклатуры.НаименованиеУпаковки = УпаковкиНоменклатуры.НаименованиеПолное
	|		И ВЫБОР
	|			КОГДА ТаблицаНоменклатуры.КоличествоБазовойЕдиницыИзмерения <> 0
	|			И ТаблицаНоменклатуры.КоличествоУпаковок <> 0
	|				ТОГДА ТаблицаНоменклатуры.КоличествоБазовойЕдиницыИзмерения = УпаковкиНоменклатуры.Числитель
	|				И ТаблицаНоменклатуры.КоличествоУпаковок = УпаковкиНоменклатуры.Знаменатель
	|		КОНЕЦ
	|ГДЕ
	|	ТаблицаНоменклатуры.НаименованиеУпаковки <> """"
	|	И ТаблицаНоменклатуры.ИспользоватьУпаковки
	|	И ТаблицаНоменклатуры.УпаковкаЗадана
	|	И
	|	НЕ УпаковкиНоменклатуры.ПометкаУдаления
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УпаковкиНоменклатуры.Ссылка,
	|	ТаблицаНоменклатуры.ИдентификаторУпаковки,
	|	ТаблицаНоменклатуры.НоменклатураИБ
	|ПОМЕСТИТЬ УпаковкаПоЕдиницеИзмерения
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	|		ПО ВЫБОР
	|			КОГДА
	|				ТаблицаНоменклатуры.НоменклатураИБ.НаборУпаковок = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ИндивидуальныйДляНоменклатуры)
	|				ТОГДА УпаковкиНоменклатуры.Владелец = ТаблицаНоменклатуры.НоменклатураИБ.Ссылка
	|			КОГДА ТаблицаНоменклатуры.НоменклатураИБ.НаборУпаковок <> ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ПустаяСсылка)
	|				ТОГДА УпаковкиНоменклатуры.Владелец = ТаблицаНоменклатуры.НоменклатураИБ.НаборУпаковок
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|		И ВЫБОР
	|			КОГДА ТаблицаНоменклатуры.ЕдиницаИзмерения <> """"
	|				ТОГДА ТаблицаНоменклатуры.ЕдиницаИзмерения = УпаковкиНоменклатуры.ЕдиницаИзмерения.Наименование
	|		КОНЕЦ
	|		И ВЫБОР
	|			КОГДА ТаблицаНоменклатуры.ЕдиницаИзмеренияКод <> """"
	|				ТОГДА ТаблицаНоменклатуры.ЕдиницаИзмеренияКод = УпаковкиНоменклатуры.ЕдиницаИзмерения.Код
	|		КОНЕЦ
	|		И ВЫБОР
	|			КОГДА ТаблицаНоменклатуры.КоличествоБазовойЕдиницыИзмерения <> 0
	|			И ТаблицаНоменклатуры.КоличествоУпаковок <> 0
	|				ТОГДА ТаблицаНоменклатуры.КоличествоБазовойЕдиницыИзмерения = УпаковкиНоменклатуры.Числитель
	|				И ТаблицаНоменклатуры.КоличествоУпаковок = УпаковкиНоменклатуры.Знаменатель
	|		КОНЕЦ
	|ГДЕ
	|	ТаблицаНоменклатуры.ИспользоватьУпаковки
	|	И ТаблицаНоменклатуры.УпаковкаЗадана
	|	И
	|	НЕ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			УпаковкаПоНаименованию КАК УпаковкаПоНаименованию
	|		ГДЕ
	|			УпаковкаПоНаименованию.ИдентификаторУпаковки = ТаблицаНоменклатуры.ИдентификаторУпаковки)
	|	И
	|	НЕ УпаковкиНоменклатуры.ПометкаУдаления
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УпаковкиНоменклатуры.Ссылка,
	|	ТаблицаНоменклатуры.ИдентификаторУпаковки,
	|	ТаблицаНоменклатуры.НоменклатураИБ
	|ПОМЕСТИТЬ УпаковкаПоОКЕИЕдиницыИзмерения
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	|		ПО ВЫБОР
	|			КОГДА
	|				ТаблицаНоменклатуры.НоменклатураИБ.НаборУпаковок = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ИндивидуальныйДляНоменклатуры)
	|				ТОГДА УпаковкиНоменклатуры.Владелец = ТаблицаНоменклатуры.НоменклатураИБ.Ссылка
	|			КОГДА ТаблицаНоменклатуры.НоменклатураИБ.НаборУпаковок <> ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ПустаяСсылка)
	|				ТОГДА УпаковкиНоменклатуры.Владелец = ТаблицаНоменклатуры.НоменклатураИБ.НаборУпаковок
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|		И ТаблицаНоменклатуры.ЕдиницаИзмерения = УпаковкиНоменклатуры.ЕдиницаИзмерения.Наименование
	|		И ВЫБОР
	|			КОГДА ТаблицаНоменклатуры.КоличествоБазовойЕдиницыИзмерения <> 0
	|			И ТаблицаНоменклатуры.КоличествоУпаковок <> 0
	|				ТОГДА ТаблицаНоменклатуры.КоличествоБазовойЕдиницыИзмерения = УпаковкиНоменклатуры.Числитель
	|				И ТаблицаНоменклатуры.КоличествоУпаковок = УпаковкиНоменклатуры.Знаменатель
	|		КОНЕЦ
	|ГДЕ
	|	ТаблицаНоменклатуры.ИспользоватьУпаковки
	|	И ТаблицаНоменклатуры.УпаковкаЗадана
	|	И ТаблицаНоменклатуры.ЕдиницаИзмерения <> """"
	|	И
	|	НЕ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			УпаковкаПоНаименованию КАК УпаковкаПоНаименованию
	|		ГДЕ
	|			УпаковкаПоНаименованию.ИдентификаторУпаковки = ТаблицаНоменклатуры.ИдентификаторУпаковки)
	|	И
	|	НЕ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			УпаковкаПоЕдиницеИзмерения КАК УпаковкаПоЕдиницеИзмерения
	|		ГДЕ
	|			УпаковкаПоЕдиницеИзмерения.ИдентификаторУпаковки = ТаблицаНоменклатуры.ИдентификаторУпаковки)
	|	И
	|	НЕ УпаковкиНоменклатуры.ПометкаУдаления
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНоменклатуры.ИдентификаторУпаковки,
	|	ТаблицаНоменклатуры.НоменклатураИБ,
	|	УпаковкиЕдиницыИзмерения.Ссылка КАК УпаковкаИБ
	|ПОМЕСТИТЬ УпаковкаБазовойЕдиницыИзмерения
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|		ПО ВЫБОР
	|			КОГДА ТаблицаНоменклатуры.НоменклатураИБ.ВесИспользовать
	|			И ТаблицаНоменклатуры.НоменклатураИБ.ВесМожноУказыватьВДокументах
	|				ТОГДА УпаковкиЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес)
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|		И ТаблицаНоменклатуры.НаименованиеУпаковки = УпаковкиЕдиницыИзмерения.Наименование
	|ГДЕ
	|	ТаблицаНоменклатуры.НаименованиеУпаковки <> """"
	|	И ТаблицаНоменклатуры.УпаковкаЗадана
	|	И
	|	НЕ УпаковкиЕдиницыИзмерения.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаНоменклатуры.ИдентификаторУпаковки,
	|	ТаблицаНоменклатуры.НоменклатураИБ,
	|	УпаковкиЕдиницыИзмерения.Ссылка КАК УпаковкаИБ
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|		ПО ВЫБОР
	|			КОГДА ТаблицаНоменклатуры.НоменклатураИБ.ДлинаИспользовать
	|			И ТаблицаНоменклатуры.НоменклатураИБ.ДлинаМожноУказыватьВДокументах
	|				ТОГДА УпаковкиЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина)
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|		И ТаблицаНоменклатуры.НаименованиеУпаковки = УпаковкиЕдиницыИзмерения.Наименование
	|ГДЕ
	|	ТаблицаНоменклатуры.НаименованиеУпаковки <> """"
	|	И ТаблицаНоменклатуры.УпаковкаЗадана
	|	И
	|	НЕ УпаковкиЕдиницыИзмерения.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаНоменклатуры.ИдентификаторУпаковки,
	|	ТаблицаНоменклатуры.НоменклатураИБ,
	|	УпаковкиЕдиницыИзмерения.Ссылка КАК УпаковкаИБ
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|		ПО ВЫБОР
	|			КОГДА ТаблицаНоменклатуры.НоменклатураИБ.ОбъемИспользовать
	|			И ТаблицаНоменклатуры.НоменклатураИБ.ОбъемМожноУказыватьВДокументах
	|				ТОГДА УпаковкиЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем)
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|		И ТаблицаНоменклатуры.НаименованиеУпаковки = УпаковкиЕдиницыИзмерения.Наименование
	|ГДЕ
	|	ТаблицаНоменклатуры.НаименованиеУпаковки <> """"
	|	И ТаблицаНоменклатуры.УпаковкаЗадана
	|	И
	|	НЕ УпаковкиЕдиницыИзмерения.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаНоменклатуры.ИдентификаторУпаковки,
	|	ТаблицаНоменклатуры.НоменклатураИБ,
	|	УпаковкиЕдиницыИзмерения.Ссылка КАК УпаковкаИБ
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|		ПО ВЫБОР
	|			КОГДА ТаблицаНоменклатуры.НоменклатураИБ.ПлощадьИспользовать
	|			И ТаблицаНоменклатуры.НоменклатураИБ.ПлощадьМожноУказыватьВДокументах
	|				ТОГДА УпаковкиЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь)
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|		И ТаблицаНоменклатуры.НаименованиеУпаковки = УпаковкиЕдиницыИзмерения.Наименование
	|ГДЕ
	|	ТаблицаНоменклатуры.НаименованиеУпаковки <> """"
	|	И ТаблицаНоменклатуры.УпаковкаЗадана
	|	И
	|	НЕ УпаковкиЕдиницыИзмерения.ПометкаУдаления
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УпаковкаБазовойЕдиницыИзмерения.ИдентификаторУпаковки,
	|	УпаковкаБазовойЕдиницыИзмерения.НоменклатураИБ,
	|	УпаковкаБазовойЕдиницыИзмерения.УпаковкаИБ
	|ИЗ
	|	УпаковкаБазовойЕдиницыИзмерения КАК УпаковкаБазовойЕдиницыИзмерения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УпаковкаПоЕдиницеИзмерения.ИдентификаторУпаковки,
	|	УпаковкаПоЕдиницеИзмерения.НоменклатураИБ,
	|	УпаковкаПоЕдиницеИзмерения.Ссылка
	|ИЗ
	|	УпаковкаПоЕдиницеИзмерения КАК УпаковкаПоЕдиницеИзмерения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УпаковкаПоНаименованию.ИдентификаторУпаковки,
	|	УпаковкаПоНаименованию.НоменклатураИБ,
	|	УпаковкаПоНаименованию.Ссылка
	|ИЗ
	|	УпаковкаПоНаименованию КАК УпаковкаПоНаименованию
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УпаковкаПоОКЕИЕдиницыИзмерения.ИдентификаторУпаковки,
	|	УпаковкаПоОКЕИЕдиницыИзмерения.НоменклатураИБ,
	|	УпаковкаПоОКЕИЕдиницыИзмерения.Ссылка
	|ИЗ
	|	УпаковкаПоОКЕИЕдиницыИзмерения КАК УпаковкаПоОКЕИЕдиницыИзмерения";
	
	//-- НЕ ГОСИС
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ТекстЗапросаОтбораСтрокСопоставленияДляЗаполненияХарактеристик
Процедура ТекстЗапросаОтбораСтрокСопоставленияДляЗаполненияХарактеристик(ТекстЗапроса) Экспорт

	//++ НЕ ГОСИС
	ТекстЗапроса =  "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаСопоставления.Идентификатор КАК Идентификатор
	|ИЗ
	|	ТаблицаСопоставления КАК ТаблицаСопоставления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО ТаблицаСопоставления.НоменклатураИБ = ХарактеристикиНоменклатуры.Владелец
	|			И (ХарактеристикиНоменклатуры.Владелец ССЫЛКА Справочник.Номенклатура)
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Ссылка = &Характеристика
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСопоставления.Идентификатор
	|ИЗ
	|	ТаблицаСопоставления КАК ТаблицаСопоставления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО ТаблицаСопоставления.НоменклатураИБ.ВидНоменклатуры = ХарактеристикиНоменклатуры.Владелец
	|			И (ХарактеристикиНоменклатуры.Владелец ССЫЛКА Справочник.ВидыНоменклатуры)
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Ссылка = &Характеристика";
	//-- НЕ ГОСИС
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСЭлектроннымДокументом

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ЗаполнитьВладельцаНоменклатурыКонтрагентаИзДереваРазбора
Процедура ЗаполнитьВладельцаНоменклатурыКонтрагентаИзДереваРазбора(Знач ДеревоРазбора, Владелец) Экспорт
	
	// Заполнение найденного партнера (владельца, тип Справочник.Партнеры)
	СтрокиПартнеры = ДеревоРазбора.Строки.Найти("Партнеры", "ТипОбъекта", Истина);
	Если СтрокиПартнеры <> Неопределено И СтрокиПартнеры.Строки.Количество() = 1 Тогда
		Владелец = СтрокиПартнеры.Строки[0].СсылкаНаОбъект;
	Иначе
		СтрокиКонтрагент = ДеревоРазбора.Строки.Найти("Контрагенты", "ТипОбъекта", Истина);
		Если СтрокиКонтрагент <> Неопределено И СтрокиКонтрагент.Строки.Количество() = 1 Тогда
			Владелец = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокиКонтрагент.Строки[0].СсылкаНаОбъект, "Партнер");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ПриОтраженииВУчетеЭлектронногоДокументаСНоменклатурой
Процедура ПриОтраженииВУчетеЭлектронногоДокументаСНоменклатурой(Знач Документ, Настройки) Экспорт
	
	//++ НЕ ГОСИС	
	
	СпособОбработкиВходящегоЭД = ?(ТипЗнч(Документ.СпособОбработки) = Тип("Структура"),
		Документ.СпособОбработки.ПервичныйДокумент,
		Документ.СпособОбработки);		
	
	Если СпособОбработкиВходящегоЭД = "ПриобретениеУслугПрочихАктивов" 
		ИЛИ СпособОбработкиВходящегоЭД = "СчетФактураПолученный"
		ИЛИ СпособОбработкиВходящегоЭД = "ЗаявкаНаРасходованиеДенежныхСредств" Тогда
		Настройки.ОтражатьТолькоСопоставленные = Ложь;
	КонецЕсли;
	
	// ЭлектронноеВзаимодействие.ЭлектронноеАктированиеЕИС
	Если СпособОбработкиВходящегоЭД = "ГосударственныеКонтрактыЕИС" Тогда
		Настройки.ОтражатьТолькоСопоставленные = Ложь;
	КонецЕсли;
	// Конец ЭлектронноеВзаимодействие.ЭлектронноеАктированиеЕИС

	//-- НЕ ГОСИС
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСШтрихкодамиИБ

// Инициализирует текст запроса поиска штрихкодов комбинации и штрихкодов номенклатуры по табличной части "Товары" документа,
// в котором есть колонки: Номенклатура, Характеристика, Упаковка.
// В запросе используется временная таблица "ВТ_Товары", в которой должны быть колонки: Номенклатура, Характеристика, Упаковка.
// При отсутствии своей временной таблицы необходимо заполнять параметр "ИмяДокумента", и в запросе установить параметр "Ссылка".
// 
// Параметры:
//  ТекстЗапроса    - Строка - текст запроса поиска штрихкодов по данным табличной части документа.
//  ИмяДокумента    - Строка - имя объекта метаданных документа, в котором есть табличная часть "Товары" с колонками:
//                             Номенклатура, Характеристика, Упаковка.
//  МножествоСсылок - Булево - признак поиска штрихкодов по нескольким ссылкам документов.
//
Процедура ИнициализацияТекстаЗапросаПоискаШтрихкодовПоВременнойТаблицеТоваров(
		ТекстЗапроса, Знач ИмяДокумента = Неопределено, Знач МножествоСсылок = Ложь) Экспорт
		
	ПакетыЗапросов = Новый Массив;
	ПакетыЗапросов.Добавить(ТекстЗапроса);
		
	Если ИмяДокумента <> Неопределено Тогда
		ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	&Упаковка КАК Упаковка
		|ПОМЕСТИТЬ ВТ_Товары
		|ИЗ
		|	&ТЧ КАК Товары
		|ГДЕ
		|	&УсловиеСсылки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	Упаковка";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеСсылки", ?(МножествоСсылок, "Товары.Ссылка В (&Ссылка)", "Товары.Ссылка = &Ссылка"));
		
		Если ИмяДокумента = "АктВыполненныхРабот" Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТЧ", "Документ." + ИмяДокумента + ".Услуги");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Упаковка", "Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)");
		ИначеЕсли ИмяДокумента = "СчетФактураВыданныйАванс" Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТЧ", "Документ." + ИмяДокумента + ".Авансы");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Упаковка", "Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)");
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТЧ", "Документ." + ИмяДокумента + ".Товары");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Упаковка", "Товары.Упаковка");		
		КонецЕсли;
		
		ПакетыЗапросов.Добавить(ТекстЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапросаПоискаШтрихкодовПоТаблицеТоваров();
	
	ПакетыЗапросов.Добавить(ТекстЗапроса);

	ТекстЗапроса = СтрСоединить(ПакетыЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
КонецПроцедуры

//++ Локализация

// Возвращает выборку данных для сопоставления номенклатуры.
//
// Параметры:
//  СсылкаНаОбъект - ДокументСсылка - ссылка на документ.
//
// Возвращаемое значение:
//  РезультатЗапроса - результат выполнения запроса с выборкой данных для сопоставления.
//
Функция ВыборкаДляСопоставленияНоменклатуры(СсылкаНаОбъект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Товары.Ссылка.Партнер КАК Владелец,
	|	&Идентификатор КАК Идентификатор,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	&Упаковка КАК Упаковка
	|ИЗ
	|	&ТЧ КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
	
	ДокументМетаданные = СсылкаНаОбъект.Метаданные();	
	НаименованиеДокумента = ДокументМетаданные.Имя;
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.АктВыполненныхРабот") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТЧ", "Документ." + НаименованиеДокумента + ".Услуги");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Упаковка", "Товары.Номенклатура.ЕдиницаИзмерения");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Идентификатор", """""");		
		
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.СчетФактураВыданныйАванс") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТЧ", "Документ." + НаименованиеДокумента + ".Авансы");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Товары.Ссылка.Партнер", "Товары.Ссылка.Контрагент.Партнер");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Упаковка", "Товары.Номенклатура.ЕдиницаИзмерения");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Идентификатор", """""");	
		
	Иначе
		НетТЧТовары = Ложь;
		
		Если НетТЧТовары Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТЧ", "Документ." + НаименованиеДокумента + ".Продукция");
			ЕстьКолонкаНоменклатураПартнера	= Ложь;
		Иначе			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТЧ", "Документ." + НаименованиеДокумента +  ".Товары");
			ЕстьКолонкаНоменклатураПартнера = ДокументМетаданные.ТабличныеЧасти.Товары.Реквизиты.Найти("НоменклатураПартнера") <> Неопределено;			
		КонецЕсли;
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Упаковка", "ВЫБОР
															   |  КОГДА Товары.Упаковка = Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) ТОГДА
															   |       Товары.Номенклатура.ЕдиницаИзмерения
															   |  ИНАЧЕ
															   |      Товары.Упаковка
															   |КОНЕЦ");
		Если ЕстьКолонкаНоменклатураПартнера Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Идентификатор", "ЕСТЬNULL(Товары.НоменклатураПартнера.Идентификатор, """")");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Идентификатор", """""");
		КонецЕсли;		
	КонецЕсли;	
	
	ТаблицаОтбора = Запрос.Выполнить().Выгрузить();
	
	МенеджерТаблиц = Новый МенеджерВременныхТаблиц;
	СопоставлениеНоменклатурыКонтрагентов.СоздатьВременнуюТаблицуСоответствияНоменклатуры(ТаблицаОтбора, "втНоменклатураКонтрагента", МенеджерТаблиц);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	втНоменклатураКонтрагента.Номенклатура КАК Номенклатура,
	|	втНоменклатураКонтрагента.Характеристика КАК Характеристика,
	|	втНоменклатураКонтрагента.Упаковка КАК Упаковка,
	|	ЕСТЬNULL(втНоменклатураКонтрагента.Идентификатор, """") КАК Идентификатор,
	|	ЕСТЬNULL(втНоменклатураКонтрагента.Артикул, """") КАК Артикул,
	|	ЕСТЬNULL(втНоменклатураКонтрагента.Наименование, """") КАК Наименование,
	|	ЕСТЬNULL(втНоменклатураКонтрагента.НаименованиеХарактеристики, """") КАК НаименованиеХарактеристики,
	|	ЕСТЬNULL(втНоменклатураКонтрагента.ЕдиницаИзмерения, """") КАК ЕдиницаИзмеренияНаименование,
	|	ЕСТЬNULL(втНоменклатураКонтрагента.ЕдиницаИзмеренияКод, """") КАК ЕдиницаИзмеренияКод,
	|	ЕСТЬNULL(втНоменклатураКонтрагента.СтавкаНДС, """") КАК СтавкаНДС,
	|	ЕСТЬNULL(втНоменклатураКонтрагента.ШтрихкодыНоменклатуры, """") КАК ШтрихкодыНоменклатуры,
	|	ЕСТЬNULL(втНоменклатураКонтрагента.ШтрихкодКомбинации, """") КАК ШтрихкодКомбинации
	|ИЗ
	|	втНоменклатураКонтрагента КАК втНоменклатураКонтрагента";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

//-- Локализация

// Добавляет в структуру поле ШтрихкодыНоменклатуры и ШтрихкодКомбинации в сопоставление номенклатуры БЭД.
//
// Параметры:
//  Сопоставление         - Структура        - сопоставление номенклатуры БЭД.
//  ШтрихкодыНоменклатуры - Массив из Строка - набор штрихкодов номенклатуры.
//  ШтрихкодыКомбинаций   - Массив из Строка - набор штрихкодов по комбинации строки: номенклатура, характеристика, упаковка.
//  НоменклатураИБ        - ОпределяемыйТип.НоменклатураБЭД               - ссылка на номенклатуру.
//  ХарактеристикаИБ      - ОпределяемыйТип.ХарактеристикаНоменклатурыБЭД - ссылка на характеристику.
//  ЕдиницаИзмеренияИБ    - ОпределяемыйТип.УпаковкаНоменклатурыБЭД       - ссылка на единицу измерения/упаковку.
//
Процедура ЗаполнитьШтрихкодыТоваровВСопоставление(Сопоставление, ШтрихкодыНоменклатуры, ШтрихкодыКомбинаций,
		НоменклатураИБ, ХарактеристикаИБ, ЕдиницаИзмеренияИБ) Экспорт
	
	ШтрихкодыТовара = Новый Массив;
	ОтборШтрихкодов = Новый Структура;
	ОтборШтрихкодов.Вставить("Номенклатура", НоменклатураИБ);
	НайденныеСтрокиШтрихкодов = ШтрихкодыНоменклатуры.НайтиСтроки(ОтборШтрихкодов);
	Для Каждого СтрокаШтрихкода Из НайденныеСтрокиШтрихкодов Цикл
		ШтрихкодыТовара.Добавить(СтрокаШтрихкода.Штрихкод);
	КонецЦикла;
	Сопоставление.Вставить("ШтрихкодыНоменклатуры", ШтрихкодыТовара);
	
	ОтборШтрихкодов = Новый Структура;
	ОтборШтрихкодов.Вставить("Номенклатура"    , НоменклатураИБ);
	ОтборШтрихкодов.Вставить("Характеристика"  , ХарактеристикаИБ);
	Если ЕдиницаИзмеренияИБ <> НоменклатураВызовСервера.ЕдиницаХраненияНоменклатуры(НоменклатураИБ) Тогда
		ОтборШтрихкодов.Вставить("Упаковка", ЕдиницаИзмеренияИБ);
	КонецЕсли;
	СтрокаПоиска = ШтрихкодыКомбинаций.НайтиСтроки(ОтборШтрихкодов);
	Если ЗначениеЗаполнено(СтрокаПоиска) Тогда
		Сопоставление.Вставить("ШтрихкодКомбинации", СтрокаПоиска[0].Штрихкод);
	КонецЕсли;
	
КонецПроцедуры

// Получает штрихкоды номенклатуры и комбинации (номенклатура, характеристика, упаковка) по набору товаров.
//
// Параметры:
//  НаборТоваров          - ВыборкаИзРезультатаЗапроса - выборка товаров из табличной части документа.
//  ШтрихкодыКомбинаций   - Массив из Строка           - набор штрихкодов комбинации: номенклатура, характеристика, упаковка.
//  ШтрихкодыНоменклатуры - Массив из Строка           - набор штрихкодов номенклатуры.
//
Процедура ШтрихкодыПоТоварам(НаборТоваров, ШтрихкодыКомбинаций, ШтрихкодыНоменклатуры) Экспорт
	
	Товары = Новый ТаблицаЗначений;
	Товары.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Товары.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	Товары.Колонки.Добавить("Упаковка", Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения"));
	
	ТипНабораТоваров = ТипЗнч(НаборТоваров);
	
	Если ТипНабораТоваров = Тип("ВыборкаИзРезультатаЗапроса") Тогда
		НаборТоваров.Сбросить();
		Пока НаборТоваров.Следующий() Цикл
			СтрокаТовара = Товары.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТовара, НаборТоваров);

			ДокументРеализации = НаборТоваров.Ссылка;
			//++ Локализация
			Если ТипЗнч(НаборТоваров.Ссылка) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
				ДокументРеализации = НаборТоваров.Ссылка.ДокументОснование;
			КонецЕсли;
			//-- Локализация
			
			Если ТипЗнч(ДокументРеализации) = Тип("ДокументСсылка.РеализацияТоваровУслуг") 
					ИЛИ ТипЗнч(ДокументРеализации) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
					
				Если ДокументРеализации.Товары.Количество() >= НаборТоваров.НомерСтроки Тогда	
					Если НаборТоваров.НомерСтроки > 0 Тогда
						СтрокаТабЧасти = ДокументРеализации.Товары[НаборТоваров.НомерСтроки - 1];
					Иначе
						СтрокаТабЧасти = ДокументРеализации.Товары[НаборТоваров.НомерСтроки];
					КонецЕсли;	
					УпаковкаИзДокумента = СтрокаТабЧасти.Упаковка;
				Иначе
					УпаковкаИзДокумента = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
				КонецЕсли;
				
			КонецЕсли;
			СтрокаТовара.Упаковка = УпаковкаИзДокумента;			
		КонецЦикла;
		НаборТоваров.Сбросить();
	Иначе
		Для Каждого Товар Из НаборТоваров Цикл
			СтрокаТовара = Товары.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТовара, Товар);
		КонецЦикла;		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Товары", Товары);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Упаковка КАК Упаковка
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	&Товары КАК Товары
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Упаковка";
	
	ИнициализацияТекстаЗапросаПоискаШтрихкодовПоВременнойТаблицеТоваров(Запрос.Текст);
	
	ПакетыЗапросов = Запрос.ВыполнитьПакет();
	
	ШтрихкодыКомбинаций = ПакетыЗапросов[2].Выгрузить();
	ШтрихкодыКомбинаций.Индексы.Добавить("Номенклатура, Характеристика, Упаковка");

	ШтрихкодыНоменклатуры = ПакетыЗапросов[3].Выгрузить();
	ШтрихкодыНоменклатуры.Индексы.Добавить("Номенклатура");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикОбновления

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "НоменклатураПартнеровСервер.СправочникНоменклатураКонтрагентов_ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "11.5.6.56";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("02c8dafd-1e0f-452f-ac8e-3ce4f915055b");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "НоменклатураПартнеровСервер.СправочникНоменклатураКонтрагентов__ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.ЗапускатьТолькоВГлавномУзле = Истина;
	Обработчик.Комментарий = НСтр("ru = 'Обновляются данные справочника номенклатура контрагентов.'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.АктОРасхожденияхПослеПриемки.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ВозвратТоваровПоставщику.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ВыкупВозвратнойТарыУПоставщика.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ВыкупПринятыхНаХранениеТоваров.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ДоверенностьВыданная.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ЗаказПоставщику.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.КорректировкаПриобретения.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ОтгрузкаТоваровСХранения.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ОтчетКомитенту.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ОтчетКомитентуОСписании.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПоступлениеТоваровНаСклад.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПриемкаТоваровНаХранение.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПриобретениеТоваровУслуг.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.РегистрацияЦенНоменклатурыПоставщика.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.СписаниеПринятыхНаХранениеТоваров.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.УпаковочныйЛист.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыСведений.ШтрихкодыНоменклатуры.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Справочники.НоменклатураКонтрагентов.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Справочники.УпаковкиЕдиницыИзмерения.ПолноеИмя());
	//++ Локализация
	Читаемые.Добавить(Метаданные.Документы.ЗаявлениеОВвозеТоваров.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыСведений.НоменклатураКонтрагентовБЭД.ПолноеИмя());
	//-- Локализация
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Справочники.НоменклатураКонтрагентов.ПолноеИмя());
	//++ Локализация
	Изменяемые.Добавить(Метаданные.РегистрыСведений.НоменклатураКонтрагентовБЭД.ПолноеИмя());
	//-- Локализация
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.АктОРасхожденияхПослеПриемки.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ВозвратТоваровПоставщику.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ВыкупВозвратнойТарыУПоставщика.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ВыкупПринятыхНаХранениеТоваров.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ЗаказПоставщику.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.КорректировкаПриобретения.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ОтгрузкаТоваровСХранения.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ОтчетКомитенту.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ОтчетКомитентуОСписании.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ПоступлениеТоваровНаСклад.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ПриемкаТоваровНаХранение.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ПриобретениеТоваровУслуг.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.СписаниеПринятыхНаХранениеТоваров.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";
	//++ Локализация
	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ЗаявлениеОВвозеТоваров.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";
	//-- Локализация

КонецПроцедуры

#Область Справочники_НоменклатураКонтрагентов_ОбработчикОбновления

// Регистрирует данные к обработке при переходе на новую версию.
// 
// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура СправочникНоменклатураКонтрагентов__ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиСсылки();
	ПараметрыВыборки.ПолныеИменаОбъектов = Метаданные.Справочники.НоменклатураКонтрагентов.ПолноеИмя();
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Ссылка");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Ссылка");

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1000
	|	НоменклатураКонтрагентов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
	|ГДЕ
	|	(НоменклатураКонтрагентов.НаименованиеПолное = """"
	|			ИЛИ НоменклатураКонтрагентов.НаименованиеУпаковки = """"
	|				И НоменклатураКонтрагентов.ИдентификаторУпаковки <> """")
	|	И НоменклатураКонтрагентов.Ссылка > &Ссылка
	|	И НЕ НоменклатураКонтрагентов.Недействителен
	|	И НЕ НоменклатураКонтрагентов.ПометкаУдаления
	|	И НЕ НоменклатураКонтрагентов.ЭтоГруппа";
	
	ОтработаныВсеДанные = Ложь;
	Ссылка = Справочники.НоменклатураКонтрагентов.ПустаяСсылка();
	
	Пока Не ОтработаныВсеДанные Цикл
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		Выгрузка = Запрос.Выполнить().Выгрузить();
		
		КоличествоСтрок = Выгрузка.Количество();
		
		Если КоличествоСтрок < 1000 Тогда
			ОтработаныВсеДанные = Истина;
		КонецЕсли;
		
		Если КоличествоСтрок > 0 Тогда
			Ссылка = Выгрузка[КоличествоСтрок - 1].Ссылка;
		КонецЕсли;
		
		ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Выгрузка.ВыгрузитьКолонку("Ссылка"));
		
	КонецЦикла;
	
КонецПроцедуры

// Обработчик обновления для прикладных решений использующих до появление в БЭД справочника НоменклатураКонтрагентов.
//
// Перебирает записи из справочника НоменклатурыКонтрагента, помечает дубли карточек по дате активности 
// и заполняет новые поля по данным из РегистраСведений.НоменклатураКонтрагентовБЭД.
//
// Параметры:
//  Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке.
//
Процедура СправочникНоменклатураКонтрагентов_ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МетаданныеОбъекта = Метаданные.Справочники.НоменклатураКонтрагентов;
	ПолноеИмяОбъекта  = МетаданныеОбъекта.ПолноеИмя();
	
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Если Не ОбновляемыеДанные.Количество() Тогда
		Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
			Параметры.Очередь, ПолноеИмяОбъекта);
		Возврат;
	КонецЕсли;
	
	НаборСсылок = ОбновляемыеДанные.ВыгрузитьКолонку("Ссылка");
	
	ТекстОшибки = "";
	ТаблицаНоменклатурыКонтрагентов = ТаблицаНоменклатурыКонтрагентовСДаннымиЗаполнения(НаборСсылок, ТекстОшибки);
	
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	ТаблицаНоменклатурыКонтрагентовЗаполнена = ТаблицаНоменклатурыКонтрагентов.Количество() > 0;
	
	ПроблемныхОбъектов   = 0;
	ОбработанныхОбъектов = 0;
	Для Каждого СсылкаНаОбъект Из НаборСсылок Цикл
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("НоменклатураКонтрагента", СсылкаНаОбъект);
		
		ДанныеНоменклатурыКонтрагента = Неопределено;
		Если ТаблицаНоменклатурыКонтрагентовЗаполнена Тогда
			СтрокиНоменклатурыКонтрагентов = ТаблицаНоменклатурыКонтрагентов.НайтиСтроки(ПараметрыОтбора);
			Если ЗначениеЗаполнено(СтрокиНоменклатурыКонтрагентов) Тогда
				ДанныеНоменклатурыКонтрагента = СтрокиНоменклатурыКонтрагентов[0];
			КонецЕсли;
		КонецЕсли;
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки       = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.УстановитьЗначение("Ссылка", СсылкаНаОбъект);
			Блокировка.Заблокировать();

			Записать = Ложь;
			ОбъектСправочника = СсылкаНаОбъект.ПолучитьОбъект(); //СправочникОбъект
			Если ДанныеНоменклатурыКонтрагента <> Неопределено Тогда
				ЗаполнитьНоменклатуруКонтрагентаСПустымПолемНаименованиеПолное(ОбъектСправочника, ДанныеНоменклатурыКонтрагента, Записать);
			КонецЕсли;
			
			Если Записать Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ОбъектСправочника);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(СсылкаНаОбъект);
			КонецЕсли;
			
			ОбработанныхОбъектов = ОбработанныхОбъектов + 1;
			
			ЗафиксироватьТранзакцию();

		Исключение
			
			ОтменитьТранзакцию();
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			ШаблонСообщения = НСтр("ru = 'Не удалось обработать запись по ссылке: %1 по причине:'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, СсылкаНаОбъект) + Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеОбъекта, СсылкаНаОбъект, ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбработанныхОбъектов = 0 И ПроблемныхОбъектов <> 0 Тогда
		ШаблонСообщения = НСтр("ru = 'Не удалось обработать некоторые объекты номенклатуры контрагентов: %1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ШаблонСообщения = НСтр("ru = 'Обработана очередная порция номенклатуры контрагентов: %1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ОбработанныхОбъектов);
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Информация,
			МетаданныеОбъекта,, ТекстСообщения);
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов = Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбработанныхОбъектов;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНоменклатуруКонтрагентаСПустымПолемНаименованиеПолное(Объект, Знач ДанныеНоменклатурыКонтрагента, Записать)
	
	Записать = Истина;
	Если ДанныеНоменклатурыКонтрагента.Недействителен Тогда
		
		Объект.Недействителен           = Истина;
		Объект.Идентификатор            = ДанныеНоменклатурыКонтрагента.Идентификатор;
		Объект.НаименованиеНоменклатуры = ДанныеНоменклатурыКонтрагента.НаименованиеНоменклатурыКонтрагента;
		Объект.НаименованиеПолное       = ДанныеНоменклатурыКонтрагента.НаименованиеНоменклатурыКонтрагента;
		Объект.Наименование             = ДанныеНоменклатурыКонтрагента.НаименованиеНоменклатурыКонтрагента; 
		Объект.ВладелецНоменклатуры     = ДанныеНоменклатурыКонтрагента.Владелец;
		
		Если ПустаяСтрока(Объект.ИдентификаторНоменклатуры) Тогда
			СопоставлениеНоменклатурыКонтрагентовКлиентСервер.РазделитьИдентификаторНаЧасти(
				ДанныеНоменклатурыКонтрагента.Идентификатор, ДанныеНоменклатурыКонтрагента);
			Объект.ИдентификаторНоменклатуры   = ДанныеНоменклатурыКонтрагента.ИдентификаторНоменклатуры;
			Объект.ИдентификаторХарактеристики = ДанныеНоменклатурыКонтрагента.ИдентификаторХарактеристики;
			Объект.ИдентификаторУпаковки       = ДанныеНоменклатурыКонтрагента.ИдентификаторУпаковки;
		КонецЕсли;
		
		Возврат;
		
	КонецЕсли;
	
	НоменклатураКонтрагента = СопоставлениеНоменклатурыКонтрагентовКлиентСервер.НоваяНоменклатураКонтрагента();
	ЗаполнитьЗначенияСвойств(НоменклатураКонтрагента, ДанныеНоменклатурыКонтрагента);
	
	НоменклатураИБ = СопоставлениеНоменклатурыКонтрагентовКлиентСервер.НоваяНоменклатураИнформационнойБазы();
	ЗаполнитьЗначенияСвойств(НоменклатураИБ, ДанныеНоменклатурыКонтрагента);

	Если ДанныеНоменклатурыКонтрагента.ЕстьЗаписьВРегистре Тогда
		Если Не ПустаяСтрока(ДанныеНоменклатурыКонтрагента.НаименованиеУпаковки) Тогда
			НоменклатураКонтрагента.НаименованиеУпаковки = ДанныеНоменклатурыКонтрагента.НаименованиеУпаковкиИБ;
		КонецЕсли;
		НоменклатураКонтрагента.Наименование = ДанныеНоменклатурыКонтрагента.Наименование;
		НоменклатураКонтрагента.ЕдиницаИзмерения = ДанныеНоменклатурыКонтрагента.НаименованиеБазовойЕдиницыИзмеренияПоОКЕИ;
	Иначе
		НоменклатураКонтрагента.Наименование = ДанныеНоменклатурыКонтрагента.НаименованиеНоменклатурыКонтрагента;
	КонецЕсли;
	
	Объект.ДополнительныеСвойства.Вставить("ТребуетсяЗаписьПриОбновленииНоменклатурыКонтрагентов", Истина);
		
	Если ЗначениеЗаполнено(Объект.Номенклатура) И Не ЗначениеЗаполнено(Объект.Упаковка) Тогда
		Объект.Упаковка = ДанныеНоменклатурыКонтрагента.БазоваяЕдиницаИзмеренияНоменклатуры;
	КонецЕсли;
	
	СопоставлениеНоменклатурыКонтрагентов.ЗаполнитьОбъектНоменклатурыКонтрагента(Объект, НоменклатураКонтрагента, НоменклатураИБ, Ложь);
	
КонецПроцедуры

Функция НаименованиеРеквизитаСопоставленияНоменклатурыБЭД(ТипОбъекта)
	
	Если ТипОбъекта = Тип("СправочникСсылка.Номенклатура") 
			Или ТипОбъекта = Тип("СправочникСсылка.ХарактеристикиНоменклатуры") Тогда
		Возврат "НаименованиеПолное";
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция СформироватьТаблицуТоваровДляСопоставленияНоменклатурыПартнеров(Таблица)
	
	Запрос = Новый Запрос;
	
	Если ТипЗнч(Таблица) = Тип("ДанныеФормыКоллекция") Тогда
		Запрос.УстановитьПараметр("Товары", Таблица.Выгрузить(, "НомерСтроки,Номенклатура,Характеристика,Упаковка,НоменклатураПартнера"));
	Иначе
		Запрос.УстановитьПараметр("Товары", Таблица);
	КонецЕсли;
	
	ТекстЗапроса=
	"ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.НоменклатураПартнера КАК НоменклатураПартнера
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.НоменклатураПартнера КАК НоменклатураКонтрагента,
	|	Товары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА НЕ ТоварыДругогоКачества.Номенклатура ЕСТЬ NULL
	|			ТОГДА ТоварыДругогоКачества.Номенклатура
	|		ИНАЧЕ Товары.Номенклатура
	|	КОНЕЦ КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ Товары.Упаковка
	|	КОНЕЦ КАК Упаковка,
	|	ВЫБОР
	|		КОГДА НЕ ТоварыДругогоКачества.Номенклатура ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоТоварДругогоКачества,
	|	ВЫБОР
	|		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК БазоваяУпаковка
	|ПОМЕСТИТЬ ВременнаяТаблица_Товары
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварыДругогоКачества КАК ТоварыДругогоКачества
	|		ПО Товары.Номенклатура = ТоварыДругогоКачества.НоменклатураБрак
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблица_Товары.НомерСтроки КАК НомерСтроки,
	|	ВременнаяТаблица_Товары.НоменклатураКонтрагента КАК НоменклатураКонтрагента,
	|	ВременнаяТаблица_Товары.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблица_Товары.Характеристика КАК Характеристика,
	|	МАКСИМУМ(ЕСТЬNULL(УпаковкиЕдиницыИзмерения.Ссылка, ВременнаяТаблица_Товары.Упаковка)) КАК Упаковка
	|ИЗ
	|	ВременнаяТаблица_Товары КАК ВременнаяТаблица_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|		ПО (ВременнаяТаблица_Товары.ЭтоТоварДругогоКачества)
	|		И (НЕ ВременнаяТаблица_Товары.БазоваяУпаковка)
	|		И ВременнаяТаблица_Товары.Упаковка.Наименование = УпаковкиЕдиницыИзмерения.Наименование
	|		И (ЕСТЬNULL(&ТекстЗапросаКоэффициентаУпаковки, 1) = ЕСТЬNULL(&ПоискТекстЗапросаКоэффициентаУпаковки, 1))
	|		И ВременнаяТаблица_Товары.Номенклатура = УпаковкиЕдиницыИзмерения.Владелец
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблица_Товары.НомерСтроки,
	|	ВременнаяТаблица_Товары.НоменклатураКонтрагента,
	|	ВременнаяТаблица_Товары.Номенклатура,
	|	ВременнаяТаблица_Товары.Характеристика";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентаУпаковки", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки("ВременнаяТаблица_Товары.Упаковка", "ВременнаяТаблица_Товары.Номенклатура"));
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоискТекстЗапросаКоэффициентаУпаковки", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки("УпаковкиЕдиницыИзмерения", "УпаковкиЕдиницыИзмерения.Владелец"));
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

Функция ТекстЗапросаПоискаТоваровДругогоКачестваВСтрокеТЧ(Знач ПоместитьВоВременнуюТаблицу = Истина)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТоварыДругогоКачества.Номенклатура,
	|	ТоварыДругогоКачества.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	МАКСИМУМ(УпаковкиЕдиницыИзмеренияПоиск.Ссылка) КАК Упаковка,
	|	ТоварыДругогоКачества.НоменклатураБрак
	|ПОМЕСТИТЬ ТоварыДругогоКачества
	|ИЗ
	|	РегистрСведений.ТоварыДругогоКачества КАК ТоварыДругогоКачества
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмеренияПоиск
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|			ПО ВЫБОР
	|				КОГДА &Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА УпаковкиЕдиницыИзмеренияПоиск.Наименование = УпаковкиЕдиницыИзмерения.Наименование
	|					И УпаковкиЕдиницыИзмерения.Ссылка = &Упаковка
	|					И ЕСТЬNULL(&ПоискТекстЗапросаКоэффициентаУпаковки, 1) = ЕСТЬNULL(&ТекстЗапросаКоэффициентаУпаковки, 1)
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|		ПО ТоварыДругогоКачества.Номенклатура = УпаковкиЕдиницыИзмеренияПоиск.Владелец
	|ГДЕ
	|	ТоварыДругогоКачества.НоменклатураБрак = &Номенклатура
	|СГРУППИРОВАТЬ ПО
	|	ТоварыДругогоКачества.Номенклатура,
	|	ТоварыДругогоКачества.Номенклатура.ЕдиницаИзмерения,
	|	ТоварыДругогоКачества.НоменклатураБрак";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентаУпаковки", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки("УпаковкиЕдиницыИзмерения", "УпаковкиЕдиницыИзмерения.Владелец"));
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоискТекстЗапросаКоэффициентаУпаковки", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки("УпаковкиЕдиницыИзмеренияПоиск", "УпаковкиЕдиницыИзмеренияПоиск.Владелец"));
	
	Если ПоместитьВоВременнуюТаблицу Тогда
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов();
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТоварыДругогоКачества", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаПоискаШтрихкодовПоТаблицеТоваров(ИмяВременнойТаблицыТоваров = Неопределено)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Штрихкоды.Штрихкод КАК Штрихкод,
	|	Штрихкоды.Номенклатура КАК Номенклатура,
	|	Штрихкоды.Характеристика КАК Характеристика,
	|	Штрихкоды.Упаковка КАК Упаковка
	|ПОМЕСТИТЬ СписокШтрихкодовПоКомбинации
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Товары КАК ВТ_Товары
	|		ПО (ВТ_Товары.Номенклатура = Штрихкоды.Номенклатура)
	|		И (ВТ_Товары.Характеристика = Штрихкоды.Характеристика)
	|		И (ВТ_Товары.Упаковка = Штрихкоды.Упаковка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Штрихкод,
	|	Номенклатура,
	|	Характеристика,
	|	Упаковка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ШтрихкодыКомбинации.Штрихкод КАК Штрихкод,
	|	ШтрихкодыКомбинации.Номенклатура КАК Номенклатура,
	|	ШтрихкодыКомбинации.Характеристика КАК Характеристика,
	|	ШтрихкодыКомбинации.Упаковка КАК Упаковка
	|ИЗ
	|	СписокШтрихкодовПоКомбинации КАК ШтрихкодыКомбинации
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Штрихкоды.Штрихкод КАК Штрихкод,
	|	Штрихкоды.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Товары КАК ВТ_Товары
	|		ПО ВТ_Товары.Номенклатура = Штрихкоды.Номенклатура";
	
	Если ИмяВременнойТаблицыТоваров <> Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТ_Товары", ИмяВременнойТаблицыТоваров);
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаПоискаШтрихкодовПоСтрокеТоваров()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Штрихкоды.Штрихкод КАК Штрихкод,
	|	Штрихкоды.Номенклатура КАК Номенклатура,
	|	Штрихкоды.Характеристика КАК Характеристика,
	|	Штрихкоды.Упаковка КАК Упаковка
	|ПОМЕСТИТЬ СписокШтрихкодовПоКомбинации
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды
	|
	|ГДЕ
	|		Штрихкоды.Номенклатура = &Номенклатура
	|		И Штрихкоды.Характеристика = &Характеристика
	|		И Штрихкоды.Упаковка = &Упаковка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Штрихкод,
	|	Номенклатура,
	|	Характеристика,
	|	Упаковка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ШтрихкодыКомбинации.Штрихкод КАК Штрихкод,
	|	ШтрихкодыКомбинации.Номенклатура КАК Номенклатура,
	|	ШтрихкодыКомбинации.Характеристика КАК Характеристика,
	|	ШтрихкодыКомбинации.Упаковка КАК Упаковка
	|ИЗ
	|	СписокШтрихкодовПоКомбинации КАК ШтрихкодыКомбинации
	|ГДЕ
	|	ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			СписокШтрихкодовПоКомбинации КАК СписокШтрихкодовПоКомбинации
	|		ГДЕ
	|			СписокШтрихкодовПоКомбинации.Номенклатура = ШтрихкодыКомбинации.Номенклатура
	|			И СписокШтрихкодовПоКомбинации.Характеристика = ШтрихкодыКомбинации.Характеристика
	|			И СписокШтрихкодовПоКомбинации.Упаковка = ШтрихкодыКомбинации.Упаковка
	|		ИМЕЮЩИЕ
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СписокШтрихкодовПоКомбинации.Штрихкод) = 1)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Штрихкоды.Штрихкод КАК Штрихкод,
	|	Штрихкоды.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды
	|ГДЕ
	|		Штрихкоды.Номенклатура = &Номенклатура";
		
	Возврат ТекстЗапроса;

КонецФункции

#Область ОбработчикОбновления

Функция ТаблицаНоменклатурыКонтрагентовСДаннымиЗаполнения(НаборСсылок, ТекстОшибки)

	ТаблицаОбновляемойНоменклатурыКонтрагентов = ТаблицаОбновляемойНоменклатурыКонтрагентов(НаборСсылок);
	
	Если ТаблицаОбновляемойНоменклатурыКонтрагентов.Количество() = 0 Тогда
		Возврат Новый ТаблицаЗначений;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаНоменклатурыКонтрагентов", ТаблицаОбновляемойНоменклатурыКонтрагентов);
	Запрос.УстановитьПараметр("ПустаяХарактеристика", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	ТекстЗапроса = "";
	//++ Локализация
	ТекстЗапроса = ТекстЗапросаПоискаДанныхДляЗаполненияНоменклатурыКонтрагентовБЭД();
	//-- Локализация
	Если Не ЗначениеЗаполнено(ТекстЗапроса) Тогда
		ТекстЗапроса = ТекстЗапросаПоискаДанныхДляЗаполненияНоменклатурыКонтрагентов();
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	Попытка
		ТаблицаНоменклатурыКонтрагентов = Запрос.Выполнить().Выгрузить();
	Исключение
		ТекстОшибки = СтрШаблон(НСтр("ru = 'Не удалось обработать объекты номенклатуры контрагентов по причине: %1'"),
						ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат Новый ТаблицаЗначений;
	КонецПопытки;
	
	ТаблицаНоменклатурыКонтрагентов.Индексы.Добавить("НоменклатураКонтрагента");
	
	Возврат ТаблицаНоменклатурыКонтрагентов;
		
КонецФункции

Функция ТаблицаОбновляемойНоменклатурыКонтрагентов(НаборСсылок)
	
	ТаблицаНоменклатурыКонтрагентов = Новый ТаблицаЗначений;
	ТаблицаНоменклатурыКонтрагентов.Колонки.Добавить("ОбновляемаяНоменклатураКонтрагентов", Новый ОписаниеТипов("СправочникСсылка.НоменклатураКонтрагентов"));
	ТаблицаНоменклатурыКонтрагентов.Колонки.Добавить("Владелец"                           , Метаданные.ОпределяемыеТипы.ВладелецНоменклатурыБЭД.Тип);
	ТаблицаНоменклатурыКонтрагентов.Колонки.Добавить("Идентификатор"                      , Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(300)));
	ТаблицаНоменклатурыКонтрагентов.Колонки.Добавить("НаименованиеНоменклатурыКонтрагента", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100)));
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НаборСсылок", НаборСсылок);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НоменклатураКонтрагентов.Ссылка КАК Ссылка,
	|	НоменклатураКонтрагентов.Владелец КАК Владелец,
	|	НоменклатураКонтрагентов.Идентификатор КАК Идентификатор,
	|	НоменклатураКонтрагентов.НаименованиеНоменклатуры КАК НаименованиеНоменклатуры,
	|	НоменклатураКонтрагентов.НаименованиеХарактеристики КАК НаименованиеХарактеристики,
	|	НоменклатураКонтрагентов.НаименованиеУпаковки КАК НаименованиеУпаковки,
	|	НоменклатураКонтрагентов.Наименование КАК Наименование,
	|	НоменклатураКонтрагентов.Номенклатура.Наименование КАК НоменклатураНаименование
	|ИЗ
	|	Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
	|ГДЕ
	|	НоменклатураКонтрагентов.Ссылка В(&НаборСсылок)
	|	И НЕ НоменклатураКонтрагентов.ПометкаУдаления
	|	И НЕ НоменклатураКонтрагентов.Недействителен
	|	И (НоменклатураКонтрагентов.НаименованиеПолное = """"
	|			ИЛИ НоменклатураКонтрагентов.НаименованиеУпаковки = """"
	|				И НоменклатураКонтрагентов.ИдентификаторУпаковки <> """")";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если ПустаяСтрока(Выборка.Идентификатор) Тогда
			Если ПустаяСтрока(Выборка.НаименованиеНоменклатуры) И ЗначениеЗаполнено(Выборка.Наименование) Тогда
				Идентификатор = Справочники.НоменклатураКонтрагентов.ИдентификаторНоменклатурыКонтрагентаПоНаименованию(Выборка.Наименование, "", "");
			ИначеЕсли ПустаяСтрока(Выборка.НаименованиеНоменклатуры) И ЗначениеЗаполнено(Выборка.НоменклатураНаименование) Тогда
				Идентификатор = Справочники.НоменклатураКонтрагентов.ИдентификаторНоменклатурыКонтрагентаПоНаименованию(Выборка.НоменклатураНаименование, "", "");
			ИначеЕсли ЗначениеЗаполнено(Выборка.НаименованиеНоменклатуры) Тогда
				Идентификатор = Справочники.НоменклатураКонтрагентов.ИдентификаторНоменклатурыКонтрагентаПоНаименованию(Выборка.НаименованиеНоменклатуры,
																														Выборка.НаименованиеХарактеристики,
																														Выборка.НаименованиеУпаковки);
			Иначе
				Продолжить;
			КонецЕсли;
		Иначе
			Идентификатор = Выборка.Идентификатор;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаНоменклатурыКонтрагентов.Добавить();
		НоваяСтрока.ОбновляемаяНоменклатураКонтрагентов = Выборка.Ссылка;
		НоваяСтрока.Владелец                            = Выборка.Владелец;
		НоваяСтрока.Идентификатор                       = Идентификатор;
		НоваяСтрока.НаименованиеНоменклатурыКонтрагента = ?(ЗначениеЗаполнено(Выборка.Наименование), Выборка.Наименование, Выборка.НоменклатураНаименование);
		
	КонецЦикла;
	
	Возврат ТаблицаНоменклатурыКонтрагентов;

КонецФункции

Функция ТекстЗапросаПоискаДанныхДляЗаполненияНоменклатурыКонтрагентов()
	
	ПакетЗапросов = Новый Массив;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаНоменклатурыКонтрагентов.ОбновляемаяНоменклатураКонтрагентов КАК ОбновляемаяНоменклатураКонтрагентов,
	|	ТаблицаНоменклатурыКонтрагентов.Владелец КАК Владелец,
	|	ТаблицаНоменклатурыКонтрагентов.Идентификатор КАК Идентификатор,
	|	ТаблицаНоменклатурыКонтрагентов.НаименованиеНоменклатурыКонтрагента КАК НаименованиеНоменклатурыКонтрагента
	|ПОМЕСТИТЬ ТаблицаНоменклатурыКонтрагентов
	|ИЗ
	|	&ТаблицаНоменклатурыКонтрагентов КАК ТаблицаНоменклатурыКонтрагентов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Владелец,
	|	Идентификатор
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНоменклатурыКонтрагентов.ОбновляемаяНоменклатураКонтрагентов КАК ОбновляемаяНоменклатураКонтрагентов,
	|	НоменклатураКонтрагентов.Ссылка КАК НоменклатураКонтрагента,
	|	НоменклатураКонтрагентов.Владелец КАК Владелец,
	|	НоменклатураКонтрагентов.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ НоменклатураКонтрагентовПоИдентификатору
	|ИЗ
	|	ТаблицаНоменклатурыКонтрагентов КАК ТаблицаНоменклатурыКонтрагентов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
	|		ПО ТаблицаНоменклатурыКонтрагентов.Владелец = НоменклатураКонтрагентов.Владелец
	|		И ТаблицаНоменклатурыКонтрагентов.Идентификатор = НоменклатураКонтрагентов.Идентификатор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбновляемаяНоменклатураКонтрагентов
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураКонтрагентовПоИдентификатору.ОбновляемаяНоменклатураКонтрагентов КАК ОбновляемаяНоменклатураКонтрагентов,
	|	НоменклатураКонтрагентовПоИдентификатору.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|ПОМЕСТИТЬ НеуникальнаяНоменклатураКонтрагентов
	|ИЗ
	|	НоменклатураКонтрагентовПоИдентификатору КАК НоменклатураКонтрагентовПоИдентификатору
	|ГДЕ
	|	ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			НоменклатураКонтрагентовПоИдентификатору КАК НоменклатураКонтрагентов
	|		ГДЕ
	|			НоменклатураКонтрагентов.ОбновляемаяНоменклатураКонтрагентов = НоменклатураКонтрагентовПоИдентификатору.ОбновляемаяНоменклатураКонтрагентов
	|		СГРУППИРОВАТЬ ПО
	|			НоменклатураКонтрагентов.ОбновляемаяНоменклатураКонтрагентов,
	|			НоменклатураКонтрагентов.Владелец,
	|			НоменклатураКонтрагентов.Идентификатор
	|		ИМЕЮЩИЕ
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НоменклатураКонтрагентов.НоменклатураКонтрагента) > 1)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НоменклатураКонтрагента";
	
	ПакетЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапросаТаблицыАктуальности = ТекстЗапросаТаблицыАктуальностиНоменклатурыКонтрагентов();
	ПакетЗапросов.Добавить(ТекстЗапросаТаблицыАктуальности);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаНоменклатурыКонтрагентов.ОбновляемаяНоменклатураКонтрагентов КАК НоменклатураКонтрагента,
	|	ТаблицаНоменклатурыКонтрагентов.Владелец КАК Владелец,
	|	ТаблицаНоменклатурыКонтрагентов.Идентификатор КАК Идентификатор,
	|	ЕСТЬNULL(ТаблицаАктуальностиНоменклатурыКонтрагентов.Недействителен, ЛОЖЬ) КАК Недействителен,
	|	ЛОЖЬ КАК ЕстьЗаписьВРегистре,
	|	ТаблицаНоменклатурыКонтрагентов.НаименованиеНоменклатурыКонтрагента КАК НаименованиеНоменклатурыКонтрагента,
	|	НоменклатураКонтрагентов.Артикул КАК Артикул,
	|	НоменклатураКонтрагентов.Номенклатура КАК Номенклатура,
	|	НоменклатураКонтрагентов.Характеристика КАК Характеристика,
	|	НоменклатураКонтрагентов.Упаковка КАК Упаковка,
	|	ВЫБОР
	|		КОГДА ТаблицаНоменклатурыКонтрагентов.ОбновляемаяНоменклатураКонтрагентов.Характеристика <> &ПустаяХарактеристика
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИспользоватьХарактеристики,
	|	ТаблицаНоменклатурыКонтрагентов.ОбновляемаяНоменклатураКонтрагентов.Номенклатура.ЕдиницаИзмерения КАК БазоваяЕдиницаИзмеренияНоменклатуры,
	|	ТаблицаНоменклатурыКонтрагентов.ОбновляемаяНоменклатураКонтрагентов.Упаковка.Наименование КАК НаименованиеУпаковкиИБ
	|ПОМЕСТИТЬ ДанныеНоменклатурыКонтрагентов
	|ИЗ
	|	ТаблицаНоменклатурыКонтрагентов КАК ТаблицаНоменклатурыКонтрагентов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаАктуальностиНоменклатурыКонтрагентов КАК ТаблицаАктуальностиНоменклатурыКонтрагентов
	|		ПО ТаблицаНоменклатурыКонтрагентов.ОбновляемаяНоменклатураКонтрагентов = ТаблицаАктуальностиНоменклатурыКонтрагентов.ОбновляемаяНоменклатураКонтрагентов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
	|		ПО ТаблицаНоменклатурыКонтрагентов.ОбновляемаяНоменклатураКонтрагентов = НоменклатураКонтрагентов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ШтрихкодыНоменклатурыИБ.Номенклатура КАК Номенклатура,
	|	ШтрихкодыНоменклатурыИБ.Характеристика КАК Характеристика,
	|	ШтрихкодыНоменклатурыИБ.Упаковка КАК Упаковка,
	|	МАКСИМУМ(ШтрихкодыНоменклатурыИБ.Штрихкод) КАК Штрихкод
	|ПОМЕСТИТЬ ШтрихкодыНоменклатурыИБ
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатурыИБ
	|ГДЕ
	|	ИСТИНА В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				ДанныеНоменклатурыКонтрагентов КАК ДанныеНоменклатурыКонтрагентов
	|			ГДЕ
	|				ДанныеНоменклатурыКонтрагентов.Номенклатура = ШтрихкодыНоменклатурыИБ.Номенклатура
	|				И ДанныеНоменклатурыКонтрагентов.Характеристика = ШтрихкодыНоменклатурыИБ.Характеристика
	|				И ВЫБОР
	|					КОГДА ДанныеНоменклатурыКонтрагентов.Упаковка = ДанныеНоменклатурыКонтрагентов.БазоваяЕдиницаИзмеренияНоменклатуры
	|						ТОГДА ДанныеНоменклатурыКонтрагентов.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ИНАЧЕ ДанныеНоменклатурыКонтрагентов.Упаковка
	|				КОНЕЦ = ШтрихкодыНоменклатурыИБ.Упаковка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ШтрихкодыНоменклатурыИБ.Номенклатура,
	|	ШтрихкодыНоменклатурыИБ.Характеристика,
	|	ШтрихкодыНоменклатурыИБ.Упаковка
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ШтрихкодыНоменклатурыИБ.Штрихкод) = 1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеНоменклатурыКонтрагентов.НоменклатураКонтрагента КАК НоменклатураКонтрагента,
	|	ДанныеНоменклатурыКонтрагентов.Владелец КАК Владелец,
	|	ДанныеНоменклатурыКонтрагентов.Идентификатор КАК Идентификатор,
	|	ДанныеНоменклатурыКонтрагентов.Недействителен КАК Недействителен,
	|	ДанныеНоменклатурыКонтрагентов.ЕстьЗаписьВРегистре КАК ЕстьЗаписьВРегистре,
	|	ДанныеНоменклатурыКонтрагентов.НаименованиеНоменклатурыКонтрагента КАК НаименованиеНоменклатурыКонтрагента,
	|	ДанныеНоменклатурыКонтрагентов.Артикул КАК Артикул,
	|	ДанныеНоменклатурыКонтрагентов.Номенклатура.СтавкаНДС КАК НоменклатураСтавкаНДС,
	|	ДанныеНоменклатурыКонтрагентов.Номенклатура КАК Номенклатура,
	|	ДанныеНоменклатурыКонтрагентов.Характеристика КАК Характеристика,
	|	ДанныеНоменклатурыКонтрагентов.Упаковка КАК Упаковка,
	|	ДанныеНоменклатурыКонтрагентов.ИспользоватьХарактеристики КАК ИспользоватьХарактеристики,
	|	ДанныеНоменклатурыКонтрагентов.БазоваяЕдиницаИзмеренияНоменклатуры КАК БазоваяЕдиницаИзмеренияНоменклатуры,
	|	ДанныеНоменклатурыКонтрагентов.НаименованиеУпаковкиИБ КАК НаименованиеУпаковкиИБ
	|ИЗ
	|	ДанныеНоменклатурыКонтрагентов КАК ДанныеНоменклатурыКонтрагентов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ШтрихкодыНоменклатурыИБ КАК ШтрихкодыНоменклатурыИБ
	|		ПО ДанныеНоменклатурыКонтрагентов.Номенклатура = ШтрихкодыНоменклатурыИБ.Номенклатура
	|			И ДанныеНоменклатурыКонтрагентов.Характеристика = ШтрихкодыНоменклатурыИБ.Характеристика
	|			И ДанныеНоменклатурыКонтрагентов.Упаковка = ШтрихкодыНоменклатурыИБ.Упаковка";
	
	ПакетЗапросов.Добавить(ТекстЗапроса);

	Возврат СтрСоединить(ПакетЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());

КонецФункции

//++ Локализация

Функция ТекстЗапросаПоискаДанныхДляЗаполненияНоменклатурыКонтрагентовБЭД()
	
	ПакетЗапросов = Новый Массив;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаНоменклатурыКонтрагентов.ОбновляемаяНоменклатураКонтрагентов КАК ОбновляемаяНоменклатураКонтрагентов,
	|	ТаблицаНоменклатурыКонтрагентов.Владелец КАК Владелец,
	|	ТаблицаНоменклатурыКонтрагентов.Идентификатор КАК Идентификатор,
	|	ТаблицаНоменклатурыКонтрагентов.НаименованиеНоменклатурыКонтрагента КАК НаименованиеНоменклатурыКонтрагента
	|ПОМЕСТИТЬ ТаблицаНоменклатурыКонтрагентов
	|ИЗ
	|	&ТаблицаНоменклатурыКонтрагентов КАК ТаблицаНоменклатурыКонтрагентов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Владелец,
	|	Идентификатор
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНоменклатурыКонтрагентов.ОбновляемаяНоменклатураКонтрагентов КАК ОбновляемаяНоменклатураКонтрагентов,
	|	НоменклатураКонтрагентов.Ссылка КАК НоменклатураКонтрагента,
	|	НоменклатураКонтрагентов.Владелец КАК Владелец,
	|	НоменклатураКонтрагентов.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ НоменклатураКонтрагентовПоИдентификатору
	|ИЗ
	|	ТаблицаНоменклатурыКонтрагентов КАК ТаблицаНоменклатурыКонтрагентов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
	|		ПО ТаблицаНоменклатурыКонтрагентов.Владелец = НоменклатураКонтрагентов.Владелец
	|		И ТаблицаНоменклатурыКонтрагентов.Идентификатор = НоменклатураКонтрагентов.Идентификатор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбновляемаяНоменклатураКонтрагентов
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураКонтрагентовПоИдентификатору.ОбновляемаяНоменклатураКонтрагентов КАК ОбновляемаяНоменклатураКонтрагентов,
	|	НоменклатураКонтрагентовПоИдентификатору.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|ПОМЕСТИТЬ НеуникальнаяНоменклатураКонтрагентов
	|ИЗ
	|	НоменклатураКонтрагентовПоИдентификатору КАК НоменклатураКонтрагентовПоИдентификатору
	|ГДЕ
	|	ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			НоменклатураКонтрагентовПоИдентификатору КАК НоменклатураКонтрагентов
	|		ГДЕ
	|			НоменклатураКонтрагентов.ОбновляемаяНоменклатураКонтрагентов = НоменклатураКонтрагентовПоИдентификатору.ОбновляемаяНоменклатураКонтрагентов
	|		СГРУППИРОВАТЬ ПО
	|			НоменклатураКонтрагентов.ОбновляемаяНоменклатураКонтрагентов,
	|			НоменклатураКонтрагентов.Владелец,
	|			НоменклатураКонтрагентов.Идентификатор
	|		ИМЕЮЩИЕ
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НоменклатураКонтрагентов.НоменклатураКонтрагента) > 1)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НоменклатураКонтрагента";
	
	ПакетЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапросаТаблицыАктуальности = ТекстЗапросаТаблицыАктуальностиНоменклатурыКонтрагентов();
	ПакетЗапросов.Добавить(ТекстЗапросаТаблицыАктуальности);
	
	ТекстЗапросаНоменклатурыКонтрагентовБЭД = СопоставлениеНоменклатурыКонтрагентов.ИнициализироватьТекстЗапросаСоответствияНоменклатурыКонтрагентовБЭДПоИдентификаторуИВладельцу(
		"ТаблицаНоменклатурыКонтрагентов");
	ПакетЗапросов.Добавить(ТекстЗапросаНоменклатурыКонтрагентовБЭД);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаНоменклатурыКонтрагентов.ОбновляемаяНоменклатураКонтрагентов КАК НоменклатураКонтрагента,
	|	ТаблицаНоменклатурыКонтрагентов.Владелец КАК Владелец,
	|	ТаблицаНоменклатурыКонтрагентов.Идентификатор КАК Идентификатор,
	|	ЕСТЬNULL(ТаблицаАктуальностиНоменклатурыКонтрагентов.Недействителен, ЛОЖЬ) КАК Недействителен,
	|	ВЫБОР
	|		КОГДА НоменклатураКонтрагентовБЭД.Идентификатор ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьЗаписьВРегистре,
	|	ТаблицаНоменклатурыКонтрагентов.НаименованиеНоменклатурыКонтрагента КАК НаименованиеНоменклатурыКонтрагента,
	|	ЕСТЬNULL(НоменклатураКонтрагентовБЭД.Наименование, """") КАК Наименование,
	|	ЕСТЬNULL(НоменклатураКонтрагентовБЭД.НаименованиеХарактеристики, """") КАК НаименованиеХарактеристики,
	|	ЕСТЬNULL(НоменклатураКонтрагентовБЭД.ЕдиницаИзмерения, """") КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(НоменклатураКонтрагентовБЭД.ЕдиницаИзмеренияКод, """") КАК КодОКЕИБазовойЕдиницыИзмерения,
	|	ЕСТЬNULL(НоменклатураКонтрагентовБЭД.Артикул, НоменклатураКонтрагентов.Артикул) КАК Артикул,
	|	ЕСТЬNULL(НоменклатураКонтрагентовБЭД.СтавкаНДС, """") КАК СтавкаНДС,
	|	ЕСТЬNULL(НоменклатураКонтрагентовБЭД.ИдентификаторНоменклатурыСервиса, """") КАК ИдентификаторНоменклатурыСервиса,
	|	ЕСТЬNULL(НоменклатураКонтрагентовБЭД.ИдентификаторХарактеристикиСервиса, """") КАК ИдентификаторХарактеристикиСервиса,
	|	ЕСТЬNULL(НоменклатураКонтрагентовБЭД.Номенклатура,
	|		НоменклатураКонтрагентов.Номенклатура) КАК Номенклатура,
	|	ЕСТЬNULL(НоменклатураКонтрагентовБЭД.Характеристика,
	|		НоменклатураКонтрагентов.Характеристика) КАК Характеристика,
	|	ЕСТЬNULL(НоменклатураКонтрагентовБЭД.Упаковка,
	|		НоменклатураКонтрагентов.Упаковка) КАК Упаковка,
	|	ЕСТЬNULL(НоменклатураКонтрагентовБЭД.ИдентификаторНоменклатуры, """") КАК ИдентификаторНоменклатуры,
	|	ЕСТЬNULL(НоменклатураКонтрагентовБЭД.ИдентификаторХарактеристики, """") КАК ИдентификаторХарактеристики,
	|	ЕСТЬNULL(НоменклатураКонтрагентовБЭД.ИдентификаторУпаковки, """") КАК ИдентификаторУпаковки,
	|	ВЫБОР
	|		КОГДА НоменклатураКонтрагентовБЭД.ИспользоватьХарактеристики ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|				КОГДА ТаблицаНоменклатурыКонтрагентов.ОбновляемаяНоменклатураКонтрагентов.Характеристика <> &ПустаяХарактеристика
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|		ИНАЧЕ НоменклатураКонтрагентовБЭД.ИспользоватьХарактеристики
	|	КОНЕЦ КАК ИспользоватьХарактеристики,
	|	ЕСТЬNULL(НоменклатураКонтрагентовБЭД.ШтрихкодКомбинации, """") КАК ШтрихкодКомбинации,
	|	ЕСТЬNULL(НоменклатураКонтрагентовБЭД.ШтрихкодыНоменклатуры, """") КАК ШтрихкодыНоменклатуры,
	|	ЕСТЬNULL(НоменклатураКонтрагентовБЭД.НаименованиеУпаковки, """") КАК НаименованиеУпаковки,
	|	ВЫБОР
	|		КОГДА НоменклатураКонтрагентовБЭД.Номенклатура ЕСТЬ NULL
	|			ТОГДА ТаблицаНоменклатурыКонтрагентов.ОбновляемаяНоменклатураКонтрагентов.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ НоменклатураКонтрагентовБЭД.Номенклатура.ЕдиницаИзмерения
	|	КОНЕЦ КАК БазоваяЕдиницаИзмеренияНоменклатуры,
	|	ВЫБОР
	|		КОГДА НоменклатураКонтрагентовБЭД.Упаковка ЕСТЬ NULL
	|			ТОГДА ТаблицаНоменклатурыКонтрагентов.ОбновляемаяНоменклатураКонтрагентов.Упаковка.Наименование
	|		ИНАЧЕ НоменклатураКонтрагентовБЭД.Упаковка.Наименование
	|	КОНЕЦ КАК НаименованиеУпаковкиИБ
	|ПОМЕСТИТЬ ДанныеНоменклатурыКонтрагентов
	|ИЗ
	|	ТаблицаНоменклатурыКонтрагентов КАК ТаблицаНоменклатурыКонтрагентов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаАктуальностиНоменклатурыКонтрагентов КАК ТаблицаАктуальностиНоменклатурыКонтрагентов
	|		ПО ТаблицаНоменклатурыКонтрагентов.ОбновляемаяНоменклатураКонтрагентов = ТаблицаАктуальностиНоменклатурыКонтрагентов.ОбновляемаяНоменклатураКонтрагентов
	|		ЛЕВОЕ СОЕДИНЕНИЕ НоменклатураКонтрагентовБЭД КАК НоменклатураКонтрагентовБЭД
	|		ПО ТаблицаНоменклатурыКонтрагентов.Владелец = НоменклатураКонтрагентовБЭД.Владелец
	|		И ТаблицаНоменклатурыКонтрагентов.Идентификатор = НоменклатураКонтрагентовБЭД.Идентификатор
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
	|		ПО ТаблицаНоменклатурыКонтрагентов.ОбновляемаяНоменклатураКонтрагентов = НоменклатураКонтрагентов.Ссылка
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Упаковка
	|;
	|/////////////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ШтрихкодыНоменклатурыИБ.Номенклатура КАК Номенклатура,
	|	ШтрихкодыНоменклатурыИБ.Характеристика КАК Характеристика,
	|	ШтрихкодыНоменклатурыИБ.Упаковка КАК Упаковка,
	|	МАКСИМУМ(ШтрихкодыНоменклатурыИБ.Штрихкод) КАК Штрихкод
	|ПОМЕСТИТЬ ШтрихкодыНоменклатурыИБ
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатурыИБ
	|ГДЕ
	|	(ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			ДанныеНоменклатурыКонтрагентов КАК ДанныеНоменклатурыКонтрагентов
	|		ГДЕ
	|			ДанныеНоменклатурыКонтрагентов.Номенклатура = ШтрихкодыНоменклатурыИБ.Номенклатура
	|			И ДанныеНоменклатурыКонтрагентов.Характеристика = ШтрихкодыНоменклатурыИБ.Характеристика
	|			И ВЫБОР
	|				КОГДА ДанныеНоменклатурыКонтрагентов.Упаковка = ДанныеНоменклатурыКонтрагентов.БазоваяЕдиницаИзмеренияНоменклатуры
	|					ТОГДА ДанныеНоменклатурыКонтрагентов.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|				ИНАЧЕ ДанныеНоменклатурыКонтрагентов.Упаковка
	|			КОНЕЦ = ШтрихкодыНоменклатурыИБ.Упаковка))
	|СГРУППИРОВАТЬ ПО
	|	ШтрихкодыНоменклатурыИБ.Номенклатура,
	|	ШтрихкодыНоменклатурыИБ.Характеристика,
	|	ШтрихкодыНоменклатурыИБ.Упаковка
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ШтрихкодыНоменклатурыИБ.Штрихкод) = 1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Упаковка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеНоменклатурыКонтрагентов.НоменклатураКонтрагента КАК НоменклатураКонтрагента,
	|	ЕСТЬNULL(УпаковкиЕдиницыИзмеренияПоОКЕИ.Наименование, """") КАК НаименованиеБазовойЕдиницыИзмеренияПоОКЕИ,
	|	ДанныеНоменклатурыКонтрагентов.Владелец,
	|	ДанныеНоменклатурыКонтрагентов.Идентификатор,
	|	ДанныеНоменклатурыКонтрагентов.Недействителен,
	|	ДанныеНоменклатурыКонтрагентов.ЕстьЗаписьВРегистре,
	|	ДанныеНоменклатурыКонтрагентов.НаименованиеНоменклатурыКонтрагента,
	|	ДанныеНоменклатурыКонтрагентов.Наименование КАК Наименование,
	|	ДанныеНоменклатурыКонтрагентов.НаименованиеХарактеристики,
	|	ДанныеНоменклатурыКонтрагентов.КодОКЕИБазовойЕдиницыИзмерения,
	|	ДанныеНоменклатурыКонтрагентов.Артикул,
	|	ДанныеНоменклатурыКонтрагентов.СтавкаНДС,
	|	ДанныеНоменклатурыКонтрагентов.ИдентификаторНоменклатурыСервиса,
	|	ДанныеНоменклатурыКонтрагентов.ИдентификаторХарактеристикиСервиса,
	|	ДанныеНоменклатурыКонтрагентов.Номенклатура,
	|	ДанныеНоменклатурыКонтрагентов.Характеристика,
	|	ДанныеНоменклатурыКонтрагентов.Упаковка,
	|	ДанныеНоменклатурыКонтрагентов.ИдентификаторНоменклатуры,
	|	ДанныеНоменклатурыКонтрагентов.ИдентификаторХарактеристики,
	|	ДанныеНоменклатурыКонтрагентов.ИдентификаторУпаковки,
	|	ДанныеНоменклатурыКонтрагентов.ИспользоватьХарактеристики,
	|	ДанныеНоменклатурыКонтрагентов.ШтрихкодыНоменклатуры,
	|	ДанныеНоменклатурыКонтрагентов.НаименованиеУпаковки,
	|	ВЫБОР
	|		КОГДА ДанныеНоменклатурыКонтрагентов.ЕстьЗаписьВРегистре
	|			ТОГДА ДанныеНоменклатурыКонтрагентов.ШтрихкодКомбинации
	|		ИНАЧЕ ЕСТЬNULL(ШтрихкодыНоменклатурыИБ.Штрихкод, """")
	|	КОНЕЦ КАК ШтрихкодКомбинации,
	|	ДанныеНоменклатурыКонтрагентов.БазоваяЕдиницаИзмеренияНоменклатуры,
	|	ДанныеНоменклатурыКонтрагентов.НаименованиеУпаковкиИБ
	|ИЗ
	|	ДанныеНоменклатурыКонтрагентов КАК ДанныеНоменклатурыКонтрагентов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмеренияПоОКЕИ
	|		ПО ДанныеНоменклатурыКонтрагентов.КодОКЕИБазовойЕдиницыИзмерения = УпаковкиЕдиницыИзмеренияПоОКЕИ.Код
	|		И ДанныеНоменклатурыКонтрагентов.КодОКЕИБазовойЕдиницыИзмерения <> """"
	|		И УпаковкиЕдиницыИзмеренияПоОКЕИ.Владелец = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.БазовыеЕдиницыИзмерения)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ШтрихкодыНоменклатурыИБ КАК ШтрихкодыНоменклатурыИБ
	|		ПО ДанныеНоменклатурыКонтрагентов.Номенклатура = ШтрихкодыНоменклатурыИБ.Номенклатура
	|		И ДанныеНоменклатурыКонтрагентов.Характеристика = ШтрихкодыНоменклатурыИБ.Характеристика
	|		И ДанныеНоменклатурыКонтрагентов.Упаковка = ШтрихкодыНоменклатурыИБ.Упаковка";
	
	ПакетЗапросов.Добавить(ТекстЗапроса);

	Возврат СтрСоединить(ПакетЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());

КонецФункции

//-- Локализация

Функция ТекстЗапросаТаблицыАктуальностиНоменклатурыКонтрагентов()
	
	ТабличныеЧастиНеактуальнойНоменклатуры = Новый Массив;
	ТабличныеЧастиНеактуальнойНоменклатуры.Добавить("Документ.ЗаказПоставщику.Товары");
	ТабличныеЧастиНеактуальнойНоменклатуры.Добавить("Документ.АктОРасхожденияхПослеПриемки.Товары");
	ТабличныеЧастиНеактуальнойНоменклатуры.Добавить("Документ.ВозвратТоваровПоставщику.Товары");
	ТабличныеЧастиНеактуальнойНоменклатуры.Добавить("Документ.ВыкупВозвратнойТарыУПоставщика.Товары");
	ТабличныеЧастиНеактуальнойНоменклатуры.Добавить("Документ.ДоверенностьВыданная.Товары");
	ТабличныеЧастиНеактуальнойНоменклатуры.Добавить("Документ.ПоступлениеТоваровНаСклад.Товары");
	//++ Локализация
	ТабличныеЧастиНеактуальнойНоменклатуры.Добавить("Документ.ЗаявлениеОВвозеТоваров.Товары");
	//-- Локализация
	ТабличныеЧастиНеактуальнойНоменклатуры.Добавить("Документ.КорректировкаПриобретения.Товары");
	ТабличныеЧастиНеактуальнойНоменклатуры.Добавить("Документ.ОтчетКомитенту.Товары");
	ТабличныеЧастиНеактуальнойНоменклатуры.Добавить("Документ.ОтчетКомитентуОСписании.Товары");
	ТабличныеЧастиНеактуальнойНоменклатуры.Добавить("Документ.ПриобретениеТоваровУслуг.Товары");
	ТабличныеЧастиНеактуальнойНоменклатуры.Добавить("Документ.РегистрацияЦенНоменклатурыПоставщика.Товары");
	ТабличныеЧастиНеактуальнойНоменклатуры.Добавить("Документ.УпаковочныйЛист.Товары");
	
	ТекстЗапроса = "";
	
	Шаблон = "ВЫБРАТЬ
	|	НеуникальнаяНоменклатураКонтрагентов.ОбновляемаяНоменклатураКонтрагентов КАК ОбновляемаяНоменклатураКонтрагентов,
	|	НеуникальнаяНоменклатураКонтрагентов.НоменклатураКонтрагента КАК НоменклатураКонтрагента,
	|	МАКСИМУМ(ТабличнаяЧастьДокумента.Ссылка.Дата) КАК Дата
	|ПОМЕСТИТЬ НоменклатураКонтрагентаСДатойАктуальности
	|ИЗ
	|	НеуникальнаяНоменклатураКонтрагентов КАК НеуникальнаяНоменклатураКонтрагентов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИмяТабличнойЧасти КАК ТабличнаяЧастьДокумента
	|		ПО НеуникальнаяНоменклатураКонтрагентов.НоменклатураКонтрагента = ТабличнаяЧастьДокумента.НоменклатураПартнера
	|ГДЕ
	|	ТабличнаяЧастьДокумента.Ссылка.Проведен
	|СГРУППИРОВАТЬ ПО
	|	НеуникальнаяНоменклатураКонтрагентов.ОбновляемаяНоменклатураКонтрагентов,
	|	НеуникальнаяНоменклатураКонтрагентов.НоменклатураКонтрагента";
	
	ПервыйПодзапрос = Истина;
	
	РазделительПодзапросов = Символы.ПС + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС + Символы.ПС;
	
	Для Каждого ТабличнаяЧасть Из ТабличныеЧастиНеактуальнойНоменклатуры Цикл
			
		ТекстПодзапроса = СтрЗаменить(Шаблон, "ИмяТабличнойЧасти", ТабличнаяЧасть);
		
		Если ПервыйПодзапрос Тогда
			
			ПервыйПодзапрос = Ложь;
			
		Иначе
			
			ТекстЗапроса = ТекстЗапроса + РазделительПодзапросов;
			ТекстПодзапроса = СтрЗаменить(ТекстПодзапроса, "ПОМЕСТИТЬ НоменклатураКонтрагентаСДатойАктуальности", "");
			
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + ТекстПодзапроса;
		
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов() +
	"ВЫБРАТЬ
	|	НоменклатураКонтрагентаСДатойАктуальности.ОбновляемаяНоменклатураКонтрагентов КАК
	|		ОбновляемаяНоменклатураКонтрагентов,
	|	МАКСИМУМ(ЕСТЬNULL(НоменклатураКонтрагентаСДатойАктуальности.Дата, ДАТАВРЕМЯ(1, 1, 1))) КАК Дата
	|ПОМЕСТИТЬ АктуальнаяДатаНоменклатуры
	|ИЗ
	|	НоменклатураКонтрагентаСДатойАктуальности КАК НоменклатураКонтрагентаСДатойАктуальности
	|СГРУППИРОВАТЬ ПО
	|	НоменклатураКонтрагентаСДатойАктуальности.ОбновляемаяНоменклатураКонтрагентов
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураКонтрагентаСДатойАктуальности.ОбновляемаяНоменклатураКонтрагентов КАК
	|		ОбновляемаяНоменклатураКонтрагентов,
	|	ВЫБОР
	|		КОГДА
	|			НоменклатураКонтрагентаСДатойАктуальности.ОбновляемаяНоменклатураКонтрагентов = НоменклатураКонтрагентаСДатойАктуальности.НоменклатураКонтрагента
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Недействителен
	|ПОМЕСТИТЬ ТаблицаАктуальностиНоменклатурыКонтрагентов
	|ИЗ
	|	НоменклатураКонтрагентаСДатойАктуальности КАК НоменклатураКонтрагентаСДатойАктуальности
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АктуальнаяДатаНоменклатуры КАК АктуальнаяДатаНоменклатуры
	|		ПО НоменклатураКонтрагентаСДатойАктуальности.ОбновляемаяНоменклатураКонтрагентов = АктуальнаяДатаНоменклатуры.ОбновляемаяНоменклатураКонтрагентов
	|		И НоменклатураКонтрагентаСДатойАктуальности.Дата = АктуальнаяДатаНоменклатуры.Дата
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НеуникальнаяНоменклатураКонтрагентов.ОбновляемаяНоменклатураКонтрагентов,
	|	ВЫБОР
	|		КОГДА
	|			МАКСИМУМ(НеуникальнаяНоменклатураКонтрагентов.НоменклатураКонтрагента) = НеуникальнаяНоменклатураКонтрагентов.ОбновляемаяНоменклатураКонтрагентов
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|ИЗ
	|	НеуникальнаяНоменклатураКонтрагентов КАК НеуникальнаяНоменклатураКонтрагентов
	|ГДЕ
	|	НЕ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			АктуальнаяДатаНоменклатуры КАК АктуальнаяДатаНоменклатуры
	|		ГДЕ
	|			АктуальнаяДатаНоменклатуры.ОбновляемаяНоменклатураКонтрагентов = НеуникальнаяНоменклатураКонтрагентов.ОбновляемаяНоменклатураКонтрагентов)
	|СГРУППИРОВАТЬ ПО
	|	НеуникальнаяНоменклатураКонтрагентов.ОбновляемаяНоменклатураКонтрагентов";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти
