
#Область ПрограммныйИнтерфейс

// Определяет разделы командного интерфейса, в которых предусмотрены панели отчетов.
// В Разделы необходимо добавить метаданные тех подсистем первого уровня,
// в которых размещены команды вызова панелей отчетов.
//
// Параметры:
//  Разделы - СписокЗначений - разделы, в которые выведены команды открытия панели отчетов:
//      * Значение - ОбъектМетаданных, Строка - подсистема раздела глобального командного интерфейса,
//                   либо ВариантыОтчетовКлиентСервер.ИдентификаторНачальнойСтраницы для начальной страницы.
//      * Представление - Строка - заголовок панели отчетов в этом разделе.
//
Процедура ОпределитьРазделыСВариантамиОтчетов(Разделы) Экспорт
	Если НЕ ПолучитьФункциональнуюОпцию("БазоваяВерсия") Тогда
		Разделы.Добавить(ВариантыОтчетовКлиентСервер.ИдентификаторНачальнойСтраницы(),
			НСтр("ru = 'Главное'"));
		
		Разделы.Добавить(Метаданные.Подсистемы.CRMИМаркетинг,
			НСтр("ru= 'Отчеты по CRM и маркетингу'"));
		
		Разделы.Добавить(Метаданные.Подсистемы.Закупки,
			НСтр("ru= 'Отчеты по закупкам'"));
		
		Разделы.Добавить(Метаданные.Подсистемы.Казначейство,
			НСтр("ru= 'Отчеты по казначейству'"));
		
		Разделы.Добавить(Метаданные.Подсистемы.Продажи,
			НСтр("ru= 'Отчеты по продажам'"));
		
		Разделы.Добавить(Метаданные.Подсистемы.Склад,
			НСтр("ru= 'Отчеты по складу'") );
		
		Разделы.Добавить(Метаданные.Подсистемы.ФинансовыйРезультатИКонтроллинг,
			НСтр("ru= 'Отчеты по финансовому результату'"));
			
			Разделы.Добавить(Метаданные.Подсистемы.Найти("Планирование"),
					НСтр("ru= 'Отчеты по планированию'"));
		
			
	
	КонецЕсли;
КонецПроцедуры

// Содержит настройки размещения вариантов отчетов в панели отчетов.
//
// Параметры:
//   Настройки - ТаблицаЗначений - см. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов.Настройки
//       Может использоваться для получения настроек варианта этого отчета при помощи функции ВариантыОтчетов.ОписаниеВарианта().
//
// Описание:
//   В данной процедуре необходимо указать каким именно образом предопределенные варианты отчетов
//   будут регистрироваться в системе и показываться в панели отчетов.
//
// Вспомогательные функции:
//   Отчет = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.<ИмяОтчета>);
//   Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Отчет, "<ИмяВарианта>");
//
//   Данные функции получают описание отчета или варианта отчета следующей структуры:
//       	|- Включен (Булево)
//            Если Ложь, то вариант отчета не регистрируется в подсистеме.
//              Используется для удаления технических и контекстных вариантов отчетов из всех интерфейсов.
//              Эти варианты отчета по прежнему можно открывать в форме отчета программно при помощи
//              параметров открытия (см. справку по "Расширение управляемой формы для отчета.КлючВарианта").
//       	|- ВидимостьПоУмолчанию (Булево)
//            Если Ложь, то вариант отчета по умолчанию скрыт в панели отчетов.
//              Пользователь может "включить" его в режиме настройки панели отчетов
//              или открыть через форму "Все отчеты".
//       	|- Описание (Строка)
//            Дополнительная информация по варианту отчета.
//              В панели отчетов выводится в качестве подсказки.
//              Должно расшифровывать для пользователя содержимое варианта отчета
//              и не должно дублировать наименование варианта отчета.
//       	|- Размещение (Соответствие) Настройки размещения варианта отчета в разделах
//           	|- Ключ     (ОбъектМетаданных) Подсистема, в которой размещается отчет или вариант отчета
//           	|- Значение (Строка)           Необязательный. Настройки размещения в подсистеме.
//               	|- ""        - Выводить отчет в своей группе обычным шрифтом.
//               	|- "Важный"  - Выводить отчет в своей группе жирным шрифтом.
//               	|- "СмТакже" - Выводить отчет в группе "См. также".
//
// Например:
//
//  (1) Оставить в подсистеме только один из вариантов отчета
//	Отчет = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ИмяОтчета);
//	Отчет.Размещение.Удалить(Метаданные.Подсистемы.ИмяРаздела);
//	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Отчет, "ИмяВарианта1");
//	Отчет.Размещение.Вставить(Метаданные.Подсистемы.ИмяРаздела);
//
//  (2) Отключить вариант отчета
//	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ИмяОтчета, "ИмяВарианта1");
//	Вариант.Включен = Ложь;
//
//  (3) Отключить все варианты отчета, кроме требуемого
//	Отчет = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ИмяОтчета);
//	Отчет.Включен = Ложь;
//	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Отчет, "ИмяВарианта");
//	Вариант.Включен = Истина;
//
//  (4) Результат исполнения любого из двух фрагментов кода будет одинаковым:
//	Отчет = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ИмяОтчета);
//	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Отчет, "ИмяВарианта1");
//	Вариант.Размещение.Удалить(Метаданные.Подсистемы.ИмяРаздела.Подсистемы.ИмяПодсистемы);
//	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Отчет, "ИмяВарианта2");
//	Вариант.Размещение.Удалить(Метаданные.Подсистемы.ИмяРаздела.Подсистемы.ИмяПодсистемы);
//	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Отчет, "ИмяВарианта3");
//	Вариант.Размещение.Удалить(Метаданные.Подсистемы.ИмяРаздела.Подсистемы.ИмяПодсистемы);
//
//	Отчет = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ИмяОтчета);
//	Отчет.Размещение.Удалить(Метаданные.Подсистемы.ИмяРаздела.Подсистемы.ИмяПодсистемы);
//	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Отчет, "ИмяВарианта1");
//	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Отчет, "ИмяВарианта2");
//	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Отчет, "ИмяВарианта3");
//	Отчет.Размещение.Вставить(Метаданные.Подсистемы.ИмяРаздела.Подсистемы.ИмяПодсистемы);
//
//
// Важно:
//   Начальная настройка размещения отчетов по разделам зачитывается из метаданных,
//   ее дублирование в коде не требуется.
//   
//   Настройки варианта имеют приоритет над настройками отчета.
//   
//   Настройки варианта при получении формируются из настроек отчета
//   и после получения не зависят от настроек отчета (становятся самостоятельными, см. примеры 3 и 4).
//
Процедура НастроитьВариантыОтчетов(Настройки) Экспорт
	ВыводитьВариантыОтчетов = Ложь;
	
	ИспользоватьПроизводство = ПолучитьФункциональнуюОпцию("ИспользоватьПроизводство");
	
	УчетНДСУП.НастроитьВариантыОтчетов(Настройки);
	
	#Область ABCXYZАнализНоменклатуры
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ABCXYZАнализНоменклатуры);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какие товары хорошо и стабильно продаются? 
		|Какие имеют низкий товарооборот и продаются нестабильно?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ЗапасыПоСкладам");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какие товары хорошо и стабильно продаются? 
		|Какие имеют низкий товарооборот и продаются нестабильно?'");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоНоменклатуреКонтекст");
	#КонецОбласти
	
	
	#Область ABCXYZРаспределениеКлиентов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ABCXYZРаспределениеКлиентов);
	ОписаниеОтчета.Описание = НСтр("ru = 'ABC/XYZ - распределение клиентов.'");
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	#Область АнализДоходовРасходов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализДоходовРасходов);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	
	// По предприятию.
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДоходыИРасходыПоПредприятию");
	ОписаниеВарианта.Описание = НСтр("ru= 'Постатейный анализ доходов и расходов по предприятию в целом с возможностью выбора аналитики.'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "РасходыПредприятия");
	ОписаниеВарианта.Описание = НСтр("ru= 'Постатейный анализ расходов по предприятию в целом.'");
	
	// По организациям.
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДоходыИРасходыПоОрганизациям");
	ОписаниеВарианта.Описание = НСтр("ru= 'Постатейный анализ доходов и расходов предприятия в разрезе организаций с возможностью выбора аналитики.'");
	//++ Локализация
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ВестиУправленческийУчетОрганизаций");
	//-- Локализация
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьУчетПрочихДоходовРасходовРегл");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "РасходыОрганизаций");
	ОписаниеВарианта.Описание = НСтр("ru= 'Постатейный анализ расходов предприятия в разрезе организаций.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьУчетПрочихДоходовРасходовРегл");
	#КонецОбласти

	
	#Область АнализЖурналаРегистрации
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализЖурналаРегистрации);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "АктивностьПользователя");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "АнализАктивностиПользователей");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "КонтрольЖурналаРегистрации");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПродолжительностьРаботыРегламентныхЗаданий");
	#КонецОбласти
	
	
	#Область АнализЗависимостиОтКлиентовABC
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализЗависимостиОтКлиентовABC);
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, ОписаниеОтчета, ВыводитьВариантыОтчетов);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какие группы клиентов покупают более всего?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Основной");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ изменения количества и соотношения клиентов, покупающих много, средне и мало.'");
	#КонецОбласти
	
	
	#Область АнализИсполненияАссортимента
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализИсполненияАссортимента);
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль соблюдения требований ассортиментной политики.
		|Какие квоты назначены на товары? Какие товары представлены в магазинах?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "АнализИсполненияАссортимента");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Истина;
	ОписаниеВарианта.Описание = НСтр("ru= 'Соответствует ли количество товаров установленным квотам:
		|- по вводу в ассортимент,
		|- по наличию в магазинах?'");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоКатегорииКонтекст");
	#КонецОбласти
	
	
	#Область АнализКлиентскойБазыBCG
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализКлиентскойБазыBCG);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Комплексный анализ клиентской базы на основе АВС/XYZ-классификации клиентов.
		|С какими клиентам перспективно работать?'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'A-класс
		|B-класс
		|C-класс
		|X-класс
		|Y-класс
		|Z-класс
		|Потерянные
		|Потенциальные
		|Текущая классификация
		|Предыдущая классификация
		|ABC/XYZ распределение
		|Изменения ABC
		|Изменения XYZ'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru= 'Анализ на дату
		|Тип параметра классификации
		|Дата текущего среза
		|Дата предыдущего среза'");
	#КонецОбласти
	
	
	#Область АнализЛояльностиКлиентовXYZ
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализЛояльностиКлиентовXYZ);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какие клиенты покупают регулярно?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Основной");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какие клиенты покупают стабильно?
		|Какие клиенты являются разовыми?'");
	#КонецОбласти
	
		
	#Область АнализОстатковТоваровОрганизаций
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализОстатковТоваровОрганизаций);
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область АнализПервичногоИнтереса
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализПервичногоИнтереса);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сколько клиентов было привлечено?
		|Сколько было заключено сделок?
		|Анализ в разрезе источников воздействия, каналов первичного интереса и типам источников.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПервичныйИнтерес");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сравнение источников первичного интереса по количеству зарегистрированных клиентов и заключенных сделок.'");
	#КонецОбласти
	
	
	#Область АнализПервичногоСпроса
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализПервичногоСпроса);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Насколько удовлетворен спрос клиентов?
		|Какие причины неудовлетворения спроса?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "УдовлетворениеПервичногоСпроса");
	ОписаниеВарианта.Описание = НСтр("ru= 'Каковы основные причины неудовлетворения спроса в разрезе сделок и менеджеров?
		|По каким сделкам спрос был удовлетворен?'");
	#КонецОбласти
	
	
	#Область АнализПретензийКлиентов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализПретензийКлиентов);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сводный анализ регистрации и удовлетворения претензий от клиентов.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "АнализВозникновенияПретензийКлиентов");
	ОписаниеВарианта.Описание = НСтр("ru= 'Рейтинг причин возникновения претензий, подразделений и сотрудников по количеству претензий.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "АнализУдовлетворенияПретензий");
	ОписаниеВарианта.Описание = НСтр("ru= 'Соотношение удовлетворенных и неудовлетворенных претензий в разрезе причин.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДинамикаВозникновения");
	ОписаниеВарианта.Описание = НСтр("ru= 'Соотношение поступивших и отработанных претензий за период помесячно.'");
	#КонецОбласти
		
	
	#Область АнализПричинОтменыЗаказовКлиентов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализПричинОтменыЗаказовКлиентов);
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, ОписаниеОтчета, ВыводитьВариантыОтчетов);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'По каким причинам чаще всего заказы выполняются частично или не выполняются полностью?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПричиныОтменыЗаказовКлиентовБезЦеновыхГрупп");
	ОписаниеВарианта.Описание = НСтр("ru= 'По каким причинам чаще всего заказы выполняются частично или не выполняются полностью?
		|У каких менеджеров более всего выполненных не полностью заказов?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеИспользоватьЦеновыеГруппы");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПричиныОтменыЗаказовКлиентовСЦеновымиГруппами");
	ОписаниеВарианта.Описание = НСтр("ru= 'По каким причинам чаще всего заказы выполняются частично или не выполняются полностью?
		|У каких менеджеров более всего выполненных не полностью заказов?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьЦеновыеГруппы");
	#КонецОбласти
	
	
	#Область АнализПричинОтменыЗаказовПоставщикам
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализПричинОтменыЗаказовПоставщикам);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'По каким причинам чаще всего заказы выполняются частично или не выполняются полностью?
		|У каких поставщиков более всего выполненных не полностью заказов?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "РейтингПричинОтменыЗаказовПоставщикам");
	ОписаниеВарианта.Описание = НСтр("ru= 'Соотношение причин отмены с нашей стороны и со стороны поставщика.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СтатистикаОтменыЗаказовПоставщикам");
	ОписаниеВарианта.Описание = НСтр("ru= 'Соотношение заказанных и отмененных строк в заказах поставщикам.'");
	#КонецОбласти
	
	
	#Область АнализПричинОтменыЗаказовПоставщикамПоДокументу
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализПричинОтменыЗаказовПоставщикамПоДокументу);
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область АнализПричинПроигрышаСделок
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализПричинПроигрышаСделок);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какие причины привели к проигрышу сделок?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПричиныПроигрышаСделок");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какие причины привели к проигрышу сделок?
		|У каких менеджеров?
		|С какими клиентами?'");
	#КонецОбласти
	
	
	
	#Область СебестоимостьТоваров

	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СебестоимостьТоваров);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ себестоимости товаров и сумм ТЗР.'");
	
	// Общие.
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СебестоимостьТоваровБазовая");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ себестоимости товаров и сумм ТЗР  по предприятию,
		|распределенных на себестоимость реализованных товаров.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("БазоваяВерсия");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СебестоимостьТоваровПоОперациямБазовая");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ себестоимости товаров и сумм ТЗР  по предприятию в разрезе операций.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("БазоваяВерсия");
	
	// По организациям.
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СебестоимостьТоваровПоОрганизациям");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ себестоимости товаров и сумм ТЗР по организациям,
		|распределенных на себестоимость реализованных товаров.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СебестоимостьТоваровПоОперациямПоОрганизациям");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ себестоимости товаров и сумм ТЗР по организациям в разрезе операций.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДинамикаЗакупокОрганизаций");
	ИзменитьРазмещениеВариантаОтчета(ОписаниеВарианта.Размещение, "Удалить", "ФинансовыйРезультатИКонтроллинг.СебестоимостьЗапасов");
	ИзменитьРазмещениеВариантаОтчета(ОписаниеВарианта.Размещение, "Вставить", "Закупки.Закупки");
	ОписаниеВарианта.Описание = НСтр("ru= 'Помесячные объемы закупок за выбранный период по поставщикам и номенклатуре.
		|Возможен анализ по периодам - квартал, месяц, неделя, день.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	
	// По предприятию.
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СебестоимостьТоваровПоПредприятию");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ себестоимости товаров и сумм ТЗР по предприятию,
		|распределенных на себестоимость реализованных товаров.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СебестоимостьТоваровПоОперациямПоПредприятию");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ себестоимости товаров и сумм ТЗР по предприятию в разрезе операций.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДинамикаЗакупокПредприятия");
	ИзменитьРазмещениеВариантаОтчета(ОписаниеВарианта.Размещение, "Удалить", "ФинансовыйРезультатИКонтроллинг.СебестоимостьЗапасов");
	ИзменитьРазмещениеВариантаОтчета(ОписаниеВарианта.Размещение, "Вставить", "Закупки.Закупки");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Истина;
	ОписаниеВарианта.Описание = НСтр("ru= 'Помесячные объемы закупок за выбранный период по поставщикам и номенклатуре.
		|Возможен анализ по периодам - квартал, месяц, неделя, день.'");
	
	#КонецОбласти

	
	#Область АнализСтатейКредитовИДепозитов
	#КонецОбласти

	#Область АнализФинансовыхРезультатов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализФинансовыхРезультатов);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ прибылей и убытков по статьям и направлениям деятельности.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОтчетОПрибыляхИУбыткахПоНаправлениям");
	ОписаниеВарианта.Описание = НСтр("ru= 'Постатейный анализ финансовых результатов по направлениям деятельности.'");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоНаправлениямДеятельности");
	#КонецОбласти
	
	
	#Область АнализЦенПоставщиков
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализЦенПоставщиков);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область АнализЭффективностиРаботыТорговыхПредставителей
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализЭффективностиРаботыТорговыхПредставителей);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ того, насколько успешно торговые представители справляются с поставленными заданиями.
		|Отчет используется только при схеме работы с выдачей заданий торговым представителям.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Основной");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ того, насколько успешно торговые представители справляются с поставленными заданиями.
		|Отчет используется только при схеме работы с выдачей заданий торговым представителям.'");
	#КонецОбласти
	
	
	#Область БонусныеБаллы
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.БонусныеБаллы);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сколько осталось бонусных баллов, начисленных клиенту?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОстаткиБонусныхБаллов");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сколько осталось бонусных баллов, начисленных клиенту?
		|По каким бонусным программам остались начисленные баллы?'");
	#КонецОбласти

	#Область СостояниеКассовыхСмен
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СостояниеКассовыхСмен);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru = 'Анализ состояния кассовых смен по организациям и складам.
		|Контроль создания отчетов о розничных продажах/возвратах в разрезе применяемых СНО.'");
	#КонецОбласти
		
		
	#Область ВаловаяПрибыльПоОплаченнымОтгрузкам
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВаловаяПрибыльПоОплаченнымОтгрузкам);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВаловаяПрибыльПоПолностьюОплаченнымОтгрузкам");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какие подразделения и менеджеры принесли более всего прибыли по оплате?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВаловаяПрибыльПоПолностьюОплаченнымОтгрузкамБазовая");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какие клиенты принесли более всего прибыли по оплате?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("БазоваяВерсия");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВаловаяПрибыльПоЧастичноОплаченнымОтгрузкам");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какие подразделения и менеджеры принесли более всего прибыли по частичной оплате?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВаловаяПрибыльПоЧастичноОплаченнымОтгрузкамБазовая");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какие клиенты принесли более всего прибыли по частичной оплате?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("БазоваяВерсия");
	#КонецОбласти
	

	#Область ВедомостьБезналичныхДенежныхСредств
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьБезналичныхДенежныхСредств);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоДням");
	ОписаниеВарианта.Описание = НСтр("ru='Есть ли расхождения данных системы с загруженными выписками банка?'");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ВедомостьПоДнямОдинСчет");
	#КонецОбласти
	
	
	#Область ВедомостьПоДенежнымСредствам
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьПоДенежнымСредствам);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоДенежнымСредствам");
	ОписаниеВарианта.Описание = НСтр("ru='Сколько денежных средств на расчетных счетах и в кассах?'");
	#КонецОбласти
	
	
	#Область ВедомостьПоДенежнымСредствамУПодотчетныхЛиц
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьПоДенежнымСредствамУПодотчетныхЛиц);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоДенежнымСредствамУПодотчетныхЛиц");
	ОписаниеВарианта.Описание = НСтр("ru='Сколько денежных средств на руках у подотчетных лиц?'");
	#КонецОбласти
	
	
	#Область ДвижениеДенежныхСредств
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ДвиженияДенежныхСредств);
	ОписаниеОтчета.Наименование = НСтр("ru='Движение денежных средств'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДвиженияДенежныхСредств");
	ОписаниеВарианта.Описание = НСтр("ru='Какие движения денежных средств происходили и планируются помесячно за период?
		|Из каких источников, на какие направления использования, по каким статьям ДДС?'");
	ОписаниеВарианта.Наименование = НСтр("ru='Движение денежных средств'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДвиженияДенежныхСредствПоНаправлениямДеятельности");
	ОписаниеВарианта.Описание = НСтр("ru='Какие движения денежных средств происходили и планируются помесячно за период по направлению деятельности?
		|Из каких источников, на какие направления использования, по каким статьям ДДС?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	ОписаниеВарианта.Наименование = НСтр("ru='Движение денежных средств по направлениям деятельности'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "КорреспонденцииДвиженийДенежныхСредств");
	ОписаниеВарианта.Описание = НСтр("ru='Какова связь мест хранения денежных средств с источниками поступления и направлениями использования?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	ОписаниеВарианта.Наименование = НСтр("ru='Корреспонденции движения денежных средств'");
	#КонецОбласти
	
	
	#Область ВедомостьПоПартиямТоваров

	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьПоПартиямТоваров);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль поступлений и списаний партий товаров.
		|Контроль распределения расходов механизмом партионного учета.'");
	//++ Локализация
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьПартионныйУчет");
	//-- Локализация
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоПартиямТоваровПредприятия");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль поступлений и списаний партий товаров.
		|Контроль распределения расходов механизмом партионного учета.'");
	//++ Локализация
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьПартионныйУчет");
	//-- Локализация
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьПередачиТоваровМеждуОрганизациями");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоПартиямТоваровОрганизаций");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль поступлений и списаний партий товаров.
		|Контроль распределения расходов механизмом партионного учета.'");
	//++ Локализация
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьПартионныйУчет");
	//-- Локализация
	
	#КонецОбласти
	
	
	#Область ВедомостьПоПереданнойВозвратнойТаре
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьПоПереданнойВозвратнойТаре);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сводный анализ оборотов переданной клиентам возвратной тары за определенный период.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоПереданнойВозвратнойТаре");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сводный анализ оборотов переданной клиентам возвратной тары за определенный период.
		|Какова ее стоимость и количество?'");
	#КонецОбласти
	
	
	#Область ВедомостьПоПринятойВозвратнойТаре
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьПоПринятойВозвратнойТаре);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сводный анализ оборотов принятой от поставщиков тары за определенный период.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоПринятойВозвратнойТаре");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сводный анализ оборотов принятой от поставщиков тары за определенный период.
		|Какова ее стоимость и количество?'");
	#КонецОбласти
	

	#Область ВедомостьПоСериямНоменклатуры
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьПоСериямНоменклатуры);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьСерииНоменклатуры");
	ОписаниеВарианта.Описание = ?(ИспользоватьПроизводство,
									НСтр("ru= 'Сводный анализ движения серии номенклатуры на складах и в производстве.'"),
									НСтр("ru= 'Сводный анализ движения серии номенклатуры на складах.'"));
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоСериямНоменклатуры");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьСерииНоменклатуры");
	ОписаниеВарианта.Описание = ?(ИспользоватьПроизводство,
									НСтр("ru= 'Сводный анализ движения серии номенклатуры на складах и в производстве.'"),
									НСтр("ru= 'Сводный анализ движения серии номенклатуры на складах.'"));
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ВедомостьПоСериямНоменклатурыКонтекст");
	#КонецОбласти
	
	#Область ВедомостьПоТоварамНаСкладах
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьПоТоварамНаСкладах);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ количественного движения товаров на складах предприятия.'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоТоварамНаСкладах");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ количественного движения товаров на складах предприятия.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОстаткиНаСкладе");
	ОписаниеВарианта.Описание = НСтр("ru= 'Остатки товаров на складах и в помещениях предприятия.'");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ОстаткиИОборотыСГруппировкойПоСкладам");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ОтгружаемыеТовары");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ОтгружаемыеТоварыПоПересчетуКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоНоменклатуреКонтекст");
	#КонецОбласти
	
	#Область ВедомостьПоТоварамНаСкладахВЦенахНоменклатуры
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьПоТоварамНаСкладахВЦенахНоменклатуры);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ движений и оценка стоимости товаров на складах по выбранному виду цен.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьВЦенахНоменклатуры");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ движений и оценка стоимости товаров на складах по выбранному виду цен.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОценкаОстатковТоваров");
	ОписаниеВарианта.Описание = НСтр("ru= 'Оценка стоимости остатков товаров на складах по выбранному виду цен.'");
	#КонецОбласти
	
	#Область ВедомостьПоТоварамОрганизаций
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьПоТоварамОрганизаций);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль остатков и движений товаров по организациям.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДвиженияТоваровОрганизаций");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ движений товаров на складах и организациях.
		|В какой организации и по какому складу есть товар и были движения за период?'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДоступныеДляПродажиТоварыОрганизаций");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какие товары доступны на складах для продажи от имени выбранной организации?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДвиженияТоваровПереданных");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ движений товаров, переданных на хранение.
		|У каких партнеров и по каким договорам есть наш товар и были движения за период?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДвиженияТоваровПереданныхНаКомиссию25");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ движений товаров, переданных на комиссию.
		|У каких партнеров и по каким договорам есть наш товар и были движения за период?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьКомиссиюПриПродажах");
	ПодсистемаОтчета = Метаданные.НайтиПоПолномуИмени("Подсистема.Продажи.Подсистема.КомиссионныеПродажи");
	ОписаниеВарианта.Размещение.Вставить(ПодсистемаОтчета);
	ОписаниеВарианта.ВидимостьПоУмолчанию = Истина;
	ОтключитьВариантДвиженияТоваровПереданныхПереработчикам = Истина;
	Если ОтключитьВариантДвиженияТоваровПереданныхПереработчикам Тогда
		ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ДвиженияТоваровПереданныхПереработчикам");
	КонецЕсли;
	
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ОстаткиТоваровОрганизаций");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоНоменклатуреКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоНоменклатуреКонтекстБазовая");
	//++ Локализация
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДвиженияТоваровОрганизацийПоРНПТ");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль остатков и движений прослеживаемых импортных товаров по организациям.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьУчетПрослеживаемыхИмпортныхТоваров");
	//-- Локализация
	#КонецОбласти
	
	#Область ВедомостьПоТоварамОрганизацийВЦенахНоменклатуры
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьПоТоварамОрганизацийВЦенахНоменклатуры);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ движений и оценка стоимости товаров на складах и организациях по виду цен.'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоТоварамОрганизацийВЦенахНоменклатуры");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ движений и оценка стоимости товаров на складах и организациях по виду цен.
									|В какой организации, по какому складу есть товар и какова его стоимость?'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДвиженияТоваровПереданных");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ движений и оценка стоимости переданных на хранение товаров.
									|У каких партнеров есть наш товар и какова его оценка стоимости?'");
	ПодсистемаОтчета = Метаданные.НайтиПоПолномуИмени("Подсистема.Продажи.Подсистема.РозничныеПродажи");
	ОписаниеВарианта.Размещение.Удалить(ПодсистемаОтчета);
	ПодсистемаОтчета = Метаданные.НайтиПоПолномуИмени("Подсистема.Продажи.Подсистема.ОптовыеПродажи");
	ОписаниеВарианта.Размещение.Вставить(ПодсистемаОтчета);
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Истина;
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДвиженияТоваровПереданныхНаКомиссию25");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ движений и оценка стоимости переданных на комиссию товаров.
									|У каких партнеров есть наш товар и какова его оценка стоимости?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьКомиссиюПриПродажах");
	ПодсистемаОтчета = Метаданные.НайтиПоПолномуИмени("Подсистема.Продажи.Подсистема.РозничныеПродажи");
	ОписаниеВарианта.Размещение.Удалить(ПодсистемаОтчета);
	ПодсистемаОтчета = Метаданные.НайтиПоПолномуИмени("Подсистема.Продажи.Подсистема.КомиссионныеПродажи");
	ОписаниеВарианта.Размещение.Вставить(ПодсистемаОтчета);
	ОписаниеВарианта.ВидимостьПоУмолчанию = Истина;
	#КонецОбласти
	
	#Область ВедомостьРасчетовМеждуОрганизациями
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьРасчетовМеждуОрганизациями);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль взаиморасчетов между организациями, входящими в состав предприятия.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "РасчетыПоЗакупкам");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль взаиморасчетов между организациями, входящими в состав предприятия.
		|Сколько организация-покупатель должна организации-продавцу?
		|Уменьшился или увеличился долг за выбранный период?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "РасчетыПоПродажам");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль взаиморасчетов между организациями, входящими в состав предприятия.
		|Сколько организация-продавец должна получить от организации-покупателя?
		|Уменьшился или увеличился долг за выбранный период?'");
	#КонецОбласти

	
	#Область ВедомостьРасчетовСКлиентами
	ОписаниеВедомостьРасчетовСКлиентами = НСтр("ru= 'Детальный анализ взаиморасчетов с клиентами.
		|Как изменялась задолженность за указанный период?
		|Какое текущее сальдо расчетов?'");
	
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьРасчетовСКлиентами);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = ОписаниеВедомостьРасчетовСКлиентами;
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Ведомость");
	ОписаниеВарианта.Описание = ОписаниеВедомостьРасчетовСКлиентами;
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьБазовая");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("БазоваяВерсия");
	ОписаниеВарианта.Описание = ОписаниеВедомостьРасчетовСКлиентами;
	#КонецОбласти
	
	
	#Область ВедомостьРасчетовСПартнерами
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьРасчетовСПартнерами);
	ОписаниеВедомостьРасчетовСПартнерами = НСтр("ru= 'Сводный анализ взаиморасчетов с клиентами и поставщиками.
											|Как изменялась задолженность за указанный период?
											|Какое текущее сальдо расчетов?'");
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, ОписаниеОтчета, Ложь);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "РасчетыСПартнерами");
	ОписаниеВарианта.Описание = ОписаниеВедомостьРасчетовСПартнерами;
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "РасчетыСПартнерамиБазовая");
	ОписаниеВарианта.Описание = ОписаниеВедомостьРасчетовСПартнерами;
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.ФункциональныеОпции.Добавить("БазоваяВерсия");
	
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоКонтрагентамКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоКонтрагентамКонтекстБазовая");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоПартнерамКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоПартнерамКонтекстБазовая");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоСверкеВзаиморасчетовКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоСверкеВзаиморасчетовКонтекстБазовая");
	#КонецОбласти
	
	
	#Область ВероятностныйПрогноз
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВероятностныйПрогноз);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какая вероятность выигрыша сделок на каждом из этапов процесса продаж?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Основной");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какая вероятность выигрыша сделок на каждом из этапов процесса продаж?'");
	#КонецОбласти
	
	
	#Область ВоронкаПродаж
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВоронкаПродаж);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какова эффективность каждой стадии продажи?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Основной");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какова эффективность каждой стадии продажи?'");
	#КонецОбласти
	
		
	#Область ВыполнениеУсловийСоглашенийСКлиентами
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВыполнениеУсловийСоглашенийСКлиентами);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль выполнения клиентами условий соглашений, в которых заданы регулярные условия продаж.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Основной");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль выполнения клиентами условий соглашений, в которых заданы регулярные условия продаж.'");
	#КонецОбласти
	
	
	#Область ВыручкаИСебестоимостьПродаж

	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВыручкаИСебестоимостьПродаж);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	
	// Общие.
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Финансовый анализ продаж по аналитикам организации, клиенты, менеджеры, 
		|склады, номенклатура и другим.'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДинамикаПродаж");
	ОписаниеВарианта.Описание = НСтр("ru= 'Помесячные объемы продаж за выбранный период по видам номенклатуры.
		|Возможен анализ по периодам - квартал, месяц, неделя, день.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеИспользоватьБизнесРегионы");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДинамикаПродажБизнесРегионы");
	ОписаниеВарианта.Описание = НСтр("ru= 'Помесячные объемы продаж за выбранный период по бизнес-регионам и видам номенклатуры.
		|Возможен анализ по периодам - квартал, месяц, неделя, день.'");
	Подсистема = Метаданные.НайтиПоПолномуИмени("Подсистема.Продажи.Подсистема.ОптовыеПродажи");
	ОписаниеВарианта.Размещение.Вставить(Подсистема);
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьБизнесРегионы");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПродажиПоПартнерамБазовая");
	ОписаниеВарианта.Описание = НСтр("ru= 'По каким клиентам получена наибольшая валовая прибыль?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("БазоваяВерсия");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПродажиПоПоставщикам");
	ОписаниеВарианта.Описание = НСтр("ru= 'По товарам от каких поставщиков получена наибольшая валовая прибыль?'");
	Подсистема = Метаданные.НайтиПоПолномуИмени("Подсистема.Финансы.Подсистема.ФинансовыйРезультат");
	ОписаниеВарианта.Размещение.Удалить(Подсистема);
	
	// По предприятию.
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПродажиСводно");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сводный анализ продаж по подразделениям (магазинам), 
		|менеджерам и номенклатуре.'");
	Подсистема = Метаданные.НайтиПоПолномуИмени("Подсистема.Продажи.Подсистема.ОптовыеПродажи");
	ОписаниеВарианта.Размещение.Вставить(Подсистема, "Важный");
	Подсистема = Метаданные.НайтиПоПолномуИмени("Подсистема.Финансы.Подсистема.ФинансовыйРезультат");
	ОписаниеВарианта.Размещение.Вставить(Подсистема);
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьПередачиТоваровМеждуОрганизациями");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПродажиСводноБазовая");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сводный анализ продаж по организациям, подразделениям (магазинам), 
		|менеджерам и номенклатуре.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("БазоваяВерсия");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ДинамикаПродажКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоНоменклатуреКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПродажиПоЗаказуКонтекст");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПродажиПоСделкамПоПредприятию");
	ОписаниеВарианта.Описание = НСтр("ru= 'По каким видам сделок и сделкам больше всего продаж клиентам по предприятию?'");
	Подсистема = Метаданные.НайтиПоПолномуИмени("Подсистема.Продажи.Подсистема.ОптовыеПродажи");
	ОписаниеВарианта.Размещение.Удалить(Подсистема);
	Подсистема = Метаданные.НайтиПоПолномуИмени("Подсистема.ФинансовыйРезультатИКонтроллинг.Подсистема.ФинансовыйРезультат");
	ОписаниеВарианта.Размещение.Удалить(Подсистема);
	Подсистема = Метаданные.НайтиПоПолномуИмени("Подсистема.CRMИМаркетинг.Подсистема.ПроведениеСделокОтчеты");
	ОписаниеВарианта.Размещение.Вставить(Подсистема);
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьСделкиСКлиентами");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьПередачиТоваровМеждуОрганизациями");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Истина;
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПродажиПоПартнерамПоПредприятию");
	ОписаниеВарианта.Описание = НСтр("ru= 'По каким клиентам получена наибольшая валовая прибыль по предприятию?'");
	Подсистема = Метаданные.НайтиПоПолномуИмени("Подсистема.Финансы.Подсистема.ФинансовыйРезультат");
	ОписаниеВарианта.Размещение.Удалить(Подсистема);
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьПередачиТоваровМеждуОрганизациями");
	
	// По организациям.
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПродажиОрганизаций");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сводный анализ продаж по организациям, подразделениям (магазинам), 
		|менеджерам и номенклатуре.'");
	Подсистема = Метаданные.НайтиПоПолномуИмени("Подсистема.Финансы.Подсистема.ФинансовыйРезультат");
	ОписаниеВарианта.Размещение.Вставить(Подсистема);
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПродажиПоСделкамПоОрганизациям");
	ОписаниеВарианта.Описание = НСтр("ru= 'По каким видам сделок и сделкам больше всего продаж клиентам по организациям?'");
	Подсистема = Метаданные.НайтиПоПолномуИмени("Подсистема.Продажи.Подсистема.ОптовыеПродажи");
	ОписаниеВарианта.Размещение.Удалить(Подсистема);
	Подсистема = Метаданные.НайтиПоПолномуИмени("Подсистема.ФинансовыйРезультатИКонтроллинг.Подсистема.ФинансовыйРезультат");
	ОписаниеВарианта.Размещение.Удалить(Подсистема);
	Подсистема = Метаданные.НайтиПоПолномуИмени("Подсистема.CRMИМаркетинг.Подсистема.ПроведениеСделокОтчеты");
	ОписаниеВарианта.Размещение.Вставить(Подсистема);
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьСделкиСКлиентами");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Истина;
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПродажиПоПартнерамПоОрганизациям");
	ОписаниеВарианта.Описание = НСтр("ru= 'По каким клиентам получена наибольшая валовая прибыль по организациям?'");
	Подсистема = Метаданные.НайтиПоПолномуИмени("Подсистема.Финансы.Подсистема.ФинансовыйРезультат");
	ОписаниеВарианта.Размещение.Удалить(Подсистема);
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	
	
	#КонецОбласти
	
	#Область ВыручкаИСебестоимостьРозничныхПродаж
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВыручкаИСебестоимостьРозничныхПродаж);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Финансовый анализ розничных продаж
		|по подразделениям (магазинам), складам и поставщикам.'");
	ВариантыОтчетовУТПереопределяемый.УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДинамикаПродажРозницы");
	ОписаниеВарианта.Описание = НСтр("ru= 'Помесячные объемы розничных продаж за выбранный период.
		|Возможен анализ по периодам - квартал, месяц, неделя, день.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеИспользоватьБизнесРегионы");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДинамикаПродажРозницыБизнесРегионы");
	ОписаниеВарианта.Описание = НСтр("ru= 'Помесячные объемы розничных продаж за выбранный период.
		|Возможен анализ по периодам - квартал, месяц, неделя, день.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьБизнесРегионы");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПродажиРозницыПоПодразделениям");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какие магазины принесли более всего валовой прибыли?'");
	ВариантыОтчетовУТПереопределяемый.УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПродажиРозницыПоПоставщикам");
	ОписаниеВарианта.Описание = НСтр("ru= 'По товарам от каких поставщиков получена
		|наибольшая валовая прибыль при розничных продажах?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ФормироватьВидыЗапасовПоПоставщикам");
	#КонецОбласти

	
	
	#Область ДвижениеСерииНоменклатуры
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ДвижениеСерииНоменклатуры);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьСерииНоменклатуры");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = ?(ИспользоватьПроизводство,
									НСтр("ru= 'Детальный анализ движения серии номенклатуры на складах и в производстве.'"),
									НСтр("ru= 'Детальный анализ движения серии номенклатуры на складах.'"));
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДвижениеСерииНоменклатуры");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьСерииНоменклатуры");
	ОписаниеВарианта.Описание = ?(ИспользоватьПроизводство,
									НСтр("ru= 'Детальный анализ движения серии номенклатуры на складах и в производстве.'"),
									НСтр("ru= 'Детальный анализ движения серии номенклатуры на складах.'"));
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ДвижениеСерииНоменклатурыКонтекст");
	#КонецОбласти
	
	
	#Область ДебиторскаяЗадолженность
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ДебиторскаяЗадолженность);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ задолженности клиентов с разбивкой по интервалам долга.
		|Например, 0-7 дней, 7-15 дней, 15-30 дней, более 30 дней.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДебиторскаяЗадолженность");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ задолженности клиентов с разбивкой по интервалам долга.
		|Например, 0-7 дней, 7-15 дней, 15-30 дней, более 30 дней.'");
	#КонецОбласти
	
	
	#Область ДебиторскаяЗадолженностьДоляПросрочки
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ДебиторскаяЗадолженностьДоляПросрочки);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ изменения доли просроченной дебиторской задолженности с разбивкой по периодам.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДоляПросроченнойДЗ");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ изменения доли просроченной дебиторской задолженности с разбивкой по периодам.'");
	#КонецОбласти
	
	
	#Область ДинамикаИзмененияЦенНоменклатуры
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ДинамикаИзмененияЦенНоменклатуры);
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	#Область ДинамикаИзмененияЦенНоменклатуры2_5
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ДинамикаИзмененияЦенНоменклатуры2_5);
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область ДинамикаИзмененияЦенНоменклатурыПоставщика
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ДинамикаИзмененияЦенНоменклатурыПоставщика);
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область ДинамикаПоказателейРаботыТорговыхПредставителей
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ДинамикаПоказателейРаботыТорговыхПредставителей);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сводный анализ изменения показателей, характеризующих эффективность работы торговых представителей.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДинамикаПоказателейТорговыхПредставителей");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сводный анализ изменения показателей, характеризующих эффективность работы торговых представителей.'");
	#КонецОбласти
	
	
	#Область ДоступностьВариантовАнализаЦелевыхПоказателей
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ДоступностьВариантовАнализаЦелевыхПоказателей);
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область ДосьеПартнера
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ДосьеПартнера);
	ОписаниеОтчета.Включен = Ложь;
	#КонецОбласти


	#Область ЗаблокированныеЯчейки
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ЗаблокированныеЯчейки);
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти

	
	#Область ЗависшиеЗадачи
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ЗависшиеЗадачи);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Задачи, которые не могут быть выполнены из-за того, что не заполнен список ролей и исполнителей.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ЗависшиеЗадачиПоИсполнителям");
	ОписаниеВарианта.Размещение.Вставить(ВариантыОтчетовКлиентСервер.ИдентификаторНачальнойСтраницы());
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ЗависшиеЗадачиПоОбъектамАдресации");
	ОписаниеВарианта.Размещение.Вставить(ВариантыОтчетовКлиентСервер.ИдентификаторНачальнойСтраницы());
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПросроченныеЗадачи");
	ОписаниеВарианта.Размещение.Вставить(ВариантыОтчетовКлиентСервер.ИдентификаторНачальнойСтраницы());
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СводкаПоЗависшимЗадачам");
	ОписаниеВарианта.Размещение.Вставить(ВариантыОтчетовКлиентСервер.ИдентификаторНачальнойСтраницы());
	#КонецОбласти
	
	
	#Область Задания
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.Задания);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СписокЗаданий");
	ОписаниеВарианта.Размещение.Вставить(ВариантыОтчетовКлиентСервер.ИдентификаторНачальнойСтраницы());
	#КонецОбласти

	
	#Область Задачи
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.Задачи);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СправкаПоИсполнительскойДисциплине");
	ОписаниеВарианта.Размещение.Вставить(ВариантыОтчетовКлиентСервер.ИдентификаторНачальнойСтраницы());
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ТекущиеЗадачи");
	ОписаниеВарианта.Размещение.Вставить(ВариантыОтчетовКлиентСервер.ИдентификаторНачальнойСтраницы());
	#КонецОбласти


	#Область ЗадачиИстекающиеНаДату
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ЗадачиИстекающиеНаДату);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ЗадачиИстекающиеНаДату");
	ОписаниеВарианта.Размещение.Вставить(ВариантыОтчетовКлиентСервер.ИдентификаторНачальнойСтраницы());
	#КонецОбласти


	#Область ЗадолженностьКлиентов
	ОписаниеЗадолженностьКлиентов = НСтр("ru= 'Текущее состояние расчетов с клиентами.
		|Какой долг клиента сейчас? На какую сумму планируется отгрузка?
		|На какую сумма ожидается оплата от клиента?'");
	
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ЗадолженностьКлиентов);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = ОписаниеЗадолженностьКлиентов;
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ЗадолженностьКлиентов");
	ОписаниеВарианта.Описание = ОписаниеЗадолженностьКлиентов;
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ЗадолженностьКлиентовБазовая");
	ОписаниеВарианта.Описание = ОписаниеЗадолженностьКлиентов;
	ОписаниеВарианта.ФункциональныеОпции.Добавить("БазоваяВерсия");
	
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ЗадолженностьКлиентовПоОбъектуРасчетовКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ЗадолженностьКлиентовПоОбъектуРасчетовКонтекстБазовая");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ЗадолженностьКлиентаКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ЗадолженностьКлиентаКонтекстБазовая");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ЗадолженностьКлиентовКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ЗадолженностьКлиентовКонтекстБазовая");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ЗадолженностьКлиентовПричиныЗапретаОтгрузки");
	#КонецОбласти


	#Область ЗадолженностьКлиентовПоСрокам
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ЗадолженностьКлиентовПоСрокам);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ задолженности клиентов с разбивкой по интервалам долга.
		|Например, 0-7 дней, 7-15 дней, 15-30 дней, более 30 дней.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ЗадолженностьКлиентовПоСрокам");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ задолженности клиентов с разбивкой по интервалам долга.
		|Например, 0-7 дней, 7-15 дней, 15-30 дней, более 30 дней.'");
	#КонецОбласти


	#Область ЗадолженностьПоставщикам
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ЗадолженностьПоставщикам);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Текущее состояние расчетов с поставщиками.
		|Какой долг поставщику сейчас? На какую сумму планируется поступление?
		|На какую сумма ожидается оплата поставщику?'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ЗадолженностьПоставщикам");
	ОписаниеВарианта.Описание = НСтр("ru= 'Текущее состояние расчетов с поставщиками.
		|Какой долг поставщику сейчас? На какую сумму планируется поступление?
		|На какую сумма ожидается оплата поставщику?'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ЗадолженностьПоставщикамБазовая");
	ОписаниеВарианта.Описание = НСтр("ru= 'Текущее состояние расчетов с поставщиками.
		|Какой долг поставщику сейчас? На какую сумму планируется поступление?
		|На какую сумма ожидается оплата поставщику?'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("БазоваяВерсия");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ЗадолженностьПоставщикамПоОбъектуРасчетовКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ЗадолженностьПоставщикамПоОбъектуРасчетовКонтекстБазовая");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ЗадолженностьПоставщикуКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ЗадолженностьПоставщикуКонтекстБазовая");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ЗадолженностьПоставщикамКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ЗадолженностьПоставщикамКонтекстБазовая");
	#КонецОбласти


	#Область ЗадолженностьПоставщикамПоСрокам
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ЗадолженностьПоставщикамПоСрокам);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ задолженности перед поставщиками с разбивкой по интервалам долга.
		|Например, 0-7 дней, 7-15 дней, 15-30 дней, более 30 дней.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ЗадолженностьПоставщикамПоСрокам");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ задолженности перед поставщиками с разбивкой по интервалам долга.
		|Например, 0-7 дней, 7-15 дней, 15-30 дней, более 30 дней.'");
	#КонецОбласти


	#Область ЗаполнениеСвойствПартнеров
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ЗаполнениеСвойствПартнеров);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru= 'Все ли свойства клиентов, поставщиков заполнены?
		|Сколько и каких свойств нужно заполнить?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Основной");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru= 'Насколько заполнены свойства клиентов, поставщиков?
		|Оценка полноты клиентской базы.'");
	#КонецОбласти


	#Область ЗаполненностьСклада
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ЗаполненностьСклада);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какие складские помещения простаивают (пусты или заполнены недостаточно)?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ЗаполненностьСклада");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какие складские помещения простаивают (пусты или заполнены недостаточно)?
		|Какие области переполнены и требуют расширения?'");
	#КонецОбласти	

	
	#Область ИзменениеABCXYZРаспределенияКлиентов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ИзменениеABCXYZРаспределенияКлиентов);
	ОписаниеОтчета.Описание = НСтр("ru = 'Изменение ABC/XYZ - распределения клиентов.'");
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область ИндексыЦенНоменклатуры
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ИндексыЦенНоменклатуры);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Оценка эффективности сдерживания закупочных цен
		|без учета цен отдельных поставщиков.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ИндексыЦенНоменклатуры");
	ОписаниеВарианта.Описание = НСтр("ru= 'Оценка эффективности сдерживания закупочных цен
		|без учета цен отдельных поставщиков.'");
	#КонецОбласти
	
	
	#Область ИндексыЦенПоставщиков
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ИндексыЦенПоставщиков);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Оценка эффективности сдерживания закупочных цен
		|с учетом цен отдельных поставщиков.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ФормироватьВидыЗапасовПоПоставщикам");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ИндексыЦенПоставщиков");
	ОписаниеВарианта.Описание = НСтр("ru= 'Оценка эффективности сдерживания закупочных цен
		|с учетом цен отдельных поставщиков.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ФормироватьВидыЗапасовПоПоставщикам");
	#КонецОбласти
	
	
	#Область ИсполнениеПланаЗакупок
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ИсполнениеПланаЗакупок);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Оценка фактического состояния закупок товаров по плану.
		|Какие заказы поставщикам еще не поступили на склад?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ИсполнениеПланаЗакупокПоПодразделениям");
	ОписаниеВарианта.Описание = НСтр("ru= 'Динамика фактического исполнения плана в разрезе подразделений и номенклатуры.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ИсполнениеПланаЗакупокПоПоставщикам");
	ОписаниеВарианта.Описание = НСтр("ru= 'Динамика фактического исполнения плана в разрезе поставщиков и номенклатуры.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ИсполнениеПланаЗакупокПоСкладам");
	ОписаниеВарианта.Описание = НСтр("ru= 'Динамика фактического исполнения плана в разрезе складов и номенклатуры.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ИсполнениеПланаОплатПоПоставщикам");
	ОписаниеВарианта.Описание = НСтр("ru= 'Проверка исполнения плана по фактическому расходу денежных средств.
		|План и факт поставок от поставщика за период.'");
	#КонецОбласти
	
	
	#Область ИсполнениеПланаПродаж
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ИсполнениеПланаПродаж);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Оценка фактического состояния продаж товаров по плану.
		|Какие заказы клиентов еще не отгружены со склада?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ИсполнениеПланаОплатПоКлиентам");
	ОписаниеВарианта.Описание = НСтр("ru= 'Проверка исполнения плана оплат по фактическому приходу денежных средств.
		|Плана и факт отгрузок клиенту за период.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ИсполнениеПланаПродажПоКлиентам");
	ОписаниеВарианта.Описание = НСтр("ru= 'Динамика фактического исполнения плана в разрезе клиентов и номенклатуры.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ИсполнениеПланаПродажПоМенеджерам");
	ОписаниеВарианта.Описание = НСтр("ru= 'Динамика фактического исполнения плана в разрезе менеджеров и номенклатуры.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ИсполнениеПланаПродажПоПодразделениям");
	ОписаниеВарианта.Описание = НСтр("ru= 'Динамика фактического исполнения плана в разрезе подразделений и номенклатуры.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ИсполнениеПланаПродажПоСкладам");
	ОписаниеВарианта.Описание = НСтр("ru= 'Динамика фактического исполнения плана в разрезе складов и номенклатуры.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ИсполнениеПланаПродажПоФорматамМагазинов");
	ОписаниеВарианта.Описание = НСтр("ru= 'Динамика фактического исполнения плана в разрезе формата магазинов.'");
	#КонецОбласти
	
	
	#Область ИсполнениеПланаСборкиРазборки
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ИсполнениеПланаСборкиРазборки);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Выполнен ли план сборок (разборок)?
		|Насколько выполнен по факту?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ИсполнениеПланаСборкиРазборкиПоСкладам");
	ОписаниеВарианта.Описание = НСтр("ru= 'Оценка фактического состояния сборки (разборки) товаров по плану.
		|Какие заказы на сборку (разборку) еще не поступили на склад?'");
	Подсистема = Метаданные.НайтиПоПолномуИмени("Подсистема.Склад.Подсистема.ВнутреннееТовародвижение");
	ОписаниеВарианта.Размещение.Удалить(Подсистема);
	#КонецОбласти
	
	#Область ИсполнениеПланаВнутреннихПотреблений
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ИсполнениеПланаВнутреннихПотреблений);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Оценка фактического состояния внутренних потреблений товаров по плану.
		|Какие заказы на внутреннее потребление еще не отгружены со склада?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ИсполнениеПланаВнутреннихПотребленийПоПодразделениям");
	ОписаниеВарианта.Описание = НСтр("ru= 'Динамика фактического исполнения плана в разрезе подразделений и номенклатуры.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ИсполнениеПланаВнутреннихПотребленийПоСкладам");
	ОписаниеВарианта.Описание = НСтр("ru= 'Динамика фактического исполнения плана в разрезе складов и номенклатуры.'");
	#КонецОбласти
	
	#Область ИсполнениеРаспоряженийНаПеремещениеСборку
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ИсполнениеРаспоряженийНаПеремещениеСборку);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область КалендарьСобытий
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КалендарьСобытий);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Список текущих дел - просроченных и запланированных.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Основной");
	ОписаниеВарианта.Описание = НСтр("ru= 'Список текущих дел - просроченных и запланированных.'");
	#КонецОбласти

	#Область КарточкаРасчетовПоПереданнойВозвратнойТаре
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КарточкаРасчетовПоПереданнойВозвратнойТаре);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область КарточкаРасчетовПоПринятойВозвратнойТаре
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КарточкаРасчетовПоПринятойВозвратнойТаре);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область КарточкаРасчетовСКлиентами
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КарточкаРасчетовСКлиентами);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти

	
	#Область КарточкаРасчетовСКлиентами24
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КарточкаРасчетовСКлиентами24);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Расшифровка взаиморасчетов до документов регистраторов.
		|Какие документы сформировали текущее сальдо расчетов?
		|Как изменялись взаиморасчеты за период?'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Карточка");
	ОписаниеВарианта.Описание = НСтр("ru= 'Расшифровка взаиморасчетов до документов регистраторов.
		|Какие документы сформировали текущее сальдо расчетов?
		|Как изменялись взаиморасчеты за период?'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	#КонецОбласти


	#Область КарточкаРасчетовСПоставщиками
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КарточкаРасчетовСПоставщиками);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти

	
	#Область КонтактнаяИнформация
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КонтактнаяИнформация);
	ОписаниеОтчета.ФорматНастроекСКД = Ложь;
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, ОписаниеОтчета, ВыводитьВариантыОтчетов);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Основной");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "СмТакже");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru= 'Информация о клиентах, поставщиках, их основном менеджере, 
		|ABC/XYZ-классификации и контактной информации.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПоКонтактнымЛицам");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "СмТакже");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru= 'Информация о контактных лицах.'");
	#КонецОбласти
	
	
	#Область КонтрольВыданныхПодотчетномуЛицуАвансовПоЗаявке 
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КонтрольВыданныхПодотчетномуЛицуАвансовПоЗаявке);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область КонтрольНомеровГТДТоваров
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КонтрольНомеровГТДТоваров);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль корректности учета операций с импортными товарами с указанием номера ГТД и страны происхождения.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "КонтрольНомеровГТДТоваров");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль корректности учета операций с импортными товарами с указанием номера ГТД и страны происхождения.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "КонтрольНомеровГТДТоваровБазовая");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль корректности учета операций с импортными товарами с указанием номера ГТД и страны происхождения.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("БазоваяВерсия");
	#КонецОбласти
	
	
	#Область КонтрольОперацийСДенежнымиСредствами
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КонтрольОперацийСДенежнымиСредствами);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль корректности операций с денежными средствами:
		|- подотчетные лица,
		|- эквайринг (операции с платежными картами),
		|- конвертация валют,
		|- перемещения внутри организации,
		|- перемещения между организациями.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "КонтрольОперацийСДенежнымиСредствами");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сводный контроль корректности операций с денежными средствами.'");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "КонтрольДенежныхСредствУПодотчетныхЛиц");
	#КонецОбласти

	
	#Область КонтрольОформленияДокументовТовародвижений
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КонтрольОформленияДокументовТовародвижений);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль корректности операций с товарно-материальными ценностями.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "КонтрольОформленияДокументовТовародвижений");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль отражения операций с детализацией до номенклатуры.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СводныйКонтрольОформленияДокументовТовародвижений");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль отражения операций сводно по номенклатуре с детализацией до документа.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "РежимПомощникаИсправленияОстатковТоваровОрганизаций");
	ОписаниеВарианта.Описание = НСтр("ru= 'Режим помощника исправления остатков товаров организаций.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДетальныеЗаписи");
	ОписаниеВарианта.Описание = НСтр("ru= 'Детальные записи.'");
	#КонецОбласти
	
	
	#Область КонтрольОформленияТоваровВПутиИНеотфактурованныхПоставок
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КонтрольОформленияТоваровВПутиИНеотфактурованныхПоставок);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какие товары находятся в пути?
		|Какие товары поступили на склад неотфактурованными?
		|По каким товарам в пути или неотфактурованным товарам, необходимо оформить таможенную декларацию на импорт?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "КонтрольОформленияТоваровВПутиИНеотфактурованныхПоставок");
	#КонецОбласти

	
	
	#Область КонтрольПередачТоваровМеждуОрганизациями
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КонтрольПередачТоваровМеждуОрганизациями);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Все ли передачи товаров оформлены?
		|Все ли отчеты комиссии оформлены?
		|Каковы остатки комиссионных товаров?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОформлениеОтчетовПоКомиссии");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ товаров, которые были переданы на комиссию другой организации.
		|Какие получатели еще не отчитались?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОформлениеПередачТоваров");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ товаров, проданных по схеме интеркампани.
		|Кто отправитель и получатель?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ТоварыНаКомиссии");
	ОписаниеВарианта.Описание = НСтр("ru='Анализ имеющихся остатков комиссионных товаров организации.
		|От каких организаций приняты товары на комиссию?'");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ОформлениеПередачТоваровКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ОформлениеОтчетовПоКомиссииКонтекст");
	#КонецОбласти
		
	
	
	
	#Область КредиторскаяЗадолженность
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КредиторскаяЗадолженность);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ задолженности перед поставщиками с разбивкой по интервалам долга.
		|Например, 0-7 дней, 7-15 дней, 15-30 дней, более 30 дней.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "КредиторскаяЗадолженность");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ задолженности перед поставщиками с разбивкой по интервалам долга.
		|Например, 0-7 дней, 7-15 дней, 15-30 дней, более 30 дней.'");
	#КонецОбласти
	
	
	#Область ЛимитыРасходаДенежныхСредств
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ЛимитыРасходаДенежныхСредств);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'План-фактный анализ использования лимитов за период.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ИспользованияЛимитовРасходаДенежныхСредств");
	ОписаниеВарианта.Описание = НСтр("ru= 'План-фактный анализ использования лимитов за период.
		|По каким статьям ДДС есть превышение или лимит израсходован не полностью?'");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ЛимитыРасходаДенежныхСредствКонтекст");
	#КонецОбласти
	
	
	
	#Область МониторЦелевыхПоказателей
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.МониторЦелевыхПоказателей);
	ОписаниеОтчета.Размещение.Очистить();
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "МониторЦелевыхПоказателей");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль ключевых (целевых) показателей деятельности предприятия.'");
	#КонецОбласти
	
	
	#Область ОборачиваемостьЗапасов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОборачиваемостьЗапасов);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какая оборачиваемость у товаров?'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОборачиваемостьЗапасов");
	ОписаниеВарианта.Описание = НСтр("ru= 'На каких складах оборачиваемость товаров низкая?
		|Каковы текущие остатки и уровень запасов интересующих товаров?'");
	#КонецОбласти
	
	#Область ОборотноСальдоваяВедомостьАктивовПассивов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОборотноСальдоваяВедомостьАктивовПассивов);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОСВАктивовПассивов");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru= 'Остатки активов и пассивов на начало и на конец периода и суммы оборотов за период.'");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "КарточкаАктиваПассива");
	#КонецОбласти
	
	
	#Область ОплатаЗаявокНаРасходованиеДенежныхСредств
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОплатаЗаявокНаРасходованиеДенежныхСредств);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ОплатаЗаявокНаРасходованиеДенежныхСредств");
	#КонецОбласти	
	
	#Область ОстаткиИДвиженияДенежныхСредствВКассахККМ
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОстаткиИДвиженияДенежныхСредствВКассахККМ);
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, ОписаниеОтчета, ВыводитьВариантыОтчетов);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль денежных средств в кассах ККМ.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДвиженияДенежныхСредствККМ");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль денежных средств в кассах ККМ.
		|В какой кассе ККМ, когда и сколько денежных средств приходило или уходило?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьНесколькоВалют");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДвиженияДенежныхСредствККМОднаВалюта");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль денежных средств в кассах ККМ.
		|В какой кассе ККМ, когда и сколько денежных средств приходило или уходило?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеИспользоватьНесколькоВалют");
	#КонецОбласти
	
	
	#Область ОстаткиИДоступностьТоваров
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОстаткиИДоступностьТоваров);
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, ОписаниеОтчета, ВыводитьВариантыОтчетов);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;

	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Каков остаток товаров и сколько из них доступно?
		|Сколько товаров отгружается, в резерве или в обособлении?
		|Какими заказами зарезервирован товар?'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ИспользоватьНазначенияБезЗаказа");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьНазначенияБезЗаказа");
	ОписаниеВарианта.Описание = НСтр("ru= 'Каков остаток товаров и сколько из них доступно?
		|Сколько товаров отгружается, в резерве или в обособлении?
		|Какими заказами зарезервирован товар?'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "НеИспользоватьНазначенияБезЗаказа");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеИспользоватьНазначенияБезЗаказа");
	ОписаниеВарианта.Описание = НСтр("ru= 'Каков остаток товаров и сколько из них доступно?
		|Сколько товаров отгружается, в резерве или в обособлении?
		|Какими заказами зарезервирован товар?'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоНоменклатуреКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоНоменклатуреКонтекстНазначенияБезЗаказа");
	#КонецОбласти
	
	#Область УдалитьОстаткиИДоступностьТоваров
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.УдалитьОстаткиИДоступностьТоваров);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Каков остаток товаров и сколько из них доступно?
		|Сколько товаров отгружается, в резерве или в обособлении?
		|Какими заказами зарезервирован товар?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОстаткиИДоступностьТоваров");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru= 'Каков остаток товаров и сколько из них доступно?
		|Сколько товаров отгружается, в резерве или в обособлении?
		|Какими заказами зарезервирован товар?'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "СмТакже");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоНоменклатуреКонтекст");
	#КонецОбласти
	
	#Область ОстаткиТоваровОрганизаций
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОстаткиТоваровОрганизаций);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	#Область ОстаткиТоваровПереданныхНаКомиссию
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОстаткиТоваровПереданныхНаКомиссию);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сколько, каких товаров у комиссионеров и по какой цене?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользуетсяКомиссионнаяПродажа20");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОстаткиТоваровПереданныхНаКомиссию");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сколько, каких товаров у комиссионеров и по какой цене?
		|Когда товары были переданы на комиссию?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользуетсяКомиссионнаяПродажа20");
	#КонецОбласти
	
	
	#Область ОстаткиТоваровПринятыхНаКомиссию
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОстаткиТоваровПринятыхНаКомиссию);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сколько, каких товаров от комитентов и по какой цене?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьКомиссиюПриЗакупках");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОстаткиТоваровПринятыхНаКомиссию");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сколько, каких товаров от комитентов и по какой цене?
		|Когда товары были приняты на комиссию?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьКомиссиюПриЗакупках");
	#КонецОбласти
	
	
	#Область ОтклоненияОтУсловийЗакупок
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОтклоненияОтУсловийЗакупок);
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область ОтклоненияОтУсловийПродаж
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОтклоненияОтУсловийПродаж);
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область ОтрицательныеОстаткиТоваровОрганизаций
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОтрицательныеОстаткиТоваровОрганизаций);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область ОтрицательныеОстаткиТоваровИРезервовОрганизаций
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОтрицательныеОстаткиТоваровИРезервовОрганизаций);
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область РазвернутоеСальдоПоВидамЗапасовИНомерамГТД
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РазвернутоеСальдоПоВидамЗапасовИНомерамГТД);
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область ОформлениеИзлишковНедостачТоваров
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОформлениеИзлишковНедостачТоваров);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область ОформлениеОтчетовКомитенту
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОформлениеОтчетовКомитенту);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль за своевременным предоставлением отчетности комитенту.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьКомиссиюПриЗакупках");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОформлениеОтчетовКомитенту");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль за своевременным предоставлением отчетности комитенту.
		|По каким товарам, на какие количество и сумму мы не отчитались?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьКомиссиюПриЗакупках");
	#КонецОбласти
	
	
	#Область ОценкаРентабельностиПродаж
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОценкаРентабельностиПродаж);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти

	#Область ОценкаРентабельностиПродаж2_5
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОценкаРентабельностиПродаж2_5);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти

	
	#Область ПартнерыКоторымОтгрузкаЗапрещена
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПартнерыКоторымОтгрузкаЗапрещена);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Каким клиентам запрещена отгрузка?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьЗапретОтгрузки");
	ОписаниеОтчета.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПартнерыКоторымОтгрузкаЗапрещена");
	ОписаниеВарианта.Описание = НСтр("ru= 'Каким клиентам запрещена отгрузка?
		|Кто основной менеджер клиента?
		|Какие причины запрета?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьЗапретОтгрузки");
	ОписаниеОтчета.ВидимостьПоУмолчанию = Ложь;
	#КонецОбласти
	
	
	#Область ПереданнаяВозвратнаяТара
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПереданнаяВозвратнаяТара);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Оценка количества и залоговой суммы невозвращенной клиентом тары.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПереданнаяВозвратнаяТара");
	ОписаниеВарианта.Описание = НСтр("ru= 'Оценка количества и залоговой суммы невозвращенной (или возвращенной не вовремя) клиентом тары.
		|Каковы сроки наступления ближайших возвратов?'");
	#КонецОбласти
	
	
	#Область ПересеченияСегментаНоменклатуры
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПересеченияСегментаНоменклатуры);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область ПересеченияСегментаПартнеров
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПересеченияСегментаПартнеров);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти

	
	
	
	
	#Область ПланФактныйАнализФинансовыхИнструментовУТ
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПланФактныйАнализФинансовыхИнструментовУТ);
	ОписаниеОтчета.ФункциональныеОпции.Добавить("УправлениеТорговлей");
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеОтчета.Описание = НСтр("ru= 'Анализ отклонений по фактически произведенным оплатам и начислениям
		|в рамках заключенных договоров.'");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПланФактныйАнализКредитыДепозитыКонтекст");
	#КонецОбласти
	
	
	#Область ПланФактныйАнализРаботыТорговыхПредставителейПоКоличеству
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПланФактныйАнализРаботыТорговыхПредставителейПоКоличеству);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сравнение плановых и фактических количественных показателей торгового представителя.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВыполнениеЗаданийПоНоменклатуре");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ исполнения заданий торговыми представителями.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВыполнениеЗаданийПоПредставителям");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ исполнения заданий торговыми представителями с точностью до номенклатуры.'");
	#КонецОбласти
	
	
	#Область ПланФактныйАнализРаботыТорговыхПредставителейПоСумме
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПланФактныйАнализРаботыТорговыхПредставителейПоСумме);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сравнение плановых и фактических суммовых показателей торгового представителя.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВыполнениеЗаданийПоСумме");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сравнение плановых и фактических суммовых показателей торгового представителя.'");
	#КонецОбласти
		
	
	#Область ПлатежнаяДисциплинаКлиентов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПлатежнаяДисциплинаКлиентов);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Как часто, на сколько дней и какие клиенты задерживают оплаты?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПлатежнаяДисциплинаКлиентов");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль просроченной задолженности у клиентов в течении выбранного периода.
		|Как часто, на сколько дней и какие клиенты задерживают оплаты?'");
	#КонецОбласти

	#Область ПовторныеПродажи

	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПовторныеПродажи);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru = 'Анализ и организация стабильных продаж по постоянной клиентской базе.
	    |Каким клиентами будет выгодно сделать своевременное предложение?'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'Клиенты
		|Клиент
		|Сегмент
		|Выручка
		|Потенциал
		|Активные
		|Засыпающие
		|Спящие и потерянные
		|Новые
		|Перспективные
		|Верные
		|Телефон
		|Продажи'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru= 'Дата начала
		|Дата окончания
		|Период
		|Организация
		|Менеджер
		|Сумма покупки от
		|Сегмент клиентов
		|Сегмент номенклатуры
		|Номенклатура'");
	Подсистема = Метаданные.НайтиПоПолномуИмени("Подсистема.CRMИМаркетинг.Подсистема.АнализКлиентскойБазы");
	ОписаниеВарианта.Размещение.Вставить(Подсистема);

	#КонецОбласти

	
	#Область ПлатежнаяДисциплинаКлиентов24
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПлатежнаяДисциплинаКлиентов24);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Как часто, на сколько дней и какие клиенты задерживают оплаты?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПлатежнаяДисциплинаКлиентов");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль просроченной задолженности у клиентов в течении выбранного периода.
		|Как часто, на сколько дней и какие клиенты задерживают оплаты?'");
	#КонецОбласти
		
	#Область ПрайсЛист
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПрайсЛист);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какие цены установлены на товары?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользуетсяЦенообразование20");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПрайсЛист");
	ОписаниеВарианта.Описание = НСтр("ru= 'Формирование прайс-листа по выбранным ценам, 
		|при необходимости только товары в наличии.'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоНоменклатуреКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПрайсЛистКонтекст");
	#КонецОбласти
	
	
	#Область ПрайсЛист2_5
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПрайсЛист2_5);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какие цены установлены на товары?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользуетсяЦенообразование25");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПрайсЛист");
	ОписаниеВарианта.Описание = НСтр("ru= 'Формирование прайс-листа по выбранным ценам, 
		|при необходимости только товары в наличии.'");	
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоНоменклатуреКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПрайсЛистКонтекст");
	#КонецОбласти
	
	
	#Область ПрайсЛистДляПриемаЗаказов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПрайсЛистДляПриемаЗаказов);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Печатная форма прайс-листа для выдачи торговому представителю.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Основной");
	ОписаниеВарианта.Описание = НСтр("ru= 'Печатная форма прайс-листа для выдачи торговому представителю.'");
	#КонецОбласти
	
	
	#Область ПрименениеСерииНоменклатуры
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПрименениеСерииНоменклатуры);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПрименениеСерииНоменклатуры");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользуетсяСборкаРазборкаИСерииНоменклатуры");
	ОписаниеВарианта.Описание = ?(ИспользоватьПроизводство,
									НСтр("ru= 'В каких изделия использовалась серия номенклатуры?'"),
									НСтр("ru= 'В каких комплектах использовалась серия номенклатуры?'"));
	
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПрименениеСерииНоменклатурыКонтекст");
	#КонецОбласти
	
	
	#Область ПримененныеСкидкиВДокументе
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПримененныеСкидкиВДокументе);
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
		
	#Область ПринятаяВозвратнаяТара
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПринятаяВозвратнаяТара);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Оценка количества и залоговой суммы принятой тары.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПринятаяВозвратнаяТара");
	ОписаниеВарианта.Описание = НСтр("ru= 'Оценка количества и залоговой суммы принятой тары.
		|Каковы сроки наступления ближайших возвратов тары поставщикам?'");
	#КонецОбласти
	
	
	#Область ПричиныЗапретаОтгрузки
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПричиныЗапретаОтгрузки);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
		
	
	#Область ПродажиМеждуОрганизациями
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПродажиМеждуОрганизациями);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ прибыли при продажах между организациями предприятия.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПродажиМеждуОрганизациями");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ прибыли, полученной при оформлении продаж товаров между организациями, 
		|входящими в состав торгового предприятия.'");
	#КонецОбласти
	
	
	#Область ПродажиСравнениеАналогичныхПериодов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПродажиСравнениеАналогичныхПериодов);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ структуры и изменений выручки за несколько периодов - лет, месяцев,
		|недель, дней.'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СравнениеПродажАналогичныхПериодов");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ структуры и изменений выручки за несколько периодов - лет, месяцев,
		|недель, дней.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеИспользоватьБизнесРегионы");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СравнениеПродажАналогичныхПериодовБизнесРегионы");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ структуры и изменений выручки за несколько периодов - лет, месяцев,
		|недель, дней.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьБизнесРегионы");
	#КонецОбласти

	
	#Область ПродажиСравнениеДвухПериодов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПродажиСравнениеДвухПериодов);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ колебаний выручки в сравниваемых периодах
		|по полученному приросту/спаду.'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "РейтингПродажДвухПериодов");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ тренда продаж по сравнению с прошлым периодом?
		|Понижаются или повышаются продажи?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеИспользоватьБизнесРегионы");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "РейтингПродажДвухПериодовБизнесРегионы");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ тренда продаж по сравнению с прошлым периодом?
		|Понижаются или повышаются продажи?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьБизнесРегионы");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СравнениеВыручкиДвухПериодов");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сводный анализ продаж по двум периодам
		|по бизнес-регионам и видам номенклатуры.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеИспользоватьБизнесРегионы");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СравнениеВыручкиДвухПериодовБизнесРегионы");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сводный анализ продаж по двум периодам
		|по бизнес-регионам и видам номенклатуры.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьБизнесРегионы");
	#КонецОбласти
	
	
	#Область ПроизводительностьРаботниковСклада
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПроизводительностьРаботниковСклада);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Оценка количества обработанных складскими сотрудниками заданий.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПроизводительностьРаботниковСклада");
	ОписаниеВарианта.Описание = НСтр("ru= 'Оценка количества обработанных складскими сотрудниками грузов за период.
		|Сколько приемок, размещений, отборов или пересчетов было сделано?'");
	#КонецОбласти
	
	
	#Область ПросроченныеЗадачи
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПросроченныеЗадачи);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ЗадачиВыполненныеСНарушениемСроков");
	ОписаниеВарианта.Размещение.Вставить(ВариантыОтчетовКлиентСервер.ИдентификаторНачальнойСтраницы());
	#КонецОбласти
	
	
	#Область РаспределениеТорговыхПредставителей
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РаспределениеТорговыхПредставителей);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Когда, по какому заданию и к какому клиенту планируется визит?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "КалендарьВизитовТорговыхПредставителей");
	ОписаниеВарианта.Описание = НСтр("ru= 'Когда, по какому заданию и к какому клиенту планируется визит?'");
	#КонецОбласти
	
	
	#Область РасчетыМеждуОрганизациями
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РасчетыМеждуОрганизациями);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль взаиморасчетов между организациями, входящими в состав предприятия.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "РасчетыПоЗакупкам");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль взаиморасчетов между организациями, входящими в состав предприятия.
		|Сколько организация-покупатель должна организации-продавцу?
		|Уменьшился или увеличился долг за выбранный период?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "РасчетыПоПродажам");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль взаиморасчетов между организациями, входящими в состав предприятия.
		|Сколько организация-продавец должна получить от организации-покупателя?
		|Уменьшился или увеличился долг за выбранный период?'");
	#КонецОбласти
	
	
	#Область РасчетыСКлиентами
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РасчетыСКлиентами);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Детальный анализ взаиморасчетов с клиентами.
		|Как изменялась задолженность за указанный период?
		|Какое текущее сальдо расчетов?'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "РасчетыСКлиентами");
	ОписаниеВарианта.Описание = НСтр("ru= 'Детальный анализ взаиморасчетов с клиентами.
		|Как изменялась задолженность за указанный период?
		|Какое текущее сальдо расчетов?'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "РасчетыСКлиентамиБазовая");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("БазоваяВерсия");
	ОписаниеВарианта.Описание = НСтр("ru= 'Детальный анализ взаиморасчетов с клиентами.
		|Как изменялась задолженность за указанный период?
		|Какое текущее сальдо расчетов?'");
	#КонецОбласти
	
	
	#Область РасчетыСПартнерами
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РасчетыСПартнерами);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, ОписаниеОтчета, Ложь);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "РасчетыСПартнерами");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сводный анализ взаиморасчетов с клиентами и поставщиками.
		|Как изменялась задолженность за указанный период?
		|Какое текущее сальдо расчетов?'");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "РасчетыСПартнерамиБазовая");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сводный анализ взаиморасчетов с клиентами и поставщиками.
		|Как изменялась задолженность за указанный период?
		|Какое текущее сальдо расчетов?'");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.ФункциональныеОпции.Добавить("БазоваяВерсия");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоКонтрагентамКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоКонтрагентамКонтекстБазовая");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоПартнерамКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоПартнерамКонтекстБазовая");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоСверкеВзаиморасчетовКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоСверкеВзаиморасчетовКонтекстБазовая");
	#КонецОбласти

	
	#Область РасчетыСПоставщиками
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РасчетыСПоставщиками);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Детальный анализ взаиморасчетов с поставщиками.
		|Как изменялась задолженность за указанный период?
		|Какое текущее сальдо расчетов?'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "РасчетыСПоставщиками");
	ОписаниеВарианта.Описание = НСтр("ru= 'Детальный анализ взаиморасчетов с поставщиками.
		|Как изменялась задолженность за указанный период?
		|Какое текущее сальдо расчетов?'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "РасчетыСПоставщикамиБазовая");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("БазоваяВерсия");
	ОписаниеВарианта.Описание = НСтр("ru= 'Детальный анализ взаиморасчетов с поставщиками.
		|Как изменялась задолженность за указанный период?
		|Какое текущее сальдо расчетов?'");
		
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КарточкаРасчетовСПоставщиками24);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Расшифровка взаиморасчетов до документов регистраторов.
		|Какие документы сформировали текущее сальдо расчетов?
		|Как изменялись взаиморасчеты за период?'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Карточка");
	ОписаниеВарианта.Описание = НСтр("ru= 'Расшифровка взаиморасчетов до документов регистраторов.
		|Какие документы сформировали текущее сальдо расчетов?
		|Как изменялись взаиморасчеты за период?'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьРасчетовСПоставщиками);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВедомостьРасчетовСПоставщиками = НСтр("ru= 'Детальный анализ взаиморасчетов с поставщиками.
		|Как изменялась задолженность за указанный период?
		|Какое текущее сальдо расчетов?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = ОписаниеВедомостьРасчетовСПоставщиками;
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Ведомость");
	ОписаниеВарианта.Описание = ОписаниеВедомостьРасчетовСПоставщиками;
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьБазовая");
	ОписаниеВарианта.Описание = ОписаниеВедомостьРасчетовСПоставщиками;
	ОписаниеВарианта.ФункциональныеОпции.Добавить("БазоваяВерсия");
	#КонецОбласти


	#Область РасшифровкаПоступленийПоНоменклатуре
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РасшифровкаПоступленийПоНоменклатуре); 
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
		
	
	
	
	#Область РеестрКредитовИДепозитов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РеестрКредитовИДепозитов);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Реквизиты договоров кредитов и депозитов.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "РеестрДоговоровКредитовДепозитов");
	ОписаниеВарианта.Описание = НСтр("ru= 'Договоры указанного типа с реквизитами,
		|суммами плана оплат и начислений, фактом оплат и начислений,
		|отклонениями и остатком долга по договору.'");
	#КонецОбласти
	
	
	#Область РеестрПлатежей
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РеестрПлатежей);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru='Реестр запланированных поступлений и списаний денежных средств.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ЗаявкиКОплате");
	ОписаниеВарианта.Описание = НСтр("ru='Реестр заявок, утвержденных к оплате.'");
	#КонецОбласти
	
	
	
	#Область РезультатыСогласованияЗакупки
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РезультатыСогласованияЗакупки);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область РезультатыСогласованияЗаявкиНаВозвратТоваровОтКлиента
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РезультатыСогласованияЗаявкиНаВозвратТоваровОтКлиента);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область РезультатыСогласованияПродажи
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РезультатыСогласованияПродажи);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область РезультатыСогласованияЦенНоменклатуры
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РезультатыСогласованияЦенНоменклатуры);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	#Область РезультатыТестирования
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РезультатыТестирования);
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область СбалансированностьПлановУТ
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СбалансированностьПлановУТ);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Выполнимы ли планы потребностей за счет планов обеспечения?'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СбалансированностьПлановЗаПериод");
	ОписаниеВарианта.Описание = НСтр("ru= 'Проверка корректности составленных планов. 
		|Выполнимы ли планы потребностей за счет планов обеспечения?'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СбалансированностьПлановПоПериодам");
	ОписаниеВарианта.Описание = НСтр("ru= 'Каковы отклонения основного сценария относительно дополнительных сценариев?'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СравнениеСценариевЗаПериод");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сравнение нескольких сценариев между собой. 
		|Каковы отклонения основного сценария относительно дополнительных сценариев?'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СравнениеСценариевПоПериодам");
	ОписаниеВарианта.Описание = НСтр("ru= 'Проверка корректности составленных планов. 
		|Выполнимы ли планы потребностей за счет планов обеспечения?'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	#КонецОбласти
	
	#Область СверкаОстатковОперативногоУчетаИСебестоимости 
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СверкаОстатковОперативногоУчетаИСебестоимости);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СверкаОстатковОперативногоУчетаИСебестоимости");
	//++ Локализация
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ПартионныйУчетВерсии22");
	//-- Локализация
	ОписаниеВарианта.Описание = НСтр("ru= 'Сверка остатков номенклатуры по оперативным регистрам и регистру себестоимости товаров.'");
	#КонецОбласти
	
	
	#Область СертификатыНоменклатурыСИстекающимСрокомДействия
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СертификатыНоменклатурыСИстекающимСрокомДействия);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область СоставПродажи
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СоставПродажи);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область СоставСегмента
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СоставСегмента);
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область СостояниеАссортимента
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СостояниеАссортимента);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область СостояниеВыполненияДокументов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СостояниеВыполненияДокументов);
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	

	#Область СостояниеРасчетовСКлиентами
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СостояниеРасчетовСКлиентами);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Текущее состояние расчетов с клиентами.
		|Какой долг клиента сейчас? На какую сумму планируется отгрузка?
		|На какую сумма ожидается оплата от клиента?'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СостояниеРасчетовСКлиентами");
	ОписаниеВарианта.Описание = НСтр("ru= 'Текущее состояние расчетов с клиентами.
		|Какой долг клиента сейчас? На какую сумму планируется отгрузка?
		|На какую сумма ожидается оплата от клиента?'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СостояниеРасчетовСКлиентамиБазовая");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("БазоваяВерсия");
	ОписаниеВарианта.Описание = НСтр("ru= 'Текущее состояние расчетов с клиентами.
		|Какой долг клиента сейчас? На какую сумму планируется отгрузка?
		|На какую сумма ожидается оплата от клиента?'");

	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "СостояниеРасчетовПоОбъектуРасчетовКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "СостояниеРасчетовПоОбъектуРасчетовКонтекстБазовая");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "СостояниеРасчетовСКлиентомКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "СостояниеРасчетовСКлиентомКонтекстБазовая");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "СостояниеРасчетовСКлиентамиКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "СостояниеРасчетовСКлиентамиКонтекстБазовая");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "СостояниеРасчетовПоОбъектуРасчетовУпрощенныйКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "СостояниеРасчетовПоОбъектуРасчетовУпрощенныйКонтекстБазовая");
	#КонецОбласти
	
	
	#Область СостояниеРасчетовСКлиентамиСамообслуживание
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СостояниеРасчетовСКлиентамиСамообслуживание);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеОтчета.ФорматНастроекСКД = Ложь;
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти	
	
	
	#Область СостояниеРасчетовСКомиссионерами
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СостояниеРасчетовСКомиссионерами);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, ОписаниеОтчета, Ложь);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сколько комиссионер должен нам за проданные товары?
		|Сколько мы должны комиссионеру, например, по вознаграждениям?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СостояниеРасчетовСКомиссионерами");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сколько комиссионер должен нам за проданные товары?
		|Сколько мы должны комиссионеру, например, по вознаграждениям?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьКомиссиюПриПродажахНеБазовая");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СостояниеРасчетовСКомиссионерамиБазовая");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьКомиссиюПриПродажахБазовая");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "СостояниеРасчетовСКомиссионерамиКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "СостояниеРасчетовСКомиссионерамиКонтекстБазовая");
	#КонецОбласти
	
	
	#Область СостояниеРасчетовСКомитентами
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СостояниеРасчетовСКомитентами);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, ОписаниеОтчета, Ложь);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сколько мы должны комитенту за реализованные товары?
		|Сколько комитент должен нам, например, по вознаграждениям?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СостояниеРасчетовСКомитентами");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сколько мы должны комитенту за реализованные товары?
		|Сколько комитент должен нам, например, по вознаграждениям?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьКомиссиюПриЗакупкахНеБазовая");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СостояниеРасчетовСКомитентамиБазовая");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьКомиссиюПриЗакупкахБазовая");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "СостояниеРасчетовСКомитентамиКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "СостояниеРасчетовСКомитентамиКонтекстБазовая");
	#КонецОбласти
	
	
	#Область СостояниеРасчетовСПоставщиками
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СостояниеРасчетовСПоставщиками);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Текущее состояние расчетов с поставщиками.
		|Какой долг поставщику сейчас? На какую сумму планируется поступление?
		|На какую сумма ожидается оплата поставщику?'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СостояниеРасчетовСПоставщиками");
	ОписаниеВарианта.Описание = НСтр("ru= 'Текущее состояние расчетов с поставщиками.
		|Какой долг поставщику сейчас? На какую сумму планируется поступление?
		|На какую сумма ожидается оплата поставщику?'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СостояниеРасчетовСПоставщикамиБазовая");
	ОписаниеВарианта.Описание = НСтр("ru= 'Текущее состояние расчетов с поставщиками.
		|Какой долг поставщику сейчас? На какую сумму планируется поступление?
		|На какую сумма ожидается оплата поставщику?'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("БазоваяВерсия");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "СостояниеРасчетовПоОбъектуРасчетовКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "СостояниеРасчетовПоОбъектуРасчетовКонтекстБазовая");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "СостояниеРасчетовСПоставщикомКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "СостояниеРасчетовСПоставщикомКонтекстБазовая");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "СостояниеРасчетовСПоставщикамиКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "СостояниеРасчетовСПоставщикамиКонтекстБазовая");
	#КонецОбласти
	
	
	#Область СправкаРасчетПереоценкиВалютныхСредств
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетПереоценкиВалютныхСредств);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	ОписаниеВарианта.Описание = НСтр("ru= 'Откуда возникают курсовые разницы?
		|Почему требуется переоценка?'");
	#КонецОбласти
	
	
	#Область СправочноеРазмещениеНоменклатуры
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправочноеРазмещениеНоменклатуры);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Для каких товаров в наличии не назначена основная ячейка?
		|Какие ячейки пусты и не назначены для товаров?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "РазмещениеНоменклатурыПоЯчейкамСправочно");
	ОписаниеВарианта.Описание = НСтр("ru= 'Для каких товаров в наличии не назначена основная ячейка?
		|Какие ячейки пусты и не назначены для товаров?'");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "РазмещениеНоменклатурыПоЯчейкамСправочноКонтекст");
	#КонецОбласти
	
	
	#Область СравнениеГрафиковКредитовИДепозитов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СравнениеГрафиковКредитовИДепозитов);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ отклонений между двумя вариантами графиков по договорам.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СравнениеВариантовГрафиков");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ отклонений между двумя вариантами графиков по договорам.'");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "СравнениеВариантовГрафиковКонтекст");
	#КонецОбласти
	
	
	#Область СравнениеСегментовПартнеров
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СравнениеСегментовПартнеров);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сколько клиентов в сегментах?
		|Какой объем продаж по сегментам?
		|Какое количество сделок и их состояние.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Основной");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сколько клиентов в сегментах?
		|Какой объем продаж по сегментам?
		|Какое количество сделок и их состояние.'");
	#КонецОбласти
	
	
	#Область СравнительныйАнализДинамикиАссортиментаИПродаж
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СравнительныйАнализДинамикиАссортиментаИПродаж);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Как изменяется наполнение ассортимента со временем?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПоКатегориям");
	ОписаниеВарианта.Описание = НСтр("ru= 'Как изменяется наполнение ассортимента со временем?'");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоНоменклатуреКонтекст");
	#КонецОбласти
	
	
	#Область СравнительныйАнализПоказателейРаботыМенеджеров
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СравнительныйАнализПоказателейРаботыМенеджеров);
	ОписаниеОтчета.ФорматНастроекСКД = Ложь;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Комплексный анализ показателей, характеризующих эффективность работы менеджеров.'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'Продажи
		|Прибыль
		|Поступление денежных средств
		|Выручка (по оплате) минус себестоимость (по отгрузке)
		|Соблюдение условий продаж
		|Потери
		|Ручные скидки
		|Продажи на одну сделку
		|Продажи на одно взаимодействие
		|Основные этапы потерь
		|Причины проигрыша сделок
		|Причины неудовлетворения первичного спроса
		|Динамика клиентской базы
		|Продажи новым клиентам
		|Претензии клиентов
		|Причины возникновения претензий клиентов'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru= 'Анализируемый период
		|Период для сравнения
		|Показатели
		|Годовая ставка
		|Подразделение
		|Менеджер'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Основной");
	ОписаниеВарианта.Описание = НСтр("ru= 'Комплексный анализ показателей, характеризующих эффективность работы менеджеров.
		|Таких, как продажи, прибыль, поступление ДС, скидки и другие.'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'Продажи
		|Прибыль
		|Поступление денежных средств
		|Выручка (по оплате) минус себестоимость (по отгрузке)
		|Соблюдение условий продаж
		|Потери
		|Ручные скидки
		|Продажи на одну сделку
		|Продажи на одно взаимодействие
		|Основные этапы потерь
		|Причины проигрыша сделок
		|Причины неудовлетворения первичного спроса
		|Динамика клиентской базы
		|Продажи новым клиентам
		|Претензии клиентов
		|Причины возникновения претензий клиентов'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru= 'Анализируемый период
		|Период для сравнения
		|Показатели
		|Годовая ставка
		|Подразделение
		|Менеджер'");
	#КонецОбласти
	
	
	
	#Область СтруктураСерииНоменклатуры
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СтруктураСерииНоменклатуры);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СтруктураСерииНоменклатуры");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользуетсяСборкаРазборкаИСерииНоменклатуры");
	ОписаниеВарианта.Описание = ?(ИспользоватьПроизводство,
									НСтр("ru= 'Какие серии использовались при выпуске серии изделия?'"),
									НСтр("ru= 'Какие серии использовались при сборке серии комплекта?'"));
	
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "СтруктураСерииНоменклатурыКонтекст");
	#КонецОбласти

	
	#Область ТекущаяНаполненностьАссортимента
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ТекущаяНаполненностьАссортимента);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какова роль, стадия жизни товара в ассортименте?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ТекущаяНаполненностьАссортимента");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какова роль, стадия жизни товара в ассортименте?
		|В каких форматах магазинов товар представлен и по какой цене?'");
	#КонецОбласти
	
		
	#Область ТекущиеКвотыАссортимента 
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ТекущиеКвотыАссортимента);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Состав и объемы квот товаров ассортимента.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПрисутствиеМаркиВКатегориях");
	ОписаниеВарианта.Описание = НСтр("ru= 'В каких категориях товаров присутствуют различные марки?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ТекущиеКвотыАссортимента");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какие квоты действуют на товары для различных форматов магазинов?'");
	#КонецОбласти
	
	#Область ТоварныйКалендарь
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ТоварныйКалендарь);
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, ОписаниеОтчета, ВыводитьВариантыОтчетов);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Каковы текущие остатки товаров на складах? 
		|Когда планируются отгрузки и поступления товаров?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ИспользоватьНазначенияБезЗаказа");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьНазначенияБезЗаказа");
	ОписаниеВарианта.Описание = НСтр("ru= 'Каковы текущие остатки товаров на складах? 
		|Когда планируются отгрузки и поступления товаров?'");
	
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ТоварныйКалендарь);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "НеИспользоватьНазначенияБезЗаказа");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеИспользоватьНазначенияБезЗаказа");
	ОписаниеВарианта.Описание = НСтр("ru= 'Каковы текущие остатки товаров на складах? 
		|Когда планируются отгрузки и поступления товаров?'");
	#КонецОбласти
	
	#Область УдалитьТоварныйКалендарь
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.УдалитьТоварныйКалендарь);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Каковы текущие остатки товаров на складах? 
		|Когда планируются отгрузки и поступления товаров?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ТоварныйКалендарь");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru= 'Каковы текущие остатки товаров на складах? 
		|Когда планируются отгрузки и поступления товаров?'");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "СмТакже");
	#КонецОбласти
	
	#Область ТоварыВЯчейках
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ТоварыВЯчейках);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какие товары размещены по складским ячейкам?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДвиженияТоваровВнутриСклада");
	ОписаниеВарианта.Описание = НСтр("ru='Какие товары размещены по складским ячейкам?
		|Какие товары запланированы к непосредственной выемке или размещению?'");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ДвиженияТоваровВЯчейкеКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ДвиженияТоваровПоЗаблокированнымЯчейкамКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоНоменклатуреКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоОбластиХраненияКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоСкладскойГруппеНоменклатурыКонтекст");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоЯчейкеКонтекст");
	#КонецОбласти
	
	#Область ТоварыКОтбору
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ТоварыКОтбору);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ состояния выполнения отбора товаров из складских ячеек'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВыполнениеОтбораТоваровПоСкладуКонтекст");
	ОписаниеВарианта.Описание = НСтр("ru='Анализ состояния выполнения отбора товаров из складских ячеек'");
	#КонецОбласти
	
	#Область ТоварыКПоступлению
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ТоварыКПоступлению);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ состояний распоряжений на поступление.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СостояниеПриемки");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ состояний распоряжений на поступление.'");
	
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ТоварыКПоступлению);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область ТоварыНаСкладахПоСрокамГодности
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ТоварыНаСкладахПоСрокамГодности);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'По каким товарам скоро истекает срок годности?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОстаткиТоваровПоСрокамГодности");
	ОписаниеВарианта.Описание = НСтр("ru= 'По каким товарам скоро истекает срок годности?
		|Сколько таких товаров и на каком складе?'");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоНоменклатуреКонтекст");
	#КонецОбласти
	
	
	#Область ТоварыКОтгрузке
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ТоварыКОтгрузке);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ состояний распоряжений на отгрузку.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВыполнениеСборкиОтгрузкиТоваров");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ состояний распоряжений на отгрузку.'");
	
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ТоварыКОтгрузке);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти


	#Область ТоварыПереданныеНаКомиссию
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ТоварыПереданныеНаКомиссию);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, ОписаниеОтчета, Ложь);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сколько товаров было передано комиссионеру за период?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ТоварыПереданныеНаКомиссию");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сколько товаров было передано комиссионеру за период?
		|Сколько он продал, списал, вернул или заказал за тот же период?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьКомиссиюПриПродажахНеБазовая");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ТоварыПереданныеНаКомиссиюБазовая");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьКомиссиюПриПродажахБазовая");
	#КонецОбласти

	
	#Область ТоварыПринятыеНаКомиссию
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ТоварыПринятыеНаКомиссию);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, ОписаниеОтчета, Ложь);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сколько товаров было принято от комитентов за период?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ТоварыПринятыеНаКомиссию");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сколько товаров было принято от комитентов за период?
		|Сколько мы продали, списали, вернули или заказали за тот же период?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьКомиссиюПриЗакупкахНеБазовая");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ТоварыПринятыеНаКомиссиюБазовая");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьКомиссиюПриЗакупкахБазовая");
	#КонецОбласти
	
	#Область ТоварыПринятыеНаХранение
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ТоварыПринятыеНаХранение);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сколько товаров было принято на хранение от поклажедателей?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ТоварыПринятыеНаХранение");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сколько товаров было принято на хранение от поклажедателей?
		|Сколько товаров хранится на складах?
		|Сколько принятых на хранение товаров необходимо выкупить?'");
	#КонецОбласти
	
	#Область ТоварыСИстекающимиСертификатами
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ТоварыСИстекающимиСертификатами);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьОтчет(ОписаниеОтчета);
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ТоварыСИстекающимиСертификатами");
	ОписаниеВарианта.Описание = НСтр("ru= 'По каким сертификатам заканчивается срок действия?'");
	ОписаниеВарианта.Включен = Истина;
	#КонецОбласти
	
	
	#Область ТоварыСхемыОбеспечения
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ТоварыСхемыОбеспечения);
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область УсловияЗакупок
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.УсловияЗакупок);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сравнение условий закупки товаров у различных поставщиков.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "УсловияЗакупок");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сравнение условий закупки товаров у различных поставщиков.'");
	#КонецОбласти
	
	
	#Область УсловияПродаж
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.УсловияПродаж);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеОтчета.ФункциональныеОпции.Добавить("ИспользуетсяЦенообразование20");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сравнение фактических условий продаж товаров с зарегистрированными в соглашениях.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОбщиеПараметры");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ типовых соглашений о продажах по видам цен, графикам оплат, периодам действия, хозяйственным операциям, складам и срокам поставки номенклатуры.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Цены");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сводные данные по ценовым группам и соглашениям.'");
	#КонецОбласти
	
	#Область УсловияПродаж
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.УсловияПродаж2_5);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеОтчета.ФункциональныеОпции.Добавить("ИспользуетсяЦенообразование25");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сравнение фактических условий продаж товаров с зарегистрированными в соглашениях.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОбщиеПараметры");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ типовых соглашений о продажах по видам цен, графикам оплат, периодам действия, хозяйственным операциям, складам и срокам поставки номенклатуры.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Цены");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сводные данные по ценовым группам и соглашениям.'");
	#КонецОбласти
	
	
	#Область УправленческийБаланс
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.УправленческийБаланс);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ финансовых показателей на начало и конец периода и их изменения.'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "УправленческийБаланс");
	ОписаниеВарианта.Описание = НСтр("ru= 'Каковы финансовые показатели по статьям активов и пассивов?
		|Каковы финансовые показатели по организациям и подразделениям?
		|Есть ли нарушение баланса?'");
	ВариантыОтчетовУТПереопределяемый.УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "УпрБалансПоНаправлениям");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль финансовых показателей по направлениям и статьям активов/пассивов.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("УправлениеПредприятием");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "УпрБалансПоОрганизациям");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль финансовых показателей по организациям и статьям активов/пассивов.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("УправлениеПредприятием");
	#КонецОбласти
	
	#Область УправленческийБалансКонтроль
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.УправленческийБалансКонтроль);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "КонтрольБалансаКонтекст");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "КонтрольБаланса");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль финансовых показателей по месяцам, статьям активов/пассивов и документам.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	#КонецОбласти
	
	#Область ФинансовоеСостояние
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ФинансовоеСостояние);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ФинансовоеСостояниеБазовая");
	ОписаниеВарианта.Описание = НСтр("ru= 'Каковы финансовые показатели по статьям активов и обязательств?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("БазоваяВерсия");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "УправленческийБалансУстаревший");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "КонтрольБалансаУстаревший");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "КарточкаАктиваПассиваКонтекст");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "КонтрольВводаОстатковКонтекст");
	#КонецОбласти
	
	
	#Область ЭффективностьСделокСКлиентами
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ЭффективностьСделокСКлиентами);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какое количество сделок выиграно, проиграно или находится в работе?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ЭффективностьСделок");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какое количество сделок выиграно, проиграно или находится в работе?
		|На какую потенциальную сумму продаж?'");
	#КонецОбласти
	
	
	#Область ВедомостьРасчетовПоФинансовымИнструментам
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьРасчетовПоФинансовымИнструментам);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеОтчета.Описание = НСтр("ru= 'Контроль поступлений и списаний денежных средств по финансовым инструментам.'");
	ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ВедомостьРасчетовПоФинансовымИнструментамКонтекст");
	#КонецОбласти
	
	
	
	#Область ВедомостьПоДисконтированнойЗадолженности
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьПоДисконтированнойЗадолженности);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоДисконтированнойЗадолженности");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ дисконтированной кредиторской задолженности поставщикам.
	|Как изменялись процентные расходы дисконтирования и задолженность за указанный период?'");
	ОписаниеВарианта.Включен = Истина;
	#КонецОбласти
	
	#Область СправкаРасчетНачисленияПроцентныхРасходовДисконтирования
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетНачисленияПроцентныхРасходовДисконтирования);
	ОписаниеОтчета.Описание = НСтр("ru= 'Определение суммы процентных расходов дисконтирования кредиторской задолженности поставщикам.'");
	#КонецОбласти

	#Область СправкаРасчетСписанияПроцентныхРасходовДисконтирования
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетСписанияПроцентныхРасходовДисконтирования);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СправкаРасчетСписанияПроцентныхРасходовДисконтирования");
	ОписаниеВарианта.Описание = НСтр("ru= 'Определение суммы списания процентных расходов дисконтирования на указанный месяц
	|с учетом изменения условий оплаты и ставки дисконтирования, проведения оплаты и корректировки.'");
	ОписаниеВарианта.Включен = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "КонтекстныйВариант");
	ОписаниеВарианта.Включен = Ложь;
	#КонецОбласти
	
	//++ Локализация
	#Область ОтчетСервисПрогнозированияСлужебный
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОтчетСервисПрогнозированияСлужебный);
	ОписаниеОтчета.ВидимостьПоУмолчанию = Ложь;
	ОписаниеОтчета.Описание = НСтр("ru= 'Просмотр и управление прогнозами продаж, полученными из сервиса прогнозирования.'");
	ОписаниеОтчета.Размещение.Очистить();
	#КонецОбласти
	//-- Локализация

КонецПроцедуры

// Содержит описания изменений имен вариантов отчетов. Используется
//   при обновлении информационной базы, в целях контроля ссылочной целостности
//   и для сохранения настроек варианта, сделанных администратором.
//
//   (см. подробнее ВариантыОтчетовПереопределяемый.ЗарегистрироватьИзмененияКлючейВариантовОтчетов).
//
Процедура ЗарегистрироватьИзмененияКлючейВариантовОтчетов(Изменения) Экспорт
	
	ДобавитьИзменениеКлючей(Изменения, "ДебиторскаяЗадолженность", "ИнтервалыГоризонтально", "ДебиторскаяЗадолженность");
	ДобавитьИзменениеКлючей(Изменения, "ДебиторскаяЗадолженность", "ПоРасчетнымДокументам", "ДебиторскаяЗадолженностьПоРасчетнымДокументам");
	ДобавитьИзменениеКлючей(Изменения, "КредиторскаяЗадолженность", "ИнтервалыГоризонтально", "КредиторскаяЗадолженность");
	ДобавитьИзменениеКлючей(Изменения, "КредиторскаяЗадолженность", "ПоРасчетнымДокументам", "КредиторскаяЗадолженностьПоРасчетнымДокументам");
	ДобавитьИзменениеКлючей(Изменения, "ВедомостьПоТоварамНаСкладахВЦенахНоменклатуры", "Основной", "ВедомостьВЦенахНоменклатуры");
	ДобавитьИзменениеКлючей(Изменения, "ВыручкаИСебестоимостьПродаж", "ПродажиСписок", "ПродажиПоПартнерам");
	ДобавитьИзменениеКлючей(Изменения, "ВыручкаИСебестоимостьПродаж", "АнализПродажПоПоставщикам", "ПродажиПоПоставщикам");
	ДобавитьИзменениеКлючей(Изменения, "ВыручкаИСебестоимостьПродаж", "АнализПродажПоБизнесРегионамДиаграмма", "АнализПродажПоБизнесРегионам");
	ДобавитьИзменениеКлючей(Изменения, "ДинамикаПоказателейРаботыТорговыхПредставителей", "Основной", "ДинамикаПоказателейТорговыхПредставителей");
	ДобавитьИзменениеКлючей(Изменения, "КарточкаРасчетовСКлиентами", "Основной", "КарточкаРасчетовСКлиентами");
	ДобавитьИзменениеКлючей(Изменения, "КарточкаРасчетовСПоставщиками", "Основной", "КарточкаРасчетовСПоставщиками");
	ДобавитьИзменениеКлючей(Изменения, "ПланФактныйАнализРаботыТорговыхПредставителейПоКоличеству", 
		"ВыполнениеЗаданийПоКоличествуВРазрезеТорговыхПредставителей", "ВыполнениеЗаданийПоПредставителям");
	ДобавитьИзменениеКлючей(Изменения, "ПланФактныйАнализРаботыТорговыхПредставителейПоКоличеству", 
		"ВыполнениеЗаданийПоКоличествуВРазрезеНоменклатуры", "ВыполнениеЗаданийПоНоменклатуре");
	ДобавитьИзменениеКлючей(Изменения, "РаспределениеТорговыхПредставителей", "Основной", "КалендарьВизитовТорговыхПредставителей");
	ДобавитьИзменениеКлючей(Изменения, "РеестрКредитовИДепозитов", "Основной", "РеестрДоговоровКредитовДепозитов");
	ДобавитьИзменениеКлючей(Изменения, "РеестрКредитовИДепозитов", "Горизонтальный", "РеестрДоговоровКредитовДепозитовГоризонтальный");
	ДобавитьИзменениеКлючей(Изменения, "СостояниеРасчетовСКлиентами", "Основной", "СостояниеРасчетовСКлиентами");
	ДобавитьИзменениеКлючей(Изменения, "СостояниеРасчетовСПоставщиками", "Основной", "СостояниеРасчетовСПоставщиками");
	ДобавитьИзменениеКлючей(Изменения, "ТоварныйКалендарь", "Основной", "ТоварныйКалендарь");
	ДобавитьИзменениеКлючей(Изменения, "ВедомостьПоТоварамОрганизацийВЦенахНоменклатуры", "Основной", "ВедомостьПоТоварамОрганизацийВЦенахНоменклатуры");
	
КонецПроцедуры

// Возвращает имя отчета как оно задано в конфигураторе
//
// Параметры:
//	Форма - ФормаКлиентскогоПриложения - Форма отчета.
//
// Возвращаемое значение:
//	Строка - имя отчета без слова "Отчет.".
//
Функция ИмяОтчетаПоКлючуОбъекта(Форма) Экспорт
	Если Форма = Неопределено Тогда
		ИмяОтчета = Неопределено;
	Иначе
		Если ТипЗнч(Форма.НастройкиОтчета.ОтчетСсылка) = Тип("СправочникСсылка.ДополнительныеОтчетыИОбработки") Тогда
			ИмяОтчета = Форма.НастройкиОтчета.ОтчетСсылка.ИмяОбъекта;
		ИначеЕсли ТипЗнч(Форма.НастройкиОтчета.ОтчетСсылка) = Тип("Строка") Тогда
			ИмяОтчета = СтрЗаменить(Форма.НастройкиОтчета.ОтчетСсылка, "ВнешнийОтчет.", "");
		Иначе
			ИмяОтчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Форма.НастройкиОтчета.ОтчетСсылка, "Имя");
		КонецЕсли;
	КонецЕсли;
	
	Возврат ИмяОтчета;
КонецФункции

// Отключает указанный отчет со всеми его вариантами от механизма "Варианты отчетов".
//
// Параметры:
//  ОписаниеОтчета - СтрокаДереваЗначений - Передается "как есть" из ВариантыОтчетов.ОписаниеОтчета().
//
Процедура ОтключитьОтчет(ОписаниеОтчета) Экспорт
	
	ОписаниеОтчета.Включен = Ложь;
	
КонецПроцедуры

// Отключает указанный вариант отчета от механизма "Варианты отчетов".
//
// Параметры:
//  Настройки - см. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов.Настройки
//  ОписаниеОтчета - СтрокаДереваЗначений - Передается "как есть" из ВариантыОтчетов.ОписаниеОтчета().
//  КлючВарианта   - Строка - имя варианта отчета.
//
Процедура ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, КлючВарианта) Экспорт
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, КлючВарианта);
	
	ОписаниеВарианта.Включен = Ложь;
	
КонецПроцедуры

// Устанавливает важность для указанного варианта отчета в указанной подсистеме
//
// Параметры:
//  ОписаниеВарианта - СтрокаДереваЗначений - Передается "как есть" из ВариантыОтчетов.ОписаниеОтчета().
//  Важность - Строка
//               	|- ""        - Вывод отчета в своей группе обычным шрифтом.
//               	|- "Важный"  - Вывод отчета в своей группе жирным шрифтом.
//               	|- "СмТакже" - Вывод отчета в группе "См. также".
//  Подсистема - ОбъектМетаданных - если подсистема не указана, то для всех подсистем варианта.
//
Процедура УстановитьВажностьВариантаОтчета(ОписаниеВарианта, Важность, Подсистема = Неопределено) Экспорт
	
	Если ВажностьУказанаВерно(Важность) Тогда
		Размещение = ОписаниеВарианта.Размещение.Получить(Подсистема);
		
		Если Не Размещение = Неопределено Тогда
			ОписаниеВарианта.Размещение.Вставить(Подсистема, Важность);
		Иначе
			Для Каждого Размещение Из ОписаниеВарианта.Размещение Цикл 
				ОписаниеВарианта.Размещение.Вставить(Размещение.Ключ, Важность);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Проверяет строку на содержание параметров важности
//
// Параметры:
//  Важность - Строка - возможные варианты: "", "Важный", "СмТакже"
//
// Возвращаемое значение: 
//  Булево   - Истина, если переданная строка равна одному из значений:
//               	|- ""        - Вывод отчета в своей группе обычным шрифтом.
//               	|- "Важный"  - Вывод отчета в своей группе жирным шрифтом.
//               	|- "СмТакже" - Вывод отчета в группе "См. также".
//             Ложь, в ином случае.
//
Функция ВажностьУказанаВерно(Важность)
	
	Возврат ПустаяСтрока(Важность) Или Важность = "Важный" Или Важность = "СмТакже";
	
КонецФункции

// Добавляет вариант отчета в таблицу переименования
//
// Параметры:
//  Изменения - ТаблицаЗначений - см. подробнее ВариантыОтчетовПереопределяемый.ЗарегистрироватьИзмененияКлючейВариантовОтчетов
//  ИмяОтчета - Строка - Имя отчета владельца варианта отчета
//  СтароеИмяВарианта - Строка - Имя вариант отчета до переименования
//  АктуальноеИмяВарианта - Строка - Новое имя варианта отчета
//
Процедура ДобавитьИзменениеКлючей(Изменения, ИмяОтчета, СтароеИмяВарианта, АктуальноеИмяВарианта) Экспорт
	
	Изменение = Изменения.Добавить();
	
	Изменение.Отчет 				= Метаданные.Отчеты[ИмяОтчета];
	Изменение.СтароеИмяВарианта 	= СтароеИмяВарианта;
	Изменение.АктуальноеИмяВарианта = АктуальноеИмяВарианта;
	
КонецПроцедуры

// Добавляет или удаляет подсистему из размещений варианта отчета.
//
// Параметры:
//	Размещение - Соответствие из КлючИЗначение - настройки размещения варианта отчета в разделах (подсистемах), где:
//             * Ключ - ОбъектМетаданных - подсистема, в которой размещается отчет или вариант отчета.
//             * Значение - Строка - настройки размещения в подсистеме (группе) - "", "Важный", "СмТакже".
//	Действие - Строка - "Удалить" или "Вставить"
//	ИмяПодсистемы - Строка - имя подсистемы
//		подчиненные подсистемы разделяются ".",	служебные слова "Подсистема" или "Подсистемы" указывать не нужно.
//
Процедура ИзменитьРазмещениеВариантаОтчета(Размещение, Действие, ИмяПодсистемы) Экспорт
	
	Подсистема = ОбщегоНазначенияУТ.ПодсистемаПоИмени(ИмяПодсистемы);
	Если Подсистема = Неопределено Тогда
		Возврат; // нет такой подсистемы в метаданных
	КонецЕсли;
	
	Если Действие = "Удалить" Тогда
		Размещение.Удалить(Подсистема);
	ИначеЕсли Действие = "Вставить" Тогда
		Размещение.Вставить(Подсистема);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область КомандыПодменюОтчеты

#Область ВзаимодействияПоКонтакту

// Добавляет команду отчета в список команд.
// 
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//
// Возвращаемое значение:
//  СтрокаТаблицыЗначений: См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
Функция ДобавитьКомандуВзаимодействияПоКонтакту(КомандыОтчетов) Экспорт

	Если ПравоДоступа("Просмотр", Метаданные.ЖурналыДокументов.Взаимодействия) Тогда
		
		КомандаОтчет = КомандыОтчетов.Добавить();
		КомандаОтчет.Обработчик                  = "МенюОтчетыУТКлиент.ВзаимодействияПоКонтакту";
		КомандаОтчет.Менеджер                    = Метаданные.ЖурналыДокументов.Взаимодействия.Формы.ФормаСпискаПараметрическая.ПолноеИмя();
		КомандаОтчет.Представление               = НСтр("ru = 'Взаимодействия'");
		КомандаОтчет.МножественныйВыбор          = Ложь;
		КомандаОтчет.Важность                    = "СмТакже";
		КомандаОтчет.ФункциональныеОпции         = "ИспользоватьПочтовыйКлиент";
		Возврат КомандаОтчет;
		
	КонецЕсли;

	Возврат Неопределено;

КонецФункции

#КонецОбласти

#Область СегментыПартнера

// Добавляет команду отчета в список команд.
// 
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//
// Возвращаемое значение:
//  СтрокаТаблицыЗначений: См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
Функция ДобавитьКомандуСегментыПартнера(КомандыОтчетов) Экспорт

	Если ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.ПартнерыСегмента) Тогда
		
		КомандаОтчет = КомандыОтчетов.Добавить();
		КомандаОтчет.Обработчик                  = "МенюОтчетыУТКлиент.СегментыПартнера";
		КомандаОтчет.Менеджер                    = Метаданные.РегистрыСведений.ПартнерыСегмента.Формы.СегментыПартнераПараметрическая.ПолноеИмя();
		КомандаОтчет.Представление               = НСтр("ru = 'Сегменты'");
		КомандаОтчет.МножественныйВыбор          = Ложь;
		КомандаОтчет.Важность                    = "СмТакже";
		КомандаОтчет.ФункциональныеОпции         = "ИспользоватьСегментыПартнеров";
		
		Возврат КомандаОтчет;
		
	КонецЕсли;

	Возврат Неопределено;

КонецФункции

#КонецОбласти

#КонецОбласти
