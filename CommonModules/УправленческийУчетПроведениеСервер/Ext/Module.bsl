////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции формирования движений по 
// оборотным регистрам управленческого учета.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область Проведение

// Формирует параметры для проведения документа по регистрам учетного механизма через общий механизм проведения.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  Свойства - См. ПроведениеДокументов.СвойстваДокумента
//
// Возвращаемое значение:
//  Структура - См. ПроведениеДокументов.ПараметрыУчетногоМеханизма
//
Функция ПараметрыДляПроведенияДокумента(Документ, Свойства) Экспорт
	
	Параметры = ПроведениеДокументов.ПараметрыУчетногоМеханизма();
	
	// Проведение
	Если Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ДвиженияДенежныеСредстваКонтрагент);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ДвиженияДенежныхСредств);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ДвиженияДенежныеСредстваДоходыРасходы);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ДвиженияНоменклатураНоменклатура);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ДвиженияКонтрагентДоходыРасходы);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ДвиженияКонтрагентКонтрагент);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.Закупки);
		
	КонецЕсли;
	
	// Контроль
	Если Свойства.РежимЗаписи <> РежимЗаписиДокумента.Запись Тогда
		
		Параметры.КонтрольныеРегистрыЗаданий.Добавить(Метаданные.РегистрыНакопления.ДвиженияДенежныеСредстваДоходыРасходы);
		Параметры.КонтрольныеРегистрыЗаданий.Добавить(Метаданные.РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы);
		Параметры.КонтрольныеРегистрыЗаданий.Добавить(Метаданные.РегистрыНакопления.ДвиженияКонтрагентДоходыРасходы);
		
	КонецЕсли;
	
	Возврат Параметры;
	
КонецФункции

// Возвращает тексты запросов для сторнирования движений при исправлении документов
// 
// Параметры:
// 	МетаданныеДокумента - ОбъектМетаданныхДокумент - Метаданные документа, который проводится.
// 
// Возвращаемое значение:
// 	Соответствие - Соответствие полного имени регистра тексту запроса сторнирования
//
Функция ТекстыЗапросовСторнирования(МетаданныеДокумента) Экспорт
	
	ДвиженияДокумента = МетаданныеДокумента.Движения;

	ТекстыЗапросов = Новый Соответствие();
	
	МетаданныеРегистра = Метаданные.РегистрыНакопления.ДвиженияНоменклатураНоменклатура;
	Если ДвиженияДокумента.Содержит(МетаданныеРегистра) Тогда
		ТекстДопУсловий = "НЕ ДанныеРегистра.РасчетСебестоимости";
		ТекстыЗапросов.Вставить(МетаданныеРегистра.ПолноеИмя(),
			ПроведениеДокументов.ТекстСторнирующегоЗапроса(
				МетаданныеРегистра,
				МетаданныеДокумента,
				ТекстДопУсловий));
	КонецЕсли;
	
	МетаданныеРегистра = Метаданные.РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы;
	Если ДвиженияДокумента.Содержит(МетаданныеРегистра) Тогда
		ТекстДопУсловий = "
		|	НЕ ДанныеРегистра.РасчетПартий
		|	И НЕ ДанныеРегистра.РасчетСебестоимости
		|";		
		ТекстыЗапросов.Вставить(МетаданныеРегистра.ПолноеИмя(),
			ПроведениеДокументов.ТекстСторнирующегоЗапроса(
				МетаданныеРегистра,
				МетаданныеДокумента,
				ТекстДопУсловий));
	КонецЕсли;

	МетаданныеРегистра = Метаданные.РегистрыНакопления.ДвиженияДенежныеСредстваКонтрагент;
	Если ДвиженияДокумента.Содержит(МетаданныеРегистра) Тогда
		ТекстДопУсловий = "
		|	НЕ ДанныеРегистра.ОтложенноеПроведение
		|";
		ТекстыЗапросов.Вставить(МетаданныеРегистра.ПолноеИмя(),
			ПроведениеДокументов.ТекстСторнирующегоЗапроса(
				МетаданныеРегистра, МетаданныеДокумента, ТекстДопУсловий));
	КонецЕсли;
	
	МетаданныеРегистра = Метаданные.РегистрыНакопления.ДвиженияДенежныхСредств;
	Если ДвиженияДокумента.Содержит(МетаданныеРегистра) Тогда
		ТекстыЗапросов.Вставить(МетаданныеРегистра.ПолноеИмя(),
			ПроведениеДокументов.ТекстСторнирующегоЗапроса(
				МетаданныеРегистра, МетаданныеДокумента));	
	КонецЕсли;
	
	МетаданныеРегистра = Метаданные.РегистрыНакопления.ДвиженияДенежныеСредстваДоходыРасходы;
	Если ДвиженияДокумента.Содержит(МетаданныеРегистра) Тогда
		ТекстыЗапросов.Вставить(МетаданныеРегистра.ПолноеИмя(),
			ПроведениеДокументов.ТекстСторнирующегоЗапроса(
				МетаданныеРегистра, МетаданныеДокумента));
	КонецЕсли;
	
	МетаданныеРегистра = Метаданные.РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы;
	Если ДвиженияДокумента.Содержит(МетаданныеРегистра) Тогда
		ТекстыЗапросов.Вставить(МетаданныеРегистра.ПолноеИмя(),
			ПроведениеДокументов.ТекстСторнирующегоЗапроса(
				МетаданныеРегистра, МетаданныеДокумента));
	КонецЕсли;
	
	МетаданныеРегистра = Метаданные.РегистрыНакопления.ДвиженияКонтрагентДоходыРасходы;
	Если ДвиженияДокумента.Содержит(МетаданныеРегистра) Тогда
		ТекстыЗапросов.Вставить(МетаданныеРегистра.ПолноеИмя(),
			ПроведениеДокументов.ТекстСторнирующегоЗапроса(
				МетаданныеРегистра, МетаданныеДокумента));
	КонецЕсли;
			
	МетаданныеРегистра = Метаданные.РегистрыНакопления.ДвиженияКонтрагентКонтрагент;
	Если ДвиженияДокумента.Содержит(МетаданныеРегистра) Тогда
		ТекстыЗапросов.Вставить(МетаданныеРегистра.ПолноеИмя(),
			ПроведениеДокументов.ТекстСторнирующегоЗапроса(
				МетаданныеРегистра, МетаданныеДокумента));
	КонецЕсли;
	
	МетаданныеРегистра = Метаданные.РегистрыНакопления.Закупки;
	Если ДвиженияДокумента.Содержит(МетаданныеРегистра) Тогда
	ТекстыЗапросов.Вставить(МетаданныеРегистра.ПолноеИмя(),
		ПроведениеДокументов.ТекстСторнирующегоЗапроса(
			МетаданныеРегистра, МетаданныеДокумента));
	КонецЕсли;
	
	Возврат ТекстыЗапросов;
	
КонецФункции

// Дополняет текст запроса механизма проверки даты запрета по таблице изменений.
// 
// Параметры:
// 	Запрос - Запрос - используется для установки параметров запроса.
// 
// Возвращаемое значение:
//	Соответствие - соответствие имен таблиц изменения регистров и текстов запросов.
//	
Функция ТекстыЗапросовКонтрольДатыЗапретаПоТаблицеИзменений(Запрос) Экспорт

	СоответствиеТекстовЗапросов = Новый Соответствие();
	Возврат СоответствиеТекстовЗапросов;
	
КонецФункции

// Процедура формирования движений по подчиненным оборотным регистрам управленческого учета.
//
// Параметры:
//   ТаблицыДляДвижений - Структура - таблицы данных документа
//   Движения - КоллекцияДвижений - коллекция наборов записей движений документа
//   Отказ - Булево - признак отказа от проведения документа.
//
Процедура ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ДвиженияДенежныеСредстваКонтрагент");
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ДвиженияДенежныхСредств");
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ДвиженияДенежныеСредстваДоходыРасходы");
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ДвиженияДоходыРасходыПрочиеАктивыПассивы");
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ДвиженияНоменклатураДоходыРасходы");
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ДвиженияНоменклатураНоменклатура");
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ДвиженияКонтрагентДоходыРасходы");
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ДвиженияКонтрагентКонтрагент");
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "Закупки");
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииФормированияОтложенныхДвижений

// Обновить все отложенные движения по оборотным регистрам:
//   - в регистре "Движения Денежные средства - Контрагент" по клиентам и поставщикам
//   - в регистре "Движения Контрагент - Контрагент"
//
// Параметры:
//	МассивДокументов - Массив - массив документов для которых необходимо сформировать движения.
//
Процедура ОбновитьДвиженияПоОборотнымРегистрам(МассивДокументов) Экспорт
	
	Если МассивДокументов.Количество() > 0 Тогда
		СформироватьДвиженияДенежныеСредстваКонтрагентПоКлиентам(МассивДокументов);
	КонецЕсли;
	Если МассивДокументов.Количество() > 0 Тогда
		СформироватьДвиженияДенежныеСредстваКонтрагентПоПоставщикам(МассивДокументов);
	КонецЕсли;
	Если МассивДокументов.Количество() > 0 Тогда
		СформироватьДвиженияКонтрагентКонтрагент(МассивДокументов);
	КонецЕсли;
	
КонецПроцедуры

// Формирование отложенных движений в регистре "Движения Денежные средства - Контрагент" по клиентам.
//
Процедура СформироватьДвиженияДенежныеСредстваКонтрагентПоКлиентам(МассивДокументов, ДляОтладки = Неопределено) Экспорт
	
	Попытка
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		ПолучитьСторнируемыеДокументы(МенеджерВременныхТаблиц, МассивДокументов);
		ПолучитьРасчетыСКлиентами(МенеджерВременныхТаблиц, МассивДокументов, ДляОтладки);
		ПолучитьДвиженияДенежныеСредстваКонтрагент(МенеджерВременныхТаблиц, МассивДокументов);
		ДанныеДвижений = ДвиженияДенежныеСредстваКонтрагент(МенеджерВременныхТаблиц, ДляОтладки);
		Если ДляОтладки = Неопределено Тогда
			ЗаписатьДвиженияДенежныеСредстваКонтрагент(ДанныеДвижений);
		Иначе
			ДляОтладки.Вставить("МенеджерВременныхТаблиц", МенеджерВременныхТаблиц);
			ДляОтладки.Вставить("ДанныеДвижений", ДанныеДвижений.Выгрузить());
		КонецЕсли;
	Исключение
		ТекстСообщения = НСтр("ru = 'Не удалось выполнить отложенное проведение по регистру ""Движения Денежные средства - Контрагент""
						|при расчетах с клиентами по причине'") + ":" + Символы.ПС + "%Причина%";
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка, , ТекстСообщения);
		ВызватьИсключение ТекстСообщения;
	КонецПопытки;

КонецПроцедуры

// Формирование отложенных движений в регистре "Движения Денежные средства - Контрагент" по поставщикам.
//
// Параметры:
//	МассивДокументов - Массив - массив документов.
//
Процедура СформироватьДвиженияДенежныеСредстваКонтрагентПоПоставщикам(МассивДокументов, ДляОтладки = Неопределено) Экспорт

	Попытка
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		ПолучитьСторнируемыеДокументы(МенеджерВременныхТаблиц, МассивДокументов);
		ПолучитьРасчетыСПоставщиками(МенеджерВременныхТаблиц, МассивДокументов, ДляОтладки);
		ПолучитьДвиженияДенежныеСредстваКонтрагент(МенеджерВременныхТаблиц, МассивДокументов);
		ДанныеДвижений = ДвиженияДенежныеСредстваКонтрагент(МенеджерВременныхТаблиц, ДляОтладки);
		Если ДляОтладки = Неопределено Тогда
			ЗаписатьДвиженияДенежныеСредстваКонтрагент(ДанныеДвижений);
		Иначе
			ДляОтладки.Вставить("МенеджерВременныхТаблиц", МенеджерВременныхТаблиц);
			ДляОтладки.Вставить("ДанныеДвижений", ДанныеДвижений.Выгрузить());
		КонецЕсли;
	Исключение
		ТекстСообщения = НСтр("ru = 'Не удалось выполнить отложенное проведение по регистру ""Движения Денежные средства - Контрагент""
						|при расчетах с поставщиками по причине'") + ":" + Символы.ПС + "%Причина%";
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка, , ТекстСообщения);
		ВызватьИсключение ТекстСообщения;
	КонецПопытки;
	
КонецПроцедуры

// Формирование отложенных движений в регистре "Движения Контрагент - Контрагент" по поставщикам.
//
// Параметры:
//	МассивДокументовРасчетов - Массив - массив документов для которых необходимо сформировать движения.
//	ДляОтладки - Структура, Неопределено - Структура в которой возвращается информация для отладки.
//
Процедура СформироватьДвиженияКонтрагентКонтрагент(МассивДокументовРасчетов, ДляОтладки = Неопределено) Экспорт
	
	Попытка
		
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		ПолучитьСторнируемыеДокументы(МенеджерВременныхТаблиц, МассивДокументовРасчетов);
		// Проведем взаимозачет кредиторской задолженности
		Запрос = Новый Запрос(ТекстЗапросаРасчетыСПартнерами());
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("МассивДокументов", МассивДокументовРасчетов);
		РасчетыСПартнерами = Запрос.ВыполнитьПакет();
		ПоследнийИндекс = РасчетыСПартнерами.ВГраница();
		ГоловныеОрганизации  = РасчетыСПартнерами[ПоследнийИндекс-2].Выгрузить();
		ДокументыДебета  = РасчетыСПартнерами[ПоследнийИндекс-1].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
		ДокументыКредита = РасчетыСПартнерами[ПоследнийИндекс].Выгрузить();
		
		Головная = Новый Соответствие;
		Для Каждого Пара Из ГоловныеОрганизации Цикл
			Головная.Вставить(Пара.Организация, Пара.ГоловнаяОрганизация);
		КонецЦикла;
		
		ТаблицаДвижений = РегистрыНакопления.ДвиженияКонтрагентКонтрагент.СоздатьНаборЗаписей().ВыгрузитьКолонки();
		// Распределим дебиторскую задолженность по кредиторской
		Для Каждого Документ Из ДокументыДебета.Строки Цикл
			Взаимозачет = ТипЗнч(Документ.Регистратор) = Тип("ДокументСсылка.ВзаимозачетЗадолженности");
			Отбор = Новый Структура("Регистратор");
			Для Каждого Организация Из Документ.Строки Цикл
				ЗаполнитьЗначенияСвойств(Отбор, Организация);
				Если Взаимозачет Тогда
					Отбор.Вставить("ГоловнаяОрганизация", Головная[Организация.Организация]);
					СтрокиКредита = ДокументыКредита.НайтиСтроки(Отбор);
					Если ЗначениеЗаполнено(СтрокиКредита) Тогда
						ВзаиморасчетыСервер.ПровестиВзаимозачет(Организация.Строки, СтрокиКредита, ТаблицаДвижений);
					КонецЕсли;
				Иначе
					УникальныеВладельцы = Новый Соответствие;
					Для Каждого ОбъектРасчетов Из Организация.Строки Цикл
						Параметры = Новый Структура;
						Параметры.Вставить("ЭтоВозвратАванса", ОбъектРасчетов.ЭтоВозвратАванса);
						Параметры.Вставить("ГоловнаяОрганизация", ОбъектРасчетов.ГоловнаяОрганизация);
						УникальныеВладельцы.Вставить(ОбъектРасчетов.ВладелецОбъектаРасчета, Параметры);
					КонецЦикла;
					Для Каждого ВладелецОбъектаРасчета Из УникальныеВладельцы Цикл
						Если ВладелецОбъектаРасчета.Значение.ЭтоВозвратАванса Тогда
							Отбор.Вставить("ГоловнаяОрганизация", ВладелецОбъектаРасчета.Значение.ГоловнаяОрганизация);
						Иначе
							Отбор.Вставить("ВладелецОбъектаРасчета", ВладелецОбъектаРасчета.Ключ);
						КонецЕсли;
						СтрокиКредита = ДокументыКредита.НайтиСтроки(Отбор);
						Если ЗначениеЗаполнено(СтрокиКредита) Тогда
							ВзаиморасчетыСервер.ПровестиВзаимозачет(Организация.Строки, СтрокиКредита, ТаблицаДвижений);
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;// по организациям
		КонецЦикла;// по регистраторам
		
		// Подготовим наборы для записи
		Если ТаблицаДвижений.Количество() > 0 Тогда
			ЗапросДвижений = Новый Запрос(ТекстЗапросаДвиженияКонтрагентКонтрагент());
			ЗапросДвижений.УстановитьПараметр("ТаблицаДвижений", ТаблицаДвижений);
			ЗапросДвижений.УстановитьПараметр("МассивДокументов", МассивДокументовРасчетов);
			ВыборкаПоДокументам = ЗапросДвижений.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоДокументам.Следующий() Цикл
				НаборЗаписей = РегистрыНакопления.ДвиженияКонтрагентКонтрагент.СоздатьНаборЗаписей();
				НаборЗаписей.ДополнительныеСвойства.Вставить("ОтложенноеПроведение");
				НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаПоДокументам.Регистратор);
				Выборка = ВыборкаПоДокументам.Выбрать();
				Пока Выборка.Следующий() Цикл
					ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
				КонецЦикла;
				НаборЗаписей.Записать();
			КонецЦикла;
		КонецЕсли;
	
	Исключение
		
		ТекстСообщения = НСтр("ru = 'Не удалось выполнить отложенное проведение по регистру ""Движения Контрагент - Контрагент""
									|по причине: %Причина%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Отложенное проведение взаимозачета'", ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			,
			,
			ТекстСообщения);
		ВызватьИсключение ТекстСообщения;
		
	КонецПопытки;
	
	Если ТипЗнч(ДляОтладки) = Тип("Структура") Тогда
		ДляОтладки.Вставить("Запрос", Запрос);
		ДляОтладки.Вставить("РезультатЗапроса", РасчетыСПартнерами);
		ДляОтладки.Вставить("ТаблицаДвижений", ТаблицаДвижений);
		ДляОтладки.Вставить("ЗапросДвижений", ЗапросДвижений);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиПодписокНаСобытия

// Обработчик подписки на событие ПолучитьИсходныеДвиженияРегистров.
//
// Параметры:
//  Источник - РегистрНакопленияНаборЗаписей - записываемый регистр накопления.
//  Отказ - Булево - признак отказа от записи набора регистра.
//  Замещение - Булево - Истина - запись осуществляется с заменой существующих в базе данных записей.
//
Процедура ПолучитьИсходныеДвиженияРегистровПередЗаписью(Источник, Отказ, Замещение) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НеКонтролироватьИзмененияРегистра(Источник) Тогда
		Возврат;
	КонецЕсли;
	
	ИмяРегистра = Источник.Метаданные().Имя;
	ТекстЗапроса = ТекстЗапросаПередЗаписью(ИмяРегистра);
	Источник.ДополнительныеСвойства.Вставить("МенеджерВТУпрУчета", Новый МенеджерВременныхТаблиц);
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Источник.ДополнительныеСвойства.МенеджерВТУпрУчета;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Регистратор", Источник.Отбор.Регистратор.Значение);
	Запрос.Выполнить();

	Если ИмяРегистра = "ДвиженияКонтрагентКонтрагент" Тогда
		ВосстановитьОтложенноеПроведение(Источник);
	КонецЕсли;

КонецПроцедуры

// Обработчик подписки на событие ПолучитьПризнакИзмененияДвиженийРегистров.
//
// Параметры:
//  Источник - РегистрНакопленияНаборЗаписей - записываемый регистр накопления.
//  Отказ - Булево - признак отказа от записи набора регистра.
//  Замещение - Булево - Истина - запись осуществляется с заменой существующих в базе данных записей.
//
Процедура ПолучитьПризнакИзмененияДвиженийРегистровПриЗаписи(Источник, Отказ, Замещение) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если НеКонтролироватьИзмененияРегистра(Источник) Тогда
		Источник.ДополнительныеСвойства.Вставить("ИзменилисьДанныеРегистра", Истина);
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапросаПриЗаписи(Источник.Метаданные().Имя);
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Источник.ДополнительныеСвойства.МенеджерВТУпрУчета;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Регистратор", Источник.Отбор.Регистратор.Значение);
	Источник.ДополнительныеСвойства.Вставить("ИзменилисьДанныеРегистра", НЕ Запрос.Выполнить().Пустой());

КонецПроцедуры

#КонецОбласти

#Область УправленческийБаланс

// Для целей формирования управленческого баланса добавляет движения по регистру ПрочиеАктивыПассивы
// по правилам формирования двойной записи.
//
// Параметры:
//  СсылкаНаДокумент - ДокументСсылка, Структура из КлючИЗначение - ссылка документа для которого необходимо сформировать и записать движения упр. баланса
//                                      * Ссылка - ДокументСсылка
//  Движения - КоллекцияДвижений - наборы записей регистров документа.
//
Процедура ДобавитьДвиженияАктивовПассивов(СсылкаНаДокумент, Движения) Экспорт
	
	Обработки.ДвиженияАктивовПассивов.ДобавитьДвиженияДокумента(СсылкаНаДокумент, Движения);
	
КонецПроцедуры

// Для целей формирования управленческого баланса обновляет движения по регистру ПрочиеАктивыПассивы 
// после отложенного распределения взаиморасчетов с партнерами.
//
// Параметры:
//  РегистраторыКОтражению - Массив - массив документов затронутых отложенным распределение взаиморасчетов с партнерами.
//  ПараметрыОтладки - Структура - структура параметров отладки, подробнее см. Обработки.ДвиженияАктивовПассивов.ИнициализироватьПараметрыДвижений.
//
Процедура ОбновитьДвиженияАктивовПассивовПоРасчетамСПартнерами(РегистраторыКОтражению, ПараметрыОтладки = Неопределено) Экспорт
	
	Обработки.ДвиженияАктивовПассивов.ОбновитьДвиженияПоРасчетамСПартнерами(РегистраторыКОтражению, ПараметрыОтладки);
	
КонецПроцедуры

// Для целей формирования управленческого баланса формирует запрос движений по регистру ПрочиеАктивыПассивы
// после расчета себестоимости.
//
// Параметры:
//  ПараметрыДвижений - Структура - параметры формирования запроса баланса активовов/пассивов.
//  ПараметрыОтладки - Структура - параметры отладки, подробнее см. Обработки.ДвиженияАктивовПассивов.ИнициализироватьПараметрыДвижений.
// 
// Возвращаемое значение:
//  Запрос, Неопределено - Запрос движений активов/пассивов
//
Функция ЗапросДвиженийАктивовПассивов(ПараметрыДвижений, ПараметрыОтладки = Неопределено) Экспорт
	
	Возврат Обработки.ДвиженияАктивовПассивов.ЗапросДвижений(ПараметрыДвижений, ПараметрыОтладки);
	
КонецФункции

// Для целей формирования управленческого баланса записывает движения по регистру ПрочиеАктивыПассивы
// по правилам формирования двойной записи.
//
// Параметры:
//  СсылкаНаДокумент - Структура из КлючИЗначение
//                       * Ссылка - ДокументСсылка
//                     ДокументСсылка   - ссылка документа для которого необходимо сформировать и записать движения упр. баланса
//  Движения - Структура из КлючИЗначение
//               * Ключ - Имя регистра
//               * Значение - НаборЗаписейРегистра
//             КоллекцияДвижений - наборы записей регистров документа пеерданные в коллекции двжений или структуре имитирующей эту коллекцию.  
//
Процедура ОбновитьДвиженияАктивовПассивов(СсылкаНаДокумент, Движения) Экспорт
	
	Обработки.ДвиженияАктивовПассивов.ОбновитьДвиженияДокумента(СсылкаНаДокумент, Движения);
	
КонецПроцедуры

#КонецОбласти

// Получает все регистраторы регистра накопления.
//
// Параметры:
//  ИмяРегистра - Строка - Имя регистра накопления.
//
// Возвращаемое значение:
//  Массив - типов регистраторов регистра накопления.
//
Функция МассивРегистраторовРегистра(ИмяРегистра) Экспорт

	МассивДокументов = Новый Массив;
	ТипыРегистраторов = Метаданные.РегистрыНакопления[ИмяРегистра].СтандартныеРеквизиты.Регистратор.Тип.Типы();
	Для Каждого ТипРегистратора Из ТипыРегистраторов Цикл
		Регистратор = Метаданные.НайтиПоТипу(ТипРегистратора);
		Если Регистратор <> Неопределено  Тогда
			МассивДокументов.Добавить(Регистратор.Имя);
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивДокументов;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПолучитьСторнируемыеДокументы(МенеджерВременныхТаблиц, СписокДокументов)
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеестрДокументов.Ссылка КАК Документ,
	|	РеестрДокументов.СторнируемыйДокумент КАК СторнируемыйДокумент
	|ПОМЕСТИТЬ СторнируемыеДокументы
	|ИЗ
	|	РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|ГДЕ
	|	РеестрДокументов.Ссылка В (&СписокДокументов)
	|	И РеестрДокументов.СторноИсправление
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;;
	Запрос.УстановитьПараметр("СписокДокументов", СписокДокументов);
	Запрос.Выполнить();

КонецПроцедуры

Процедура ПолучитьРасчетыСКлиентами(МенеджерВременныхТаблиц, СписокДокументов, ДляОтладки = Неопределено)
	
	Если ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
	
	#Область ТекстЗапросаПоРасчетамСКлиентамиПоСрокам
		ТекстЗапросаРасчетыСКлиентами = 
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Регистратор КАК Регистратор,
		|	ВложенныйЗапрос.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
		|	ВложенныйЗапрос.ОбъектРасчетов КАК Заказ,
		|	ВложенныйЗапрос.РасчетныйДокумент КАК РасчетныйДокумент,
		|	ВложенныйЗапрос.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	ВложенныйЗапрос.Сторно КАК Сторно,
		|	ВЫБОР 
		|		КОГДА СУММА(ВложенныйЗапрос.Долг) < 0 
		|			ТОГДА -СУММА(ВложенныйЗапрос.Долг)
		|		ИНАЧЕ СУММА(ВложенныйЗапрос.Долг)
		|	КОНЕЦ КАК Долг,
		|	ВЫБОР 
		|		КОГДА СУММА(ВложенныйЗапрос.ДолгУпр) < 0 
		|			ТОГДА -СУММА(ВложенныйЗапрос.ДолгУпр)
		|		ИНАЧЕ СУММА(ВложенныйЗапрос.ДолгУпр)
		|	КОНЕЦ КАК ДолгУпр,
		|	ВЫБОР 
		|		КОГДА СУММА(ВложенныйЗапрос.ДолгРегл) < 0 
		|			ТОГДА -СУММА(ВложенныйЗапрос.ДолгРегл)
		|		ИНАЧЕ СУММА(ВложенныйЗапрос.ДолгРегл)
		|	КОНЕЦ КАК ДолгРегл,
		|	ВЫБОР 
		|		КОГДА СУММА(ВложенныйЗапрос.Предоплата) < 0 
		|			ТОГДА -СУММА(ВложенныйЗапрос.Предоплата)
		|		ИНАЧЕ СУММА(ВложенныйЗапрос.Предоплата)
		|	КОНЕЦ КАК Предоплата,
		|	ВЫБОР 
		|		КОГДА СУММА(ВложенныйЗапрос.ПредоплатаУпр) < 0 
		|			ТОГДА -СУММА(ВложенныйЗапрос.ПредоплатаУпр)
		|		ИНАЧЕ СУММА(ВложенныйЗапрос.ПредоплатаУпр)
		|	КОНЕЦ КАК ПредоплатаУпр,
		|	ВЫБОР 
		|		КОГДА СУММА(ВложенныйЗапрос.ПредоплатаРегл) < 0 
		|			ТОГДА -СУММА(ВложенныйЗапрос.ПредоплатаРегл)
		|		ИНАЧЕ СУММА(ВложенныйЗапрос.ПредоплатаРегл)
		|	КОНЕЦ КАК ПредоплатаРегл
		|ПОМЕСТИТЬ РасчетыСКлиентами
		|ИЗ
		|	(ВЫБРАТЬ
		|		РасчетыСПартнерами.ДокументРегистратор КАК Регистратор,
		|		РасчетыСПартнерами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
		|		РасчетыСПартнерами.ОбъектРасчетов КАК ОбъектРасчетов,
		|		РасчетыСПартнерами.РасчетныйДокумент КАК РасчетныйДокумент,
		|		РасчетыСПартнерами.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|		ЛОЖЬ КАК Сторно,
		|		ВЫБОР КОГДА РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА РасчетыСПартнерами.Долг
		|			ИНАЧЕ -РасчетыСПартнерами.Долг
		|		КОНЕЦ КАК Долг,
		|		ВЫБОР КОГДА РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА РасчетыСПартнерами.ДолгУпр
		|			ИНАЧЕ -РасчетыСПартнерами.ДолгУпр
		|		КОНЕЦ КАК ДолгУпр,
		|		ВЫБОР КОГДА РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА РасчетыСПартнерами.ДолгРегл
		|			ИНАЧЕ -РасчетыСПартнерами.ДолгРегл
		|		КОНЕЦ КАК ДолгРегл,
		|		РасчетыСПартнерами.Предоплата КАК Предоплата,
		|		РасчетыСПартнерами.ПредоплатаУпр КАК ПредоплатаУпр,
		|		РасчетыСПартнерами.ПредоплатаРегл КАК ПредоплатаРегл
		|	ИЗ
		|		РегистрНакопления.РасчетыСКлиентамиПоСрокам КАК РасчетыСПартнерами
		|	ГДЕ
		|		РасчетыСПартнерами.ДокументРегистратор В (&СписокДокументов)
		|		И (РасчетыСПартнерами.Долг <> 0
		|			ИЛИ РасчетыСПартнерами.Предоплата <> 0)
		|		И НЕ РасчетыСПартнерами.Сторно
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СторнируемыеДокументы.Документ КАК Регистратор,
		|		РасчетыСПартнерами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
		|		РасчетыСПартнерами.ОбъектРасчетов КАК ОбъектРасчетов,
		|		РасчетыСПартнерами.РасчетныйДокумент КАК РасчетныйДокумент,
		|		РасчетыСПартнерами.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|		ИСТИНА КАК Сторно,
		|		ВЫБОР КОГДА РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА РасчетыСПартнерами.Долг
		|			ИНАЧЕ -РасчетыСПартнерами.Долг
		|		КОНЕЦ КАК Долг,
		|		ВЫБОР КОГДА РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА РасчетыСПартнерами.ДолгУпр
		|			ИНАЧЕ -РасчетыСПартнерами.ДолгУпр
		|		КОНЕЦ КАК ДолгУпр,
		|		ВЫБОР КОГДА РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА РасчетыСПартнерами.ДолгРегл
		|			ИНАЧЕ -РасчетыСПартнерами.ДолгРегл
		|		КОНЕЦ КАК ДолгРегл,
		|		РасчетыСПартнерами.Предоплата КАК Предоплата,
		|		РасчетыСПартнерами.ПредоплатаУпр КАК ПредоплатаУпр,
		|		РасчетыСПартнерами.ПредоплатаРегл КАК ПредоплатаРегл
		|	ИЗ
		|		СторнируемыеДокументы КАК СторнируемыеДокументы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|			РегистрНакопления.РасчетыСКлиентамиПоСрокам КАК РасчетыСПартнерами
		|		ПО
		|			СторнируемыеДокументы.СторнируемыйДокумент = РасчетыСПартнерами.ДокументРегистратор
		|	ГДЕ
		|		(РасчетыСПартнерами.Долг <> 0
		|			ИЛИ РасчетыСПартнерами.Предоплата <> 0)
		|		И НЕ РасчетыСПартнерами.Сторно
		|	) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Регистратор,
		|	ВложенныйЗапрос.АналитикаУчетаПоПартнерам,
		|	ВложенныйЗапрос.ОбъектРасчетов,
		|	ВложенныйЗапрос.РасчетныйДокумент,
		|	ВложенныйЗапрос.СтатьяДвиженияДенежныхСредств,
		|	ВложенныйЗапрос.Сторно
		|ИМЕЮЩИЕ
		|	СУММА(ВложенныйЗапрос.Долг) <> 0 ИЛИ СУММА(ВложенныйЗапрос.Предоплата) <> 0
		|;
		|
		|////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетыСКлиентами.Регистратор КАК Регистратор,
		|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
		|	РасчетыСКлиентами.Заказ КАК Заказ,
		|	НЕОПРЕДЕЛЕНО КАК РасчетныйДокумент,
		|	РасчетыСКлиентами.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	РасчетыСКлиентами.Сторно КАК Сторно,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту) КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорОбъектРасчетов,
		|	НЕОПРЕДЕЛЕНО КАК КорРасчетныйДокумент,
		|	СУММА(РасчетыСКлиентами.Долг) КАК Долг,
		|	СУММА(РасчетыСКлиентами.ДолгУпр) КАК ДолгУпр,
		|	СУММА(РасчетыСКлиентами.ДолгРегл) КАК ДолгРегл,
		|	СУММА(РасчетыСКлиентами.Предоплата) КАК Предоплата,
		|	СУММА(РасчетыСКлиентами.ПредоплатаУпр) КАК ПредоплатаУпр,
		|	СУММА(РасчетыСКлиентами.ПредоплатаРегл) КАК ПредоплатаРегл
		|ПОМЕСТИТЬ РасчетыСПартнерамиВозвратОплаты
		|ИЗ
		|	РасчетыСКлиентами КАК РасчетыСКлиентами
		|ГДЕ
		|	ИСТИНА В (ВЫБРАТЬ ПЕРВЫЕ 1
		|				ИСТИНА
		|				ИЗ
		|					РегистрНакопления.РасчетыСКлиентамиПоСрокам КАК РасчетыВозврат
		|				ГДЕ
		|					РасчетыСКлиентами.Регистратор = РасчетыВозврат.ДокументРегистратор
		|					И РасчетыВозврат.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту))
		|	И (РасчетыСКлиентами.Долг <> 0
		|		ИЛИ РасчетыСКлиентами.Предоплата <> 0)
		|
		|СГРУППИРОВАТЬ ПО
		|	РасчетыСКлиентами.Регистратор,
		|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам,
		|	РасчетыСКлиентами.Заказ,
		|	РасчетыСКлиентами.СтатьяДвиженияДенежныхСредств,
		|	РасчетыСКлиентами.Сторно
		|;
		|
		|////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетыСКлиентами.Регистратор КАК Регистратор,
		|	Аналитика.Организация КАК Организация,
		|	Аналитика.Партнер КАК Партнер,
		|	Аналитика.Контрагент КАК Контрагент,
		|	РасчетыСКлиентами.Заказ КАК Заказ,
		|	РасчетыСКлиентами.РасчетныйДокумент КАК РасчетныйДокумент,
		|	РасчетыСКлиентами.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	РасчетыСКлиентами.Сторно КАК Сторно,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорОбъектРасчетов,
		|	НЕОПРЕДЕЛЕНО КАК КорРасчетныйДокумент,
		|	РасчетыСКлиентами.Долг КАК Долг,
		|	РасчетыСКлиентами.ДолгУпр КАК ДолгУпр,
		|	РасчетыСКлиентами.ДолгРегл КАК ДолгРегл,
		|	РасчетыСКлиентами.Предоплата КАК Предоплата,
		|	РасчетыСКлиентами.ПредоплатаУпр КАК ПредоплатаУпр,
		|	РасчетыСКлиентами.ПредоплатаРегл КАК ПредоплатаРегл
		|ПОМЕСТИТЬ РасчетыСПартнерами
		|ИЗ
		|	РасчетыСКлиентами КАК РасчетыСКлиентами
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
		|	ПО
		|		РасчетыСКлиентами.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
		|ГДЕ
		|	НЕ РасчетыСКлиентами.Сторно
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РасчетыСКлиентами.Регистратор КАК Регистратор,
		|	Аналитика.Организация КАК Организация,
		|	Аналитика.Партнер КАК Партнер,
		|	Аналитика.Контрагент КАК Контрагент,
		|	РасчетыСКлиентами.Заказ КАК Заказ,
		|	РасчетыСКлиентами.РасчетныйДокумент КАК РасчетныйДокумент,
		|	РасчетыСКлиентами.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	РасчетыСКлиентами.Сторно КАК Сторно,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорОбъектРасчетов,
		|	НЕОПРЕДЕЛЕНО КАК КорРасчетныйДокумент,
		|	-РасчетыСКлиентами.Долг КАК Долг,
		|	-РасчетыСКлиентами.ДолгУпр КАК ДолгУпр,
		|	-РасчетыСКлиентами.ДолгРегл КАК ДолгРегл,
		|	-РасчетыСКлиентами.Предоплата КАК Предоплата,
		|	-РасчетыСКлиентами.ПредоплатаУпр КАК ПредоплатаУпр,
		|	-РасчетыСКлиентами.ПредоплатаРегл КАК ПредоплатаРегл
		|ИЗ
		|	РасчетыСКлиентами КАК РасчетыСКлиентами
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
		|	ПО
		|		РасчетыСКлиентами.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
		|ГДЕ
		|	РасчетыСКлиентами.Сторно
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РасчетыСКлиентами.Регистратор КАК Регистратор,
		|	Аналитика.Организация КАК Организация,
		|	Аналитика.Партнер КАК Партнер,
		|	Аналитика.Контрагент КАК Контрагент,
		|	РасчетыПеренос.ОбъектРасчетов КАК ОбъектРасчетов,
		|	РасчетыПеренос.РасчетныйДокумент КАК РасчетныйДокумент,
		|	РасчетыСКлиентами.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	РасчетыСКлиентами.Сторно КАК Сторно,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту) КАК ХозяйственнаяОперация,
		|	РасчетыПеренос.КорОбъектРасчетов КАК КорОбъектРасчетов,
		|	РасчетыПеренос.РасчетныйДокумент КАК КорРасчетныйДокумент,
		|	РасчетыПеренос.Долг КАК Долг,
		|	РасчетыПеренос.ДолгУпр КАК ДолгУпр,
		|	РасчетыПеренос.ДолгРегл КАК ДолгРегл,
		|	РасчетыПеренос.Предоплата КАК Предоплата,
		|	РасчетыПеренос.ПредоплатаУпр КАК ПредоплатаУпр,
		|	РасчетыПеренос.ПредоплатаРегл КАК ПредоплатаРегл
		|ИЗ
		|	РасчетыСПартнерамиВозвратОплаты КАК РасчетыСКлиентами
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентамиПоСрокам КАК РасчетыПеренос
		|	ПО РасчетыСКлиентами.АналитикаУчетаПоПартнерам = РасчетыПеренос.КорАналитикаУчетаПоПартнерам
		|		И РасчетыСКлиентами.Заказ = РасчетыПеренос.КорОбъектРасчетов
		|		И РасчетыПеренос.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереносАванса)
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
		|	ПО
		|		РасчетыПеренос.КорАналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РасчетыСПартнерами.ДокументРегистратор КАК Регистратор,
		|	Аналитика.Организация КАК Организация,
		|	Аналитика.Партнер КАК Партнер,
		|	Аналитика.Контрагент КАК Контрагент,
		|	РасчетыСПартнерами.ОбъектРасчетов КАК ОбъектРасчетов,
		|	РасчетыСПартнерами.РасчетныйДокумент КАК РасчетныйДокумент,
		|	РасчетыСПартнерами.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	РасчетыСПартнерами.Сторно КАК Сторно,
		|	РасчетыСПартнерами.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	РасчетыСПартнерами.ОбъектРасчетов КАК КорОбъектРасчетов,
		|	РасчетыСПартнерами.РасчетныйДокумент КАК КорРасчетныйДокумент,
		|	ВЫБОР КОГДА РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ТОГДА РасчетыСПартнерами.Долг
		|		ИНАЧЕ -РасчетыСПартнерами.Долг
		|	КОНЕЦ КАК Долг,
		|	ВЫБОР КОГДА РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ТОГДА РасчетыСПартнерами.ДолгУпр
		|		ИНАЧЕ -РасчетыСПартнерами.ДолгУпр
		|	КОНЕЦ КАК ДолгУпр,
		|	ВЫБОР КОГДА РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ТОГДА РасчетыСПартнерами.ДолгРегл
		|		ИНАЧЕ -РасчетыСПартнерами.ДолгРегл
		|	КОНЕЦ КАК ДолгРегл,
		|	РасчетыСПартнерами.Предоплата КАК Предоплата,
		|	РасчетыСПартнерами.ПредоплатаУпр КАК ПредоплатаУпр,
		|	РасчетыСПартнерами.ПредоплатаРегл КАК ПредоплатаРегл
		|ИЗ
		|	РегистрНакопления.РасчетыСКлиентамиПоСрокам КАК РасчетыСПартнерами
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
		|	ПО РасчетыСПартнерами.ОбъектРасчетов = ОбъектыРасчетов.Ссылка
		|		И РасчетыСПартнерами.ДокументРегистратор = ОбъектыРасчетов.Объект
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
		|	ПО РасчетыСПартнерами.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
		|
		|ГДЕ
		|	РасчетыСПартнерами.ДокументРегистратор В (&СписокДокументов)
		|	И РасчетыСПартнерами.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту)
		|	И (РасчетыСПартнерами.Долг <> 0
		|		ИЛИ РасчетыСПартнерами.Предоплата <> 0)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	Организация,
		|	Партнер,
		|	Контрагент,
		|	Заказ,
		|	СтатьяДвиженияДенежныхСредств
		|";
	#КонецОбласти
	
	Иначе
	
	#Область ТекстЗапросаПоРасчетамСКлиентамиПоДокументам
		ТекстЗапросаРасчетыСКлиентами = 
		"ВЫБРАТЬ
		|	РасчетыСПартнерами.Регистратор КАК Регистратор,
		|	РасчетыСПартнерами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
		|	РасчетыСПартнерами.ЗаказКлиента КАК Заказ,
		|	РасчетыСПартнерами.РасчетныйДокумент КАК РасчетныйДокумент,
		|	РасчетыСПартнерами.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	ЛОЖЬ КАК Сторно,
		|	ВЫБОР
		|		КОГДА РасчетыСПартнерами.Долг < 0
		|			ТОГДА -РасчетыСПартнерами.Долг
		|		ИНАЧЕ РасчетыСПартнерами.Долг
		|	КОНЕЦ КАК Долг,
		|	ВЫБОР
		|		КОГДА РасчетыСПартнерами.ДолгУпр < 0
		|			ТОГДА -РасчетыСПартнерами.ДолгУпр
		|		ИНАЧЕ РасчетыСПартнерами.ДолгУпр
		|	КОНЕЦ КАК ДолгУпр,
		|	ВЫБОР
		|		КОГДА РасчетыСПартнерами.ДолгРегл < 0
		|			ТОГДА -РасчетыСПартнерами.ДолгРегл
		|		ИНАЧЕ РасчетыСПартнерами.ДолгРегл
		|	КОНЕЦ КАК ДолгРегл,
		|	ВЫБОР
		|	    КОГДА РасчетыСПартнерами.Предоплата < 0
		|			ТОГДА -РасчетыСПартнерами.Предоплата
		|		ИНАЧЕ РасчетыСПартнерами.Предоплата
		|	КОНЕЦ КАК Предоплата,
		|	ВЫБОР
		|	    КОГДА РасчетыСПартнерами.ПредоплатаУпр < 0
		|			ТОГДА -РасчетыСПартнерами.ПредоплатаУпр
		|		ИНАЧЕ РасчетыСПартнерами.ПредоплатаУпр
		|	КОНЕЦ КАК ПредоплатаУпр,
		|	ВЫБОР
		|		КОГДА РасчетыСПартнерами.ПредоплатаРегл < 0
		|			ТОГДА -РасчетыСПартнерами.ПредоплатаРегл
		|		ИНАЧЕ РасчетыСПартнерами.ПредоплатаРегл
		|	КОНЕЦ КАК ПредоплатаРегл
		|ПОМЕСТИТЬ РасчетыСКлиентами
		|ИЗ
		|	РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК РасчетыСПартнерами
		|ГДЕ
		|	РасчетыСПартнерами.Регистратор В (&СписокДокументов)
		|	И (РасчетыСПартнерами.Долг <> 0
		|		ИЛИ РасчетыСПартнерами.Предоплата <> 0
		|		ИЛИ РасчетыСПартнерами.КВозврату <> 0
		|	)
		|;
		|////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетыСКлиентами.Регистратор КАК Регистратор,
		|	Аналитика.Организация КАК Организация,
		|	Аналитика.Партнер КАК Партнер,
		|	Аналитика.Контрагент КАК Контрагент,
		|	РасчетыСКлиентами.Заказ КАК Заказ,
		|	РасчетыСКлиентами.РасчетныйДокумент КАК РасчетныйДокумент,
		|	РасчетыСКлиентами.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	РасчетыСКлиентами.Сторно КАК Сторно,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорОбъектРасчетов,
		|	НЕОПРЕДЕЛЕНО КАК КорРасчетныйДокумент,
		|	СУММА(РасчетыСКлиентами.Долг) КАК Долг,
		|	СУММА(РасчетыСКлиентами.ДолгУпр) КАК ДолгУпр,
		|	СУММА(РасчетыСКлиентами.ДолгРегл) КАК ДолгРегл,
		|	СУММА(РасчетыСКлиентами.Предоплата) КАК Предоплата,
		|	СУММА(РасчетыСКлиентами.ПредоплатаУпр) КАК ПредоплатаУпр,
		|	СУММА(РасчетыСКлиентами.ПредоплатаРегл) КАК ПредоплатаРегл
		|ПОМЕСТИТЬ РасчетыСПартнерами
		|ИЗ
		|	РасчетыСКлиентами КАК РасчетыСКлиентами
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
		|	ПО
		|		РасчетыСКлиентами.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
		|СГРУППИРОВАТЬ ПО
		|	РасчетыСКлиентами.Регистратор,
		|	Аналитика.Организация,
		|	Аналитика.Партнер,
		|	Аналитика.Контрагент,
		|	РасчетыСКлиентами.Заказ,
		|	РасчетыСКлиентами.РасчетныйДокумент,
		|	РасчетыСКлиентами.СтатьяДвиженияДенежныхСредств,
		|	РасчетыСКлиентами.Сторно
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	Организация,
		|	Партнер,
		|	Контрагент,
		|	Заказ,
		|	СтатьяДвиженияДенежныхСредств
		|";
	#КонецОбласти
	
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапросаРасчетыСКлиентами);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;;
	Запрос.УстановитьПараметр("СписокДокументов", СписокДокументов);
	Запрос.Выполнить();
	Если ДляОтладки <> Неопределено Тогда
		ДляОтладки.Вставить("ТекстЗапросаРасчетыСПартнерами", Запрос.Текст);
	КонецЕсли;

КонецПроцедуры

Процедура ПолучитьРасчетыСПоставщиками(МенеджерВременныхТаблиц, СписокДокументов, ДляОтладки = Неопределено)
	
	Если ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
	
	#Область ТекстЗапросаПоРасчетамСПоставщикамиПоСрокам
		ТекстЗапросаРасчетыСПоставщиками = 
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Регистратор КАК Регистратор,
		|	ВложенныйЗапрос.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
		|	ВложенныйЗапрос.ОбъектРасчетов КАК Заказ,
		|	ВложенныйЗапрос.РасчетныйДокумент КАК РасчетныйДокумент,
		|	ВложенныйЗапрос.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	ВложенныйЗапрос.Сторно КАК Сторно,
		|	ВЫБОР 
		|		КОГДА СУММА(ВложенныйЗапрос.Долг) < 0 
		|			ТОГДА -СУММА(ВложенныйЗапрос.Долг)
		|		ИНАЧЕ СУММА(ВложенныйЗапрос.Долг)
		|	КОНЕЦ КАК Долг,
		|	ВЫБОР 
		|		КОГДА СУММА(ВложенныйЗапрос.ДолгУпр) < 0 
		|			ТОГДА -СУММА(ВложенныйЗапрос.ДолгУпр)
		|		ИНАЧЕ СУММА(ВложенныйЗапрос.ДолгУпр)
		|	КОНЕЦ КАК ДолгУпр,
		|	ВЫБОР 
		|		КОГДА СУММА(ВложенныйЗапрос.ДолгРегл) < 0 
		|			ТОГДА -СУММА(ВложенныйЗапрос.ДолгРегл)
		|		ИНАЧЕ СУММА(ВложенныйЗапрос.ДолгРегл)
		|	КОНЕЦ КАК ДолгРегл,
		|	ВЫБОР 
		|		КОГДА СУММА(ВложенныйЗапрос.Предоплата) < 0 
		|			ТОГДА -СУММА(ВложенныйЗапрос.Предоплата)
		|		ИНАЧЕ СУММА(ВложенныйЗапрос.Предоплата)
		|	КОНЕЦ КАК Предоплата,
		|	ВЫБОР 
		|		КОГДА СУММА(ВложенныйЗапрос.ПредоплатаУпр) < 0 
		|			ТОГДА -СУММА(ВложенныйЗапрос.ПредоплатаУпр)
		|		ИНАЧЕ СУММА(ВложенныйЗапрос.ПредоплатаУпр)
		|	КОНЕЦ КАК ПредоплатаУпр,
		|	ВЫБОР 
		|		КОГДА СУММА(ВложенныйЗапрос.ПредоплатаРегл) < 0 
		|			ТОГДА -СУММА(ВложенныйЗапрос.ПредоплатаРегл)
		|		ИНАЧЕ СУММА(ВложенныйЗапрос.ПредоплатаРегл)
		|	КОНЕЦ КАК ПредоплатаРегл
		|ПОМЕСТИТЬ РасчетыСПоставщиками
		|ИЗ
		|	(ВЫБРАТЬ
		|		РасчетыСПартнерами.ДокументРегистратор КАК Регистратор,
		|		РасчетыСПартнерами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
		|		РасчетыСПартнерами.ОбъектРасчетов КАК ОбъектРасчетов,
		|		РасчетыСПартнерами.РасчетныйДокумент КАК РасчетныйДокумент,
		|		РасчетыСПартнерами.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|		ЛОЖЬ КАК Сторно,
		|		ВЫБОР КОГДА РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА РасчетыСПартнерами.Долг
		|			ИНАЧЕ -РасчетыСПартнерами.Долг
		|		КОНЕЦ КАК Долг,
		|		ВЫБОР КОГДА РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА РасчетыСПартнерами.ДолгУпр
		|			ИНАЧЕ -РасчетыСПартнерами.ДолгУпр
		|		КОНЕЦ КАК ДолгУпр,
		|		ВЫБОР КОГДА РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА РасчетыСПартнерами.ДолгРегл
		|			ИНАЧЕ -РасчетыСПартнерами.ДолгРегл
		|		КОНЕЦ КАК ДолгРегл,
		|		РасчетыСПартнерами.Предоплата КАК Предоплата,
		|		РасчетыСПартнерами.ПредоплатаУпр КАК ПредоплатаУпр,
		|		РасчетыСПартнерами.ПредоплатаРегл КАК ПредоплатаРегл
		|	ИЗ
		|		РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК РасчетыСПартнерами
		|	ГДЕ
		|		РасчетыСПартнерами.ДокументРегистратор В (&СписокДокументов)
		|		И (РасчетыСПартнерами.Долг <> 0
		|			ИЛИ РасчетыСПартнерами.Предоплата <> 0)
		|		И НЕ РасчетыСПартнерами.Сторно
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		СторнируемыеДокументы.Документ КАК Регистратор,
		|		РасчетыСПартнерами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
		|		РасчетыСПартнерами.ОбъектРасчетов КАК ОбъектРасчетов,
		|		РасчетыСПартнерами.РасчетныйДокумент КАК РасчетныйДокумент,
		|		РасчетыСПартнерами.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|		ИСТИНА КАК Сторно,
		|		ВЫБОР КОГДА РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА РасчетыСПартнерами.Долг
		|			ИНАЧЕ -РасчетыСПартнерами.Долг
		|		КОНЕЦ КАК Долг,
		|		ВЫБОР КОГДА РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА РасчетыСПартнерами.ДолгУпр
		|			ИНАЧЕ -РасчетыСПартнерами.ДолгУпр
		|		КОНЕЦ КАК ДолгУпр,
		|		ВЫБОР КОГДА РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА РасчетыСПартнерами.ДолгРегл
		|			ИНАЧЕ -РасчетыСПартнерами.ДолгРегл
		|		КОНЕЦ КАК ДолгРегл,
		|		РасчетыСПартнерами.Предоплата КАК Предоплата,
		|		РасчетыСПартнерами.ПредоплатаУпр КАК ПредоплатаУпр,
		|		РасчетыСПартнерами.ПредоплатаРегл КАК ПредоплатаРегл
		|	ИЗ
		|		СторнируемыеДокументы КАК СторнируемыеДокументы
		|		ЛЕВОЕ СОЕДИНЕНИЕ
		|			РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК РасчетыСПартнерами
		|		ПО
		|			СторнируемыеДокументы.СторнируемыйДокумент = РасчетыСПартнерами.ДокументРегистратор
		|	ГДЕ
		|		(РасчетыСПартнерами.Долг <> 0
		|			ИЛИ РасчетыСПартнерами.Предоплата <> 0)
		|		И НЕ РасчетыСПартнерами.Сторно
		|
		|	) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Регистратор,
		|	ВложенныйЗапрос.АналитикаУчетаПоПартнерам,
		|	ВложенныйЗапрос.ОбъектРасчетов,
		|	ВложенныйЗапрос.РасчетныйДокумент,
		|	ВложенныйЗапрос.СтатьяДвиженияДенежныхСредств,
		|	ВложенныйЗапрос.Сторно
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВложенныйЗапрос.Долг) <> 0 ИЛИ СУММА(ВложенныйЗапрос.Предоплата) <> 0
		|;
		|
		|////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетыСПоставщиками.Регистратор КАК Регистратор,
		|	РасчетыСПоставщиками.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
		|	РасчетыСПоставщиками.Заказ КАК Заказ,
		|	НЕОПРЕДЕЛЕНО КАК РасчетныйДокумент,
		|	РасчетыСПоставщиками.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	РасчетыСПоставщиками.Сторно КАК Сторно,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика) КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорОбъектРасчетов,
		|	НЕОПРЕДЕЛЕНО КАК КорРасчетныйДокумент,
		|	СУММА(РасчетыСПоставщиками.Долг) КАК Долг,
		|	СУММА(РасчетыСПоставщиками.ДолгУпр) КАК ДолгУпр,
		|	СУММА(РасчетыСПоставщиками.ДолгРегл) КАК ДолгРегл,
		|	СУММА(РасчетыСПоставщиками.Предоплата) КАК Предоплата,
		|	СУММА(РасчетыСПоставщиками.ПредоплатаУпр) КАК ПредоплатаУпр,
		|	СУММА(РасчетыСПоставщиками.ПредоплатаРегл) КАК ПредоплатаРегл
		|ПОМЕСТИТЬ РасчетыСПартнерамиВозвратОплаты
		|ИЗ
		|	РасчетыСПоставщиками КАК РасчетыСПоставщиками
		|ГДЕ
		|	ИСТИНА В (ВЫБРАТЬ ПЕРВЫЕ 1
		|				ИСТИНА
		|				ИЗ
		|					РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК РасчетыВозврат
		|				ГДЕ
		|					РасчетыСПоставщиками.Регистратор = РасчетыВозврат.ДокументРегистратор
		|					И РасчетыВозврат.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика))
		|	И (РасчетыСПоставщиками.Долг <> 0
		|		ИЛИ РасчетыСПоставщиками.Предоплата <> 0)
		|
		|СГРУППИРОВАТЬ ПО
		|	РасчетыСПоставщиками.Регистратор,
		|	РасчетыСПоставщиками.АналитикаУчетаПоПартнерам,
		|	РасчетыСПоставщиками.Заказ,
		|	РасчетыСПоставщиками.СтатьяДвиженияДенежныхСредств,
		|	РасчетыСПоставщиками.Сторно
		|;
		|
		|///////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетыСПоставщиками.Регистратор КАК Регистратор,
		|	Аналитика.Организация КАК Организация,
		|	Аналитика.Партнер КАК Партнер,
		|	Аналитика.Контрагент КАК Контрагент,
		|	РасчетыСПоставщиками.Заказ КАК Заказ,
		|	РасчетыСПоставщиками.РасчетныйДокумент КАК РасчетныйДокумент,
		|	РасчетыСПоставщиками.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	РасчетыСПоставщиками.Сторно КАК Сторно,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорОбъектРасчетов,
		|	НЕОПРЕДЕЛЕНО КАК КорРасчетныйДокумент,
		|	РасчетыСПоставщиками.Долг КАК Долг,
		|	РасчетыСПоставщиками.ДолгУпр КАК ДолгУпр,
		|	РасчетыСПоставщиками.ДолгРегл КАК ДолгРегл,
		|	РасчетыСПоставщиками.Предоплата КАК Предоплата,
		|	РасчетыСПоставщиками.ПредоплатаУпр КАК ПредоплатаУпр,
		|	РасчетыСПоставщиками.ПредоплатаРегл КАК ПредоплатаРегл
		|ПОМЕСТИТЬ РасчетыСПартнерами
		|ИЗ
		|	РасчетыСПоставщиками КАК РасчетыСПоставщиками
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
		|	ПО
		|		РасчетыСПоставщиками.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
		|ГДЕ
		|	НЕ РасчетыСПоставщиками.Сторно
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РасчетыСПоставщиками.Регистратор КАК Регистратор,
		|	Аналитика.Организация КАК Организация,
		|	Аналитика.Партнер КАК Партнер,
		|	Аналитика.Контрагент КАК Контрагент,
		|	РасчетыСПоставщиками.Заказ КАК Заказ,
		|	РасчетыСПоставщиками.РасчетныйДокумент КАК РасчетныйДокумент,
		|	РасчетыСПоставщиками.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	РасчетыСПоставщиками.Сторно КАК Сторно,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорОбъектРасчетов,
		|	НЕОПРЕДЕЛЕНО КАК КорРасчетныйДокумент,
		|	-РасчетыСПоставщиками.Долг КАК Долг,
		|	-РасчетыСПоставщиками.ДолгУпр КАК ДолгУпр,
		|	-РасчетыСПоставщиками.ДолгРегл КАК ДолгРегл,
		|	-РасчетыСПоставщиками.Предоплата КАК Предоплата,
		|	-РасчетыСПоставщиками.ПредоплатаУпр КАК ПредоплатаУпр,
		|	-РасчетыСПоставщиками.ПредоплатаРегл КАК ПредоплатаРегл
		|ИЗ
		|	РасчетыСПоставщиками КАК РасчетыСПоставщиками
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
		|	ПО
		|		РасчетыСПоставщиками.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
		|ГДЕ
		|	РасчетыСПоставщиками.Сторно
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РасчетыСПоставщиками.Регистратор КАК Регистратор,
		|	Аналитика.Организация КАК Организация,
		|	Аналитика.Партнер КАК Партнер,
		|	Аналитика.Контрагент КАК Контрагент,
		|	РасчетыПеренос.ОбъектРасчетов КАК ОбъектРасчетов,
		|	РасчетыПеренос.РасчетныйДокумент КАК РасчетныйДокумент,
		|	РасчетыСПоставщиками.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	РасчетыСПоставщиками.Сторно КАК Сторно,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту) КАК ХозяйственнаяОперация,
		|	РасчетыПеренос.КорОбъектРасчетов КАК КорОбъектРасчетов,
		|	РасчетыПеренос.РасчетныйДокумент КАК КорРасчетныйДокумент,
		|	РасчетыПеренос.Долг КАК Долг,
		|	РасчетыПеренос.ДолгУпр КАК ДолгУпр,
		|	РасчетыПеренос.ДолгРегл КАК ДолгРегл,
		|	РасчетыПеренос.Предоплата КАК Предоплата,
		|	РасчетыПеренос.ПредоплатаУпр КАК ПредоплатаУпр,
		|	РасчетыПеренос.ПредоплатаРегл КАК ПредоплатаРегл
		|ИЗ
		|	РасчетыСПартнерамиВозвратОплаты КАК РасчетыСПоставщиками
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК РасчетыПеренос
		|	ПО РасчетыСПоставщиками.АналитикаУчетаПоПартнерам = РасчетыПеренос.КорАналитикаУчетаПоПартнерам
		|		И РасчетыСПоставщиками.Заказ = РасчетыПеренос.КорОбъектРасчетов
		|		И РасчетыСПоставщиками.ПредоплатаРегл = РасчетыПеренос.ПредоплатаРегл
		|		И РасчетыСПоставщиками.ДолгРегл = РасчетыПеренос.ДолгРегл
		|		И РасчетыПеренос.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереносАванса)
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
		|	ПО
		|		РасчетыПеренос.КорАналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РасчетыСПартнерами.ДокументРегистратор КАК Регистратор,
		|	Аналитика.Организация КАК Организация,
		|	Аналитика.Партнер КАК Партнер,
		|	Аналитика.Контрагент КАК Контрагент,
		|	РасчетыСПартнерами.ОбъектРасчетов КАК ОбъектРасчетов,
		|	РасчетыСПартнерами.РасчетныйДокумент КАК РасчетныйДокумент,
		|	РасчетыСПартнерами.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	РасчетыСПартнерами.Сторно КАК Сторно,
		|	РасчетыСПартнерами.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	РасчетыСПартнерами.ОбъектРасчетов КАК КорОбъектРасчетов,
		|	РасчетыСПартнерами.РасчетныйДокумент КАК КорРасчетныйДокумент,
		|	ВЫБОР КОГДА РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ТОГДА РасчетыСПартнерами.Долг
		|		ИНАЧЕ -РасчетыСПартнерами.Долг
		|	КОНЕЦ КАК Долг,
		|	ВЫБОР КОГДА РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ТОГДА РасчетыСПартнерами.ДолгУпр
		|		ИНАЧЕ -РасчетыСПартнерами.ДолгУпр
		|	КОНЕЦ КАК ДолгУпр,
		|	ВЫБОР КОГДА РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ТОГДА РасчетыСПартнерами.ДолгРегл
		|		ИНАЧЕ -РасчетыСПартнерами.ДолгРегл
		|	КОНЕЦ КАК ДолгРегл,
		|	РасчетыСПартнерами.Предоплата КАК Предоплата,
		|	РасчетыСПартнерами.ПредоплатаУпр КАК ПредоплатаУпр,
		|	РасчетыСПартнерами.ПредоплатаРегл КАК ПредоплатаРегл
		|ИЗ
		|	РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК РасчетыСПартнерами
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
		|	ПО РасчетыСПартнерами.ОбъектРасчетов = ОбъектыРасчетов.Ссылка
		|		И РасчетыСПартнерами.ДокументРегистратор = ОбъектыРасчетов.Объект
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
		|	ПО РасчетыСПартнерами.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
		|
		|ГДЕ
		|	РасчетыСПартнерами.ДокументРегистратор В (&СписокДокументов)
		|	И РасчетыСПартнерами.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика)
		|	И (РасчетыСПартнерами.Долг <> 0
		|		ИЛИ РасчетыСПартнерами.Предоплата <> 0)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	Организация,
		|	Партнер,
		|	Контрагент,
		|	Заказ,
		|	СтатьяДвиженияДенежныхСредств,
		|	Сторно
		|";
	#КонецОбласти
	
	Иначе
	
	#Область ТекстЗапросаПоРасчетамСПоставщикамиПоДокументам
		ТекстЗапросаРасчетыСПоставщиками = 
		"ВЫБРАТЬ
		|	РасчетыСПартнерами.Регистратор КАК Регистратор,
		|	РасчетыСПартнерами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
		|	РасчетыСПартнерами.ЗаказПоставщику КАК Заказ,
		|	РасчетыСПартнерами.РасчетныйДокумент КАК РасчетныйДокумент,
		|	РасчетыСПартнерами.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	ЛОЖЬ КАК Сторно,
		|	ВЫБОР
		|		КОГДА РасчетыСПартнерами.Долг < 0
		|			ТОГДА -РасчетыСПартнерами.Долг
		|		ИНАЧЕ РасчетыСПартнерами.Долг
		|	КОНЕЦ КАК Долг,
		|	ВЫБОР
		|		КОГДА РасчетыСПартнерами.ДолгУпр < 0
		|			ТОГДА -РасчетыСПартнерами.ДолгУпр
		|		ИНАЧЕ РасчетыСПартнерами.ДолгУпр
		|	КОНЕЦ КАК ДолгУпр,
		|	ВЫБОР
		|		КОГДА РасчетыСПартнерами.ДолгРегл < 0
		|			ТОГДА -РасчетыСПартнерами.ДолгРегл
		|		ИНАЧЕ РасчетыСПартнерами.ДолгРегл
		|	КОНЕЦ КАК ДолгРегл,
		|	ВЫБОР
		|		КОГДА РасчетыСПартнерами.Предоплата < 0
		|			ТОГДА -РасчетыСПартнерами.Предоплата
		|		ИНАЧЕ РасчетыСПартнерами.Предоплата
		|	КОНЕЦ КАК Предоплата,
		|	ВЫБОР
		|		КОГДА РасчетыСПартнерами.ПредоплатаУпр < 0
		|			ТОГДА -РасчетыСПартнерами.ПредоплатаУпр
		|		ИНАЧЕ РасчетыСПартнерами.ПредоплатаУпр
		|	КОНЕЦ КАК ПредоплатаУпр,
		|	ВЫБОР
		|		КОГДА РасчетыСПартнерами.ПредоплатаРегл < 0
		|			ТОГДА -РасчетыСПартнерами.ПредоплатаРегл
		|		ИНАЧЕ РасчетыСПартнерами.ПредоплатаРегл
		|	КОНЕЦ КАК ПредоплатаРегл
		|ПОМЕСТИТЬ РасчетыСПоставщиками
		|ИЗ
		|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК РасчетыСПартнерами
		|ГДЕ
		|	РасчетыСПартнерами.Регистратор В (&СписокДокументов)
		|	И (РасчетыСПартнерами.Долг <> 0
		|		ИЛИ РасчетыСПартнерами.Предоплата <> 0
		|		ИЛИ РасчетыСПартнерами.КВозврату <> 0
		|	)
		|;
		|///////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетыСПоставщиками.Регистратор КАК Регистратор,
		|	Аналитика.Организация КАК Организация,
		|	Аналитика.Партнер КАК Партнер,
		|	Аналитика.Контрагент КАК Контрагент,
		|	РасчетыСПоставщиками.Заказ КАК Заказ,
		|	РасчетыСПоставщиками.РасчетныйДокумент КАК РасчетныйДокумент,
		|	РасчетыСПоставщиками.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	РасчетыСПоставщиками.Сторно,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорОбъектРасчетов,
		|	НЕОПРЕДЕЛЕНО КАК КорРасчетныйДокумент,
		|	СУММА(РасчетыСПоставщиками.Долг) КАК Долг,
		|	СУММА(РасчетыСПоставщиками.ДолгУпр) КАК ДолгУпр,
		|	СУММА(РасчетыСПоставщиками.ДолгРегл) КАК ДолгРегл,
		|	СУММА(РасчетыСПоставщиками.Предоплата) КАК Предоплата,
		|	СУММА(РасчетыСПоставщиками.ПредоплатаУпр) КАК ПредоплатаУпр,
		|	СУММА(РасчетыСПоставщиками.ПредоплатаРегл) КАК ПредоплатаРегл
		|ПОМЕСТИТЬ РасчетыСПартнерами
		|ИЗ
		|	РасчетыСПоставщиками КАК РасчетыСПоставщиками
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
		|	ПО
		|		РасчетыСПоставщиками.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
		|СГРУППИРОВАТЬ ПО
		|	РасчетыСПоставщиками.Регистратор,
		|	Аналитика.Организация,
		|	Аналитика.Партнер,
		|	Аналитика.Контрагент,
		|	РасчетыСПоставщиками.Заказ,
		|	РасчетыСПоставщиками.РасчетныйДокумент,
		|	РасчетыСПоставщиками.СтатьяДвиженияДенежныхСредств,
		|	РасчетыСПоставщиками.Сторно
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	Организация,
		|	Партнер,
		|	Контрагент,
		|	Заказ,
		|	СтатьяДвиженияДенежныхСредств
		|";
	#КонецОбласти
	
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапросаРасчетыСПоставщиками);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СписокДокументов", СписокДокументов);
	Запрос.Выполнить();
	Если ДляОтладки <> Неопределено Тогда
		ДляОтладки.Вставить("ТекстЗапросаРасчетыСПартнерами", Запрос.Текст);
	КонецЕсли;

КонецПроцедуры

Процедура ПолучитьДвиженияДенежныеСредстваКонтрагент(МенеджерВременныхТаблиц, СписокДокументов)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Активность КАК Активность,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.Подразделение КАК Подразделение,
	|	ДанныеРегистра.НаправлениеДеятельностиДС КАК НаправлениеДеятельностиДС,
	|
	|	ДанныеРегистра.ДенежныеСредства КАК ДенежныеСредства,
	|	ДанныеРегистра.ТипДенежныхСредств КАК ТипДенежныхСредств,
	|	ДанныеРегистра.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеРегистра.ВалютаПлатежа КАК ВалютаПлатежа,
	|	ДанныеРегистра.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|	ДанныеРегистра.ТипПлатежаФЗ275 КАК ТипПлатежаФЗ275,
	|	ДанныеРегистра.НаправлениеДеятельностиКонтрагента КАК НаправлениеДеятельностиКонтрагента,
	|
	|	ДанныеРегистра.Партнер КАК Партнер,
	|	ДанныеРегистра.Контрагент КАК Контрагент,
	|	ДанныеРегистра.Договор КАК Договор,
	|	ДанныеРегистра.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ДанныеРегистра.РасчетныйДокумент КАК РасчетныйДокумент,
	|
	|	ДанныеРегистра.СуммаОплаты КАК СуммаОплаты,
	|	ДанныеРегистра.СуммаОплатыРегл КАК СуммаОплатыРегл,
	|	ДанныеРегистра.СуммаОплатыВВалютеПлатежа КАК СуммаОплатыВВалютеПлатежа,
	|	
	|	ДанныеРегистра.СуммаПостоплаты КАК СуммаПостоплаты,
	|	ДанныеРегистра.СуммаПостоплатыРегл КАК СуммаПостоплатыРегл,
	|	ДанныеРегистра.СуммаПостоплатыВВалютеПлатежа КАК СуммаПостоплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.СуммаПредоплаты КАК СуммаПредоплаты,
	|	ДанныеРегистра.СуммаПредоплатыРегл КАК СуммаПредоплатыРегл,
	|	ДанныеРегистра.СуммаПредоплатыВВалютеПлатежа КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.СуммаКВыплатеВРамкахЛимита КАК СуммаКВыплатеВРамкахЛимита,
	|	ДанныеРегистра.СуммаКВыплатеСверхЛимита КАК СуммаКВыплатеСверхЛимита,
	|
	|	ДанныеРегистра.СуммаНДС КАК СуммаНДС,
	|	ДанныеРегистра.СуммаНДСРегл КАК СуммаНДСРегл,
	|	ДанныеРегистра.СуммаНДСВВалютеПлатежа КАК СуммаНДСВВалютеПлатежа,
	|
	|	ДанныеРегистра.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДанныеРегистра.СуммаОплатыВВалютеВзаиморасчетов КАК СуммаОплатыВВалютеВзаиморасчетов,
	|	ДанныеРегистра.СуммаПостоплатыВВалютеВзаиморасчетов КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|	ДанныеРегистра.СуммаПредоплатыВВалютеВзаиморасчетов КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|	ДанныеРегистра.ИсточникГФУДенежныхСредств КАК ИсточникГФУДенежныхСредств,
	|	ДанныеРегистра.ИсточникГФУРасчетов КАК ИсточникГФУРасчетов,
	|	ДанныеРегистра.СтавкаНДС КАК СтавкаНДС,
	|	ДанныеРегистра.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	ДанныеРегистра.ОтложенноеПроведение КАК ОтложенноеПроведение,
	|	ДанныеРегистра.Сторно КАК Сторно
	|ПОМЕСТИТЬ ДанныеРегистра
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.Регистратор В (&СписокДокументов)
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	ВалютаВзаиморасчетов,
	|	ВалютаПлатежа
	|;
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Активность КАК Активность,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.Подразделение КАК Подразделение,
	|	ДанныеРегистра.НаправлениеДеятельностиДС КАК НаправлениеДеятельностиДС,
	|
	|	ДанныеРегистра.ДенежныеСредства КАК ДенежныеСредства,
	|	ДанныеРегистра.ТипДенежныхСредств КАК ТипДенежныхСредств,
	|	ДанныеРегистра.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеРегистра.ВалютаПлатежа КАК ВалютаПлатежа,
	|	ДанныеРегистра.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|	ДанныеРегистра.ТипПлатежаФЗ275 КАК ТипПлатежаФЗ275,
	|	ДанныеРегистра.НаправлениеДеятельностиКонтрагента КАК НаправлениеДеятельностиКонтрагента,
	|
	|	ДанныеРегистра.Партнер КАК Партнер,
	|	ДанныеРегистра.Контрагент КАК Контрагент,
	|	ДанныеРегистра.Договор КАК Договор,
	|	ДанныеРегистра.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ДанныеРегистра.РасчетныйДокумент КАК РасчетныйДокумент,
	|
	|	СУММА(ДанныеРегистра.СуммаОплаты) КАК СуммаОплаты,
	|	СУММА(ДанныеРегистра.СуммаОплатыРегл) КАК СуммаОплатыРегл,
	|	СУММА(ДанныеРегистра.СуммаОплатыВВалютеПлатежа) КАК СуммаОплатыВВалютеПлатежа,
	|	
	|	СУММА(ДанныеРегистра.СуммаПостоплаты) КАК СуммаПостоплаты,
	|	СУММА(ДанныеРегистра.СуммаПостоплатыРегл) КАК СуммаПостоплатыРегл,
	|	СУММА(ДанныеРегистра.СуммаПостоплатыВВалютеПлатежа) КАК СуммаПостоплатыВВалютеПлатежа,
	|
	|	СУММА(ДанныеРегистра.СуммаПредоплаты) КАК СуммаПредоплаты,
	|	СУММА(ДанныеРегистра.СуммаПредоплатыРегл) КАК СуммаПредоплатыРегл,
	|	СУММА(ДанныеРегистра.СуммаПредоплатыВВалютеПлатежа) КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|	СУММА(ДанныеРегистра.СуммаКВыплатеВРамкахЛимита) КАК СуммаКВыплатеВРамкахЛимита,
	|	СУММА(ДанныеРегистра.СуммаКВыплатеСверхЛимита) КАК СуммаКВыплатеСверхЛимита,
	|
	|	СУММА(ДанныеРегистра.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ДанныеРегистра.СуммаНДСРегл) КАК СуммаНДСРегл,
	|	СУММА(ДанныеРегистра.СуммаНДСВВалютеПлатежа) КАК СуммаНДСВВалютеПлатежа,
	|
	|	ДанныеРегистра.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	СУММА(ДанныеРегистра.СуммаОплатыВВалютеВзаиморасчетов) КАК СуммаОплатыВВалютеВзаиморасчетов,
	|	СУММА(ДанныеРегистра.СуммаПостоплатыВВалютеВзаиморасчетов) КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|	СУММА(ДанныеРегистра.СуммаПредоплатыВВалютеВзаиморасчетов) КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|	ДанныеРегистра.ИсточникГФУДенежныхСредств КАК ИсточникГФУДенежныхСредств,
	|	ДанныеРегистра.ИсточникГФУРасчетов КАК ИсточникГФУРасчетов,
	|	ДанныеРегистра.СтавкаНДС КАК СтавкаНДС,
	|	ДанныеРегистра.ОтложенноеПроведение КАК ОтложенноеПроведение,
	|	ДанныеРегистра.Сторно КАК Сторно
	|ПОМЕСТИТЬ ДанныеРегистраБезЗаявок
	|ИЗ
	|	ДанныеРегистра КАК ДанныеРегистра
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРегистра.Период,
	|	ДанныеРегистра.Активность,
	|	ДанныеРегистра.Регистратор,
	|	ДанныеРегистра.ХозяйственнаяОперация,
	|	ДанныеРегистра.Организация,
	|	ДанныеРегистра.Подразделение,
	|	ДанныеРегистра.НаправлениеДеятельностиДС,
	|
	|	ДанныеРегистра.ДенежныеСредства,
	|	ДанныеРегистра.ТипДенежныхСредств,
	|	ДанныеРегистра.СтатьяДвиженияДенежныхСредств,
	|	ДанныеРегистра.ВалютаПлатежа,
	|	ДанныеРегистра.СтатьяКалькуляции,
	|	ДанныеРегистра.ТипПлатежаФЗ275,
	|	ДанныеРегистра.НаправлениеДеятельностиКонтрагента,
	|
	|	ДанныеРегистра.Партнер,
	|	ДанныеРегистра.Контрагент,
	|	ДанныеРегистра.Договор,
	|	ДанныеРегистра.ОбъектРасчетов,
	|	ДанныеРегистра.РасчетныйДокумент,
	|
	|	ДанныеРегистра.ВалютаВзаиморасчетов,
	|
	|	ДанныеРегистра.ИсточникГФУДенежныхСредств,
	|	ДанныеРегистра.ИсточникГФУРасчетов,
	|	ДанныеРегистра.СтавкаНДС,
	|	ДанныеРегистра.ОтложенноеПроведение,
	|	ДанныеРегистра.Сторно
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	ВалютаВзаиморасчетов,
	|	ВалютаПлатежа
	|;
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДанныеРегистра.Период КАК Период
	|ИЗ 
	|	ДанныеРегистра КАК ДанныеРегистра
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеРегистра.Период ВОЗР
	|";
	
	Запрос.УстановитьПараметр("СписокДокументов", СписокДокументов);
	Выборка = Запрос.Выполнить().Выбрать();
	ДатаНачала = '00010101';
	Если Выборка.Следующий() Тогда
		ДатаНачала = Выборка.Период;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КурсыВалют.Период КАК Период,
	|	КурсыВалют.Валюта КАК Валюта,
	|	КурсыВалют.БазоваяВалюта КАК БазоваяВалюта,
	|	КурсыВалют.КурсЧислитель КАК КурсЧислитель,
	|	КурсыВалют.КурсЗнаменатель КАК КурсЗнаменатель
	|ПОМЕСТИТЬ КурсыВалют
	|ИЗ
	|	РегистрСведений.ОтносительныеКурсыВалют.СрезПоследних(&ДатаНачала, ) КАК КурсыВалют
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КурсыВалют.Период,
	|	КурсыВалют.Валюта,
	|	КурсыВалют.БазоваяВалюта,
	|	КурсыВалют.КурсЧислитель,
	|	КурсыВалют.КурсЗнаменатель
	|ИЗ
	|	РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
	|ГДЕ
	|	КурсыВалют.Период > &ДатаНачала
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КурсыВалют.Период,
	|	КурсыВалют.Валюта,
	|	КурсыВалют.БазоваяВалюта
	|;
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	МАКСИМУМ(КурсыВалют.Период) КАК ДатаКурсаВалютыВзаиморасчетов
	|ПОМЕСТИТЬ ДатыКурсовВалютыВзаиморасчетов
	|ИЗ
	|	ДанныеРегистра КАК ДанныеРегистра
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсыВалют
	|	ПО
	|		ДанныеРегистра.ВалютаВзаиморасчетов = КурсыВалют.Валюта
	|		И ДанныеРегистра.Организация.ВалютаРегламентированногоУчета = КурсыВалют.БазоваяВалюта
	|		И ДанныеРегистра.Период >= КурсыВалют.Период
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРегистра.Регистратор,
	|	ДанныеРегистра.ВалютаВзаиморасчетов
	|;
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ВалютаПлатежа КАК ВалютаПлатежа,
	|	МАКСИМУМ(КурсыВалют.Период) КАК ДатаКурсаВалютыПлатежа
	|ПОМЕСТИТЬ ДатыКурсовВалютыПлатежа
	|ИЗ
	|	ДанныеРегистра КАК ДанныеРегистра
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсыВалют
	|	ПО
	|		ДанныеРегистра.ВалютаПлатежа = КурсыВалют.Валюта
	|		И ДанныеРегистра.Организация.ВалютаРегламентированногоУчета = КурсыВалют.БазоваяВалюта
	|		И ДанныеРегистра.Период >= КурсыВалют.Период
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРегистра.Регистратор,
	|	ДанныеРегистра.ВалютаПлатежа
	|
	|";
    Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ДвиженияДенежныеСредстваКонтрагент(МенеджерВременныхТаблиц, ДляОтладки = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Активность КАК Активность,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.Подразделение КАК Подразделение,
	|	ДанныеРегистра.НаправлениеДеятельностиДС КАК НаправлениеДеятельностиДС,
	|
	|	ДанныеРегистра.ДенежныеСредства КАК ДенежныеСредства,
	|	ДанныеРегистра.ТипДенежныхСредств КАК ТипДенежныхСредств,
	|	ДанныеРегистра.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеРегистра.ВалютаПлатежа КАК ВалютаПлатежа,
	|	ДанныеРегистра.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|	ДанныеРегистра.ТипПлатежаФЗ275 КАК ТипПлатежаФЗ275,
	|	ДанныеРегистра.НаправлениеДеятельностиКонтрагента КАК НаправлениеДеятельностиКонтрагента,
	|
	|	ДанныеРегистра.Партнер КАК Партнер,
	|	ДанныеРегистра.Контрагент КАК Контрагент,
	|	ДанныеРегистра.Договор КАК Договор,
	|	ДанныеРегистра.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ДанныеРегистра.РасчетныйДокумент КАК РасчетныйДокумент,
	|
	|	ДанныеРегистра.СуммаОплаты КАК СуммаОплаты,
	|	ДанныеРегистра.СуммаОплатыРегл КАК СуммаОплатыРегл,
	|	ДанныеРегистра.СуммаОплатыВВалютеПлатежа КАК СуммаОплатыВВалютеПлатежа,
	|	
	|	ДанныеРегистра.СуммаПостоплаты КАК СуммаПостоплаты,
	|	ДанныеРегистра.СуммаПостоплатыРегл КАК СуммаПостоплатыРегл,
	|	ДанныеРегистра.СуммаПостоплатыВВалютеПлатежа КАК СуммаПостоплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.СуммаПредоплаты КАК СуммаПредоплаты,
	|	ДанныеРегистра.СуммаПредоплатыРегл КАК СуммаПредоплатыРегл,
	|	ДанныеРегистра.СуммаПредоплатыВВалютеПлатежа КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.СуммаКВыплатеВРамкахЛимита КАК СуммаКВыплатеВРамкахЛимита,
	|	ДанныеРегистра.СуммаКВыплатеСверхЛимита КАК СуммаКВыплатеСверхЛимита,
	|
	|	ДанныеРегистра.СуммаНДС КАК СуммаНДС,
	|	ДанныеРегистра.СуммаНДСРегл КАК СуммаНДСРегл,
	|	ДанныеРегистра.СуммаНДСВВалютеПлатежа КАК СуммаНДСВВалютеПлатежа,
	|
	|	ДанныеРегистра.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДанныеРегистра.СуммаОплатыВВалютеВзаиморасчетов КАК СуммаОплатыВВалютеВзаиморасчетов,
	|	ДанныеРегистра.СуммаПостоплатыВВалютеВзаиморасчетов КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|	ДанныеРегистра.СуммаПредоплатыВВалютеВзаиморасчетов КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|	ДанныеРегистра.ИсточникГФУДенежныхСредств КАК ИсточникГФУДенежныхСредств,
	|	ДанныеРегистра.ИсточникГФУРасчетов КАК ИсточникГФУРасчетов,
	|	ДанныеРегистра.СтавкаНДС КАК СтавкаНДС,
	|	ДанныеРегистра.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	ДанныеРегистра.ОтложенноеПроведение КАК ОтложенноеПроведение,
	|	ДанныеРегистра.Сторно
	|ИЗ
	|	ДанныеРегистра КАК ДанныеРегистра
	|ГДЕ
	|	НЕ ДанныеРегистра.ОтложенноеПроведение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Активность КАК Активность,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.Подразделение КАК Подразделение,
	|	ДанныеРегистра.НаправлениеДеятельностиДС КАК НаправлениеДеятельностиДС,
	|
	|	ДанныеРегистра.ДенежныеСредства КАК ДенежныеСредства,
	|	ДанныеРегистра.ТипДенежныхСредств КАК ТипДенежныхСредств,
	|	ДанныеРегистра.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеРегистра.ВалютаПлатежа КАК ВалютаПлатежа,
	|	ДанныеРегистра.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|	ДанныеРегистра.ТипПлатежаФЗ275 КАК ТипПлатежаФЗ275,
	|	ДанныеРегистра.НаправлениеДеятельностиКонтрагента КАК НаправлениеДеятельностиКонтрагента,
	|
	|	ДанныеРегистра.Партнер КАК Партнер,
	|	ДанныеРегистра.Контрагент КАК Контрагент,
	|	ДанныеРегистра.Договор КАК Договор,
	|	ДанныеРегистра.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ДанныеРегистра.РасчетныйДокумент КАК РасчетныйДокумент,
	|
	|	ДанныеРегистра.СуммаОплаты КАК СуммаОплаты,
	|	ДанныеРегистра.СуммаОплатыРегл КАК СуммаОплатыРегл,
	|	ДанныеРегистра.СуммаОплатыВВалютеПлатежа КАК СуммаОплатыВВалютеПлатежа,
	|	
	|	ДанныеРегистра.СуммаПостоплаты КАК СуммаПостоплаты,
	|	ДанныеРегистра.СуммаПостоплатыРегл КАК СуммаПостоплатыРегл,
	|	ДанныеРегистра.СуммаПостоплатыВВалютеПлатежа КАК СуммаПостоплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.СуммаПредоплаты КАК СуммаПредоплаты,
	|	ДанныеРегистра.СуммаПредоплатыРегл КАК СуммаПредоплатыРегл,
	|	ДанныеРегистра.СуммаПредоплатыВВалютеПлатежа КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|	0 КАК СуммаКВыплатеВРамкахЛимита,
	|	0 КАК СуммаКВыплатеСверхЛимита,
	|
	|	ДанныеРегистра.СуммаНДС КАК СуммаНДС,
	|	ДанныеРегистра.СуммаНДСРегл КАК СуммаНДСРегл,
	|	ДанныеРегистра.СуммаНДСВВалютеПлатежа КАК СуммаНДСВВалютеПлатежа,
	|
	|	ДанныеРегистра.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДанныеРегистра.СуммаОплатыВВалютеВзаиморасчетов КАК СуммаОплатыВВалютеВзаиморасчетов,
	|	ДанныеРегистра.СуммаПостоплатыВВалютеВзаиморасчетов КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|	ДанныеРегистра.СуммаПредоплатыВВалютеВзаиморасчетов КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|	ДанныеРегистра.ИсточникГФУДенежныхСредств КАК ИсточникГФУДенежныхСредств,
	|	ДанныеРегистра.ИсточникГФУРасчетов КАК ИсточникГФУРасчетов,
	|	ДанныеРегистра.СтавкаНДС КАК СтавкаНДС,
	|	ДанныеРегистра.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	ДанныеРегистра.ОтложенноеПроведение КАК ОтложенноеПроведение,
	|	ДанныеРегистра.Сторно КАК Сторно
	|ИЗ
	|	ДанныеРегистра КАК ДанныеРегистра
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РасчетыСПартнерами КАК РасчетыСПартнерами
	|	ПО 
	|		ДанныеРегистра.Регистратор = РасчетыСПартнерами.Регистратор
	|		И ДанныеРегистра.Организация = РасчетыСПартнерами.Организация
	|		И ДанныеРегистра.Сторно = РасчетыСПартнерами.Сторно
	|ГДЕ
	|	РасчетыСПартнерами.Организация ЕСТЬ NULL
	|	И ДанныеРегистра.ОтложенноеПроведение
	|	И ДанныеРегистра.СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|	И ДанныеРегистра.СуммаНДС = 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// все кроме хозяйственной операции ВозвратОплатыКлиенту, ВозвратДенежныхСредствОтПоставщика
	|ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Активность КАК Активность,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.Подразделение КАК Подразделение,
	|	ДанныеРегистра.НаправлениеДеятельностиДС КАК НаправлениеДеятельностиДС,
	|	
	|	ДанныеРегистра.ДенежныеСредства КАК ДенежныеСредства,
	|	ДанныеРегистра.ТипДенежныхСредств КАК ТипДенежныхСредств,
	|	ДанныеРегистра.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеРегистра.ВалютаПлатежа КАК ВалютаПлатежа,
	|	ДанныеРегистра.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|	ДанныеРегистра.ТипПлатежаФЗ275 КАК ТипПлатежаФЗ275,
	|	ДанныеРегистра.НаправлениеДеятельностиКонтрагента КАК НаправлениеДеятельностиКонтрагента,
	|
	|	ДанныеРегистра.Партнер КАК Партнер,
	|	ДанныеРегистра.Контрагент КАК Контрагент,
	|	ДанныеРегистра.Договор КАК Договор,
	|	ДанныеРегистра.ОбъектРасчетов КАК ОбъектРасчетов,
	|	РасчетыСПартнерами.РасчетныйДокумент КАК РасчетныйДокумент,
	|
	|	0 КАК СуммаОплаты,
	|	0 КАК СуммаОплатыРегл,
	|	0 КАК СуммаОплатыВВалютеПлатежа,
	|
	|	РасчетыСПартнерами.ДолгУпр КАК СуммаПостоплаты,
	|	РасчетыСПартнерами.ДолгРегл КАК СуммаПостоплатыРегл,
	|	РасчетыСПартнерами.Долг КАК СуммаПостоплатыВВалютеПлатежа,
	|
	|	РасчетыСПартнерами.ПредоплатаУпр КАК СуммаПредоплаты,
	|	РасчетыСПартнерами.ПредоплатаРегл КАК СуммаПредоплатыРегл,
	|	РасчетыСПартнерами.Предоплата КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|	0 КАК СуммаКВыплатеВРамкахЛимита,
	|	0 КАК СуммаКВыплатеСверхЛимита,
	|
	|	ДанныеРегистра.СуммаНДС КАК СуммаНДС,
	|	ДанныеРегистра.СуммаНДСРегл КАК СуммаНДСРегл,
	|	ДанныеРегистра.СуммаНДСВВалютеПлатежа КАК СуммаНДСВВалютеПлатежа,
	|
	|	ДанныеРегистра.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	0 КАК СуммаОплатыВВалютеВзаиморасчетов,
	|	РасчетыСПартнерами.Долг КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|	РасчетыСПартнерами.Предоплата КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|	ДанныеРегистра.ИсточникГФУДенежныхСредств КАК ИсточникГФУДенежныхСредств,
	|	ДанныеРегистра.ИсточникГФУРасчетов КАК ИсточникГФУРасчетов,
	|	ДанныеРегистра.СтавкаНДС КАК СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	ИСТИНА КАК ОтложенноеПроведение,
	|	ДанныеРегистра.Сторно КАК Сторно
	|
	|ИЗ
	|	ДанныеРегистраБезЗаявок КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РасчетыСПартнерами КАК РасчетыСПартнерами
	|	ПО 
	|		ДанныеРегистра.Регистратор = РасчетыСПартнерами.Регистратор
	|		И ДанныеРегистра.Организация = РасчетыСПартнерами.Организация
	|		И ДанныеРегистра.Партнер = РасчетыСПартнерами.Партнер
	|		И ДанныеРегистра.Контрагент = РасчетыСПартнерами.Контрагент
	|		И ДанныеРегистра.ОбъектРасчетов = РасчетыСПартнерами.Заказ
	|		И ДанныеРегистра.СтатьяДвиженияДенежныхСредств = РасчетыСПартнерами.СтатьяДвиженияДенежныхСредств
	|		И ДанныеРегистра.Сторно = РасчетыСПартнерами.Сторно
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ДатыКурсовВалютыВзаиморасчетов КАК ДатыКурсовВалютыВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			КурсыВалют КАК КурсВалютыВзаиморасчетов
	|		ПО
	|			ДатыКурсовВалютыВзаиморасчетов.ВалютаВзаиморасчетов = КурсВалютыВзаиморасчетов.Валюта
	|			И ДатыКурсовВалютыВзаиморасчетов.ДатаКурсаВалютыВзаиморасчетов = КурсВалютыВзаиморасчетов.Период
	|	ПО
	|		ДанныеРегистра.Регистратор = ДатыКурсовВалютыВзаиморасчетов.Регистратор
	|		И ДанныеРегистра.ВалютаВзаиморасчетов = ДатыКурсовВалютыВзаиморасчетов.ВалютаВзаиморасчетов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ДатыКурсовВалютыПлатежа КАК ДатыКурсовВалютыПлатежа
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			КурсыВалют КАК КурсВалютыПлатежа
	|		ПО
	|			ДатыКурсовВалютыПлатежа.ВалютаПлатежа = КурсВалютыПлатежа.Валюта
	|			И ДатыКурсовВалютыПлатежа.ДатаКурсаВалютыПлатежа = КурсВалютыПлатежа.Период
	|	ПО
	|		ДанныеРегистра.Регистратор = ДатыКурсовВалютыПлатежа.Регистратор
	|		И ДанныеРегистра.ВалютаВзаиморасчетов = ДатыКурсовВалютыВзаиморасчетов.ВалютаВзаиморасчетов
	|ГДЕ
	|	НЕ ДанныеРегистра.ОтложенноеПроведение
	|	И ДанныеРегистра.СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|	И ДанныеРегистра.СуммаНДС = 0
	|	И РасчетыСПартнерами.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|	И НЕ ДанныеРегистра.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// движения по хозяйственной операции ВозвратОплатыКлиенту, ВозвратДенежныхСредствОтПоставщика
	|ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Активность КАК Активность,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.Подразделение КАК Подразделение,
	|	ДанныеРегистра.НаправлениеДеятельностиДС КАК НаправлениеДеятельностиДС,
	|	
	|	ДанныеРегистра.ДенежныеСредства КАК ДенежныеСредства,
	|	ДанныеРегистра.ТипДенежныхСредств КАК ТипДенежныхСредств,
	|	ДанныеРегистра.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеРегистра.ВалютаПлатежа КАК ВалютаПлатежа,
	|	ДанныеРегистра.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|	ДанныеРегистра.ТипПлатежаФЗ275 КАК ТипПлатежаФЗ275,
	|	ДанныеРегистра.НаправлениеДеятельностиКонтрагента КАК НаправлениеДеятельностиКонтрагента,
	|
	|	ДанныеРегистра.Партнер КАК Партнер,
	|	ДанныеРегистра.Контрагент КАК Контрагент,
	|	ДанныеРегистра.Договор КАК Договор,
	|	РасчетыСПартнерами.Заказ КАК ОбъектРасчетов,
	|	РасчетыСПартнерами.РасчетныйДокумент КАК РасчетныйДокумент,
	|
	|	0 КАК СуммаОплаты,
	|	0 КАК СуммаОплатыРегл,
	|	0 КАК СуммаОплатыВВалютеПлатежа,
	|
	|	РасчетыСПартнерами.ДолгУпр КАК СуммаПостоплаты,
	|	РасчетыСПартнерами.ДолгРегл КАК СуммаПостоплатыРегл,
	|	РасчетыСПартнерами.Долг КАК СуммаПостоплатыВВалютеПлатежа,
	|
	|	РасчетыСПартнерами.ПредоплатаУпр КАК СуммаПредоплаты,
	|	РасчетыСПартнерами.ПредоплатаРегл КАК СуммаПредоплатыРегл,
	|	РасчетыСПартнерами.Предоплата КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|	0 КАК СуммаКВыплатеВРамкахЛимита,
	|	0 КАК СуммаКВыплатеСверхЛимита,
	|
	|	ДанныеРегистра.СуммаНДС КАК СуммаНДС,
	|	ДанныеРегистра.СуммаНДСРегл КАК СуммаНДСРегл,
	|	ДанныеРегистра.СуммаНДСВВалютеПлатежа КАК СуммаНДСВВалютеПлатежа,
	|
	|	ДанныеРегистра.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	0 КАК СуммаОплатыВВалютеВзаиморасчетов,
	|	РасчетыСПартнерами.Долг КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|	РасчетыСПартнерами.Предоплата КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|	ДанныеРегистра.ИсточникГФУДенежныхСредств КАК ИсточникГФУДенежныхСредств,
	|	РасчетыСПартнерами.Заказ КАК ИсточникГФУРасчетов,
	|	ДанныеРегистра.СтавкаНДС КАК СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	ИСТИНА КАК ОтложенноеПроведение,
	|	ДанныеРегистра.Сторно КАК Сторно
	|ИЗ
	|	ДанныеРегистраБезЗаявок КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РасчетыСПартнерами КАК РасчетыСПартнерами
	|	ПО 
	|		ДанныеРегистра.Регистратор = РасчетыСПартнерами.Регистратор
	|		И ДанныеРегистра.Организация = РасчетыСПартнерами.Организация
	|		И ДанныеРегистра.Партнер = РасчетыСПартнерами.Партнер
	|		И ДанныеРегистра.Контрагент = РасчетыСПартнерами.Контрагент
	|		И ДанныеРегистра.ОбъектРасчетов = РасчетыСПартнерами.КорОбъектРасчетов
	|		И ДанныеРегистра.СтатьяДвиженияДенежныхСредств = РасчетыСПартнерами.СтатьяДвиженияДенежныхСредств
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ДатыКурсовВалютыВзаиморасчетов КАК ДатыКурсовВалютыВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			КурсыВалют КАК КурсВалютыВзаиморасчетов
	|		ПО
	|			ДатыКурсовВалютыВзаиморасчетов.ВалютаВзаиморасчетов = КурсВалютыВзаиморасчетов.Валюта
	|			И ДатыКурсовВалютыВзаиморасчетов.ДатаКурсаВалютыВзаиморасчетов = КурсВалютыВзаиморасчетов.Период
	|	ПО
	|		ДанныеРегистра.Регистратор = ДатыКурсовВалютыВзаиморасчетов.Регистратор
	|		И ДанныеРегистра.ВалютаВзаиморасчетов = ДатыКурсовВалютыВзаиморасчетов.ВалютаВзаиморасчетов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ДатыКурсовВалютыПлатежа КАК ДатыКурсовВалютыПлатежа
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			КурсыВалют КАК КурсВалютыПлатежа
	|		ПО
	|			ДатыКурсовВалютыПлатежа.ВалютаПлатежа = КурсВалютыПлатежа.Валюта
	|			И ДатыКурсовВалютыПлатежа.ДатаКурсаВалютыПлатежа = КурсВалютыПлатежа.Период
	|	ПО
	|		ДанныеРегистра.Регистратор = ДатыКурсовВалютыПлатежа.Регистратор
	|		И ДанныеРегистра.ВалютаВзаиморасчетов = ДатыКурсовВалютыВзаиморасчетов.ВалютаВзаиморасчетов
	|ГДЕ
	|	НЕ ДанныеРегистра.ОтложенноеПроведение
	|	И ДанныеРегистра.СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|	И ДанныеРегистра.СуммаНДС = 0
	|	И РасчетыСПартнерами.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика))
	|
	|ИТОГИ ПО
	|	Регистратор
	|";
	
	Если ДляОтладки <> Неопределено Тогда
		ДляОтладки.Вставить("ТекстЗапросаДвижения", Запрос.Текст);
	КонецЕсли;
	Возврат Запрос.Выполнить();
	
КонецФункции

Процедура ЗаписатьДвиженияДенежныеСредстваКонтрагент(ДанныеДвижений)

	ВыборкаПоДокументам = ДанныеДвижений.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоДокументам.Следующий() Цикл
		НаборЗаписей = РегистрыНакопления.ДвиженияДенежныеСредстваКонтрагент.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаПоДокументам.Регистратор);
		НаборЗаписей.ДополнительныеСвойства.Вставить("НеСохранятьОтложенные");
		Выборка = ВыборкаПоДокументам.Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
		КонецЦикла;
		РаспределитьОплатуПоРасчетнымДокументам(НаборЗаписей);
		НаборЗаписей.Записать();
	КонецЦикла;

КонецПроцедуры

Процедура РаспределитьОплатуПоРасчетнымДокументам(НаборЗаписей)
	
	ДанныеРегистра = НаборЗаписей.Выгрузить();
	Оплаты = ДанныеРегистра.Скопировать(Новый Структура("ОтложенноеПроведение", Ложь));
	ПоляОтбора = "Организация,СтавкаНДС,ОтложенноеПроведение,"
				+ "ДенежныеСредства,СтатьяДвиженияДенежныхСредств,СтатьяКалькуляции,НаправлениеДеятельностиДС,"
				+ "Партнер,Контрагент,Договор,ОбъектРасчетов,НаправлениеДеятельностиКонтрагента";
	Оплаты.Свернуть(ПоляОтбора, "СуммаОплатыВВалютеПлатежа");
	Отбор = Новый Структура(ПоляОтбора);
	Для Каждого Оплата Из Оплаты Цикл
		Если Оплата.СуммаОплатыВВалютеПлатежа = 0 Тогда
			Продолжить;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(Отбор, Оплата);
		Отбор.ОтложенноеПроведение = Истина;
		РасчетныеДокументы = ДанныеРегистра.НайтиСтроки(Отбор);
		Итоги = ДанныеРегистра.Скопировать(Отбор);
		ВсегоВВалютеВзаиморасчетов = Итоги.Итог("СуммаПостоплатыВВалютеВзаиморасчетов") + Итоги.Итог("СуммаПредоплатыВВалютеВзаиморасчетов");
		СуммаОплатыВВалютеПлатежа = Оплата.СуммаОплатыВВалютеПлатежа;
		Для Каждого Запись Из РасчетныеДокументы Цикл
			ЭтоДолг = Запись.СуммаПостоплатыВВалютеВзаиморасчетов <> 0;
			СуммаВВалютеВзаиморасчетов = ?(ЭтоДолг, Запись.СуммаПостоплатыВВалютеВзаиморасчетов, Запись.СуммаПредоплатыВВалютеВзаиморасчетов);
			СуммаВВалютеПлатежа = ВзаиморасчетыСервер.СписатьСуммуПропорционально(
						СуммаОплатыВВалютеПлатежа,
						СуммаВВалютеВзаиморасчетов,
						ВсегоВВалютеВзаиморасчетов);
			ВсегоВВалютеВзаиморасчетов = ВсегоВВалютеВзаиморасчетов - СуммаВВалютеВзаиморасчетов;
			Если ЭтоДолг Тогда
				Запись.СуммаПостоплатыВВалютеПлатежа = СуммаВВалютеПлатежа;
			Иначе
				Запись.СуммаПредоплатыВВалютеПлатежа = СуммаВВалютеПлатежа;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	НаборЗаписей.Загрузить(ДанныеРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаРасчетыСПартнерами()
	
	ТекстЗапросаРегистраторов = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движения.Регистратор КАК Документ
	|ПОМЕСТИТЬ втРегистраторы
	|ИЗ
	|	РегистрНакопления.ДвиженияКонтрагентКонтрагент КАК Движения
	|ГДЕ
	|	Движения.Регистратор В (&МассивДокументов)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движения.Регистратор КАК Документ
	|ИЗ
	|	РегистрНакопления.ПроцентныеРасходыДисконтирования КАК Движения
	|ГДЕ
	|	Движения.Регистратор В (&МассивДокументов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ";
	
	ИмяВременнойТаблицы = "РасчетыСПартнерамиДвижения";
	Если ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
		
		ТекстЗапросаВозвратОплаты = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Движения.ДокументРегистратор КАК Ссылка,
		|	КлючиАналитики.Организация КАК Организация
		|ПОМЕСТИТЬ втВозвратОплаты
		|ИЗ
		|	РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК Движения
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК КлючиАналитики
		|		ПО Движения.АналитикаУчетаПоПартнерам = КлючиАналитики.КлючАналитики
		|ГДЕ
		|	Движения.ДокументРегистратор В (&МассивДокументов)
		|	И Движения.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Движения.ДокументРегистратор КАК Ссылка,
		|	КлючиАналитики.Организация КАК Организация
		|ИЗ
		|	РегистрНакопления.РасчетыСКлиентамиПоСрокам КАК Движения
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК КлючиАналитики
		|		ПО Движения.АналитикаУчетаПоПартнерам = КлючиАналитики.КлючАналитики
		|ГДЕ
		|	Движения.ДокументРегистратор В (&МассивДокументов)
		|	И Движения.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту)";

		ТекстыДвижений = Новый Массив;
		ТекстыДвижений.Добавить(ТекстЗапросаДвиженияПоСрокам("РасчетыСПоставщиками", ИмяВременнойТаблицы));
		ТекстыДвижений.Добавить(ТекстЗапросаДвиженияПоСрокам("РасчетыСКлиентами"));
		ТекстыДвижений.Добавить(ТекстЗапросаДвиженияПоСрокам("РасчетыСПоставщиками",,Истина));
		ТекстыДвижений.Добавить(ТекстЗапросаДвиженияПоСрокам("РасчетыСКлиентами",,Истина));
		ТекстЗапросаРасчетыСПартнерамиДвижения = СтрСоединить(ТекстыДвижений, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	Иначе
		
		ТекстЗапросаВозвратОплаты = 
		"ВЫБРАТЬ
		|	НЕОПРЕДЕЛЕНО КАК Ссылка,
		|	НЕОПРЕДЕЛЕНО КАК Организация
		|ПОМЕСТИТЬ втВозвратОплаты
		|ГДЕ
		|	ЛОЖЬ";
		
		ТекстыДвижений = Новый Массив;
		ТекстыДвижений.Добавить(ТекстЗапросаДвиженияПоДокументам("РасчетыСПоставщиками", ИмяВременнойТаблицы));
		ТекстыДвижений.Добавить(ТекстЗапросаДвиженияПоДокументам("РасчетыСКлиентами"));
		ТекстЗапросаРасчетыСПартнерамиДвижения = СтрСоединить(ТекстыДвижений, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
КонецЕсли;

#Область ТекстЗапросаПоРасчетамСПартнерами
	ТекстЗапросаРасчетыСПартнерами = 
	"ВЫБРАТЬ
	|	РасчетыСПартнерами.Период КАК Период,
	|	РасчетыСПартнерами.ВидДвиженияРегистра КАК ВидДвиженияРегистра,
	|	РасчетыСПартнерами.ВидДвижения КАК ВидДвижения,
	|	РасчетыСПартнерами.Регистратор КАК Регистратор,
	|	РасчетыСПартнерами.Организация КАК Организация,
	|	РасчетыСПартнерами.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	РасчетыСПартнерами.ОбъектРасчетов.Организация КАК ОрганизацияОбъектаРасчетов,
	|	РасчетыСПартнерами.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	РасчетыСПартнерами.Партнер КАК Партнер,
	|	РасчетыСПартнерами.Контрагент КАК Контрагент,
	|	РасчетыСПартнерами.Договор КАК Договор,
	|	РасчетыСПартнерами.ОбъектРасчетов КАК ОбъектРасчетов,
	|	РасчетыСПартнерами.Валюта Валюта,
	|	СУММА(РасчетыСПартнерами.Сумма) КАК Сумма,
	|	СУММА(РасчетыСПартнерами.СуммаУпр) КАК СуммаУпр,
	|	СУММА(РасчетыСПартнерами.СуммаРегл) КАК СуммаРегл,
	|
	|	РасчетыСПартнерами.ТипСуммы КАК ТипСуммы,
	|
	|	РасчетыСПартнерами.НашеПредприятие КАК НашеПредприятие,
	|	РасчетыСПартнерами.КонтрагентОрганизация КАК КонтрагентОрганизация,
	|	РасчетыСПартнерами.Организация = РасчетыСПартнерами.Организация.ГоловнаяОрганизация КАК ЭтоГоловнаяОрганизация,
	|	РасчетыСПартнерами.Сторно КАК Сторно,
	|
	|	РасчетыСПартнерами.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	РасчетыСПартнерами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
	|	
	|ПОМЕСТИТЬ РасчетыСПартнерами
	|ИЗ
	|	РасчетыСПартнерамиДвижения КАК РасчетыСПартнерами
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСПартнерами.Период,
	|	РасчетыСПартнерами.ВидДвиженияРегистра,
	|	РасчетыСПартнерами.ВидДвижения,
	|	РасчетыСПартнерами.Регистратор,
	|	РасчетыСПартнерами.АналитикаУчетаПоПартнерам,
	|	РасчетыСПартнерами.Организация,
	|	РасчетыСПартнерами.НаправлениеДеятельности,
	|	РасчетыСПартнерами.Партнер,
	|	РасчетыСПартнерами.Контрагент,
	|	РасчетыСПартнерами.Договор,
	|	РасчетыСПартнерами.ОбъектРасчетов,
	|	РасчетыСПартнерами.Валюта,
	|	РасчетыСПартнерами.ТипСуммы,
	|	РасчетыСПартнерами.НашеПредприятие,
	|	РасчетыСПартнерами.Сторно,
	|	РасчетыСПартнерами.КонтрагентОрганизация,
	|	РасчетыСПартнерами.ХозяйственнаяОперация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	АналитикаУчетаПоПартнерам,
	|	ОбъектРасчетов,
	|	Контрагент";
	#КонецОбласти

#Область ТекстЗапросаПроцентыДисконтирования

	ТекстЗапросаПроцентыДисконтирования = 
	"ВЫБРАТЬ
	|	Проценты.Период,
	|	Проценты.ВидДвижения КАК ВидДвижения,
	|	Проценты.Регистратор КАК Регистратор,
	|	Проценты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Проценты.ОбъектРасчетов.Организация КАК Организация,
	|	Проценты.ОбъектРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Проценты.ОбъектРасчетов.Партнер КАК Партнер,
	|	Проценты.ОбъектРасчетов.Контрагент КАК Контрагент,
	|	Проценты.ОбъектРасчетов.Договор КАК Договор,
	|	Проценты.ОбъектРасчетов КАК ОбъектРасчетов,
	|	Проценты.Валюта КАК Валюта,
	|	СУММА(ВЫБОР КОГДА Проценты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА -Проценты.СуммаДисконтирования ИНАЧЕ Проценты.СуммаДисконтирования КОНЕЦ) КАК Сумма,
	|	СУММА(ВЫБОР КОГДА Проценты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА -Проценты.СуммаДисконтированияУпр ИНАЧЕ Проценты.СуммаДисконтированияУпр КОНЕЦ) КАК СуммаУпр,
	|	СУММА(ВЫБОР КОГДА Проценты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА -Проценты.СуммаДисконтированияРегл ИНАЧЕ Проценты.СуммаДисконтированияРегл КОНЕЦ) КАК СуммаРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСуммЗадолженности.ДисконтДолга) КАК ТипСуммы,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеПроцентовПоДисконтированию) КАК ХозяйственнаяОперация
	|ПОМЕСТИТЬ ПроцентыДисконтирования
	|ИЗ
	|	РегистрНакопления.ПроцентныеРасходыДисконтирования КАК Проценты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ  втРегистраторы КАК Т
	|			ПО Проценты.Регистратор = Т.Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	Проценты.Период,
	|	Проценты.ВидДвижения,
	|	Проценты.Регистратор,
	|	Проценты.АналитикаУчетаПоПартнерам,
	|	Проценты.ОбъектРасчетов,
	|	Проценты.Валюта
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	АналитикаУчетаПоПартнерам,
	|	ОбъектРасчетов,
	|	Валюта";

#КонецОбласти




#Область ТекстЗапросаГоловнаяОрганизация

	ТекстЗапросаГоловнаяОрганизация = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыСПартнерами.Организация КАК Организация,
	|	РасчетыСПартнерами.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация
	|ИЗ
	|	РасчетыСПартнерамиДвижения КАК РасчетыСПартнерами";

#КонецОбласти



#Область РасходЗадолженности
//Документ ВзаимозачетЗадолженности
		#Область РасходЗадолженностиПриВзаимозачете
		//Таблица Расхода задолженности (списываем всю дебиторскую задолженность)
		РасходЗадолженностиПриВзаимозачете = 
		"//Таблица Расхода задолженности (списываем всю дебиторскую задолженность)
		|ВЫБРАТЬ
		|	РасчетыСПартнерами.Период,
		|	РасчетыСПартнерами.ВидДвижения КАК ВидДвижения,
		|	РасчетыСПартнерами.Регистратор КАК Регистратор,
		|	РасчетыСПартнерами.Организация КАК Организация,
		|	РасчетыСПартнерами.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	РасчетыСПартнерами.Организация КАК ВладелецОбъектаРасчета,
		|	РасчетыСПартнерами.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	РасчетыСПартнерами.Партнер,
		|	РасчетыСПартнерами.Контрагент КАК Контрагент,
		|	РасчетыСПартнерами.Договор КАК Договор,
		|	РасчетыСПартнерами.ОбъектРасчетов КАК ОбъектРасчетов,
		|	РасчетыСПартнерами.Валюта,
		|	РасчетыСПартнерами.Сумма КАК СуммаВВалюте,
		|	РасчетыСПартнерами.СуммаУпр КАК Сумма,
		|	РасчетыСПартнерами.СуммаРегл КАК СуммаРегл,
		|	РасчетыСПартнерами.ТипСуммы КАК ТипСуммы,
		|	РасчетыСПартнерами.ХозяйственнаяОперация КАК ХозОперацияРегистра,
		|	РасчетыСПартнерами.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	РасчетыСПартнерами.КонтрагентОрганизация КАК КонтрагентОрганизация,
		|	РасчетыСПартнерами.ОбъектРасчетов.Подразделение КАК Подразделение,
		|	РасчетыСПартнерами.Валюта КАК ВалютаВзаиморасчетов,
		|	РасчетыСПартнерами.СуммаРегл / 
		|		ВЫБОР КОГДА РасчетыСПартнерами.Сумма = 0 
		|			ТОГДА ВЫБОР КОГДА РасчетыСПартнерами.СуммаРегл = 0 ТОГДА 1 ИНАЧЕ РасчетыСПартнерами.СуммаРегл КОНЕЦ
		|			ИНАЧЕ РасчетыСПартнерами.Сумма 
		|		КОНЕЦ КАК КурсВалютыВзаиморасчетов,
		|	РасчетыСПартнерами.Сумма КАК СуммаВВалютеВзаиморасчетов,
		|	РасчетыСПартнерами.ОбъектРасчетов КАК ИсточникГФУРасчетов,
		|	""РасходЗадолженностиПриВзаимозачете"" КАК ИмяТаблицы,
		|	РасчетыСПартнерами.Организация = РасчетыСПартнерами.ГоловнаяОрганизация КАК ЭтоГоловнаяОрганизация,
		|	ЛОЖЬ КАК ЭтоВозвратАванса,
		|	РасчетыСПартнерами.Сторно КАК Сторно
		|ИЗ
		|	РасчетыСПартнерами КАК РасчетыСПартнерами
		|ГДЕ
		|	РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ТИПЗНАЧЕНИЯ(РасчетыСПартнерами.Регистратор) = ТИП(Документ.ВзаимозачетЗадолженности)";
		#КонецОбласти

//Платежные документы: ПоступлениеБДС, ПКО
		#Область РасходЗадолженностиЗаЧужойОбъектРасчетов
		// Поступление денег в головную организацию (филилал) закрывает задолженость в филиала (головной организации)
		РасходЗадолженностиЗаЧужойОбъектРасчетов =  
		"//При получении денег за филиал закроем задолженность филиала
		|ВЫБРАТЬ
		|	РасчетыСПартнерами.Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	РасчетыСПартнерами.Регистратор КАК Регистратор,
		|	РасчетыСПартнерами.ОрганизацияОбъектаРасчетов КАК Организация,
		|	РасчетыСПартнерами.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	РасчетыСПартнерами.ОрганизацияОбъектаРасчетов КАК ВладелецОбъектаРасчета,
		|	РасчетыСПартнерами.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	РасчетыСПартнерами.Партнер КАК КорПартнер,
		|	РасчетыСПартнерами.Контрагент КАК КорКонтрагент,
		|	РасчетыСПартнерами.Договор КАК КорДоговор,
		|	РасчетыСПартнерами.ОбъектРасчетов КАК КорОбъектРасчетов,
		|	РасчетыСПартнерами.Валюта,
		|	РасчетыСПартнерами.Сумма КАК СуммаВВалюте,
		|	РасчетыСПартнерами.СуммаУпр КАК Сумма,
		|	РасчетыСПартнерами.СуммаРегл КАК СуммаРегл,
		|	РасчетыСПартнерами.ТипСуммы КАК КорТипСуммы,
		|	РасчетыСПартнерами.ХозяйственнаяОперация КАК ХозОперацияРегистра,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереносПлатежаМеждуФилиалами) КАК ХозяйственнаяОперация,
		|	РасчетыСПартнерами.КонтрагентОрганизация КАК КонтрагентОрганизация,
		|	РасчетыСПартнерами.ОбъектРасчетов.Подразделение КАК Подразделение,
		|	РасчетыСПартнерами.Валюта КАК КорВалютаВзаиморасчетов,
		|	РасчетыСПартнерами.СуммаРегл / 
		|		ВЫБОР КОГДА РасчетыСПартнерами.Сумма = 0 
		|			ТОГДА ВЫБОР КОГДА РасчетыСПартнерами.СуммаРегл = 0 ТОГДА 1 ИНАЧЕ РасчетыСПартнерами.СуммаРегл КОНЕЦ
		|			ИНАЧЕ РасчетыСПартнерами.Сумма 
		|		КОНЕЦ КАК КурсВалютыВзаиморасчетов,
		|	РасчетыСПартнерами.Сумма КАК КорСуммаВВалютеВзаиморасчетов,
		|	РасчетыСПартнерами.ОбъектРасчетов КАК КорИсточникГФУРасчетов,
		|	""РасходЗадолженностиЗаЧужойОбъектРасчетов"" КАК ИмяТаблицы,
		|	РасчетыСПартнерами.Организация = РасчетыСПартнерами.ГоловнаяОрганизация КАК ЭтоГоловнаяОрганизация,
		|	ЛОЖЬ КАК ЭтоВозвратАванса,
		|	РасчетыСПартнерами.Сторно КАК Сторно
		|ИЗ
		|	РасчетыСПартнерами КАК РасчетыСПартнерами
		|ГДЕ
		|	РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ТИПЗНАЧЕНИЯ(РасчетыСПартнерами.Регистратор) В (
		|		ТИП(Документ.ПриходныйКассовыйОрдер),
		|		ТИП(Документ.ПоступлениеБезналичныхДенежныхСредств))
		|	И РасчетыСПартнерами.Организация <> РасчетыСПартнерами.ОрганизацияОбъектаРасчетов";
		#КонецОбласти

//Платежные документы: СписаниеБДС, РКО
		#Область РасходВОрганизацииЗаЧужойОбъектРасчетов
		// Оплачиваем в головной организации (филиале) за объект расчета филиала (головной организации)
		РасходВОрганизацииЗаЧужойОбъектРасчетов = 
		"//При оплате за филиал под приход в документах СписаниеБДС и РКО подставим Расход в головной организации
		|ВЫБРАТЬ
		|	РасчетыСПартнерами.Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	РасчетыСПартнерами.Регистратор КАК Регистратор,
		|	РасчетыСПартнерами.Организация КАК Организация,
		|	РасчетыСПартнерами.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	РасчетыСПартнерами.ОрганизацияОбъектаРасчетов КАК ВладелецОбъектаРасчета,
		|	РасчетыСПартнерами.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
		|	РасчетыСПартнерами.Партнер КАК КорПартнер,
		|	РасчетыСПартнерами.Контрагент КАК КорКонтрагент,
		|	РасчетыСПартнерами.Договор КАК КорДоговор,
		|	РасчетыСПартнерами.ОбъектРасчетов КАК КорОбъектРасчетов,
		|	РасчетыСПартнерами.Валюта,
		|	РасчетыСПартнерами.Сумма КАК СуммаВВалюте,
		|	РасчетыСПартнерами.СуммаУпр КАК Сумма,
		|	РасчетыСПартнерами.СуммаРегл КАК СуммаРегл,
		|	РасчетыСПартнерами.ТипСуммы КАК КорТипСуммы,
		|	РасчетыСПартнерами.ХозяйственнаяОперация КАК ХозОперацияРегистра,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереносПлатежаМеждуФилиалами) КАК ХозяйственнаяОперация,
		|	РасчетыСПартнерами.КонтрагентОрганизация КАК КонтрагентОрганизация,
		|	РасчетыСПартнерами.ОбъектРасчетов.Подразделение КАК Подразделение,
		|	РасчетыСПартнерами.Валюта КАК КорВалютаВзаиморасчетов,
		|	РасчетыСПартнерами.СуммаРегл / 
		|		ВЫБОР КОГДА РасчетыСПартнерами.Сумма = 0 
		|			ТОГДА ВЫБОР КОГДА РасчетыСПартнерами.СуммаРегл = 0 ТОГДА 1 ИНАЧЕ РасчетыСПартнерами.СуммаРегл КОНЕЦ
		|			ИНАЧЕ РасчетыСПартнерами.Сумма 
		|		КОНЕЦ КАК КурсВалютыВзаиморасчетов,
		|	РасчетыСПартнерами.Сумма КАК КорСуммаВВалютеВзаиморасчетов,
		|	РасчетыСПартнерами.ОбъектРасчетов КАК КорИсточникГФУРасчетов,
		|	""РасходВОрганизацииЗаЧужойОбъектРасчетов"" КАК ИмяТаблицы,
		|	РасчетыСПартнерами.Организация = РасчетыСПартнерами.ГоловнаяОрганизация КАК ЭтоГоловнаяОрганизация,
		|	ЛОЖЬ КАК ЭтоВозвратАванса,
		|	РасчетыСПартнерами.Сторно КАК Сторно
		|ИЗ
		|	РасчетыСПартнерами КАК РасчетыСПартнерами
		|ГДЕ
		|	РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ТИПЗНАЧЕНИЯ(РасчетыСПартнерами.Регистратор) В (
		|		ТИП(Документ.РасходныйКассовыйОрдер),
		|		ТИП(Документ.СписаниеБезналичныхДенежныхСредств))
		|	И РасчетыСПартнерами.Организация <> РасчетыСПартнерами.ОрганизацияОбъектаРасчетов";
		#КонецОбласти
		
//Возврат оплаты по курсу аванса: СписаниеБДС, РКО
		#Область РасходПогашениеЗадолженности
		РасходПогашениеЗадолженности = 
		"//Возврат по курсу аванса: Погашение задолженности после переноса аванса
		|ВЫБРАТЬ
		|	РасчетыСПартнерами.Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	РасчетыСПартнерами.Регистратор КАК Регистратор,
		|	РасчетыСПартнерами.Организация.ГоловнаяОрганизация КАК Организация,
		|	РасчетыСПартнерами.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	РасчетыСПартнерами.Организация КАК ВладелецОбъектаРасчета,
		|	РасчетыСПартнерами.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
		|	РасчетыСПартнерами.Партнер КАК КорПартнер,
		|	РасчетыСПартнерами.Контрагент КАК КорКонтрагент,
		|	РасчетыСПартнерами.Договор КАК КорДоговор,
		|	РасчетыСПартнерами.ОбъектРасчетов КАК КорОбъектРасчетов,
		|	РасчетыСПартнерами.Валюта,
		|	РасчетыСПартнерами.Сумма КАК СуммаВВалюте,
		|	РасчетыСПартнерами.СуммаУпр КАК Сумма,
		|	РасчетыСПартнерами.СуммаРегл КАК СуммаРегл,
		|	РасчетыСПартнерами.ТипСуммы КАК КорТипСуммы,
		|	РасчетыСПартнерами.ХозяйственнаяОперация КАК ХозОперацияРегистра,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности) КАК ХозяйственнаяОперация,
		|	РасчетыСПартнерами.КонтрагентОрганизация КАК КонтрагентОрганизация,
		|	РасчетыСПартнерами.ОбъектРасчетов.Подразделение КАК Подразделение,
		|	РасчетыСПартнерами.Валюта КАК КорВалютаВзаиморасчетов,
		|	РасчетыСПартнерами.СуммаРегл / 
		|		ВЫБОР КОГДА РасчетыСПартнерами.Сумма = 0 
		|			ТОГДА ВЫБОР КОГДА РасчетыСПартнерами.СуммаРегл = 0 ТОГДА 1 ИНАЧЕ РасчетыСПартнерами.СуммаРегл КОНЕЦ
		|			ИНАЧЕ РасчетыСПартнерами.Сумма 
		|		КОНЕЦ КАК КурсВалютыВзаиморасчетов,
		|	РасчетыСПартнерами.Сумма КАК КорСуммаВВалютеВзаиморасчетов,
		|	РасчетыСПартнерами.ОбъектРасчетов КАК КорИсточникГФУРасчетов,
		|	""РасходПогашениеЗадолженности"" КАК ИмяТаблицы,
		|	РасчетыСПартнерами.Организация = РасчетыСПартнерами.ГоловнаяОрганизация КАК ЭтоГоловнаяОрганизация,
		|	ИСТИНА КАК ЭтоВозвратАванса,
		|	РасчетыСПартнерами.Сторно КАК Сторно
		|ИЗ
		|	РасчетыСПартнерами КАК РасчетыСПартнерами
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втВозвратОплаты КАК ВозвратОплаты
		|		ПО РасчетыСПартнерами.Регистратор = ВозвратОплаты.Ссылка
		|ГДЕ
		|	РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И НЕ РасчетыСПартнерами.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту))
		|	И РасчетыСПартнерами.Организация = РасчетыСПартнерами.Организация.ГоловнаяОрганизация";
		#КонецОбласти
		
//Возврат оплаты по курсу аванса за головную организацию или филиал: СписаниеБДС, РКО
		#Область РасходСписаниеАвансаПриВозвратеФилилала
		РасходСписаниеАвансаПриВозвратеФилилала = 
		"//Возврат по курсу аванса: Списываем аванс в головной организации при возврате в филиале
		|ВЫБРАТЬ
		|	РасчетыСПартнерами.Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	РасчетыСПартнерами.Регистратор КАК Регистратор,
		|	РасчетыСПартнерами.Организация КАК Организация,
		|	РасчетыСПартнерами.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	РасчетыСПартнерами.Организация.ГоловнаяОрганизация КАК ВладелецОбъектаРасчета,
		|	РасчетыСПартнерами.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
		|	РасчетыСПартнерами.Партнер КАК КорПартнер,
		|	РасчетыСПартнерами.Контрагент КАК КорКонтрагент,
		|	РасчетыСПартнерами.Договор КАК КорДоговор,
		|	РасчетыСПартнерами.ОбъектРасчетов КАК КорОбъектРасчетов,
		|	РасчетыСПартнерами.Валюта,
		|	РасчетыСПартнерами.Сумма КАК СуммаВВалюте,
		|	РасчетыСПартнерами.СуммаУпр КАК Сумма,
		|	РасчетыСПартнерами.СуммаРегл КАК СуммаРегл,
		|	РасчетыСПартнерами.ТипСуммы КАК КорТипСуммы,
		|	РасчетыСПартнерами.ХозяйственнаяОперация КАК ХозОперацияРегистра,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности) КАК ХозяйственнаяОперация,
		|	РасчетыСПартнерами.КонтрагентОрганизация КАК КонтрагентОрганизация,
		|	РасчетыСПартнерами.ОбъектРасчетов.Подразделение КАК Подразделение,
		|	РасчетыСПартнерами.Валюта КАК КорВалютаВзаиморасчетов,
		|	РасчетыСПартнерами.СуммаРегл / 
		|		ВЫБОР КОГДА РасчетыСПартнерами.Сумма = 0 
		|			ТОГДА ВЫБОР КОГДА РасчетыСПартнерами.СуммаРегл = 0 ТОГДА 1 ИНАЧЕ РасчетыСПартнерами.СуммаРегл КОНЕЦ
		|			ИНАЧЕ РасчетыСПартнерами.Сумма 
		|		КОНЕЦ КАК КурсВалютыВзаиморасчетов,
		|	РасчетыСПартнерами.Сумма КАК КорСуммаВВалютеВзаиморасчетов,
		|	РасчетыСПартнерами.ОбъектРасчетов КАК КорИсточникГФУРасчетов,
		|	""РасходСписаниеАвансаПриВозвратеФилилала"" КАК ИмяТаблицы,
		|	РасчетыСПартнерами.Организация = РасчетыСПартнерами.ГоловнаяОрганизация КАК ЭтоГоловнаяОрганизация,
		|	ИСТИНА КАК ЭтоВозвратАванса,
		|	РасчетыСПартнерами.Сторно КАК Сторно
		|ИЗ
		|	РасчетыСПартнерами КАК РасчетыСПартнерами
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втВозвратОплаты КАК ВозвратОплаты
		|		ПО РасчетыСПартнерами.Регистратор = ВозвратОплаты.Ссылка
		|ГДЕ
		|	РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И НЕ РасчетыСПартнерами.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту))";
		#КонецОбласти

//Дисконтирование
		#Область РасходЗадолженностиПриДисконтировании
		РасходЗадолженностиПриДисконтировании = 
		"//При дисконтировании задолженности 
		|ВЫБРАТЬ
		|	РасчетыСПартнерами.Период,
		|	РасчетыСПартнерами.ВидДвижения КАК ВидДвижения,
		|	РасчетыСПартнерами.Регистратор КАК Регистратор,
		|	РасчетыСПартнерами.Организация КАК Организация,
		|	РасчетыСПартнерами.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	РасчетыСПартнерами.Организация КАК ВладелецОбъектаРасчета,
		|	РасчетыСПартнерами.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	РасчетыСПартнерами.Партнер КАК Партнер,
		|	РасчетыСПартнерами.Контрагент КАК Контрагент,
		|	РасчетыСПартнерами.Договор КАК Договор,
		|	РасчетыСПартнерами.ОбъектРасчетов КАК ОбъектРасчетов,
		|	РасчетыСПартнерами.Валюта,
		|	Проценты.Сумма КАК СуммаВВалюте,
		|	Проценты.СуммаУпр КАК Сумма,
		|	Проценты.СуммаРегл КАК СуммаРегл,
		|	РасчетыСПартнерами.ТипСуммы КАК ТипСуммы,
		|	РасчетыСПартнерами.ХозяйственнаяОперация КАК ХозОперацияРегистра,
		|	Проценты.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	РасчетыСПартнерами.КонтрагентОрганизация КАК КонтрагентОрганизация,
		|	РасчетыСПартнерами.ОбъектРасчетов.Подразделение КАК Подразделение,
		|	РасчетыСПартнерами.Валюта КАК ВалютаВзаиморасчетов,
		|	Проценты.СуммаРегл / 
		|		ВЫБОР КОГДА Проценты.Сумма = 0 
		|			ТОГДА ВЫБОР КОГДА Проценты.СуммаРегл = 0 
		|							ТОГДА 1 
		|							ИНАЧЕ Проценты.СуммаРегл
		|					КОНЕЦ
		|			ИНАЧЕ Проценты.Сумма
		|		КОНЕЦ КАК КурсВалютыВзаиморасчетов,
		|	Проценты.Сумма КАК СуммаВВалютеВзаиморасчетов,
		|	РасчетыСПартнерами.ОбъектРасчетов КАК ИсточникГФУРасчетов,
		|	""РасходЗадолженностиПриДисконтировании"" КАК ИмяТаблицы,
		|	РасчетыСПартнерами.Организация = РасчетыСПартнерами.Организация.ГоловнаяОрганизация КАК ЭтоГоловнаяОрганизация,
		|	ЛОЖЬ КАК ЭтоВозвратАванса,
		|	РасчетыСПартнерами.Сторно КАК Сторно
		|ИЗ
		|	РасчетыСПартнерами КАК РасчетыСПартнерами
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПроцентыДисконтирования КАК Проценты
		|	ПО РасчетыСПартнерами.Регистратор = Проценты.Регистратор
		|		И РасчетыСПартнерами.АналитикаУчетаПоПартнерам = Проценты.АналитикаУчетаПоПартнерам
		|		И РасчетыСПартнерами.ОбъектРасчетов = Проценты.ОбъектРасчетов
		|		И РасчетыСПартнерами.Валюта = Проценты.Валюта
		|
		|УПОРЯДОЧИТЬ ПО
		|	РасчетыСПартнерами.Регистратор,
		|	РасчетыСПартнерами.Организация,
		|	РасчетыСПартнерами.Валюта,
		|	РасчетыСПартнерами.Сумма УБЫВ
		|ИТОГИ
		|	МАКСИМУМ(КонтрагентОрганизация),
		|	МАКСИМУМ(ЭтоВозвратАванса)
		|ПО
		|	РасчетыСПартнерами.Регистратор,
		|	РасчетыСПартнерами.Организация";
		#КонецОбласти

		РасходЗадолженности = Новый Массив;
		РасходЗадолженности.Добавить(РасходЗадолженностиПриВзаимозачете);
		РасходЗадолженности.Добавить(РасходЗадолженностиЗаЧужойОбъектРасчетов);
		РасходЗадолженности.Добавить(РасходВОрганизацииЗаЧужойОбъектРасчетов);
		РасходЗадолженности.Добавить(РасходПогашениеЗадолженности);
		РасходЗадолженности.Добавить(РасходСписаниеАвансаПриВозвратеФилилала);
		РасходЗадолженности.Добавить(РасходЗадолженностиПриДисконтировании);
		
		//Списываемая задолженность для погашения
		ТекстЗапросаДебиторскаяЗадолженность = СтрСоединить(РасходЗадолженности, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
#КонецОбласти



#Область ПриходЗадолженности
//Документ ВзаимозачетЗадолженности
		#Область ПриходЗадолженностиПриВзаимозачете
		ПриходЗадолженностиПриВзаимозачете = 
		"//Таблица Прихода задолженности (приходуем всю кредиторскую задолженность)
		|ВЫБРАТЬ
		|	РасчетыСПартнерами.Период,
		|	РасчетыСПартнерами.ВидДвижения КАК ВидДвижения,
		|	РасчетыСПартнерами.Регистратор КАК Регистратор,
		|	РасчетыСПартнерами.Организация,
		|	РасчетыСПартнерами.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	РасчетыСПартнерами.Организация КАК ВладелецОбъектаРасчета,
		|	РасчетыСПартнерами.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
		|	РасчетыСПартнерами.Партнер КАК КорПартнер,
		|	РасчетыСПартнерами.Контрагент КАК КорКонтрагент,
		|	РасчетыСПартнерами.Договор КАК КорДоговор,
		|	РасчетыСПартнерами.ОбъектРасчетов КАК КорОбъектРасчетов,
		|	РасчетыСПартнерами.Валюта,
		|	РасчетыСПартнерами.Сумма КАК СуммаВВалюте,
		|	РасчетыСПартнерами.СуммаУпр КАК Сумма,
		|	РасчетыСПартнерами.СуммаРегл КАК СуммаРегл,
		|	РасчетыСПартнерами.ТипСуммы КАК КорТипСуммы,
		|	РасчетыСПартнерами.ХозяйственнаяОперация КАК ХозОперацияРегистра,
		|	РасчетыСПартнерами.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	РасчетыСПартнерами.ОбъектРасчетов.Подразделение КАК Подразделение,
		|	РасчетыСПартнерами.Валюта КАК КорВалютаВзаиморасчетов,
		|	РасчетыСПартнерами.СуммаРегл / 
		|		ВЫБОР КОГДА РасчетыСПартнерами.Сумма = 0 
		|			ТОГДА ВЫБОР КОГДА РасчетыСПартнерами.СуммаРегл = 0 ТОГДА 1 ИНАЧЕ РасчетыСПартнерами.СуммаРегл КОНЕЦ
		|			ИНАЧЕ РасчетыСПартнерами.Сумма 
		|		КОНЕЦ КАК КурсВалютыВзаиморасчетов,
		|	РасчетыСПартнерами.Сумма КАК КорСуммаВВалютеВзаиморасчетов,
		|	РасчетыСПартнерами.ОбъектРасчетов КАК КорИсточникГФУРасчетов,
		|	""ПриходЗадолженностиПриВзаимозачете"" КАК ИмяТаблицы,
		|	РасчетыСПартнерами.Организация = РасчетыСПартнерами.ГоловнаяОрганизация КАК ЭтоГоловнаяОрганизация,
		|	ЛОЖЬ КАК ЭтоВозвратАванса,
		|	РасчетыСПартнерами.Сторно КАК Сторно
		|ИЗ
		|	РасчетыСпартнерами КАК РасчетыСПартнерами
		|ГДЕ
		|	РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ТИПЗНАЧЕНИЯ(РасчетыСПартнерами.Регистратор) = ТИП(Документ.ВзаимозачетЗадолженности)";
		#КонецОбласти

//Платежные документы: ПоступлениеБДС, ПКО
		#Область ПриходВОрганизациюЗаЧужойОбъектРасчетов
		ПриходВОрганизациюЗаЧужойОбъектРасчетов = //в филиале это расход в головную организацию
		"//При получение денег за филиал под расход в документах ПоступлениеБДС и ПКО подставим Приход в головную организацию
		|ВЫБРАТЬ
		|	РасчетыСПартнерами.Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
		|	РасчетыСПартнерами.Регистратор КАК Регистратор,
		|	РасчетыСПартнерами.Организация,
		|	РасчетыСПартнерами.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	РасчетыСПартнерами.ОрганизацияОбъектаРасчетов КАК ВладелецОбъектаРасчета,
		|	РасчетыСПартнерами.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	РасчетыСПартнерами.Партнер,
		|	РасчетыСПартнерами.Контрагент КАК Контрагент,
		|	РасчетыСПартнерами.Договор КАК Договор,
		|	РасчетыСПартнерами.ОбъектРасчетов КАК ОбъектРасчетов,
		|	РасчетыСПартнерами.Валюта,
		|	РасчетыСПартнерами.Сумма КАК СуммаВВалюте,
		|	РасчетыСПартнерами.СуммаУпр КАК Сумма,
		|	РасчетыСПартнерами.СуммаРегл КАК СуммаРегл,
		|	РасчетыСПартнерами.ТипСуммы КАК ТипСуммы,
		|	РасчетыСПартнерами.ХозяйственнаяОперация КАК ХозОперацияРегистра,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереносПлатежаМеждуФилиалами) КАК ХозяйственнаяОперация,
		|	РасчетыСПартнерами.ОбъектРасчетов.Подразделение КАК Подразделение,
		|	РасчетыСПартнерами.Валюта КАК ВалютаВзаиморасчетов,
		|	РасчетыСПартнерами.СуммаРегл / 
		|		ВЫБОР КОГДА РасчетыСПартнерами.Сумма = 0 
		|			ТОГДА ВЫБОР КОГДА РасчетыСПартнерами.СуммаРегл = 0 ТОГДА 1 ИНАЧЕ РасчетыСПартнерами.СуммаРегл КОНЕЦ
		|			ИНАЧЕ РасчетыСПартнерами.Сумма 
		|		КОНЕЦ КАК КурсВалютыВзаиморасчетов,
		|	РасчетыСПартнерами.Сумма КАК СуммаВВалютеВзаиморасчетов,
		|	РасчетыСПартнерами.ОбъектРасчетов КАК ИсточникГФУРасчетов,
		|	""ПриходВОрганизациюЗаЧужойОбъектРасчетов"" КАК ИмяТаблицы,
		|	РасчетыСПартнерами.Организация = РасчетыСПартнерами.ГоловнаяОрганизация КАК ЭтоГоловнаяОрганизация,
		|	ЛОЖЬ КАК ЭтоВозвратАванса,
		|	РасчетыСПартнерами.Сторно КАК Сторно
		|ИЗ
		|	РасчетыСПартнерами КАК РасчетыСПартнерами
		|ГДЕ
		|	РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ТИПЗНАЧЕНИЯ(РасчетыСПартнерами.Регистратор) В (
		|		ТИП(Документ.ПриходныйКассовыйОрдер),
		|		ТИП(Документ.ПоступлениеБезналичныхДенежныхСредств))
		|	И РасчетыСПартнерами.Организация <> РасчетыСПартнерами.ОрганизацияОбъектаРасчетов";
		#КонецОбласти
		
//Платежные документы: СписаниеБДС, РКО
		#Область ПриходЗадолженностиЗаЧужойОбъектРасчетов
		// При оплате за чужой объект расчета образуется задолженность поставщика по этому объекту расчета
		ПриходЗадолженностиЗаЧужойОбъектРасчетов = 
		"//При оплате за филиал закроем задолженность филиала
		|ВЫБРАТЬ
		|	РасчетыСПартнерами.Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
		|	РасчетыСПартнерами.Регистратор КАК Регистратор,
		|	РасчетыСПартнерами.ОрганизацияОбъектаРасчетов,
		|	РасчетыСПартнерами.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	РасчетыСПартнерами.ОрганизацияОбъектаРасчетов КАК ВладелецОбъектаРасчета,
		|	РасчетыСПартнерами.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	РасчетыСПартнерами.Партнер,
		|	РасчетыСПартнерами.Контрагент КАК Контрагент,
		|	РасчетыСПартнерами.Договор КАК Договор,
		|	РасчетыСПартнерами.ОбъектРасчетов КАК ОбъектРасчетов,
		|	РасчетыСПартнерами.Валюта,
		|	РасчетыСПартнерами.Сумма КАК СуммаВВалюте,
		|	РасчетыСПартнерами.СуммаУпр КАК Сумма,
		|	РасчетыСПартнерами.СуммаРегл КАК СуммаРегл,
		|	РасчетыСПартнерами.ТипСуммы КАК ТипСуммы,
		|	РасчетыСПартнерами.ХозяйственнаяОперация КАК ХозОперацияРегистра,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереносПлатежаМеждуФилиалами) КАК ХозяйственнаяОперация,
		|	РасчетыСПартнерами.ОбъектРасчетов.Подразделение КАК Подразделение,
		|	РасчетыСПартнерами.Валюта КАК ВалютаВзаиморасчетов,
		|	РасчетыСПартнерами.СуммаРегл / 
		|		ВЫБОР КОГДА РасчетыСПартнерами.Сумма = 0 
		|			ТОГДА ВЫБОР КОГДА РасчетыСПартнерами.СуммаРегл = 0 ТОГДА 1 ИНАЧЕ РасчетыСПартнерами.СуммаРегл КОНЕЦ
		|			ИНАЧЕ РасчетыСПартнерами.Сумма 
		|		КОНЕЦ КАК КурсВалютыВзаиморасчетов,
		|	РасчетыСПартнерами.Сумма КАК СуммаВВалютеВзаиморасчетов,
		|	РасчетыСПартнерами.ОбъектРасчетов КАК ИсточникГФУРасчетов,
		|	""ПриходЗадолженностиЗаЧужойОбъектРасчетов"" КАК ИмяТаблицы,
		|	РасчетыСПартнерами.Организация = РасчетыСПартнерами.ГоловнаяОрганизация КАК ЭтоГоловнаяОрганизация,
		|	ЛОЖЬ КАК ЭтоВозвратАванса,
		|	РасчетыСПартнерами.Сторно КАК Сторно
		|ИЗ
		|	РасчетыСПартнерами КАК РасчетыСПартнерами
		|ГДЕ
		|	РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ТИПЗНАЧЕНИЯ(РасчетыСПартнерами.Регистратор) В (
		|		ТИП(Документ.РасходныйКассовыйОрдер),
		|		ТИП(Документ.СписаниеБезналичныхДенежныхСредств))
		|	И РасчетыСПартнерами.Организация <> РасчетыСПартнерами.ОрганизацияОбъектаРасчетов";
		#КонецОбласти

//Возврат по курсу аванса: ПоступлениеБДС, ПКО
		#Область ПриходПереносАванса
		ПриходПереносАванса = 
		"// Возврат по курсу аванса - Перенос аванса
		|ВЫБРАТЬ
		|	РасчетыСПартнерами.Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
		|	РасчетыСПартнерами.Регистратор КАК Регистратор,
		|	РасчетыСПартнерами.Организация.ГоловнаяОрганизация,
		|	РасчетыСПартнерами.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	ВозвратОплаты.Организация КАК ВладелецОбъектаРасчета,
		|	РасчетыСПартнерами.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	РасчетыСПартнерами.Партнер,
		|	РасчетыСПартнерами.Контрагент КАК Контрагент,
		|	РасчетыСПартнерами.Договор КАК Договор,
		|	РасчетыСПартнерами.ОбъектРасчетов КАК ОбъектРасчетов,
		|	РасчетыСПартнерами.Валюта,
		|	РасчетыСПартнерами.Сумма КАК СуммаВВалюте,
		|	РасчетыСПартнерами.СуммаУпр КАК Сумма,
		|	РасчетыСПартнерами.СуммаРегл КАК СуммаРегл,
		|	РасчетыСПартнерами.ТипСуммы КАК ТипСуммы,
		|	РасчетыСПартнерами.ХозяйственнаяОперация КАК ХозОперацияРегистра,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности) КАК ХозяйственнаяОперация,
		|	РасчетыСПартнерами.ОбъектРасчетов.Подразделение КАК Подразделение,
		|	РасчетыСПартнерами.Валюта КАК ВалютаВзаиморасчетов,
		|	РасчетыСПартнерами.СуммаРегл / 
		|		ВЫБОР КОГДА РасчетыСПартнерами.Сумма = 0 
		|			ТОГДА ВЫБОР КОГДА РасчетыСПартнерами.СуммаРегл = 0 ТОГДА 1 ИНАЧЕ РасчетыСПартнерами.СуммаРегл КОНЕЦ
		|			ИНАЧЕ РасчетыСПартнерами.Сумма 
		|		КОНЕЦ КАК КурсВалютыВзаиморасчетов,
		|	РасчетыСПартнерами.Сумма КАК СуммаВВалютеВзаиморасчетов,
		|	РасчетыСПартнерами.ОбъектРасчетов КАК ИсточникГФУРасчетов,
		|	""ПриходПереносАванса"" КАК ИмяТаблицы,
		|	РасчетыСПартнерами.Организация = РасчетыСПартнерами.ГоловнаяОрганизация КАК ЭтоГоловнаяОрганизация,
		|	ИСТИНА КАК ЭтоВозвратАванса,
		|	РасчетыСПартнерами.Сторно КАК Сторно
		|ИЗ
		|	РасчетыСПартнерами КАК РасчетыСПартнерами
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втВозвратОплаты КАК ВозвратОплаты
		|		ПО РасчетыСПартнерами.Регистратор = ВозвратОплаты.Ссылка
		|		И РасчетыСПартнерами.Организация = ВозвратОплаты.Организация
		|ГДЕ
		|	РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И НЕ РасчетыСПартнерами.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту))";
		#КонецОбласти

//Возврат по курсу аванса: ПоступлениеБДС, ПКО, СписаниеБДС, РКО
		#Область ПриходПереносНаАвансПриВозвратеФилиала
		ПриходПереносНаАвансПриВозвратеФилиала = 
		"// Возврат по курсу аванса - Перенос аванса
		|ВЫБРАТЬ
		|	РасчетыСПартнерами.Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
		|	РасчетыСПартнерами.Регистратор КАК Регистратор,
		|	ВозвратОплаты.Организация,
		|	РасчетыСПартнерами.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	РасчетыСПартнерами.ОбъектРасчетов.Организация КАК ВладелецОбъектаРасчета,
		|	РасчетыСПартнерами.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	РасчетыСПартнерами.Партнер,
		|	РасчетыСПартнерами.Контрагент КАК Контрагент,
		|	РасчетыСПартнерами.Договор КАК Договор,
		|	РасчетыСПартнерами.ОбъектРасчетов КАК ОбъектРасчетов,
		|	РасчетыСПартнерами.Валюта,
		|	РасчетыСПартнерами.Сумма КАК СуммаВВалюте,
		|	РасчетыСПартнерами.СуммаУпр КАК Сумма,
		|	РасчетыСПартнерами.СуммаРегл КАК СуммаРегл,
		|	РасчетыСПартнерами.ТипСуммы КАК ТипСуммы,
		|	РасчетыСПартнерами.ХозяйственнаяОперация КАК ХозОперацияРегистра,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности) КАК ХозяйственнаяОперация,
		|	РасчетыСПартнерами.ОбъектРасчетов.Подразделение КАК Подразделение,
		|	РасчетыСПартнерами.Валюта КАК ВалютаВзаиморасчетов,
		|	РасчетыСПартнерами.СуммаРегл / 
		|		ВЫБОР КОГДА РасчетыСПартнерами.Сумма = 0 
		|			ТОГДА ВЫБОР КОГДА РасчетыСПартнерами.СуммаРегл = 0 ТОГДА 1 ИНАЧЕ РасчетыСПартнерами.СуммаРегл КОНЕЦ
		|			ИНАЧЕ РасчетыСПартнерами.Сумма 
		|		КОНЕЦ КАК КурсВалютыВзаиморасчетов,
		|	РасчетыСПартнерами.Сумма КАК СуммаВВалютеВзаиморасчетов,
		|	РасчетыСПартнерами.ОбъектРасчетов КАК ИсточникГФУРасчетов,
		|	""ПриходПереносНаАвансПриВозвратеФилиала"" КАК ИмяТаблицы,
		|	РасчетыСПартнерами.Организация = РасчетыСПартнерами.ГоловнаяОрганизация КАК ЭтоГоловнаяОрганизация,
		|	ИСТИНА КАК ЭтоВозвратАванса,
		|	РасчетыСПартнерами.Сторно КАК Сторно
		|ИЗ
		|	РасчетыСПартнерами КАК РасчетыСПартнерами
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втВозвратОплаты КАК ВозвратОплаты
		|		ПО РасчетыСПартнерами.Регистратор = ВозвратОплаты.Ссылка
		|ГДЕ
		|	РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И НЕ РасчетыСПартнерами.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту))
		|	И РасчетыСПартнерами.Организация <> ВозвратОплаты.Организация";
		#КонецОбласти

//Дисконтирование
		#Область ПриходЗадолженностиПриДисконтировании
		ПриходЗадолженностиПриДисконтировании = 
		"//При дисконтировании задолженности (таблица прихода точно такая же как таблица расхода) 
		|ВЫБРАТЬ
		|	РасчетыСПартнерами.Период,
		|	РасчетыСПартнерами.ВидДвижения КАК ВидДвижения,
		|	РасчетыСПартнерами.Регистратор КАК Регистратор,
		|	РасчетыСПартнерами.Организация КАК Организация,
		|	РасчетыСПартнерами.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	РасчетыСПартнерами.Организация КАК ВладелецОбъектаРасчета,
		|	РасчетыСПартнерами.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	РасчетыСПартнерами.Партнер КАК Партнер,
		|	РасчетыСПартнерами.Контрагент КАК Контрагент,
		|	РасчетыСПартнерами.Договор КАК Договор,
		|	РасчетыСПартнерами.ОбъектРасчетов КАК ОбъектРасчетов,
		|	РасчетыСПартнерами.Валюта,
		|	Проценты.Сумма КАК СуммаВВалюте,
		|	Проценты.СуммаУпр КАК Сумма,
		|	Проценты.СуммаРегл КАК СуммаРегл,
		|	Проценты.ТипСуммы КАК ТипСуммы,
		|	РасчетыСПартнерами.ХозяйственнаяОперация КАК ХозОперацияРегистра,
		|	Проценты.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	РасчетыСПартнерами.ОбъектРасчетов.Подразделение КАК Подразделение,
		|	РасчетыСПартнерами.Валюта КАК ВалютаВзаиморасчетов,
		|	Проценты.СуммаРегл / 
		|		ВЫБОР КОГДА Проценты.Сумма = 0 
		|			ТОГДА ВЫБОР КОГДА Проценты.СуммаРегл = 0 
		|							ТОГДА 1 
		|							ИНАЧЕ Проценты.СуммаРегл
		|					КОНЕЦ
		|			ИНАЧЕ Проценты.Сумма
		|		КОНЕЦ КАК КурсВалютыВзаиморасчетов,
		|	Проценты.Сумма КАК СуммаВВалютеВзаиморасчетов,
		|	РасчетыСПартнерами.ОбъектРасчетов КАК ИсточникГФУРасчетов,
		|	""ПриходЗадолженностиПриДисконтировании"" КАК ИмяТаблицы,
		|	РасчетыСПартнерами.Организация = РасчетыСПартнерами.Организация.ГоловнаяОрганизация КАК ЭтоГоловнаяОрганизация,
		|	ЛОЖЬ КАК ЭтоВозвратАванса,
		|	РасчетыСПартнерами.Сторно КАК Сторно
		|ИЗ
		|	РасчетыСПартнерами КАК РасчетыСПартнерами
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПроцентыДисконтирования КАК Проценты
		|	ПО РасчетыСПартнерами.Регистратор = Проценты.Регистратор
		|		И РасчетыСПартнерами.АналитикаУчетаПоПартнерам = Проценты.АналитикаУчетаПоПартнерам
		|		И РасчетыСПартнерами.ОбъектРасчетов = Проценты.ОбъектРасчетов
		|		И РасчетыСПартнерами.Валюта = Проценты.Валюта
		|
		|УПОРЯДОЧИТЬ ПО
		|	РасчетыСПартнерами.Регистратор,
		|	РасчетыСПартнерами.Организация,
		|	РасчетыСПартнерами.Валюта,
		|	РасчетыСПартнерами.Сумма УБЫВ
		|;";
		#КонецОбласти
		ПриходЗадолженности = Новый Массив;
		ПриходЗадолженности.Добавить(ПриходЗадолженностиПриВзаимозачете);
		ПриходЗадолженности.Добавить(ПриходВОрганизациюЗаЧужойОбъектРасчетов);
		ПриходЗадолженности.Добавить(ПриходЗадолженностиЗаЧужойОбъектРасчетов);
		ПриходЗадолженности.Добавить(ПриходПереносАванса);
		ПриходЗадолженности.Добавить(ПриходПереносНаАвансПриВозвратеФилиала);
		ПриходЗадолженности.Добавить(ПриходЗадолженностиПриДисконтировании);
		
		//Погашаемая задолженность
		ТекстЗапросаКредиторскаяЗадолженность = СтрСоединить(ПриходЗадолженности, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());

#КонецОбласти

	ТекстыЗапросов = Новый Массив;
	ТекстыЗапросов.Добавить(ТекстЗапросаРегистраторов);
	ТекстыЗапросов.Добавить(ТекстЗапросаВозвратОплаты);
	ТекстыЗапросов.Добавить(ТекстЗапросаРасчетыСПартнерамиДвижения);
	ТекстыЗапросов.Добавить(ТекстЗапросаРасчетыСПартнерами);
	ТекстыЗапросов.Добавить(ТекстЗапросаПроцентыДисконтирования);
	ТекстыЗапросов.Добавить(ТекстЗапросаГоловнаяОрганизация);
	ТекстыЗапросов.Добавить(ТекстЗапросаДебиторскаяЗадолженность);
	ТекстыЗапросов.Добавить(ТекстЗапросаКредиторскаяЗадолженность);
	ТекстЗапроса = СтрСоединить(ТекстыЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДвиженияПоСрокам(ИмяТаблицы, ИмяВременнойТаблицы = "", Сторно = Ложь)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РасчетыСПоставщиками.Период КАК Период,
	|	РасчетыСПоставщиками.ВидДвижения КАК ВидДвиженияРегистра,
	|	ВЫБОР
	|		КОГДА &НеВозвратОплаты И РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И &Ресурс <> 0
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		КОГДА &НеВозвратОплаты И РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И &Ресурс <> 0
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ
	|			РасчетыСПоставщиками.ВидДвижения
	|	КОНЕЦ КАК ВидДвижения,
	|	&Регистратор КАК Регистратор,
	|	КлючиАналитики.Организация,
	|	КлючиАналитики.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	КлючиАналитики.Партнер,
	|	КлючиАналитики.Контрагент КАК Контрагент,
	|	КлючиАналитики.Договор КАК Договор,
	|	РасчетыСПоставщиками.ОбъектРасчетов КАК ОбъектРасчетов,
	|	РасчетыСПоставщиками.Валюта,
	|	1*ВЫБОР КОГДА РасчетыСПоставщиками.Долг <> 0
	|		ТОГДА РасчетыСПоставщиками.Долг
	|		ИНАЧЕ РасчетыСПоставщиками.Предоплата
	|	КОНЕЦ КАК Сумма,
	|	1*ВЫБОР КОГДА РасчетыСПоставщиками.ДолгУпр <> 0
	|		ТОГДА РасчетыСПоставщиками.ДолгУпр
	|		ИНАЧЕ РасчетыСПоставщиками.ПредоплатаУпр
	|	КОНЕЦ КАК СуммаУпр,
	|	1*ВЫБОР КОГДА РасчетыСПоставщиками.ДолгРегл <> 0
	|		ТОГДА РасчетыСПоставщиками.ДолгРегл
	|		ИНАЧЕ РасчетыСПоставщиками.ПредоплатаРегл
	|	КОНЕЦ КАК СуммаРегл,
	|
	|	ВЫБОР КОГДА РасчетыСПоставщиками.ДолгРегл <> 0
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыСуммЗадолженности.ДолгПоставщику)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыСуммЗадолженности.АвансВыданный)
	|	КОНЕЦ КАК ТипСуммы,
	|
	|	КлючиАналитики.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК НашеПредприятие,
	|	ТИПЗНАЧЕНИЯ(КлючиАналитики.Контрагент) = ТИП(Справочник.Организации) КАК КонтрагентОрганизация,
	|
	|	РасчетыСПоставщиками.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Сторно КАК Сторно,
	|	РасчетыСПоставщиками.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
	|	
	|,&ИмяТаблицы
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК РасчетыСПоставщиками
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втРегистраторы КАК Т
	|			ПО РасчетыСПоставщиками.ДокументРегистратор = Т.Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК КлючиАналитики
	|			ПО РасчетыСПоставщиками.АналитикаУчетаПоПартнерам = КлючиАналитики.КлючАналитики
	|		ЛЕВОЕ СОЕДИНЕНИЕ втВозвратОплаты КАК Возврат
	|			ПО РасчетыСПоставщиками.ДокументРегистратор = Возврат.Ссылка
	|ГДЕ
	|	НЕ РасчетыСПоставщиками.ХозяйственнаяОперация В 
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеНедостачЗаСчетПоставщикаПриПоступленииТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеНедостачЗаСчетСтороннейКомпанииПриПоступленииТоваров))";
	
	Возврат ВыполнитьЗамены(ТекстЗапроса, ИмяТаблицы, ИмяВременнойТаблицы, Сторно);
	
КонецФункции

Функция ТекстЗапросаДвиженияПоДокументам(ИмяТаблицы, ИмяВременнойТаблицы = "", Сторно = Ложь)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РасчетыСПоставщиками.Период,
	|	РасчетыСПоставщиками.ВидДвижения КАК ВидДвиженияРегистра,
	|	ВЫБОР
	|		КОГДА (РасчетыСПоставщиками.Долг < 0 ИЛИ РасчетыСПоставщиками.Предоплата + РасчетыСПоставщиками.КВозврату < 0)
	|			И РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		КОГДА (РасчетыСПоставщиками.Долг < 0 ИЛИ РасчетыСПоставщиками.Предоплата + РасчетыСПоставщиками.КВозврату < 0)
	|			И РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ
	|			РасчетыСПоставщиками.ВидДвижения
	|	КОНЕЦ КАК ВидДвижения,
	|	РасчетыСПоставщиками.Регистратор КАК Регистратор,
	|	КлючиАналитики.Организация,
	|	КлючиАналитики.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	КлючиАналитики.Партнер,
	|	КлючиАналитики.Контрагент КАК Контрагент,
	|	КлючиАналитики.Договор КАК Договор,
	|	РасчетыСПоставщиками.ЗаказПоставщику КАК ОбъектРасчетов,
	|	РасчетыСПоставщиками.Валюта,
	|	1*ВЫБОР КОГДА РасчетыСПоставщиками.Долг <> 0
	|		ТОГДА ВЫБОР КОГДА РасчетыСПоставщиками.Долг < 0 ТОГДА -РасчетыСПоставщиками.Долг ИНАЧЕ РасчетыСПоставщиками.Долг КОНЕЦ
	|		ИНАЧЕ ВЫБОР КОГДА РасчетыСПоставщиками.Предоплата + РасчетыСПоставщиками.КВозврату < 0 ТОГДА -(РасчетыСПоставщиками.Предоплата + РасчетыСПоставщиками.КВозврату) ИНАЧЕ РасчетыСПоставщиками.Предоплата + РасчетыСПоставщиками.КВозврату КОНЕЦ
	|	КОНЕЦ КАК Сумма,
	|	1*ВЫБОР КОГДА РасчетыСПоставщиками.ДолгУпр <> 0
	|		ТОГДА ВЫБОР КОГДА РасчетыСПоставщиками.ДолгУпр < 0 ТОГДА -РасчетыСПоставщиками.ДолгУпр ИНАЧЕ РасчетыСПоставщиками.ДолгУпр КОНЕЦ
	|		ИНАЧЕ ВЫБОР КОГДА РасчетыСПоставщиками.ПредоплатаУпр < 0 ТОГДА -РасчетыСПоставщиками.ПредоплатаУпр ИНАЧЕ РасчетыСПоставщиками.ПредоплатаУпр КОНЕЦ
	|	КОНЕЦ КАК СуммаУпр,
	|	1*ВЫБОР КОГДА РасчетыСПоставщиками.ДолгРегл <> 0
	|		ТОГДА ВЫБОР КОГДА РасчетыСПоставщиками.ДолгРегл < 0 ТОГДА -РасчетыСПоставщиками.ДолгРегл ИНАЧЕ РасчетыСПоставщиками.ДолгРегл КОНЕЦ
	|		ИНАЧЕ ВЫБОР КОГДА РасчетыСПоставщиками.ПредоплатаРегл < 0 ТОГДА -РасчетыСПоставщиками.ПредоплатаРегл ИНАЧЕ РасчетыСПоставщиками.ПредоплатаРегл КОНЕЦ
	|	КОНЕЦ КАК СуммаРегл,
	|
	|	ВЫБОР КОГДА РасчетыСПоставщиками.ДолгРегл <> 0
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыСуммЗадолженности.ДолгПоставщику)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыСуммЗадолженности.АвансВыданный)
	|	КОНЕЦ КАК ТипСуммы,
	|
	|	КлючиАналитики.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК НашеПредприятие,
	|	РасчетыСПоставщиками.ДолгРегл < 0 ИЛИ РасчетыСПоставщиками.ПредоплатаРегл < 0 КАК Сторно,
	|	ТИПЗНАЧЕНИЯ(КлючиАналитики.Контрагент) = ТИП(Справочник.Организации) КАК КонтрагентОрганизация,
	|
	|	РасчетыСПоставщиками.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	РасчетыСПоставщиками.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
	|	
	|,&ИмяТаблицы
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК РасчетыСПоставщиками
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втРегистраторы КАК Т
	|			ПО РасчетыСПоставщиками.Регистратор = Т.Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК КлючиАналитики
	|			ПО РасчетыСПоставщиками.АналитикаУчетаПоПартнерам = КлючиАналитики.КлючАналитики
	|ГДЕ
	|	НЕ РасчетыСПоставщиками.ХозяйственнаяОперация В 
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеНедостачЗаСчетПоставщикаПриПоступленииТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеНедостачЗаСчетСтороннейКомпанииПриПоступленииТоваров))";
	
	ТекстЗапроса = ВыполнитьЗамены(ТекстЗапроса, ИмяТаблицы, ИмяВременнойТаблицы, Сторно);
	Если ИмяТаблицы <> "РасчетыСПоставщиками" Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ЗаказПоставщику", "ЗаказКлиента");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВидДвиженияНакопления.Приход", "ВидДвиженияНакопления._Расход");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВидДвиженияНакопления.Расход", "ВидДвиженияНакопления.Приход");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВидДвиженияНакопления._Расход", "ВидДвиженияНакопления.Расход");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ВыполнитьЗамены(ТекстЗапроса, ИмяТаблицы, ИмяВременнойТаблицы, Сторно)
	
	Если Сторно Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "1*", "-");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "втРегистраторы", "СторнируемыеДокументы");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Т.Документ", "Т.СторнируемыйДокумент");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Сторно", "ИСТИНА");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Регистратор", "Т.Документ");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Регистратор", "РасчетыСПоставщиками.ДокументРегистратор");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "1*", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Сторно", "РасчетыСПоставщиками.Сторно");
	КонецЕсли;
	
	ИмяРесурса = "РасчетыСПоставщиками.ДолгРегл";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НеВозвратОплаты", "Возврат.Ссылка ЕСТЬ NULL");
	Если ИмяТаблицы <> "РасчетыСПоставщиками" Тогда
		МетаданныеПеречисления = Метаданные.Перечисления.ТипыСуммЗадолженности.ЗначенияПеречисления;
		ИмяРесурса = ИмяТаблицы + "." + "ПредоплатаРегл";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РасчетыСПоставщиками", ИмяТаблицы);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "АвансВыданный", МетаданныеПеречисления.АвансПолученный.Имя);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДолгПоставщику", МетаданныеПеречисления.ДолгКлиента.Имя);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДолгПоставщику", МетаданныеПеречисления.ДолгКлиента.Имя);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НеВозвратОплаты", "ИСТИНА");
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Ресурс", ИмяРесурса);
	
	Если ИмяВременнойТаблицы = "" Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, Символы.ПС + ",&ИмяТаблицы", "");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ",&ИмяТаблицы", "ПОМЕСТИТЬ " + ИмяВременнойТаблицы);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДвиженияКонтрагентКонтрагент()
	
	Возврат
	"ВЫБРАТЬ
	|	НовыеДвижения.Период,
	|	НовыеДвижения.НомерСтроки,
	|	НовыеДвижения.Регистратор КАК Регистратор,
	|
	|	НовыеДвижения.ХозяйственнаяОперация,
	|	НовыеДвижения.Организация,
	|	НовыеДвижения.Подразделение,
	|
	|	НовыеДвижения.НаправлениеДеятельности,
	|	НовыеДвижения.Партнер,
	|	НовыеДвижения.Контрагент КАК Контрагент,
	|	НовыеДвижения.ОбъектРасчетов КАК ОбъектРасчетов,
	|	НовыеДвижения.Договор,
	|
	|	НовыеДвижения.КорНаправлениеДеятельности,
	|	НовыеДвижения.КорПартнер,
	|	НовыеДвижения.КорКонтрагент КАК КорКонтрагент,
	|	НовыеДвижения.КорОбъектРасчетов КАК КорОбъектРасчетов,
	|	НовыеДвижения.КорДоговор,
	|
	|	НовыеДвижения.ТипСуммы,
	|	НовыеДвижения.КорТипСуммы,
	|
	|	НовыеДвижения.Сумма КАК Сумма,
	|	НовыеДвижения.СуммаБезНДС КАК СуммаБезНДС,
	|	НовыеДвижения.СуммаРегл КАК СуммаРегл,
	|	НовыеДвижения.СуммаРеглБезНДС КАК СуммаРеглБезНДС,
	|
	|	НовыеДвижения.Валюта,
	|	НовыеДвижения.СуммаВВалюте КАК СуммаВВалюте,
	|	НовыеДвижения.СуммаБезНДСВВалюте КАК СуммаБезНДСВВалюте,
	|
	|	НовыеДвижения.ВалютаВзаиморасчетов,
	|	НовыеДвижения.СуммаВВалютеВзаиморасчетов КАК СуммаВВалютеВзаиморасчетов,
	|	НовыеДвижения.СуммаБезНДСВВалютеВзаиморасчетов КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	НовыеДвижения.КорВалютаВзаиморасчетов,
	|	НовыеДвижения.КорСуммаВВалютеВзаиморасчетов КАК КорСуммаВВалютеВзаиморасчетов,
	|	НовыеДвижения.КорСуммаБезНДСВВалютеВзаиморасчетов КАК КорСуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	НовыеДвижения.ИсточникГФУРасчетов,
	|	НовыеДвижения.КорИсточникГФУРасчетов,
	|	НовыеДвижения.Сторно
	|
	|ПОМЕСТИТЬ втНовыеДвижения
	|ИЗ
	|	&ТаблицаДвижений КАК НовыеДвижения
	|ГДЕ
	|	НовыеДвижения.Регистратор <> НЕОПРЕДЕЛЕНО
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НовыеДвижения.Организация,
	|	НовыеДвижения.Партнер,
	|	Контрагент,
	|	ОбъектРасчетов,
	|	НовыеДвижения.КорПартнер,
	|	КорКонтрагент,
	|	КорОбъектРасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписиРегистра.Регистратор,
	|
	|	ЗаписиРегистра.Организация,
	|	ЗаписиРегистра.Подразделение
	|
	|ПОМЕСТИТЬ втПодразделения
	|ИЗ
	|	РегистрНакопления.ДвиженияКонтрагентКонтрагент КАК ЗаписиРегистра
	|ГДЕ
	|	ЗаписиРегистра.Регистратор В (&МассивДокументов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НовыеДвижения.Период,
	|	НовыеДвижения.НомерСтроки КАК НомерСтроки,
	|	НовыеДвижения.Регистратор КАК Регистратор,
	|	НовыеДвижения.ХозяйственнаяОперация,
	|
	|	НовыеДвижения.Организация,
	|	ЗаписиРегистра.Подразделение,
	|
	|	НовыеДвижения.НаправлениеДеятельности,
	|	НовыеДвижения.Партнер,
	|	НовыеДвижения.Контрагент КАК Контрагент,
	|	НовыеДвижения.ОбъектРасчетов КАК ОбъектРасчетов,
	|	НовыеДвижения.Договор,
	|
	|	НовыеДвижения.КорНаправлениеДеятельности,
	|	НовыеДвижения.КорПартнер,
	|	НовыеДвижения.КорКонтрагент КАК КорКонтрагент,
	|	НовыеДвижения.КорОбъектРасчетов КАК КорОбъектРасчетов,
	|	НовыеДвижения.КорДоговор,
	|
	|	НовыеДвижения.ТипСуммы,
	|	НовыеДвижения.КорТипСуммы,
	|
	|	НовыеДвижения.Сумма КАК Сумма,
	|	НовыеДвижения.СуммаБезНДС КАК СуммаБезНДС,
	|	НовыеДвижения.СуммаРегл КАК СуммаРегл,
	|	НовыеДвижения.СуммаРеглБезНДС КАК СуммаРеглБезНДС,
	|
	|	НовыеДвижения.Валюта,
	|	НовыеДвижения.СуммаВВалюте КАК СуммаВВалюте,
	|	НовыеДвижения.СуммаБезНДСВВалюте КАК СуммаБезНДСВВалюте,
	|
	|	НовыеДвижения.ВалютаВзаиморасчетов,
	|	НовыеДвижения.СуммаВВалютеВзаиморасчетов КАК СуммаВВалютеВзаиморасчетов,
	|	НовыеДвижения.СуммаБезНДСВВалютеВзаиморасчетов КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	НовыеДвижения.КорВалютаВзаиморасчетов,
	|	НовыеДвижения.КорСуммаВВалютеВзаиморасчетов КАК КорСуммаВВалютеВзаиморасчетов,
	|	НовыеДвижения.КорСуммаБезНДСВВалютеВзаиморасчетов КАК КорСуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	НовыеДвижения.ИсточникГФУРасчетов,
	|	НовыеДвижения.КорИсточникГФУРасчетов,
	|	НовыеДвижения.Сторно
	|ИЗ
	|	втНовыеДвижения КАК НовыеДвижения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПодразделения КАК ЗаписиРегистра
	|		ПО НовыеДвижения.Регистратор = ЗаписиРегистра.Регистратор
	|			И НовыеДвижения.Организация = ЗаписиРегистра.Организация
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(НовыеДвижения.Регистратор) = ТИП(Документ.ВзаимозачетЗадолженности)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НовыеДвижения.Период,
	|	НовыеДвижения.НомерСтроки КАК НомерСтроки,
	|	НовыеДвижения.Регистратор КАК Регистратор,
	|	НовыеДвижения.ХозяйственнаяОперация,
	|
	|	НовыеДвижения.Организация,
	|	НовыеДвижения.Подразделение,
	|
	|	НовыеДвижения.НаправлениеДеятельности,
	|	НовыеДвижения.Партнер,
	|	НовыеДвижения.Контрагент КАК Контрагент,
	|	НовыеДвижения.ОбъектРасчетов КАК ОбъектРасчетов,
	|	НовыеДвижения.Договор,
	|
	|	НовыеДвижения.КорНаправлениеДеятельности,
	|	НовыеДвижения.КорПартнер,
	|	НовыеДвижения.КорКонтрагент КАК КорКонтрагент,
	|	НовыеДвижения.КорОбъектРасчетов КАК КорОбъектРасчетов,
	|	НовыеДвижения.КорДоговор,
	|
	|	НовыеДвижения.ТипСуммы,
	|	НовыеДвижения.КорТипСуммы,
	|
	|	НовыеДвижения.Сумма КАК Сумма,
	|	НовыеДвижения.СуммаБезНДС КАК СуммаБезНДС,
	|	НовыеДвижения.СуммаРегл КАК СуммаРегл,
	|	НовыеДвижения.СуммаРеглБезНДС КАК СуммаРеглБезНДС,
	|
	|	НовыеДвижения.Валюта,
	|	НовыеДвижения.СуммаВВалюте КАК СуммаВВалюте,
	|	НовыеДвижения.СуммаБезНДСВВалюте КАК СуммаБезНДСВВалюте,
	|
	|	НовыеДвижения.ВалютаВзаиморасчетов,
	|	НовыеДвижения.СуммаВВалютеВзаиморасчетов КАК СуммаВВалютеВзаиморасчетов,
	|	НовыеДвижения.СуммаБезНДСВВалютеВзаиморасчетов КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	НовыеДвижения.КорВалютаВзаиморасчетов,
	|	НовыеДвижения.КорСуммаВВалютеВзаиморасчетов КАК КорСуммаВВалютеВзаиморасчетов,
	|	НовыеДвижения.КорСуммаБезНДСВВалютеВзаиморасчетов КАК КорСуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	НовыеДвижения.ИсточникГФУРасчетов,
	|	НовыеДвижения.КорИсточникГФУРасчетов,
	|	НовыеДвижения.Сторно
	|ИЗ
	|	втНовыеДвижения КАК НовыеДвижения
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(НовыеДвижения.Регистратор) <> ТИП(Документ.ВзаимозачетЗадолженности)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаписиРегистра.Период,
	|	ЗаписиРегистра.НомерСтроки,
	|	ЗаписиРегистра.Регистратор,
	|	ЗаписиРегистра.ХозяйственнаяОперация,
	|
	|	ЗаписиРегистра.Организация,
	|	ЗаписиРегистра.Подразделение,
	|
	|	ЗаписиРегистра.НаправлениеДеятельности,
	|	ЗаписиРегистра.Партнер,
	|	ЗаписиРегистра.Контрагент,
	|	ЗаписиРегистра.ОбъектРасчетов,
	|	ЗаписиРегистра.Договор,
	|
	|	ЗаписиРегистра.КорНаправлениеДеятельности,
	|	ЗаписиРегистра.КорПартнер,
	|	ЗаписиРегистра.КорКонтрагент,
	|	ЗаписиРегистра.КорОбъектРасчетов,
	|	ЗаписиРегистра.КорДоговор,
	|
	|	ЗаписиРегистра.ТипСуммы,
	|	ЗаписиРегистра.КорТипСуммы,
	|
	|	ЗаписиРегистра.Сумма,
	|	ЗаписиРегистра.СуммаБезНДС,
	|	ЗаписиРегистра.СуммаРегл,
	|	ЗаписиРегистра.СуммаРеглБезНДС,
	|
	|	ЗаписиРегистра.Валюта,
	|	ЗаписиРегистра.СуммаВВалюте,
	|	ЗаписиРегистра.СуммаБезНДСВВалюте,
	|
	|	ЗаписиРегистра.ВалютаВзаиморасчетов,
	|	ЗаписиРегистра.СуммаВВалютеВзаиморасчетов,
	|	ЗаписиРегистра.СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ЗаписиРегистра.КорВалютаВзаиморасчетов,
	|	ЗаписиРегистра.КорСуммаВВалютеВзаиморасчетов,
	|	ЗаписиРегистра.КорСуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ЗаписиРегистра.ИсточникГФУРасчетов,
	|	ЗаписиРегистра.КорИсточникГФУРасчетов,
	|	ЗаписиРегистра.Сторно
	|ИЗ
	|	РегистрНакопления.ДвиженияКонтрагентКонтрагент КАК ЗаписиРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ втНовыеДвижения КАК НовыеДвижения
	|		ПО ЗаписиРегистра.Регистратор = НовыеДвижения.Регистратор
	|			И ЗаписиРегистра.Организация = НовыеДвижения.Организация
	|ГДЕ
	|	НовыеДвижения.Регистратор ЕСТЬ NULL
	|	И ЗаписиРегистра.Регистратор В (&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Регистратор,
	|	НомерСтроки
	|
	|ИТОГИ ПО
	|	Регистратор";
	
КонецФункции

Функция ТекстЗапросаПередЗаписью(ИмяРегистра)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Таблица.Период,
	|	Таблица.Регистратор,
	|	&ТекстИзмерения,
	|	&ТекстРеквизиты,
	|	&ТекстРесурсы
	|ПОМЕСТИТЬ ИсходнаяТаблица
	|ИЗ 
	|	&ИмяРегистра КАК Таблица
	|ГДЕ
	|	Таблица.Регистратор = &Регистратор
	|";
	
	Измерения = Метаданные.РегистрыНакопления[ИмяРегистра].Измерения;
	КоличествоИзмерений = Измерения.Количество();
	ТекстИзмерения = "";
	Для каждого Измерение Из Измерения Цикл
		ТекстИзмерения = ТекстИзмерения + Символы.ПС + Символы.Таб + "Таблица." + Измерение.Имя;
		ТекстИзмерения = ТекстИзмерения + ?(Измерения.Индекс(Измерение) = КоличествоИзмерений - 1, "", ",");
	КонецЦикла;
	Реквизиты = Метаданные.РегистрыНакопления[ИмяРегистра].Реквизиты;
	КоличествоРеквизитов = Реквизиты.Количество();
	ТекстРеквизиты = "";
	Для каждого Реквизит Из Реквизиты Цикл
		ТекстРеквизиты = ТекстРеквизиты + Символы.ПС + Символы.Таб + "Таблица." + Реквизит.Имя;
		ТекстРеквизиты = ТекстРеквизиты + ?(Реквизиты.Индекс(Реквизит) = КоличествоРеквизитов - 1, "", ",");
	КонецЦикла;
	Ресурсы = Метаданные.РегистрыНакопления[ИмяРегистра].Ресурсы;
	КоличествоРесурсов = Ресурсы.Количество();
	ТекстРесурсы = "";
	Для каждого Ресурс Из Ресурсы Цикл
		ТекстРесурсы = ТекстРесурсы + Символы.ПС + Символы.Таб + "Таблица." + Ресурс.Имя;
		ТекстРесурсы = ТекстРесурсы + ?(Ресурсы.Индекс(Ресурс) = КоличествоРесурсов - 1, "", ",");
	КонецЦикла;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстИзмерения", ТекстИзмерения);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстРеквизиты", ТекстРеквизиты);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстРесурсы", ТекстРесурсы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяРегистра", "РегистрНакопления." + ИмяРегистра);

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПриЗаписи(ИмяРегистра)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Таблица.Период,
	|	Таблица.Регистратор,
	|	&ТекстИзмерения,
	|	&ТекстРеквизиты,
	|	&ТекстРесурсы
	|ИЗ 
	|	(
	|	ВЫБРАТЬ
	|		Таблица.Период,
	|		Таблица.Регистратор,
	|		&ТекстИзмерения,
	|		&ТекстРеквизиты,
	|		&ТекстРесурсыИсходнойТаблицы
	|	ИЗ
	|		ИсходнаяТаблица КАК Таблица
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Таблица.Период,
	|		Таблица.Регистратор,
	|		&ТекстИзмерения,
	|		&ТекстРеквизиты,
	|		&ТекстРесурсыНовойТаблицы
	|	ИЗ
	|		&ИмяРегистра КАК Таблица
	|	ГДЕ
	|		Таблица.Регистратор = &Регистратор
	|	) КАК Таблица
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Период,
	|	Таблица.Регистратор,
	|	&ТекстИзмерения,
	|	&ТекстРеквизиты
	|ИМЕЮЩИЕ
	|	&ТекстИмеющие
	|";
	
	Измерения = Метаданные.РегистрыНакопления[ИмяРегистра].Измерения;
	КоличествоИзмерений = Измерения.Количество();
	ТекстИзмерения = "";
	Для каждого Измерение Из Измерения Цикл
		ТекстИзмерения = ТекстИзмерения + Символы.ПС + Символы.Таб + Символы.Таб + "Таблица." + Измерение.Имя;
		ТекстИзмерения = ТекстИзмерения + ?(Измерения.Индекс(Измерение) = КоличествоИзмерений - 1, "", ",");
	КонецЦикла;
	Реквизиты = Метаданные.РегистрыНакопления[ИмяРегистра].Реквизиты;
	КоличествоРеквизитов = Реквизиты.Количество();
	ТекстРеквизиты = "";
	Для каждого Реквизит Из Реквизиты Цикл
		ТекстРеквизиты = ТекстРеквизиты + Символы.ПС + Символы.Таб + Символы.Таб + "Таблица." + Реквизит.Имя;
		ТекстРеквизиты = ТекстРеквизиты + ?(Реквизиты.Индекс(Реквизит) = КоличествоРеквизитов - 1, "", ",");
	КонецЦикла;
	Ресурсы = Метаданные.РегистрыНакопления[ИмяРегистра].Ресурсы;
	КоличествоРесурсов = Ресурсы.Количество();
	ТекстРесурсы = "";
	ТекстРесурсыИсходнойТаблицы = "";
	ТекстРесурсыНовойТаблицы = "";
	ТекстИмеющие = "";
	Для каждого Ресурс Из Ресурсы Цикл
		ТекстРесурсы = ТекстРесурсы + Символы.ПС + Символы.Таб + "СУММА(Таблица." + Ресурс.Имя + ")";
		ТекстРесурсы = ТекстРесурсы + ?(Ресурсы.Индекс(Ресурс) = КоличествоРесурсов - 1, "", ",");
		ТекстРесурсыИсходнойТаблицы = ТекстРесурсыИсходнойТаблицы + Символы.ПС + Символы.Таб + Символы.Таб + "Таблица." + Ресурс.Имя;
		ТекстРесурсыИсходнойТаблицы = ТекстРесурсыИсходнойТаблицы + ?(Ресурсы.Индекс(Ресурс) = КоличествоРесурсов - 1, "", ",");
		ТекстРесурсыНовойТаблицы = ТекстРесурсыНовойТаблицы + Символы.ПС + Символы.Таб + Символы.Таб + "-Таблица." + Ресурс.Имя;
		ТекстРесурсыНовойТаблицы = ТекстРесурсыНовойТаблицы + ?(Ресурсы.Индекс(Ресурс) = КоличествоРесурсов - 1, "", ",");
		ТекстИмеющие = ТекстИмеющие + Символы.ПС + Символы.Таб + ?(ТекстИмеющие = "", "СУММА(Таблица." + Ресурс.Имя + ") <> 0",
			"ИЛИ СУММА(Таблица." + Ресурс.Имя + ") <> 0");
	КонецЦикла;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстИзмерения", ТекстИзмерения);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстРеквизиты", ТекстРеквизиты);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстРесурсыИсходнойТаблицы", ТекстРесурсыИсходнойТаблицы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстРесурсыНовойТаблицы", ТекстРесурсыНовойТаблицы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстРесурсы", ТекстРесурсы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстИмеющие", ТекстИмеющие);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяРегистра", "РегистрНакопления." + ИмяРегистра);

	Возврат ТекстЗапроса;
	
КонецФункции

// Процедура возвращает исходный набор записей регистра если нет изменений в текущем (записываемом) наборе.
// Цель сохранить отложенные движения при повторном перепроведении документа.
//
Процедура ВосстановитьОтложенноеПроведение(Источник)
	
	Если Источник.ДополнительныеСвойства.Свойство("ОтложенноеПроведение") ИЛИ Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапросаСравнения());
	Запрос.МенеджерВременныхТаблиц = Источник.ДополнительныеСвойства.МенеджерВТУпрУчета;
	Запрос.УстановитьПараметр("НовыеДвижения", Источник.Выгрузить());
	
	// Запрос вернет исходную таблицу набора если в новом наборе нет изменений относительно предыдущего.
	Исходная = Запрос.Выполнить().Выгрузить();
	Если Исходная.Количество() > 0 Тогда
		Источник.Загрузить(Исходная);
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаСравнения()
	
	// Если нет изменений - вернуть исходную таблицу
	Возврат
	"ВЫБРАТЬ
	|	Таблица.Период,
	|	Таблица.ХозяйственнаяОперация,
	|	Таблица.Организация,
	|	Таблица.Подразделение,
	|	Таблица.НаправлениеДеятельности,
	|	Таблица.Партнер,
	|	Таблица.Контрагент,
	|	Таблица.Договор,
	|	Таблица.ОбъектРасчетов,
	|	Таблица.КорНаправлениеДеятельности,
	|	Таблица.КорПартнер,
	|	Таблица.КорКонтрагент,
	|	Таблица.КорДоговор,
	|	Таблица.КорОбъектРасчетов,
	|	Таблица.Валюта,
	|	Таблица.СуммаВВалюте
	|ПОМЕСТИТЬ втНовыеДвижения
	|ИЗ
	|	&НовыеДвижения КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Период,
	|	Таблица.ХозяйственнаяОперация,
	|	Таблица.Организация,
	|	Таблица.Подразделение,
	|	Таблица.НаправлениеДеятельности,
	|	Таблица.Партнер,
	|	Таблица.Контрагент,
	|	Таблица.Договор,
	|	Таблица.ОбъектРасчетов,
	|	Таблица.КорНаправлениеДеятельности,
	|	Таблица.КорПартнер,
	|	Таблица.КорКонтрагент,
	|	Таблица.КорДоговор,
	|	Таблица.КорОбъектРасчетов,
	|	Таблица.Валюта,
	|	СУММА(Таблица.СуммаВВалюте) КАК СуммаВВалюте
	|ПОМЕСТИТЬ втИзменения
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИсходнаяТаблица.Период КАК Период,
	|		ИсходнаяТаблица.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		ИсходнаяТаблица.Организация КАК Организация,
	|		ИсходнаяТаблица.Подразделение КАК Подразделение,
	|		ИсходнаяТаблица.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ИсходнаяТаблица.Партнер КАК Партнер,
	|		ИсходнаяТаблица.Контрагент КАК Контрагент,
	|		ИсходнаяТаблица.Договор КАК Договор,
	|		ИсходнаяТаблица.ОбъектРасчетов КАК ОбъектРасчетов,
	|		ИсходнаяТаблица.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|		ИсходнаяТаблица.КорПартнер КАК КорПартнер,
	|		ИсходнаяТаблица.КорКонтрагент КАК КорКонтрагент,
	|		ИсходнаяТаблица.КорДоговор КАК КорДоговор,
	|		ИсходнаяТаблица.КорОбъектРасчетов КАК КорОбъектРасчетов,
	|		ИсходнаяТаблица.Валюта КАК Валюта,
	|		ИсходнаяТаблица.СуммаВВалюте КАК СуммаВВалюте
	|	ИЗ
	|		ИсходнаяТаблица КАК ИсходнаяТаблица
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НовыеДвижения.Период,
	|		НовыеДвижения.ХозяйственнаяОперация,
	|		НовыеДвижения.Организация,
	|		НовыеДвижения.Подразделение,
	|		НовыеДвижения.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(НовыеДвижения.Контрагент) = ТИП(Справочник.Организации)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ НовыеДвижения.Партнер
	|		КОНЕЦ,
	|		НовыеДвижения.Контрагент,
	|		НовыеДвижения.Договор,
	|		НовыеДвижения.ОбъектРасчетов,
	|		НовыеДвижения.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|		ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(НовыеДвижения.КорКонтрагент) = ТИП(Справочник.Организации)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ НовыеДвижения.КорПартнер
	|		КОНЕЦ,
	|		НовыеДвижения.КорКонтрагент,
	|		НовыеДвижения.КорДоговор,
	|		НовыеДвижения.КорОбъектРасчетов,
	|		НовыеДвижения.Валюта,
	|		-НовыеДвижения.СуммаВВалюте
	|	ИЗ
	|		втНовыеДвижения КАК НовыеДвижения) КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Период,
	|	Таблица.ХозяйственнаяОперация,
	|	Таблица.Организация,
	|	Таблица.НаправлениеДеятельности,
	|	Таблица.Подразделение,
	|	Таблица.Партнер,
	|	Таблица.Контрагент,
	|	Таблица.Договор,
	|	Таблица.ОбъектРасчетов,
	|	Таблица.КорНаправлениеДеятельности,
	|	Таблица.КорПартнер,
	|	Таблица.КорКонтрагент,
	|	Таблица.КорДоговор,
	|	Таблица.КорОбъектРасчетов,
	|	Таблица.Валюта
	|
	|ИМЕЮЩИЕ
	|	СУММА(Таблица.СуммаВВалюте) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Период,
	|	Таблица.Регистратор,
	|	
	|	Таблица.ХозяйственнаяОперация,
	|	Таблица.Организация,
	|	Таблица.Подразделение,
	|	Таблица.НаправлениеДеятельности,
	|	Таблица.Партнер,
	|	Таблица.Контрагент,
	|	Таблица.Договор,
	|	Таблица.ОбъектРасчетов,
	|	Таблица.КорНаправлениеДеятельности,
	|	Таблица.КорПартнер,
	|	Таблица.КорКонтрагент,
	|	Таблица.КорДоговор,
	|	Таблица.КорОбъектРасчетов,
	|	Таблица.ТипСуммы,
	|	Таблица.КорТипСуммы,
	|	
	|	Таблица.Валюта,
	|	Таблица.СуммаВВалюте,
	|	Таблица.СуммаБезНДСВВалюте,
	|	Таблица.ВалютаВзаиморасчетов,
	|	Таблица.СуммаВВалютеВзаиморасчетов,
	|	Таблица.СуммаБезНДСВВалютеВзаиморасчетов,
	|	Таблица.КорВалютаВзаиморасчетов,
	|	Таблица.КорСуммаВВалютеВзаиморасчетов,
	|	Таблица.КорСуммаБезНДСВВалютеВзаиморасчетов,
	|	Таблица.ИсточникГФУРасчетов,
	|	Таблица.КорИсточникГФУРасчетов,
	|	
	|	Таблица.Сумма,
	|	Таблица.СуммаБезНДС,
	|	Таблица.СуммаРегл,
	|	Таблица.СуммаРеглБезНДС
	|ИЗ
	|	ИсходнаяТаблица КАК Таблица
	|ГДЕ
	|	НЕ (ИСТИНА В (ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА ИЗ втИзменения))";
	
КонецФункции

Функция НеКонтролироватьИзмененияРегистра(Источник)
	
	Возврат
		Источник.ДополнительныеСвойства.Свойство("ИзменилисьДанныеРегистра")
		ИЛИ РасчетСебестоимостиПрикладныеАлгоритмы.ДвиженияЗаписываютсяРасчетомПартийИСебестоимости(Источник);
	
КонецФункции

#Область ОбновлениеИнформационнойБазы

// Сервисная процедура, используемая в обработчиках обновления.
// Добавляет отбор по хозяйственным операциям в текст запроса.
//
Процедура ДобавитьВключаемыеХозоперации(ТекстЗапросаПоДокументу, ВключаемыеХозоперации) Экспорт

	Если ВключаемыеХозоперации.Количество() > 0 Тогда
		Хозоперации = "";
		Для Каждого Хозоперация Из ВключаемыеХозоперации Цикл
			Хозоперации = Хозоперации + ?(Не ПустаяСтрока(Хозоперации), ", ", "") + "ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации." + Хозоперация + ")";
		КонецЦикла;
		ТекстЗапросаПоДокументу = СтрЗаменить(ТекстЗапросаПоДокументу, "%ВключаемыеХозоперации%",
			"ДанныеДокумента.ХозяйственнаяОперация В (" + Хозоперации + ")");
	Иначе
		ТекстЗапросаПоДокументу = СтрЗаменить(ТекстЗапросаПоДокументу, "%ВключаемыеХозоперации%", "ИСТИНА");
	КонецЕсли;

КонецПроцедуры

// Запись параметров отложенного обновления в константу для передачи в обработку следующей порции данных.
//
// Параметры:
//	ПараметрыОбработчиковОбновления - Структура - параметры обработчика обновления.
//
Процедура ЗаписатьИнформациюОбОтложенномОбновлении(ПараметрыОбработчиковОбновления) Экспорт

	МенеджерКонстанты = Константы.ПараметрыОбработчиковОбновления.СоздатьМенеджерЗначения();
	МенеджерКонстанты.Значение = Новый ХранилищеЗначения(ПараметрыОбработчиковОбновления);
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(МенеджерКонстанты);

КонецПроцедуры

// Записывает набор если количество записей в наборе больше 10 000.
//
// Параметры:
//	НаборЗаписей - РегистрБухгалтерииНаборЗаписей - Записываемый набор записей регистра накопления, сведений, бухгалтерии
//	КоличествоЗаписей - Число - Количество записей в наборе
//	ЗаписатьЕслиЕстьЗаписи - Булево - Принудительная запись не пустого набора.
//
Процедура ЗаписатьНаборЗаписей(НаборЗаписей, КоличествоЗаписей, ЗаписатьЕслиЕстьЗаписи = Ложь) Экспорт

	Если КоличествоЗаписей = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если КоличествоЗаписей > 10000 ИЛИ ЗаписатьЕслиЕстьЗаписи  Тогда
		
		КоличествоЗаписей = 0;
		
		НаборЗаписей.ДополнительныеСвойства.Вставить("ОтключитьМеханизмРегистрацииОбъектов"); 
		НаборЗаписей.ОбменДанными.Получатели.АвтоЗаполнение = Ложь;
		НаборЗаписей.Записать(Ложь);
		
	КонецЕсли;

КонецПроцедуры

// Загружает коллекцию движений в набор записей и записывает набор с признаком ОбменДанными.Загрузка = Истина.
//
// Параметры:
//  Регистратор - ДокументСсылка - Регистратор записываемого набора записей регистра накопления, сведений, бухгалтерии
//  ИмяРегистра - Строка - Имя регистра накопления, сведений, бухгалтерии
//  КоллекцияДвижений - ВыборкаИзРезультатаЗапроса,ТаблицаЗначений,Массив - коллекция содержащая записи регистра
//  ДополнительныеПараметры - Структура - дополнительные параметры и флаги уточняющие загрузку движений
//    может содержать следующие ключи:
//    Регистры - КоллекцияРегистрыНакопления,КоллекцияРегистрыБухгалтерии,КоллекцияРегистрыСведений - Коллекция
//        регистров по умолчанию <РегистрыНакопления>
//    НеЗаписыватьПустойНабор - Булево - по умолчанию пустые наборы не записываются
//    РегистрироватьНаУзлахПлановОбмена - Булево - включает регистрацию на узлах планов обмена при записи объекта по
//                                                 умолчанию изменения Регистрируются не узлах обмена.
//
Процедура ЗагрузитьДвижения(Регистратор, ИмяРегистра, КоллекцияДвижений = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	// Определимся со значения дополнительных параметров
	Регистры = РегистрыНакопления;
	НеЗаписыватьПустойНабор = Ложь;
	РегистрироватьНаУзлахПлановОбмена = Ложь;
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда
		Если ДополнительныеПараметры.Свойство("Регистры") Тогда
			Регистры = ДополнительныеПараметры.Регистры;
		КонецЕсли;
		Если ДополнительныеПараметры.Свойство("НеЗаписыватьПустойНабор") Тогда
			НеЗаписыватьПустойНабор = ДополнительныеПараметры.НеЗаписыватьПустойНабор;
		КонецЕсли;
		Если ДополнительныеПараметры.Свойство("РегистрироватьНаУзлахПлановОбмена") Тогда
			РегистрироватьНаУзлахПлановОбмена = ДополнительныеПараметры.Свойство("РегистрироватьНаУзлахПлановОбмена");
		КонецЕсли;
	КонецЕсли;
	
	Если НеЗаписыватьПустойНабор И КоллекцияДвижений.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Набор = Регистры[ИмяРегистра].СоздатьНаборЗаписей(); // РегистрНакопленияНаборЗаписей - 
	Набор.Отбор.Регистратор.Установить(Регистратор);
	Если КоллекцияДвижений <> Неопределено Тогда
		Если ТипЗнч(КоллекцияДвижений) = Тип("ТаблицаЗначений") Тогда
			Набор.Загрузить(КоллекцияДвижений);
			
		ИначеЕсли ТипЗнч(КоллекцияДвижений) = Тип("ВыборкаИзРезультатаЗапроса") Тогда
			Пока КоллекцияДвижений.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(Набор.Добавить(), КоллекцияДвижений);
			КонецЦикла;
			
		Иначе
			Для Каждого Движение Из КоллекцияДвижений Цикл
				ЗаполнитьЗначенияСвойств(Набор.Добавить(), Движение);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;// КоллекцияДвижений определена
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор, РегистрироватьНаУзлахПлановОбмена);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
