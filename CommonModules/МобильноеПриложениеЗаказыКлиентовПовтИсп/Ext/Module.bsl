////////////////////////////////////////////////////////////////////////////////
//МОДУЛЬ СОДЕРЖИТ ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ РАБОТЫ С ПАКЕТАМИ ОБМЕНА С МОБИЛЬНЫМ ПРИЛОЖЕНИЕМ "1С: ЗАКАЗЫ"
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ФункцииВозвратаСтруктурыОбъектовОбменаПакетаXDTO_CustomerOrders

// Возвращает структуру объекта мобильного приложения "Валюты" для обмена.
//
// Возвращаемое значение:
//  Структура
//
Функция СтруктураВалюты() Экспорт
	
	СтруктураВалюты = СтандартнаяСтруктураОбъекта();
	
	СтруктураВалюты.Вставить("Code");
	
	Возврат СтруктураВалюты;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Виды контактной информации" для обмена.
//
// Параметры:
//  ЭтоГруппа - Булево - признак группы.
//
// Возвращаемое значение:
//  Структура - содержит структуру реквизитов.
//
Функция СтруктураВидаКИ(Знач ЭтоГруппа) Экспорт
	
	СтруктураВидаКИ = СтандартнаяСтруктураОбъекта();
	
	СтруктураВидаКИ.Вставить("IsFolder");
	СтруктураВидаКИ.Вставить("Parent");
	СтруктураВидаКИ.Вставить("PredefinedDataName");
	СтруктураВидаКИ.Вставить("ERPКод"); //@NON-NLS-1
	
	Если ЭтоГруппа Тогда
		Возврат СтруктураВидаКИ;
	КонецЕсли;
	
	СтруктураВидаКИ.Вставить("Тип"); //@NON-NLS-1
	СтруктураВидаКИ.Вставить("РеквизитДопУпорядочивания"); //@NON-NLS-1
	СтруктураВидаКИ.Вставить("РедактированиеТолькоВДиалоге"); //@NON-NLS-1
	СтруктураВидаКИ.Вставить("МожноИзменятьСпособРедактирования"); //@NON-NLS-1
	СтруктураВидаКИ.Вставить("АдресТолькоРоссийский"); //@NON-NLS-1
	СтруктураВидаКИ.Вставить("ВключатьСтрануВПредставление"); //@NON-NLS-1
	СтруктураВидаКИ.Вставить("ОбязательноеЗаполнение"); //@NON-NLS-1
	СтруктураВидаКИ.Вставить("ПроверятьКорректность"); //@NON-NLS-1
	СтруктураВидаКИ.Вставить("СкрыватьНеактуальныеАдреса"); //@NON-NLS-1
	СтруктураВидаКИ.Вставить("Подсказка"); //@NON-NLS-1
	СтруктураВидаКИ.Вставить("РазрешитьВводНесколькихЗначений"); //@NON-NLS-1
	// Поддержка мобильного приложения до версии 3.0.2.
	СтруктураВидаКИ.Вставить("ЗапрещатьВводНекорректного"); //@NON-NLS-1
	
	Возврат СтруктураВидаКИ;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Виды номенклатуры" для обмена.
//
// Возвращаемое значение:
//  Структура - содержит структуру реквизитов.
//
Функция СтруктураВидаНоменклатуры() Экспорт
	
	СтруктураВидаНоменклатуры = СтандартнаяСтруктураОбъекта();
	СтруктураВидаНоменклатуры.Вставить("IsFolder");
	СтруктураВидаНоменклатуры.Вставить("Parent");
	
	СтруктураВидаНоменклатуры.Вставить("ERPКод"); //@NON-NLS-1
	
	Возврат СтруктураВидаНоменклатуры;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Виды цен" для обмена.
//
// Возвращаемое значение:
//  Структура - содержит структуру реквизитов.
//
Функция СтруктураВидаЦены() Экспорт
	
	СтруктураВидаЦены = СтандартнаяСтруктураОбъекта();
	
	СтруктураВидаЦены.Вставить("ERPКод"); //@NON-NLS-1
	СтруктураВидаЦены.Вставить("ВалютаЦены"); //@NON-NLS-1
	СтруктураВидаЦены.Вставить("ЦенаВключаетНДС"); //@NON-NLS-1
	
	Возврат СтруктураВидаЦены;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Договоры клиентов" для обмена.
//
// Возвращаемое значение:
//  Структура - содержит структуру реквизитов.
//
Функция СтруктураДоговора() Экспорт
	
	СтруктураДоговора = СтандартнаяСтруктураОбъекта();
	
	СтруктураДоговора.Вставить("ERPКодДоговора"); //@NON-NLS-1
	СтруктураДоговора.Вставить("ERPКодСоглашения"); //@NON-NLS-1
	СтруктураДоговора.Вставить("ВалютаВзаиморасчетов"); //@NON-NLS-1
	СтруктураДоговора.Вставить("ВидЦены"); //@NON-NLS-1
	СтруктураДоговора.Вставить("Дата"); //@NON-NLS-1
	СтруктураДоговора.Вставить("Действует"); //@NON-NLS-1
	СтруктураДоговора.Вставить("Клиент"); //@NON-NLS-1
	СтруктураДоговора.Вставить("Комиссия"); //@NON-NLS-1
	СтруктураДоговора.Вставить("Контрагент"); //@NON-NLS-1
	СтруктураДоговора.Вставить("Номер"); //@NON-NLS-1
	СтруктураДоговора.Вставить("Организация"); //@NON-NLS-1
	СтруктураДоговора.Вставить("Пояснение"); //@NON-NLS-1
	СтруктураДоговора.Вставить("Склад"); //@NON-NLS-1
	СтруктураДоговора.Вставить("УникальныйКлюч"); //@NON-NLS-1
	СтруктураДоговора.Вставить("Типовое"); //@NON-NLS-1
	СтруктураДоговора.Вставить("ЕстьУточнениеЦен"); //@NON-NLS-1
	СтруктураДоговора.Вставить("ИспользуютсяДоговорыКонтрагентов"); //@NON-NLS-1
	СтруктураДоговора.Вставить("ФормаОплаты"); //@NON-NLS-1
	СтруктураДоговора.Вставить("РасчетыПоДоговору"); //@NON-NLS-1
	СтруктураДоговора.Вставить("СуммаДолгаПоДоговору"); //@NON-NLS-1
	
	Возврат СтруктураДоговора;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Дополнительные реквизиты и сведения" для обмена.
//
// Возвращаемое значение:
//  Структура - содержит структуру реквизитов.
//
Функция СтруктураДопРеквизита() Экспорт
	
	СтруктураДопРеквизита = СтандартнаяСтруктураОбъекта();
	
	СтруктураДопРеквизита.Вставить("PredefinedDataName");
	СтруктураДопРеквизита.Вставить("ПометкаУдаления"); //@NON-NLS-1
	СтруктураДопРеквизита.Вставить("Наименование"); //@NON-NLS-1
	СтруктураДопРеквизита.Вставить("ИмяПредопределенныхДанных"); //@NON-NLS-1
	СтруктураДопРеквизита.Вставить("Виден"); //@NON-NLS-1
	СтруктураДопРеквизита.Вставить("ВладелецДополнительныхЗначений"); //@NON-NLS-1
	СтруктураДопРеквизита.Вставить("ДополнительныеЗначенияИспользуются"); //@NON-NLS-1
	СтруктураДопРеквизита.Вставить("ДополнительныеЗначенияСВесом"); //@NON-NLS-1
	СтруктураДопРеквизита.Вставить("Доступен"); //@NON-NLS-1
	СтруктураДопРеквизита.Вставить("Заголовок"); //@NON-NLS-1
	СтруктураДопРеквизита.Вставить("ЗаголовокФормыВыбораЗначения"); //@NON-NLS-1
	СтруктураДопРеквизита.Вставить("ЗаголовокФормыЗначения"); //@NON-NLS-1
	СтруктураДопРеквизита.Вставить("ЗаполнятьОбязательно"); //@NON-NLS-1
	СтруктураДопРеквизита.Вставить("МногострочноеПолеВвода"); //@NON-NLS-1
	СтруктураДопРеквизита.Вставить("НаборСвойств"); //@NON-NLS-1
	СтруктураДопРеквизита.Вставить("ТипЗначения"); //@NON-NLS-1
	СтруктураДопРеквизита.Вставить("ФорматСвойства"); //@NON-NLS-1
	СтруктураДопРеквизита.Вставить("ЭтоДополнительноеСведение"); //@NON-NLS-1
	СтруктураДопРеквизита.Вставить("ЗависимостиДополнительныхРеквизитов"); //@NON-NLS-1
	
	Возврат СтруктураДопРеквизита;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Единицы измерения" для обмена.
//
// Возвращаемое значение:
//  Структура - содержит структуру реквизитов.
//
Функция СтруктураЕдиницыИзмерения() Экспорт
	
	СтруктураЕдиницыИзмерения = СтандартнаяСтруктураОбъекта();
	СтруктураЕдиницыИзмерения.Вставить("Code");
	СтруктураЕдиницыИзмерения.Вставить("PredefinedDataName");
	
	СтруктураЕдиницыИзмерения.Вставить("МеждународноеСокращение"); //@NON-NLS-1
	СтруктураЕдиницыИзмерения.Вставить("НаименованиеПолное"); //@NON-NLS-1
	
	Возврат СтруктураЕдиницыИзмерения;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Значение свойств объекта"
//  и "Значение свойств объекта (Иерархия)" для обмена.
//
// Параметры:
//  Иерархия - Булево - признак иерархичности;
//  ЭтоГруппа - Булево - признак группы.
//
// Возвращаемое значение:
//  Структура - содержит структуру реквизитов.
//
Функция СтруктураЗначенияСвойствОбъекта(Иерархия, ЭтоГруппа) Экспорт
	
	СтруктураЗСО = СтандартнаяСтруктураОбъекта();
	
	СтруктураЗСО.Вставить("PredefinedDataName");
	
	СтруктураЗСО.Вставить("Owner");
	СтруктураЗСО.Вставить("Parent");
	
	Если Не Иерархия Тогда
		СтруктураЗСО.Вставить("IsFolder");
	КонецЕсли;
	
	Если ЭтоГруппа Тогда
		Возврат СтруктураЗСО;
	КонецЕсли;
	
	СтруктураЗСО.Вставить("Вес"); //@NON-NLS-1
	
	Возврат СтруктураЗСО;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Контактные лица клиента" для обмена.
//
// Возвращаемое значение:
//  Структура - содержит структуру реквизитов.
//
Функция СтруктураКонтактногоЛица() Экспорт
	
	СтруктураКонтактногоЛица = СтандартнаяСтруктураОбъекта();
	СтруктураКонтактногоЛица.Вставить("Owner", "");
	
	СтруктураКонтактногоЛица.Вставить("ERPКод", ""); //@NON-NLS-1
	СтруктураКонтактногоЛица.Вставить("ДатаРождения", Дата("00010101")); //@NON-NLS-1
	СтруктураКонтактногоЛица.Вставить("ДолжностьПоВизитке", ""); //@NON-NLS-1
	СтруктураКонтактногоЛица.Вставить("Комментарий", ""); //@NON-NLS-1
	СтруктураКонтактногоЛица.Вставить("КонтактнаяИнформация"); //@NON-NLS-1
	
	Возврат СтруктураКонтактногоЛица;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Контрагента" для обмена.
//
// Возвращаемое значение:
//  Структура - содержит структуру реквизитов.
//
Функция СтруктураКонтрагента() Экспорт
	
	СтруктураКонтрагента = СтандартнаяСтруктураОбъекта();
	
	СтруктураКонтрагента.Вставить("ERPКод"); //@NON-NLS-1
	СтруктураКонтрагента.Вставить("ИНН"); //@NON-NLS-1
	СтруктураКонтрагента.Вставить("ИННКПП"); //@NON-NLS-1
	СтруктураКонтрагента.Вставить("Клиент"); //@NON-NLS-1
	СтруктураКонтрагента.Вставить("КПП"); //@NON-NLS-1
	СтруктураКонтрагента.Вставить("НаименованиеПолное"); //@NON-NLS-1
	СтруктураКонтрагента.Вставить("ПредставлениеКонтрагента"); //@NON-NLS-1
	СтруктураКонтрагента.Вставить("ЮрФизЛицо"); //@NON-NLS-1
	
	Возврат СтруктураКонтрагента;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Номенклатура" для обмена.
//
// Возвращаемое значение:
//  Структура - содержит структуру реквизитов.
//
Функция СтруктураНоменклатуры() Экспорт
	
	СтруктураНоменклатуры = СтандартнаяСтруктураОбъекта();
	СтруктураНоменклатуры.Вставить("IsFolder");
	СтруктураНоменклатуры.Вставить("Parent");
	СтруктураНоменклатуры.Вставить("Code");
	
	СтруктураНоменклатуры.Вставить("ERPКодНоменклатура"); //@NON-NLS-1
	СтруктураНоменклатуры.Вставить("ERPКодХарактеристика"); //@NON-NLS-1
	СтруктураНоменклатуры.Вставить("Артикул"); //@NON-NLS-1
	СтруктураНоменклатуры.Вставить("ВидНоменклатуры"); //@NON-NLS-1
	СтруктураНоменклатуры.Вставить("ЕдиницаЗаказа"); //@NON-NLS-1
	СтруктураНоменклатуры.Вставить("ЕдиницаИзмерения"); //@NON-NLS-1
	СтруктураНоменклатуры.Вставить("НаименованиеПолное"); //@NON-NLS-1
	СтруктураНоменклатуры.Вставить("СтавкаНДСЧислом"); //@NON-NLS-1
	СтруктураНоменклатуры.Вставить("СтрокаПоиска"); //@NON-NLS-1
	СтруктураНоменклатуры.Вставить("Услуга"); //@NON-NLS-1
	СтруктураНоменклатуры.Вставить("ЦеноваяГруппа"); //@NON-NLS-1
	
	СтруктураНоменклатуры.Вставить("ВесЕдиницаИзмерения"); //@NON-NLS-1
	СтруктураНоменклатуры.Вставить("ВесЗнаменатель"); //@NON-NLS-1
	СтруктураНоменклатуры.Вставить("ВесИспользовать"); //@NON-NLS-1
	СтруктураНоменклатуры.Вставить("ВесМожноУказыватьВДокументах"); //@NON-NLS-1
	СтруктураНоменклатуры.Вставить("ВесЧислитель"); //@NON-NLS-1
	СтруктураНоменклатуры.Вставить("Описание"); //@NON-NLS-1
	СтруктураНоменклатуры.Вставить("ФайлКартинки"); //@NON-NLS-1
	
	СтруктураНоменклатуры.Вставить("Штрихкод"); //@NON-NLS-1
	
	СтруктураНоменклатуры.Вставить("ДополнительныеРеквизиты"); //@NON-NLS-1
	
	Возврат СтруктураНоменклатуры;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Номенклатура" для обмена.
//
// Возвращаемое значение:
//  Структура - содержит структуру реквизитов.
//
Функция СтруктураНоменклатурыПрисоединенныеФайлы() Экспорт
	
	СтруктураНоменклатурыПрисоединенныеФайлы = СтандартнаяСтруктураОбъекта();
	
	СтруктураНоменклатурыПрисоединенныеФайлы.Вставить("ВладелецФайла"); //@NON-NLS-1
	СтруктураНоменклатурыПрисоединенныеФайлы.Вставить("ДатаСоздания"); //@NON-NLS-1
	СтруктураНоменклатурыПрисоединенныеФайлы.Вставить("Описание"); //@NON-NLS-1
	СтруктураНоменклатурыПрисоединенныеФайлы.Вставить("Размер"); //@NON-NLS-1
	СтруктураНоменклатурыПрисоединенныеФайлы.Вставить("Расширение"); //@NON-NLS-1
	СтруктураНоменклатурыПрисоединенныеФайлы.Вставить("ХранимыйФайл"); //@NON-NLS-1
	
	Возврат СтруктураНоменклатурыПрисоединенныеФайлы;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Клиенты" для обмена.
//
// Возвращаемое значение:
//  Структура - содержит структуру реквизитов.
//
Функция СтруктураПартнера() Экспорт
	
	СтруктураПартнера = СтандартнаяСтруктураОбъекта();
	
	СтруктураПартнера.Вставить("Parent");
	СтруктураПартнера.Вставить("Code");
	
	СтруктураПартнера.Вставить("ERPКод"); //@NON-NLS-1
	СтруктураПартнера.Вставить("ВидЦены"); //@NON-NLS-1
	СтруктураПартнера.Вставить("ВремяДоставкиПо"); //@NON-NLS-1
	СтруктураПартнера.Вставить("ВремяДоставкиС"); //@NON-NLS-1
	СтруктураПартнера.Вставить("ДополнительнаяИнформацияПоДоставке"); //@NON-NLS-1
	СтруктураПартнера.Вставить("ОтгрузкаЗапрещена"); //@NON-NLS-1
	СтруктураПартнера.Вставить("ПричинаДобавленияВСтопЛист"); //@NON-NLS-1
	СтруктураПартнера.Вставить("Самовывоз"); //@NON-NLS-1
	СтруктураПартнера.Вставить("Склад"); //@NON-NLS-1
	СтруктураПартнера.Вставить("СтрокаПоиска"); //@NON-NLS-1
	СтруктураПартнера.Вставить("ФормаОплаты"); //@NON-NLS-1
	СтруктураПартнера.Вставить("ДополнительнаяИнформация"); //@NON-NLS-1
	СтруктураПартнера.Вставить("КонтактнаяИнформация"); //@NON-NLS-1
	СтруктураПартнера.Вставить("ДополнительныеРеквизиты"); //@NON-NLS-1
	
	Возврат СтруктураПартнера;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Организации" для обмена.
//
// Возвращаемое значение:
//  Структура - содержит структуру реквизитов.
//
Функция СтруктураОрганизации() Экспорт
	
	СтруктураОрганизации = СтандартнаяСтруктураОбъекта();
	
	СтруктураОрганизации.Вставить("ERPКод"); //@NON-NLS-1
	СтруктураОрганизации.Вставить("Префикс"); //@NON-NLS-1
	СтруктураОрганизации.Вставить("СистемаНалогообложения"); //@NON-NLS-1
	СтруктураОрганизации.Вставить("Руководитель"); //@NON-NLS-1
	СтруктураОрганизации.Вставить("ГлавныйБухгалтер"); //@NON-NLS-1
	СтруктураОрганизации.Вставить("ИНН"); //@NON-NLS-1
	СтруктураОрганизации.Вставить("КПП"); //@NON-NLS-1
	СтруктураОрганизации.Вставить("СвидетельствоСерияНомер"); //@NON-NLS-1
	СтруктураОрганизации.Вставить("СвидетельствоДатаВыдачи"); //@NON-NLS-1
	СтруктураОрганизации.Вставить("НаименованиеПолное"); //@NON-NLS-1
	СтруктураОрганизации.Вставить("ЮрФизЛицо"); //@NON-NLS-1
	
	СтруктураОрганизации.Вставить("НомерСчета"); //@NON-NLS-1
	СтруктураОрганизации.Вставить("Банк"); //@NON-NLS-1
	СтруктураОрганизации.Вставить("БИК"); //@NON-NLS-1
	СтруктураОрганизации.Вставить("ГородБанка"); //@NON-NLS-1
	СтруктураОрганизации.Вставить("КоррСчет"); //@NON-NLS-1
	
	СтруктураОрганизации.Вставить("КонтактнаяИнформация"); //@NON-NLS-1
	СтруктураОрганизации.Вставить("ДополнительныеРеквизиты"); //@NON-NLS-1
	
	Возврат СтруктураОрганизации;
КонецФункции

// Возвращает структуру ответного сообщения для обмена.
//
// Возвращаемое значение:
//  Структура - содержит структуру ответов.
//
Функция СтруктураОтвета() Экспорт
	
	КомпонентыОбмена = Новый Структура;
	КомпонентыОбмена.Вставить("КлючСообщенияЖурналаРегистрации",
		ОбменДаннымиСервер.СобытиеЖурналаРегистрацииОбменДанными());
	КомпонентыОбмена.Вставить("УзелКорреспондента", НЕОПРЕДЕЛЕНО);
	КомпонентыОбмена.Вставить("Комментарий", "");
	КомпонентыОбмена.Вставить("ДействиеПриОбмене", НЕОПРЕДЕЛЕНО);
	КомпонентыОбмена.Вставить("РезультатВыполненияОбмена", НЕОПРЕДЕЛЕНО);
	КомпонентыОбмена.Вставить("ДатаНачала", Дата("00010101000000"));
	КомпонентыОбмена.Вставить("ДатаОкончания", Дата("00010101000000"));
	
	КомпонентыОбмена.Вставить("ResultMessage", "");
	КомпонентыОбмена.Вставить("Success", ИСТИНА);
	КомпонентыОбмена.Вставить("Continue", ЛОЖЬ);
	
	Возврат КомпонентыОбмена;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Номенклатура" для обмена для групп.
//
// Возвращаемое значение:
//  Структура - содержит структуру реквизитов.
//
Функция СтруктураРодителяНоменклатуры() Экспорт
	
	СтруктураРодителяНоменклатуры = СтандартнаяСтруктураОбъекта();
	СтруктураРодителяНоменклатуры.Вставить("IsFolder");
	СтруктураРодителяНоменклатуры.Вставить("Parent");
	СтруктураРодителяНоменклатуры.Вставить("Code");
	
	СтруктураРодителяНоменклатуры.Вставить("ERPКодНоменклатура"); //@NON-NLS-1
	СтруктураРодителяНоменклатуры.Вставить("СтрокаПоиска"); //@NON-NLS-1
	
	Возврат СтруктураРодителяНоменклатуры;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Склады" для обмена.
//
// Параметры:
//  ЭтоГруппа - Булево - признак создания структуры для группы.
//
// Возвращаемое значение:
//  Структура - содержит структуру реквизитов.
//
Функция СтруктураСклада(Знач ЭтоГруппа) Экспорт
	
	СтруктураСклада = СтандартнаяСтруктураОбъекта();
	
	СтруктураСклада.Вставить("IsFolder");
	СтруктураСклада.Вставить("Parent");
	
	СтруктураСклада.Вставить("ERPКод"); //@NON-NLS-1
	
	Если ЭтоГруппа Тогда
		Возврат СтруктураСклада;
	КонецЕсли;
	
	СтруктураСклада.Вставить("ГруппаСкладов"); //@NON-NLS-1
	СтруктураСклада.Вставить("КонтактнаяИнформация"); //@NON-NLS-1
	
	Возврат СтруктураСклада;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Страны мира" для обмена.
//
// Возвращаемое значение:
//  Структура - содержит структуру реквизитов.
//
Функция СтруктураСтраны() Экспорт
	
	СтруктураСтраны = СтандартнаяСтруктураОбъекта();
	
	СтруктураСтраны.Вставить("Code");
	СтруктураСтраны.Вставить("PredefinedDataName");
	СтруктураСтраны.Вставить("НаименованиеПолное"); //@NON-NLS-1
	СтруктураСтраны.Вставить("КодАльфа2"); //@NON-NLS-1
	СтруктураСтраны.Вставить("КодАльфа3"); //@NON-NLS-1
	
	Возврат СтруктураСтраны;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Статус задания торговому представителю" для обмена.
//
// Возвращаемое значение:
//  Структура - содержит структуру реквизитов.
//
Функция СтруктураСтатусаЗаданияТорговомуПредставителю() Экспорт
	
	Структура = Новый Структура();
	
	Структура.Вставить("ref");
	Структура.Вставить("Статус"); //@NON-NLS-1
	Структура.Вставить("ПечатнаяФормаЗаказа"); //@NON-NLS-1
	
	Возврат Структура;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Статус заказа клиенту" для обмена.
//
// Возвращаемое значение:
//  Структура - содержит структуру реквизитов.
//
Функция СтруктураСтатусаЗаказаКлиента() Экспорт
	
	Структура = Новый Структура();
	
	Структура = Новый Структура;
	Структура.Вставить("ref", "");
	Структура.Вставить("Статус", ""); //@NON-NLS-1
	Структура.Вставить("Проведен", Ложь); //@NON-NLS-1
	Структура.Вставить("ПометкаУдаления", Ложь); //@NON-NLS-1
	Структура.Вставить("Состояние", ""); //@NON-NLS-1
	Структура.Вставить("Просрочен", Ложь); //@NON-NLS-1
	Структура.Вставить("ДатаОтгрузки", Дата("00010101000000")); //@NON-NLS-1
	Структура.Вставить("Изменен", Ложь); //@NON-NLS-1
	Структура.Вставить("СуммаДолгаПоДокументуУП", 0); //@NON-NLS-1
	
	Структура.Вставить("ПечатнаяФормаДокумента", //@NON-NLS-1
		Новый ХранилищеЗначения(Новый ТабличныйДокумент, Новый СжатиеДанных(9)));
	Структура.Вставить("СуммаДокументаУП", 0); //@NON-NLS-1
	Структура.Вставить("СуммаНДСДокументаУП", 0); //@NON-NLS-1
	Структура.Вставить("ДатаСледующегоПлатежа", Дата("00010101000000")); //@NON-NLS-1
	Структура.Вставить("ДатаПредоплатыПоДокументу", Дата("00010101000000")); //@NON-NLS-1
	Структура.Вставить("СуммаПредоплатыПоДокументу", 0); //@NON-NLS-1
	
	//+ УП 2.2.
	Структура.Вставить("ДополнительныеРеквизиты"); //@NON-NLS-1
	//- УП 2.2.
	
	Возврат Структура;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Статуса заявки на возврат" для обмена.
//
// Возвращаемое значение:
//  Структура - содержит структуру реквизитов.
//
Функция СтруктураСтатусаЗаявкиНаВозврат() Экспорт
	
	Структура = Новый Структура();
	
	Структура.Вставить("ref", "");
	Структура.Вставить("Статус", ""); //@NON-NLS-1
	Структура.Вставить("Проведен", Ложь); //@NON-NLS-1
	Структура.Вставить("ПометкаУдаления", Ложь); //@NON-NLS-1
	Структура.Вставить("Состояние", ""); //@NON-NLS-1
	Структура.Вставить("ДатаПоступления", Дата("00010101000000")); //@NON-NLS-1
	Структура.Вставить("ДатаОтгрузки", Дата("00010101000000")); //@NON-NLS-1
	Структура.Вставить("Изменен", Ложь); //@NON-NLS-1
	Структура.Вставить("СуммаДокументаУП", 0); //@NON-NLS-1
	Структура.Вставить("СуммаНДСДокументаУП", 0); //@NON-NLS-1
	Структура.Вставить("СуммаДолгаПоДокументуУП", 0); //@NON-NLS-1
	Структура.Вставить("ПечатнаяФормаДокумента", //@NON-NLS-1
		Новый ХранилищеЗначения(Новый ТабличныйДокумент, Новый СжатиеДанных(9)));
		
	//+ УП 2.2.
	Структура.Вставить("ДополнительныеРеквизиты"); //@NON-NLS-1
	//- УП 2.2.
	
	Возврат Структура;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Упаковки" для обмена.
//
// Возвращаемое значение:
//  Структура - содержит структуру реквизитов.
//
Функция СтруктураУпаковки() Экспорт
	
	СтруктураУпаковки = СтандартнаяСтруктураОбъекта();
	СтруктураУпаковки.Вставить("Owner");
	СтруктураУпаковки.Вставить("Parent");
	
	СтруктураУпаковки.Вставить("ERPКод"); //@NON-NLS-1
	СтруктураУпаковки.Вставить("ЕдиницаИзмерения"); //@NON-NLS-1
	СтруктураУпаковки.Вставить("Коэффициент"); //@NON-NLS-1
	СтруктураУпаковки.Вставить("НаименованиеПолное"); //@NON-NLS-1
	СтруктураУпаковки.Вставить("Вес"); //@NON-NLS-1
	СтруктураУпаковки.Вставить("ВесЕдиницаИзмерения"); //@NON-NLS-1
	СтруктураУпаковки.Вставить("Штрихкод"); //@NON-NLS-1
		
	Возврат СтруктураУпаковки;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Ценовые группы" для обмена.
//
// Возвращаемое значение:
//  Структура - содержит структуру реквизитов.
//
Функция СтруктураЦеновойГруппы() Экспорт
	
	СтруктураЦеновойГруппы = СтандартнаяСтруктураОбъекта();
	СтруктураЦеновойГруппы.Вставить("Описание"); //@NON-NLS-1
	
	Возврат СтруктураЦеновойГруппы;
КонецФункции

#КонецОбласти

#Область Вспомогательные

// Возвращает валюту мобильного приложения.
//
// Возвращаемое значение:
//  СправочникСсылка.Валюты - валюта заказа.
//
Функция ВалютаЗаказов() Экспорт
	
	НаборВалют = Константы.СоздатьНабор("ВалютаРегламентированногоУчета, ВалютаУправленческогоУчета");
	НаборВалют.Прочитать();
	ВалютаЗаказов = ?(ЗначениеЗаполнено(НаборВалют.ВалютаРегламентированногоУчета),
		НаборВалют.ВалютаРегламентированногоУчета, НаборВалют.ВалютаУправленческогоУчета);
	
	Возврат ВалютаЗаказов;
КонецФункции

// Возвращает строковое представление идентификатора валюты.
//
// Возвращаемое значение:
//  Строка - идентификатор валюты.
//
Функция ИдентификаторВалютыЗаказов() Экспорт
	
	Валюта = ВалютаЗаказов();
	
	Возврат СокрЛП(Валюта.УникальныйИдентификатор());
КонецФункции

// Возвращает описание типов дополнительных реквизитов, участвующих в обмене.
//
// Возвращаемое значение:
//  ОписаниеТипов - описание типов значения.
//
Функция ОписаниеТиповЗначенияДопРеквизита() Экспорт
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("Булево"));
	Массив.Добавить(Тип("Дата"));
	Массив.Добавить(Тип("Строка"));
	Массив.Добавить(Тип("Число"));
	Массив.Добавить(Тип("СправочникСсылка.ЗначенияСвойствОбъектов"));
	Массив.Добавить(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия"));
	
	Возврат Новый ОписаниеТипов(Массив);
КонецФункции

// Возвращает настройки компоновки для узла обмена
// Параметры:
//  УзелОбмена - ПланОбменаСсылка - узел обмена с мобильным приложением.
//
// Возвращаемое значение:
//  КомпоновщикНастроекКомпоновкиДанных - настройки обмена.
//
Функция НастройкиОбмена(УзелОбмена) Экспорт
	
	ВидНастройкиОбмена = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(УзелОбмена, "ВидНастройкиОбмена");
	Если ЗначениеЗаполнено(ВидНастройкиОбмена) Тогда
		ХранилищеНастроек = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидНастройкиОбмена, "НастройкиОбмена");
	Иначе
		ХранилищеНастроек = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(УзелОбмена, "НастройкиОбмена");
	КонецЕсли;
	Возврат ХранилищеНастроек.Получить();
КонецФункции

// Возвращает текст запроса контактных лиц клиента.
//
// Возвращаемое значение:
//  Строка - текст запроса контактных лиц.
//
Функция ТекстЗапросаКонтактныхЛицКлиента() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КонтактныеЛицаПартнеров.Ссылка КАК КонтактноеЛицо,
	|	КонтактныеЛицаПартнеров.ПометкаУдаления КАК DeletionMark,
	|	КонтактныеЛицаПартнеров.Наименование КАК Description,
	|	&КодВладельца КАК Owner,
	|	"""" КАК ERPКод,
	|	КонтактныеЛицаПартнеров.Комментарий,
	|	КонтактныеЛицаПартнеров.ДолжностьПоВизитке,
	|	КонтактныеЛицаПартнеров.ДатаРождения
	|ИЗ
	|	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
	|ГДЕ
	|	КонтактныеЛицаПартнеров.Владелец = &Партнер";
	
	Возврат ТекстЗапроса;
КонецФункции

// Возвращает текст запроса поиска договора.
//
// Возвращаемое значение:
//  Строка - текст запроса поиска договора.
//
Функция ТекстЗапросаПоискаДоговора() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	0 КАК Приоритет,
	|	ДоговорыКонтрагентов.Ссылка КАК Договор
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Контрагент = &Контрагент
	|	И ДоговорыКонтрагентов.Организация = &Организация
	|	И ДоговорыКонтрагентов.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И ДоговорыКонтрагентов.Согласован
	|	И ДоговорыКонтрагентов.Номер = &Номер
	|	И ДоговорыКонтрагентов.Дата = &Дата
	|	И ДоговорыКонтрагентов.Партнер = &Партнер
	|	И ДоговорыКонтрагентов.Партнер.ОбслуживаетсяТорговымиПредставителями
	|	И ДоговорыКонтрагентов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровКонтрагентов.Действует)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	ДоговорыКонтрагентов.Ссылка
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Контрагент = &Контрагент
	|	И ДоговорыКонтрагентов.Организация = &Организация
	|	И ДоговорыКонтрагентов.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И ДоговорыКонтрагентов.Согласован
	|	И ДоговорыКонтрагентов.Номер = &Номер
	|	И ДоговорыКонтрагентов.Дата = &Дата
	|	И ДоговорыКонтрагентов.Партнер = &Партнер
	|	И ДоговорыКонтрагентов.Партнер.ОбслуживаетсяТорговымиПредставителями
	|	И НЕ ДоговорыКонтрагентов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровКонтрагентов.Закрыт)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ДоговорыКонтрагентов.Ссылка
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Контрагент = &Контрагент
	|	И ДоговорыКонтрагентов.Организация = &Организация
	|	И ДоговорыКонтрагентов.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И ДоговорыКонтрагентов.Согласован
	|	И ДоговорыКонтрагентов.Номер = &Номер
	|	И ДоговорыКонтрагентов.Партнер = &Партнер
	|	И НЕ ДоговорыКонтрагентов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровКонтрагентов.Закрыт)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	ДоговорыКонтрагентов.Ссылка
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Контрагент = &Контрагент
	|	И ДоговорыКонтрагентов.Организация = &Организация
	|	И ДоговорыКонтрагентов.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И ДоговорыКонтрагентов.Согласован
	|	И ДоговорыКонтрагентов.Партнер = &Партнер
	|	И НЕ ДоговорыКонтрагентов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровКонтрагентов.Закрыт)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4,
	|	ДоговорыКонтрагентов.Ссылка
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Контрагент = &Контрагент
	|	И ДоговорыКонтрагентов.Организация = &Организация
	|	И ДоговорыКонтрагентов.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И ДоговорыКонтрагентов.Согласован
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	5,
	|	ДоговорыКонтрагентов.Ссылка
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Контрагент = &Контрагент
	|	И ДоговорыКонтрагентов.Организация = &Организация
	|	И ДоговорыКонтрагентов.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И НЕ ДоговорыКонтрагентов.Согласован
	|	И ДоговорыКонтрагентов.Номер = &Номер
	|	И ДоговорыКонтрагентов.Дата = &Дата
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет";
	
	Возврат ТекстЗапроса;
КонецФункции

// Возвращает текст запроса поиска индивидуальных соглашений.
//
// Возвращаемое значение:
//  Строка - текст запроса поиска индивидуального соглашения.
//
Функция ТекстЗапросаПоискаИндивидуальныхСоглашений() Экспорт
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	0 КАК Приоритет,
	|	СоглашенияСКлиентами.Ссылка КАК Соглашение,
	|	СоглашенияСКлиентами.ИспользуютсяДоговорыКонтрагентов
	|ИЗ
	|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
	|ГДЕ
	|	СоглашенияСКлиентами.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И НЕ СоглашенияСКлиентами.Типовое
	|	И СоглашенияСКлиентами.Партнер = &Партнер
	|	И СоглашенияСКлиентами.Организация = &Организация
	|	И СоглашенияСКлиентами.ВидЦен = &ВидЦен
	|	И СоглашенияСКлиентами.Контрагент = &Контрагент
	|	И СоглашенияСКлиентами.Склад = &Склад
	|	И СоглашенияСКлиентами.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Действует)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	СоглашенияСКлиентами.Ссылка,
	|	СоглашенияСКлиентами.ИспользуютсяДоговорыКонтрагентов
	|ИЗ
	|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
	|ГДЕ
	|	СоглашенияСКлиентами.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И НЕ СоглашенияСКлиентами.Типовое
	|	И СоглашенияСКлиентами.Партнер = &Партнер
	|	И СоглашенияСКлиентами.Организация = &Организация
	|	И СоглашенияСКлиентами.ВидЦен = &ВидЦен
	|	И СоглашенияСКлиентами.Контрагент = &Контрагент
	|	И СоглашенияСКлиентами.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Действует)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	СоглашенияСКлиентами.Ссылка,
	|	СоглашенияСКлиентами.ИспользуютсяДоговорыКонтрагентов
	|ИЗ
	|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
	|ГДЕ
	|	СоглашенияСКлиентами.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И НЕ СоглашенияСКлиентами.Типовое
	|	И СоглашенияСКлиентами.Партнер = &Партнер
	|	И СоглашенияСКлиентами.Организация = &Организация
	|	И СоглашенияСКлиентами.ВидЦен = &ВидЦен
	|	И НЕ СоглашенияСКлиентами.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Закрыто)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4,
	|	СоглашенияСКлиентами.Ссылка,
	|	СоглашенияСКлиентами.ИспользуютсяДоговорыКонтрагентов
	|ИЗ
	|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
	|ГДЕ
	|	СоглашенияСКлиентами.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И НЕ СоглашенияСКлиентами.Типовое
	|	И СоглашенияСКлиентами.Партнер = &Партнер
	|	И ВЫБОР
	|			КОГДА СоглашенияСКлиентами.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СоглашенияСКлиентами.Организация = &Организация
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА СоглашенияСКлиентами.ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СоглашенияСКлиентами.ВидЦен = &ВидЦен
	|		КОНЕЦ
	|	И НЕ СоглашенияСКлиентами.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Закрыто)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	5,
	|	СоглашенияСКлиентами.Ссылка,
	|	СоглашенияСКлиентами.ИспользуютсяДоговорыКонтрагентов
	|ИЗ
	|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
	|ГДЕ
	|	СоглашенияСКлиентами.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И НЕ СоглашенияСКлиентами.Типовое
	|	И СоглашенияСКлиентами.Партнер = &Партнер
	|	И ВЫБОР
	|			КОГДА СоглашенияСКлиентами.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СоглашенияСКлиентами.Организация = &Организация
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА СоглашенияСКлиентами.ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СоглашенияСКлиентами.ВидЦен = &ВидЦен
	|		КОНЕЦ
	|	И СоглашенияСКлиентами.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Закрыто)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет";
	
	Возврат ТекстЗапроса;
КонецФункции

// Возвращает текст запроса поиска типовых соглашений.
//
// Возвращаемое значение:
//  Строка - текст запроса поиска типовых соглашений.
//
Функция ТекстЗапросаПоискаТиповыхСоглашений() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	0 КАК Приоритет,
	|	СоглашенияСКлиентами.Ссылка КАК Соглашение,
	|	СоглашенияСКлиентами.ИспользуютсяДоговорыКонтрагентов
	|ИЗ
	|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПартнерыСегмента КАК СегментыПартнеров
	|		ПО (ВЫБОР
	|				КОГДА НЕ &ИспользуютсяСегментыПартнеров
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ВЫБОР
	|						КОГДА СоглашенияСКлиентами.СегментПартнеров = ЗНАЧЕНИЕ(Справочник.СегментыПартнеров.ПустаяСсылка)
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ СоглашенияСКлиентами.СегментПартнеров = СегментыПартнеров.Сегмент
	|								И &Партнер = СегментыПартнеров.Партнер
	|					КОНЕЦ
	|			КОНЕЦ)
	|ГДЕ
	|	СоглашенияСКлиентами.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И СоглашенияСКлиентами.Типовое
	|	И СоглашенияСКлиентами.Организация = &Организация
	|	И СоглашенияСКлиентами.ВидЦен = &ВидЦен
	|	И СоглашенияСКлиентами.Склад = &Склад
	|	И СоглашенияСКлиентами.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Действует)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	СоглашенияСКлиентами.Ссылка,
	|	СоглашенияСКлиентами.ИспользуютсяДоговорыКонтрагентов
	|ИЗ
	|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПартнерыСегмента КАК СегментыПартнеров
	|		ПО (ВЫБОР
	|				КОГДА НЕ &ИспользуютсяСегментыПартнеров
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ВЫБОР
	|						КОГДА СоглашенияСКлиентами.СегментПартнеров = ЗНАЧЕНИЕ(Справочник.СегментыПартнеров.ПустаяСсылка)
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ СоглашенияСКлиентами.СегментПартнеров = СегментыПартнеров.Сегмент
	|								И &Партнер = СегментыПартнеров.Партнер
	|					КОНЕЦ
	|			КОНЕЦ)
	|ГДЕ
	|	СоглашенияСКлиентами.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И СоглашенияСКлиентами.Типовое
	|	И СоглашенияСКлиентами.Организация = &Организация
	|	И СоглашенияСКлиентами.ВидЦен = &ВидЦен
	|	И ВЫБОР
	|			КОГДА СоглашенияСКлиентами.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СоглашенияСКлиентами.Склад = &Склад
	|		КОНЕЦ
	|	И НЕ СоглашенияСКлиентами.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Закрыто)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	СоглашенияСКлиентами.Ссылка,
	|	СоглашенияСКлиентами.ИспользуютсяДоговорыКонтрагентов
	|ИЗ
	|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПартнерыСегмента КАК СегментыПартнеров
	|		ПО (ВЫБОР
	|				КОГДА НЕ &ИспользуютсяСегментыПартнеров
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ВЫБОР
	|						КОГДА СоглашенияСКлиентами.СегментПартнеров = ЗНАЧЕНИЕ(Справочник.СегментыПартнеров.ПустаяСсылка)
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ СоглашенияСКлиентами.СегментПартнеров = СегментыПартнеров.Сегмент
	|								И &Партнер = СегментыПартнеров.Партнер
	|					КОНЕЦ
	|			КОНЕЦ)
	|ГДЕ
	|	СоглашенияСКлиентами.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И СоглашенияСКлиентами.Типовое
	|	И СоглашенияСКлиентами.Организация = &Организация
	|	И ВЫБОР
	|			КОГДА СоглашенияСКлиентами.ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СоглашенияСКлиентами.ВидЦен = &ВидЦен
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА СоглашенияСКлиентами.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СоглашенияСКлиентами.Склад = &Склад
	|		КОНЕЦ
	|	И НЕ СоглашенияСКлиентами.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Закрыто)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	СоглашенияСКлиентами.Ссылка,
	|	СоглашенияСКлиентами.ИспользуютсяДоговорыКонтрагентов
	|ИЗ
	|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПартнерыСегмента КАК СегментыПартнеров
	|		ПО (ВЫБОР
	|				КОГДА НЕ &ИспользуютсяСегментыПартнеров
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ВЫБОР
	|						КОГДА СоглашенияСКлиентами.СегментПартнеров = ЗНАЧЕНИЕ(Справочник.СегментыПартнеров.ПустаяСсылка)
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ СоглашенияСКлиентами.СегментПартнеров = СегментыПартнеров.Сегмент
	|								И &Партнер = СегментыПартнеров.Партнер
	|					КОНЕЦ
	|			КОНЕЦ)
	|ГДЕ
	|	СоглашенияСКлиентами.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И СоглашенияСКлиентами.Типовое
	|	И ВЫБОР
	|			КОГДА СоглашенияСКлиентами.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СоглашенияСКлиентами.Организация = &Организация
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА СоглашенияСКлиентами.ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СоглашенияСКлиентами.ВидЦен = &ВидЦен
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА СоглашенияСКлиентами.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СоглашенияСКлиентами.Склад = &Склад
	|		КОНЕЦ
	|	И НЕ СоглашенияСКлиентами.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Закрыто)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4,
	|	СоглашенияСКлиентами.Ссылка,
	|	СоглашенияСКлиентами.ИспользуютсяДоговорыКонтрагентов
	|ИЗ
	|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПартнерыСегмента КАК СегментыПартнеров
	|		ПО (ВЫБОР
	|				КОГДА &ЭтоНовыйПартнер
	|					ТОГДА ИСТИНА
	|				КОГДА НЕ &ИспользуютсяСегментыПартнеров
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ВЫБОР
	|						КОГДА СоглашенияСКлиентами.СегментПартнеров = ЗНАЧЕНИЕ(Справочник.СегментыПартнеров.ПустаяСсылка)
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ СоглашенияСКлиентами.СегментПартнеров = СегментыПартнеров.Сегмент
	|								И &Партнер = СегментыПартнеров.Партнер
	|					КОНЕЦ
	|			КОНЕЦ)
	|ГДЕ
	|	СоглашенияСКлиентами.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И СоглашенияСКлиентами.Типовое
	|	И ВЫБОР
	|			КОГДА СоглашенияСКлиентами.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СоглашенияСКлиентами.Организация = &Организация
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА СоглашенияСКлиентами.ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СоглашенияСКлиентами.ВидЦен = &ВидЦен
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА СоглашенияСКлиентами.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СоглашенияСКлиентами.Склад = &Склад
	|		КОНЕЦ
	|	И СоглашенияСКлиентами.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Закрыто)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет";
	
	Возврат ТекстЗапроса;
КонецФункции

// Возвращает текст запроса для выборки реквизитов объектов.
//
// Параметры:
//  Индивидуальный - Булево - признак типа прайса.
//
// Возвращаемое значение:
//  Строка - текст запроса реквизитов прайса.
//
Функция ТекстЗапросаРеквизитовОбъектовПрайса(Индивидуальный) Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	&Параметр1,
	|	ТаблицаПрайса.ВидЦены КАК ВидЦены,
	|	ТаблицаПрайса.Цена КАК Цена,
	|	ТаблицаПрайса.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ТаблицаПрайса.РодительНоменклатуры КАК РодительНоменклатуры,
	|	ТаблицаПрайса.ЦеноваяГруппа КАК ЦеноваяГруппа,
	|	ТаблицаПрайса.СтрокаПоиска КАК СтрокаПоиска,
	|	ТаблицаПрайса.НоменклатураСсылка КАК НоменклатураСсылка,
	|	ТаблицаПрайса.УпаковкаСсылка КАК УпаковкаСсылка,
	|	ТаблицаПрайса.ВладелецУпаковкиСсылка КАК ВладелецУпаковкиСсылка,
	|	ТаблицаПрайса.ЕдиницаИзмеренияСсылка КАК ЕдиницаИзмеренияСсылка,
	|	ТаблицаПрайса.ХарактеристикаСсылка КАК ХарактеристикаСсылка,
	|	ТаблицаПрайса.ВидЦеныСсылка КАК ВидЦеныСсылка,
	|	ТаблицаПрайса.ИспользоватьУпаковки КАК ИспользоватьУпаковки,
	|	ТаблицаПрайса.ХарактеристикиИспользуются КАК ХарактеристикиИспользуются,
	|	ТаблицаПрайса.ИдНоменклатуры КАК ИдНоменклатуры,
	|	ТаблицаПрайса.ИдХарактеристики КАК ИдХарактеристики,
	|	ТаблицаПрайса.ИдУпаковки КАК ИдУпаковки,
	|	ТаблицаПрайса.Номенклатура КАК Номенклатура,
	|	ТаблицаПрайса.Упаковка КАК Упаковка,
	|	ТаблицаПрайса.ИспользоватьВес КАК ИспользоватьВес,
	|	ТаблицаПрайса.ИспользоватьКартинки КАК ИспользоватьКартинки,
	|	ТаблицаПрайса.ФайлКартинкиСсылка КАК ФайлКартинкиСсылка,
	|	ТаблицаПрайса.ТребуетсяОтправкаКартинки КАК ТребуетсяОтправкаКартинки,
	|	ТаблицаПрайса.ТребуетсяОтправкаТовара КАК ТребуетсяОтправкаТовара
	|ПОМЕСТИТЬ ВременныйПрайс
	|ИЗ
	|	&ТаблицаПрайса КАК ТаблицаПрайса
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	&Параметр2,
	|	ВидЦены,
	|	Цена,
	|	ВидНоменклатуры,
	|	РодительНоменклатуры,
	|	ЦеноваяГруппа,
	|	СтрокаПоиска,
	|	НоменклатураСсылка,
	|	УпаковкаСсылка,
	|	ВладелецУпаковкиСсылка,
	|	ЕдиницаИзмеренияСсылка,
	|	ХарактеристикаСсылка,
	|	ВидЦеныСсылка,
	|	ИспользоватьУпаковки,
	|	ХарактеристикиИспользуются,
	|	ИдНоменклатуры,
	|	ИдХарактеристики,
	|	ИдУпаковки,
	|	Номенклатура,
	|	Упаковка,
	|	ИспользоватьВес,
	|	ИспользоватьКартинки,
	|	ФайлКартинкиСсылка,
	|	ТребуетсяОтправкаКартинки,
	|	ТребуетсяОтправкаТовара
	|;";
	
	Если Индивидуальный Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Параметр1", "ТаблицаПрайса.ДоговорКлиента КАК ДоговорКлиента");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Параметр2", "ДоговорКлиента");
	Иначе	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Параметр1,", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Параметр2,", "");
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	&Параметр1,
	|	ТаблицаПрайса.ВидЦены,
	|	ТаблицаПрайса.Цена,
	|	ТаблицаПрайса.ВидНоменклатуры,
	|	ТаблицаПрайса.РодительНоменклатуры,
	|	ТаблицаПрайса.ЦеноваяГруппа,
	|	ТаблицаПрайса.СтрокаПоиска,
	|	ТаблицаПрайса.НоменклатураСсылка,
	|	ТаблицаПрайса.УпаковкаСсылка,
	|	ТаблицаПрайса.ВладелецУпаковкиСсылка,
	|	ТаблицаПрайса.ЕдиницаИзмеренияСсылка КАК НоменклатураЕдиницаИзмерения,
	|	ТаблицаПрайса.ХарактеристикаСсылка,
	|	ТаблицаПрайса.ВидЦеныСсылка,
	|	ТаблицаПрайса.ИспользоватьУпаковки,
	|	ТаблицаПрайса.ХарактеристикиИспользуются,
	|	ТаблицаПрайса.ИдНоменклатуры,
	|	ТаблицаПрайса.ИдХарактеристики,
	|	ТаблицаПрайса.ИдУпаковки,
	|	ТаблицаПрайса.ИспользоватьВес,
	|	ТаблицаПрайса.ФайлКартинкиСсылка,
	|	ТаблицаПрайса.ТребуетсяОтправкаКартинки,
	|	ТаблицаПрайса.ТребуетсяОтправкаТовара, &Параметр2, &Параметр3, &Параметр4, &Параметр5, &Параметр6
	|ИЗ
	|	ВременныйПрайс КАК ТаблицаПрайса
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО (СправочникНоменклатура.Ссылка = ТаблицаПрайса.НоменклатураСсылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЦен КАК СправочникВидыЦен
	|		ПО (СправочникВидыЦен.Ссылка = ТаблицаПрайса.ВидЦеныСсылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	|		ПО (УпаковкиНоменклатуры.Ссылка = ТаблицаПрайса.УпаковкаСсылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО (ТаблицаПрайса.ХарактеристикиИспользуются)
	|			И (ХарактеристикиНоменклатуры.Ссылка = ТаблицаПрайса.ХарактеристикаСсылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыМобильногоПриложения1СЗаказы КАК СоответствиеУпаковки
	|		ПО (СоответствиеУпаковки.ИдНоменклатуры = ТаблицаПрайса.ИдНоменклатуры)
	|			И (СоответствиеУпаковки.ИдХарактеристики = ТаблицаПрайса.ИдХарактеристики)
	|			И (СоответствиеУпаковки.ИдУпаковки = ТаблицаПрайса.ИдУпаковки)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыМобильногоПриложения1СЗаказы КАК СоответствиеНоменклатуры
	|		ПО (СоответствиеНоменклатуры.ИдНоменклатуры = ТаблицаПрайса.ИдНоменклатуры)
	|			И (СоответствиеНоменклатуры.ИдХарактеристики = ТаблицаПрайса.ИдХарактеристики)
	|			И (СоответствиеНоменклатуры.ИдУпаковки = """")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НоменклатураПрисоединенныеФайлы КАК ФайлыНоменклатуры
	|		ПО (ФайлыНоменклатуры.Ссылка = СправочникНоменклатура.ФайлКартинки)
	|			И (ТаблицаПрайса.ТребуетсяОтправкаКартинки)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНДСНоменклатуры.СрезПоследних(&Период,
	|			Страна = &СтранаРегистрации ИЛИ Страна = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) КАК СтавкиНДСНоменклатуры
	|		ПО ТаблицаПрайса.НоменклатураСсылка = СтавкиНДСНоменклатуры.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСтавкиНДС.СрезПоследних(&Период, Страна = &СтранаРегистрации) КАК ОсновныеСтавкиНДС
	|		ПО (ИСТИНА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВременныйПрайс";
	
	ТекстНоменклатура = "
	|	СправочникНоменклатура.ПометкаУдаления КАК НоменклатураПометкаУдаления,
	|	СправочникНоменклатура.Код КАК НоменклатураКод,
	|	СправочникНоменклатура.НаименованиеПолное КАК НоменклатураНаименованиеПолное,
	|	СправочникНоменклатура.Артикул КАК НоменклатураАртикул,
	|	ЕСТЬNULL(СтавкиНДСНоменклатуры.СтавкаНДС, ЕСТЬNULL(ОсновныеСтавкиНДС.СтавкаНДС, ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка))) КАК СтавкаНДССсылка,
	|	ВЫБОР
	|		КОГДА НЕ СправочникНоменклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Услуга,
	|	СправочникНоменклатура.Родитель КАК НоменклатураРодитель,
	|	СправочникНоменклатура.Родитель.ПометкаУдаления КАК НоменклатураРодительПометкаУдаления,
	|	СправочникНоменклатура.Родитель.Родитель КАК НоменклатураРодительРодитель,
	|	СправочникНоменклатура.Родитель.Код КАК НоменклатураРодительКод,
	|	СправочникНоменклатура.ВидНоменклатуры КАК НоменклатураВидНоменклатуры,
	|	СправочникНоменклатура.ВидНоменклатуры.ПометкаУдаления КАК НоменклатураВидНоменклатурыПометкаУдаления,
	|	СправочникНоменклатура.ВидНоменклатуры.Родитель КАК НоменклатураВидНоменклатурыРодитель,
	|	СправочникНоменклатура.ЦеноваяГруппа КАК НоменклатураЦеноваяГруппа,
	|	СправочникНоменклатура.ЦеноваяГруппа.ПометкаУдаления КАК НоменклатураЦеноваяГруппаПометкаУдаления,
	|	СправочникНоменклатура.ЦеноваяГруппа.Описание КАК НоменклатураЦеноваяГруппаОписание,
	|	СправочникНоменклатура.ЕдиницаИзмерения.Код КАК НоменклатураЕдиницаИзмеренияКод,
	|	СправочникНоменклатура.ЕдиницаИзмерения.ПометкаУдаления КАК НоменклатураЕдиницаИзмеренияПометкаУдаления,
	|	СправочникНоменклатура.ЕдиницаИзмерения.МеждународноеСокращение КАК НоменклатураЕдиницаИзмеренияМеждународноеСокращение,
	|	СправочникНоменклатура.ЕдиницаИзмерения.НаименованиеПолное КАК НоменклатураЕдиницаИзмеренияНаименованиеПолное,
	|	СправочникНоменклатура.ЕдиницаИзмерения.ИмяПредопределенныхДанных КАК НоменклатураЕдиницаИзмеренияИмяПредопределенныхДанных,
	|	СправочникНоменклатура.ВесЕдиницаИзмерения КАК ВесУпаковкаСсылка,
	|	СправочникНоменклатура.ВесИспользовать,
	|	СправочникНоменклатура.ВесМожноУказыватьВДокументах,
	|	СправочникНоменклатура.ВесЗнаменатель,
	|	СправочникНоменклатура.ВесЧислитель,
	|	ВЫРАЗИТЬ(СправочникНоменклатура.Описание КАК СТРОКА(1000)) КАК НоменклатураОписание";
	
	ТекстФайлаКартинки = "
	|	ЕСТЬNULL(ФайлыНоменклатуры.Наименование, """") КАК ФайлКартинкиНаименование,
	|	ЕСТЬNULL(ФайлыНоменклатуры.ПометкаУдаления, ЛОЖЬ) КАК ФайлКартинкиПометкаУдаления,
	|	ЕСТЬNULL(ФайлыНоменклатуры.ВладелецФайла, """") КАК ФайлКартинкиВладелецФайла,
	|	ЕСТЬNULL(ФайлыНоменклатуры.ДатаСоздания, """") КАК ФайлКартинкиДатаСоздания,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ФайлыНоменклатуры.Описание, """") КАК СТРОКА(1000)) КАК ФайлКартинкиОписание,
	|	ЕСТЬNULL(ФайлыНоменклатуры.Размер, 0) КАК ФайлКартинкиРазмер,
	|	ЕСТЬNULL(ФайлыНоменклатуры.Расширение, """") КАК ФайлКартинкиРасширение";
	
	ТекстУпаковка = "
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ПометкаУдаления, ЛОЖЬ) КАК УпаковкиНоменклатурыПометкаУдаления,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.Наименование, """") КАК УпаковкиНоменклатурыНаименование,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК УпаковкиНоменклатурыКоэффициент,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК УпаковкиНоменклатурыЕдиницаИзмерения,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ЕдиницаИзмерения.Код, """") КАК УпаковкиНоменклатурыЕдиницаИзмеренияКод,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ЕдиницаИзмерения.ПометкаУдаления, ЛОЖЬ) КАК УпаковкиНоменклатурыЕдиницаИзмеренияПометкаУдаления,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ЕдиницаИзмерения.МеждународноеСокращение, """") КАК УпаковкиНоменклатурыЕдиницаИзмеренияМеждународноеСокращение,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ЕдиницаИзмерения.НаименованиеПолное, """") КАК УпаковкиНоменклатурыЕдиницаИзмеренияНаименованиеПолное,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ЕдиницаИзмерения.ИмяПредопределенныхДанных, """") КАК УпаковкиНоменклатурыЕдиницаИзмеренияИмяПредопределенныхДанных,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ВесЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК УпаковкиНоменклатурыВесЕдиницаИзмерения,
	|	ЕСТЬNULL(&ТекстЗапросаВесУпаковки, 0) КАК УпаковкиНоменклатурыВес,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ВесЕдиницаИзмерения.Код, """") КАК УпаковкиНоменклатурыВесЕдиницаИзмеренияКод,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ВесЕдиницаИзмерения.ПометкаУдаления, ЛОЖЬ) КАК УпаковкиНоменклатурыВесЕдиницаИзмеренияПометкаУдаления,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ВесЕдиницаИзмерения.МеждународноеСокращение, """") КАК УпаковкиНоменклатурыВесЕдиницаИзмеренияМеждународноеСокращение,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ВесЕдиницаИзмерения.НаименованиеПолное, """") КАК УпаковкиНоменклатурыВесЕдиницаИзмеренияНаименованиеПолное,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ВесЕдиницаИзмерения.ИмяПредопределенныхДанных, """") КАК УпаковкиНоменклатурыВесЕдиницаИзмеренияИмяПредопределенныхДанных,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.Родитель, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК УпаковкиНоменклатурыРодитель";
	
	ТекстПрочее = "
	|	ЕСТЬNULL(ХарактеристикиНоменклатуры.НаименованиеПолное, """") КАК ХарактеристикаНаименованиеПолное,
	|	СправочникВидыЦен.Наименование КАК ВидЦеныНаименование,
	|	СправочникВидыЦен.ПометкаУдаления КАК ВидЦеныПометкаУдаления,
	|	СправочникВидыЦен.ЦенаВключаетНДС КАК ВидЦеныЦенаВключаетНДС";
	
	ТекстПоискаСоответствия = "
	|	ВЫБОР
	|		КОГДА ТаблицаПрайса.ХарактеристикиИспользуются
	|			ТОГДА ЕСТЬNULL(СоответствиеНоменклатуры.ИдОбъектаМП, """")
	|		ИНАЧЕ ТаблицаПрайса.ИдНоменклатуры
	|	КОНЕЦ КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаПрайса.ХарактеристикиИспользуются
	|			ТОГДА ВЫБОР
	|					КОГДА СоответствиеНоменклатуры.ИдОбъектаМП ЕСТЬ NULL 
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЗаписатьСоответствиеНоменклатуры,
	|	ВЫБОР
	|		КОГДА ТаблицаПрайса.ХарактеристикиИспользуются
	|			ТОГДА ЕСТЬNULL(СоответствиеУпаковки.ИдОбъектаМП, """")
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ТаблицаПрайса.ИспользоватьУпаковки
	|					ТОГДА ВЫБОР
	|							КОГДА ТИПЗНАЧЕНИЯ(ТаблицаПрайса.ВладелецУпаковкиСсылка) = ТИП(Справочник.Номенклатура)
	|								ТОГДА ВЫБОР
	|										КОГДА НЕ ТаблицаПрайса.УпаковкаСсылка = ТаблицаПрайса.ЕдиницаИзмеренияСсылка
	|											ТОГДА ТаблицаПрайса.ИдУпаковки
	|										ИНАЧЕ ЕСТЬNULL(СоответствиеУпаковки.ИдОбъектаМП, """")
	|									КОНЕЦ
	|							ИНАЧЕ ЕСТЬNULL(СоответствиеУпаковки.ИдОбъектаМП, """")
	|						КОНЕЦ
	|				ИНАЧЕ ЕСТЬNULL(СоответствиеУпаковки.ИдОбъектаМП, """")
	|			КОНЕЦ
	|	КОНЕЦ КАК Упаковка,
	|	ВЫБОР
	|		КОГДА ТаблицаПрайса.ХарактеристикиИспользуются
	|			ТОГДА ВЫБОР
	|					КОГДА СоответствиеУпаковки.ИдОбъектаМП ЕСТЬ NULL 
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ТаблицаПрайса.ИспользоватьУпаковки
	|					ТОГДА ВЫБОР
	|							КОГДА ТИПЗНАЧЕНИЯ(ТаблицаПрайса.ВладелецУпаковкиСсылка) = ТИП(Справочник.Номенклатура)
	|								ТОГДА ВЫБОР
	|										КОГДА НЕ ТаблицаПрайса.УпаковкаСсылка = ТаблицаПрайса.ЕдиницаИзмеренияСсылка
	|											ТОГДА ЛОЖЬ
	|										ИНАЧЕ ВЫБОР
	|												КОГДА СоответствиеУпаковки.ИдОбъектаМП ЕСТЬ NULL 
	|													ТОГДА ИСТИНА
	|												ИНАЧЕ ЛОЖЬ
	|											КОНЕЦ
	|									КОНЕЦ
	|						КОНЕЦ
	|				ИНАЧЕ ВЫБОР
	|						КОГДА СоответствиеУпаковки.ИдОбъектаМП ЕСТЬ NULL 
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК ЗаписатьСоответствиеУпаковки";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Параметр1", ?(Индивидуальный, "ТаблицаПрайса.ДоговорКлиента", "ЛОЖЬ КАК Выгружен"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Параметр2", ТекстНоменклатура);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Параметр3", ТекстФайлаКартинки);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Параметр4", ТекстУпаковка);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Параметр5", ТекстПрочее);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Параметр6", ТекстПоискаСоответствия);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"УпаковкиНоменклатуры", "СправочникНоменклатура"));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаВесУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
			"УпаковкиНоменклатуры", "СправочникНоменклатура"));
	
	Возврат ТекстЗапроса;
КонецФункции

// Возвращает соответствие имен данных между ERP и 1С Заказы для замены в итоговом сообщении
//
// Параметры:
//  Выгрузка - Булево - Выгрузка - Истина, Загрузка - Ложь
// 
// Возвращаемое значение:
// Соответствие из КлючИЗначение:
// * Ключ - Строка
// * Значение - Строка
Функция СоответствиеНаЗамену(Выгрузка = Истина) Экспорт
	
	Результат = Новый Соответствие;
	
	Если Метаданные.ВариантВстроенногоЯзыка = Метаданные.СвойстваОбъектов.ВариантВстроенногоЯзыка.Русский Тогда
		Возврат Результат;
	КонецЕсли;
	
	Если Выгрузка Тогда
		Результат.Вставить(Метаданные.ПланыОбмена.МобильноеПриложениеЗаказыКлиентов.Имя, "МобильноеПриложениеЗаказыКлиентов"); //@NON-NLS-1
		Результат.Вставить("CatalogRef." + Метаданные.Справочники.Партнеры.Имя, "CatalogRef.Клиенты"); //@NON-NLS-1 @NON-NLS-2
		Результат.Вставить("CatalogRef." + Метаданные.Справочники.КонтактныеЛицаПартнеров.Имя, "CatalogRef.КонтактныеЛицаКлиентов"); //@NON-NLS-1 @NON-NLS-2
	Иначе
		Результат.Вставить("МобильноеПриложениеЗаказыКлиентов", Метаданные.ПланыОбмена.МобильноеПриложениеЗаказыКлиентов.Имя); //@NON-NLS-1
		Результат.Вставить("CatalogRef.Клиенты", "CatalogRef." + Метаданные.Справочники.Партнеры.Имя); //@NON-NLS-1 @NON-NLS-2
		Результат.Вставить("CatalogRef.КонтактныеЛицаКлиентов", "CatalogRef." + Метаданные.Справочники.КонтактныеЛицаПартнеров.Имя); //@NON-NLS-1 @NON-NLS-2
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Возвращает соответствие имен данных между ERP и 1С Заказы
//
// Возвращаемое значение:
// Соответствие из КлючИЗначение:
// * Ключ - Строка
// * Значение - Строка
Функция СоответствиеИменПартнеровИКлиентов() Экспорт
	
	КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
	
	Результат = Новый Соответствие;
	
	Результат.Вставить(Справочники.ВидыКонтактнойИнформации.СправочникПартнеры.ИмяПредопределенныхДанных, 
						"СправочникКлиенты"); //@NON-NLS-1
	Результат.Вставить(Справочники.ВидыКонтактнойИнформации.СправочникКонтактныеЛицаПартнеров.ИмяПредопределенныхДанных, 
						"СправочникКонтактныеЛицаКлиентов"); //@NON-NLS-1
	Результат.Вставить(Справочники.ВидыКонтактнойИнформации.СправочникСклады.ИмяПредопределенныхДанных, 
						"СправочникСклады"); //@NON-NLS-1
	Результат.Вставить(Справочники.ВидыКонтактнойИнформации.СправочникОрганизации.ИмяПредопределенныхДанных, 
						"СправочникОрганизации"); //@NON-NLS-1
	
	ЛокальноеИмя = НСтр("ru = 'Контактная информация справочника ""Контактные лица партнеров""'", КодОсновногоЯзыка);
	ЗаказыЛокальноеИмя = "Контактная информация справочника ""Контактные лица клиентов"""; //@NON-NLS-1
	Результат.Вставить(ЛокальноеИмя, ЗаказыЛокальноеИмя);

	ЛокальноеИмя = НСтр("ru = 'Контактная информация справочника ""Партнеры""'", КодОсновногоЯзыка);
	ЗаказыЛокальноеИмя = "Контактная информация справочника ""Клиенты"""; //@NON-NLS-1
	Результат.Вставить(ЛокальноеИмя, ЗаказыЛокальноеИмя);

	ЛокальноеИмя = "CatalogTabularSectionRow.КонтактныеЛицаПартнеров.КонтактнаяИнформация"; //@NON-NLS-1
	ЗаказыЛокальноеИмя = "CatalogTabularSectionRow.КонтактныеЛицаКлиентов.КонтактнаяИнформация"; //@NON-NLS-1
	Результат.Вставить(ЛокальноеИмя, ЗаказыЛокальноеИмя);
	
	ЛокальноеИмя = "CatalogTabularSectionRow.Партнеры.КонтактнаяИнформация"; //@NON-NLS-1
	ЗаказыЛокальноеИмя = "CatalogTabularSectionRow.Клиенты.КонтактнаяИнформация"; //@NON-NLS-1
	Результат.Вставить(ЛокальноеИмя, ЗаказыЛокальноеИмя);
	
	Возврат Результат;
	
КонецФункции

// Возвращает соответствие имен данных между типом XDTO и Перечислением ЮрФизЛицо
//
// Возвращаемое значение:
// Соответствие из КлючИЗначение:
// * Ключ - Строка
// * Значение - Строка
Функция СоответствиеТиповЮрФизЛицо() Экспорт
	
	Результат = Новый Соответствие;
	
	Результат.Вставить(Перечисления.ЮрФизЛицо.ЮрЛицо, "ЮрЛицо"); //@NON-NLS-1
	Результат.Вставить(Перечисления.ЮрФизЛицо.ФизЛицо, "ФизЛицо"); //@NON-NLS-1
	Результат.Вставить(Перечисления.ЮрФизЛицо.ЮрЛицоНеРезидент, "ЮрЛицоНеРезидент"); //@NON-NLS-1
	Результат.Вставить(Перечисления.ЮрФизЛицо.ИндивидуальныйПредприниматель, "ИндивидуальныйПредприниматель"); //@NON-NLS-1
	
	Результат.Вставить("ЮрЛицо", Перечисления.ЮрФизЛицо.ЮрЛицо); //@NON-NLS-1
	Результат.Вставить("ФизЛицо", Перечисления.ЮрФизЛицо.ФизЛицо); //@NON-NLS-1
	Результат.Вставить("ЮрЛицоНеРезидент", Перечисления.ЮрФизЛицо.ЮрЛицоНеРезидент); //@NON-NLS-1
	Результат.Вставить("ИндивидуальныйПредприниматель", Перечисления.ЮрФизЛицо.ИндивидуальныйПредприниматель); //@NON-NLS-1

	Возврат Результат;
	
КонецФункции

// Возвращает соответствие имен данных между типом XDTO и Перечислением ТипыКонтактнойИнформации
//
// Возвращаемое значение:
// Соответствие из КлючИЗначение:
// * Ключ - Строка
// * Значение - Строка
Функция СоответствиеТиповКонтактнойИнформации() Экспорт
	
	Результат = Новый Соответствие;
	
	Результат.Вставить(Перечисления.ТипыКонтактнойИнформации.Адрес, "Адрес"); //@NON-NLS-1
	Результат.Вставить(Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты, "АдресЭлектроннойПочты"); //@NON-NLS-1
	Результат.Вставить(Перечисления.ТипыКонтактнойИнформации.Факс, "Факс"); //@NON-NLS-1
	Результат.Вставить(Перечисления.ТипыКонтактнойИнформации.Другое, "Другое"); //@NON-NLS-1
	Результат.Вставить(Перечисления.ТипыКонтактнойИнформации.Телефон, "Телефон"); //@NON-NLS-1
	Результат.Вставить(Перечисления.ТипыКонтактнойИнформации.Skype, "Skype"); //@NON-NLS-1
	Результат.Вставить(Перечисления.ТипыКонтактнойИнформации.ВебСтраница, "ВебСтраница"); //@NON-NLS-1

	Возврат Результат;
	
КонецФункции

// Возвращает соответствие имен данных между типом XDTO и Перечислением ФормыОплаты
//
// Возвращаемое значение:
// Соответствие из КлючИЗначение:
// * Ключ - Строка
// * Значение - Строка
Функция СоответствиеТиповФормыОплаты() Экспорт
	
	Результат = Новый Соответствие;
	
	Результат.Вставить(Перечисления.ФормыОплаты.Наличная, "Наличная"); //@NON-NLS-1
	Результат.Вставить(Перечисления.ФормыОплаты.Безналичная, "Безналичная"); //@NON-NLS-1
	Результат.Вставить(Перечисления.ФормыОплаты.ПлатежнаяКарта, "ПлатежнаяКарта"); //@NON-NLS-1
	Результат.Вставить(Перечисления.ФормыОплаты.Взаимозачет, "Взаимозачет"); //@NON-NLS-1

	Результат.Вставить("Наличная", Перечисления.ФормыОплаты.Наличная); //@NON-NLS-1
	Результат.Вставить("Безналичная", Перечисления.ФормыОплаты.Безналичная); //@NON-NLS-1
	Результат.Вставить("ПлатежнаяКарта", Перечисления.ФормыОплаты.ПлатежнаяКарта); //@NON-NLS-1
	Результат.Вставить("Взаимозачет", Перечисления.ФормыОплаты.Взаимозачет); //@NON-NLS-1
	
	Возврат Результат;
	
КонецФункции

// Возвращает соответствие имен данных между типом XDTO и Перечислением СистемыНалогообложения
//
// Возвращаемое значение:
// Соответствие из КлючИЗначение:
// * Ключ - Строка
// * Значение - Строка
Функция СоответствиеТиповСистемыНалогообложения() Экспорт
	
	Результат = Новый Соответствие;
	
	Результат.Вставить(Перечисления.СистемыНалогообложения.Общая, "Общая"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СистемыНалогообложения.Упрощенная, "Упрощенная"); //@NON-NLS-1

	Возврат Результат;
	
КонецФункции

// Возвращает соответствие имен данных между именами предопределенных значений справочника "Виды контакнтой информации"
//
// Возвращаемое значение:
// Соответствие из КлючИЗначение:
// * Ключ - Строка
// * Значение - Строка
Функция СоответствиеПредопределенныеВидыКонтактнойИнформации() Экспорт
	
	Результат = Новый Соответствие;
	
	Результат.Вставить("СправочникКонтактныеЛицаПартнеров", "СправочникКонтактныеЛицаПартнеров"); //@NON-NLS-2
	Результат.Вставить("СправочникКонтрагенты", "СправочникКонтрагенты"); //@NON-NLS-2
	Результат.Вставить("СправочникОрганизации", "СправочникОрганизации"); //@NON-NLS-2
	Результат.Вставить("СправочникПартнеры", "СправочникПартнеры"); //@NON-NLS-2
	Результат.Вставить("СправочникПользователи", "СправочникПользователи"); //@NON-NLS-2
	Результат.Вставить("СправочникРегистрацииВНалоговомОргане", "СправочникРегистрацииВНалоговомОргане"); //@NON-NLS-2
	Результат.Вставить("СправочникСклады", "СправочникСклады"); //@NON-NLS-2
	Результат.Вставить("СправочникТорговыеТочки", "СправочникТорговыеТочки"); //@NON-NLS-2
	Результат.Вставить("СправочникФизическиеЛица", "СправочникФизическиеЛица"); //@NON-NLS-2
	Результат.Вставить("АдресТорговойТочки", "АдресТорговойТочки"); //@NON-NLS-2
	Результат.Вставить("МобильныйТелефонКонтактногоЛица", "МобильныйТелефонКонтактногоЛица"); //@NON-NLS-2
	Результат.Вставить("ТелефонКонтактногоЛица", "ТелефонКонтактногоЛица"); //@NON-NLS-2
	Результат.Вставить("EmailКонтактногоЛица", "EmailКонтактногоЛица"); //@NON-NLS-2
	Результат.Вставить("ДругаяИнформацияКонтрагенты", "ДругаяИнформацияКонтрагенты"); //@NON-NLS-2
	Результат.Вставить("МеждународныйАдресКонтрагента", "МеждународныйАдресКонтрагента"); //@NON-NLS-2
	Результат.Вставить("ПочтовыйАдресКонтрагента", "ПочтовыйАдресКонтрагента"); //@NON-NLS-2
	Результат.Вставить("ТелефонКонтрагента", "ТелефонКонтрагента"); //@NON-NLS-2
	Результат.Вставить("ФаксКонтрагенты", "ФаксКонтрагенты"); //@NON-NLS-2
	Результат.Вставить("ФактАдресКонтрагента", "ФактАдресКонтрагента"); //@NON-NLS-2
	Результат.Вставить("EmailКонтрагента", "EmailКонтрагента"); //@NON-NLS-2
	Результат.Вставить("ЮрАдресКонтрагента", "ЮрАдресКонтрагента"); //@NON-NLS-2
	Результат.Вставить("ДругаяИнформацияОрганизации", "ДругаяИнформацияОрганизации"); //@NON-NLS-2
	Результат.Вставить("МеждународныйАдресОрганизации", "МеждународныйАдресОрганизации"); //@NON-NLS-2
	Результат.Вставить("ПочтовыйАдресОрганизации", "ПочтовыйАдресОрганизации"); //@NON-NLS-2
	Результат.Вставить("ТелефонОрганизации", "ТелефонОрганизации"); //@NON-NLS-2
	Результат.Вставить("ФаксОрганизации", "ФаксОрганизации"); //@NON-NLS-2
	Результат.Вставить("ФактАдресОрганизации", "ФактАдресОрганизации"); //@NON-NLS-2
	Результат.Вставить("EmailОрганизации", "EmailОрганизации"); //@NON-NLS-2
	Результат.Вставить("ЮрАдресОрганизации", "ЮрАдресОрганизации"); //@NON-NLS-2
	Результат.Вставить("АдресПартнера", "АдресКлиента"); //@NON-NLS-2
	Результат.Вставить("ТелефонПартнера", "ТелефонКлиента"); //@NON-NLS-2
	Результат.Вставить("EmailПартнера", "EmailКлиента"); //@NON-NLS-2
	Результат.Вставить("ТелефонПользователя", "ТелефонПользователя"); //@NON-NLS-2
	Результат.Вставить("EmailПользователя", "EmailПользователя"); //@NON-NLS-2
	Результат.Вставить("АдресНалоговогоОргана", "АдресНалоговогоОргана"); //@NON-NLS-2
	Результат.Вставить("ТелефонНалоговогоОргана", "ТелефонНалоговогоОргана"); //@NON-NLS-2
	Результат.Вставить("ФактАдресОбособленногоПодразделения", "ФактАдресОбособленногоПодразделения"); //@NON-NLS-2
	Результат.Вставить("АдресСклада", "АдресСклада"); //@NON-NLS-2
	Результат.Вставить("ТелефонСклада", "ТелефонСклада"); //@NON-NLS-2
	Результат.Вставить("EMailФизическиеЛица", "EMailФизическиеЛица"); //@NON-NLS-2
	Результат.Вставить("АдресДляИнформированияФизическиеЛица", "АдресДляИнформированияФизическиеЛица"); //@NON-NLS-2
	Результат.Вставить("АдресЗаПределамиРФФизическиеЛица", "АдресЗаПределамиРФФизическиеЛица"); //@NON-NLS-2
	Результат.Вставить("АдресМестаПроживанияФизическиеЛица", "АдресМестаПроживанияФизическиеЛица"); //@NON-NLS-2
	Результат.Вставить("АдресПоПропискеФизическиеЛица", "АдресПоПропискеФизическиеЛица"); //@NON-NLS-2
	Результат.Вставить("ТелефонДомашнийФизическиеЛица", "ТелефонДомашнийФизическиеЛица"); //@NON-NLS-2
	Результат.Вставить("ТелефонМобильныйФизическиеЛица", "ТелефонМобильныйФизическиеЛица"); //@NON-NLS-2
	Результат.Вставить("ТелефонРабочийФизическиеЛица", "ТелефонРабочийФизическиеЛица"); //@NON-NLS-2
	
	Возврат Результат;
	
КонецФункции

// Возвращает соответствие имен данных между типом XDTO и Перечислением СтатусыЗаказовКлиентов
//
// Возвращаемое значение:
// Соответствие из КлючИЗначение:
// * Ключ - Строка
// * Значение - Строка
Функция СоответствиеТиповСтатусыЗаказовКлиентов() Экспорт
	
	Результат = Новый Соответствие;
	
	Результат.Вставить(Перечисления.СтатусыЗаказовКлиентов.НеСогласован, "НеСогласован"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СтатусыЗаказовКлиентов.КОбеспечению, "КОбеспечению"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СтатусыЗаказовКлиентов.КОтгрузке, "КОтгрузке"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СтатусыЗаказовКлиентов.Закрыт, "Закрыт"); //@NON-NLS-1

	Возврат Результат;
	
КонецФункции

// Возвращает соответствие имен данных между типом XDTO и Перечислением СостоянияЗаявокНаВозврат
//
// Возвращаемое значение:
// Соответствие из КлючИЗначение:
// * Ключ - Строка
// * Значение - Строка
Функция СоответствиеТиповСостоянияЗаявокНаВозврат() Экспорт
	
	Результат = Новый Соответствие;
	
	Результат.Вставить(Перечисления.СостоянияЗаявокНаВозвратТоваровОтКлиентов.ОжидаетсяСогласование, 
			"ОжидаетсяСогласование"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СостоянияЗаявокНаВозвратТоваровОтКлиентов.ГотоваКВозврату, 
			"ГотоваКВозврату"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СостоянияЗаявокНаВозвратТоваровОтКлиентов.ОжидаетсяАвансИлиВозвратДоОбеспечения,
			"ОжидаетсяАвансИлиВозвратДоОбеспечения"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СостоянияЗаявокНаВозвратТоваровОтКлиентов.ГотоваКОбеспечению,
			"ГотоваКОбеспечению"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СостоянияЗаявокНаВозвратТоваровОтКлиентов.ОжидаетсяПредоплатаИлиВозвратДоОтгрузки,
			"ОжидаетсяПредоплатаИлиВозвратДоОтгрузки"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СостоянияЗаявокНаВозвратТоваровОтКлиентов.ОжидаетсяОбеспечение,
			"ОжидаетсяОбеспечение"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СостоянияЗаявокНаВозвратТоваровОтКлиентов.ГотоваКОтгрузке,
			"ГотоваКОтгрузке"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СостоянияЗаявокНаВозвратТоваровОтКлиентов.ВПроцессеОтгрузки,
			"ВПроцессеОтгрузки"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СостоянияЗаявокНаВозвратТоваровОтКлиентов.ОжидаетсяОплатаИлиВозвратПослеОтгрузки,
			"ОжидаетсяОплатаИлиВозвратПослеОтгрузки"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СостоянияЗаявокНаВозвратТоваровОтКлиентов.ОжидаетсяВыполнение,
			"ОжидаетсяВыполнение"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СостоянияЗаявокНаВозвратТоваровОтКлиентов.Выполнена,
			"Выполнена"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СостоянияЗаявокНаВозвратТоваровОтКлиентов.Отклонена,
			"Отклонена"); //@NON-NLS-1

	Возврат Результат;
	
КонецФункции

// Возвращает соответствие имен данных между типом XDTO и Перечислением СостоянияЗаказовКлиентов
//
// Возвращаемое значение:
// Соответствие из КлючИЗначение:
// * Ключ - Строка
// * Значение - Строка
Функция СоответствиеТиповСостоянияЗаказовКлиентов() Экспорт
	
	Результат = Новый Соответствие;
	
	Результат.Вставить(Перечисления.СостоянияЗаказовКлиентов.ОжидаетсяСогласование, "ОжидаетсяСогласование"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СостоянияЗаказовКлиентов.ОжидаетсяАвансДоОбеспечения, "ОжидаетсяАвансДоОбеспечения"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СостоянияЗаказовКлиентов.ГотовКОбеспечению, "ГотовКОбеспечению"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СостоянияЗаказовКлиентов.ОжидаетсяПредоплатаДоОтгрузки, "ОжидаетсяПредоплатаДоОтгрузки"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СостоянияЗаказовКлиентов.ОжидаетсяОбеспечение, "ОжидаетсяОбеспечение"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СостоянияЗаказовКлиентов.ГотовКОтгрузке, "ГотовКОтгрузке"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СостоянияЗаказовКлиентов.ВПроцессеОтгрузки, "ВПроцессеОтгрузки"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СостоянияЗаказовКлиентов.ОжидаетсяОплатаПослеОтгрузки, "ОжидаетсяОплатаПослеОтгрузки"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СостоянияЗаказовКлиентов.ГотовКЗакрытию, "ГотовКЗакрытию"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СостоянияЗаказовКлиентов.Закрыт, "Закрыт"); //@NON-NLS-1

	Возврат Результат;
	
КонецФункции

// Возвращает соответствие имен данных между типом XDTO и Перечислением СпособыКомпенсацииВозвратовТоваров
//
// Возвращаемое значение:
// Соответствие из КлючИЗначение:
// * Ключ - Строка
// * Значение - Строка
Функция СоответствиеТиповСпособыКомпенсацииВозвратовТоваров() Экспорт
	
	Результат = Новый Соответствие;
	
	Результат.Вставить(Перечисления.СпособыКомпенсацииВозвратовТоваров.ЗаменитьТовары, "ЗаменитьТовары"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СпособыКомпенсацииВозвратовТоваров.ВернутьДенежныеСредства, "ВернутьДенежныеСредства"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СпособыКомпенсацииВозвратовТоваров.ОставитьВКачествеАванса, "ОставитьВКачествеАванса"); //@NON-NLS-1

	Результат.Вставить("ЗаменитьТовары", Перечисления.СпособыКомпенсацииВозвратовТоваров.ЗаменитьТовары); //@NON-NLS-1
	Результат.Вставить("ВернутьДенежныеСредства", Перечисления.СпособыКомпенсацииВозвратовТоваров.ВернутьДенежныеСредства); //@NON-NLS-1
	Результат.Вставить("ОставитьВКачествеАванса", Перечисления.СпособыКомпенсацииВозвратовТоваров.ОставитьВКачествеАванса); //@NON-NLS-1
	
	Возврат Результат;
	
КонецФункции

// Возвращает соответствие имен данных между типом XDTO и Перечислением СтатусыЗаданийТорговымПредставителям
//
// Возвращаемое значение:
// Соответствие из КлючИЗначение:
// * Ключ - Строка
// * Значение - Строка
Функция СоответствиеТиповСтатусыЗаданийТорговымПредставителям() Экспорт
	
	Результат = Новый Соответствие;
	
	Результат.Вставить(Перечисления.СтатусыЗаданийТорговымПредставителям.НеПодготовлено, "НеПодготовлено"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СтатусыЗаданийТорговымПредставителям.КОтработке, "КОтработке"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СтатусыЗаданийТорговымПредставителям.Отработано, "Отработано"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СтатусыЗаданийТорговымПредставителям.НеОтработано, "НеОтработано"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СтатусыЗаданийТорговымПредставителям.Отменено, "Отменено"); //@NON-NLS-1

	Результат.Вставить("НеПодготовлено", Перечисления.СтатусыЗаданийТорговымПредставителям.НеПодготовлено); //@NON-NLS-1
	Результат.Вставить("КОтработке", Перечисления.СтатусыЗаданийТорговымПредставителям.КОтработке); //@NON-NLS-1
	Результат.Вставить("Отработано", Перечисления.СтатусыЗаданийТорговымПредставителям.Отработано); //@NON-NLS-1
	Результат.Вставить("НеОтработано", Перечисления.СтатусыЗаданийТорговымПредставителям.НеОтработано); //@NON-NLS-1
	Результат.Вставить("Отменено", Перечисления.СтатусыЗаданийТорговымПредставителям.Отменено); //@NON-NLS-1

	Возврат Результат;
	
КонецФункции

// Возвращает соответствие имен данных между типом XDTO и Перечислением СтатусыЗаявокНаВозвратТоваровОтКлиентов
//
// Возвращаемое значение:
// Соответствие из КлючИЗначение:
// * Ключ - Строка
// * Значение - Строка
Функция СоответствиеТиповСтатусыЗаявокНаВозвратТоваровОтКлиентов() Экспорт
	
	Результат = Новый Соответствие;
	
	Результат.Вставить(Перечисления.СтатусыЗаявокНаВозвратТоваровОтКлиентов.НеСогласована, "НеСогласована"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КВозврату, "КВозврату"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОбеспечению, "КОбеспечению"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОтгрузке, "КОтгрузке"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СтатусыЗаявокНаВозвратТоваровОтКлиентов.Выполнена, "Выполнена"); //@NON-NLS-1
	Результат.Вставить(Перечисления.СтатусыЗаявокНаВозвратТоваровОтКлиентов.Отклонена, "Отклонена"); //@NON-NLS-1

	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СтандартнаяСтруктураОбъекта()
	
	СтруктураСправочника = Новый Структура;
	СтруктураСправочника.Вставить("ref");
	СтруктураСправочника.Вставить("DeletionMark");
	СтруктураСправочника.Вставить("Description");
	
	Возврат СтруктураСправочника;
КонецФункции

#КонецОбласти
