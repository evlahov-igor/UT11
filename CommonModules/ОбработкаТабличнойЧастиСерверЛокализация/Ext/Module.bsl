#Область ПрограммныйИнтерфейс

// Заполняет служебные реквизиты в табличной части формы зависящие от локализации
//
// Параметры:
//   Форма               - ФормаКлиентскогоПриложения - заполняемая форма
//   ПараметрыЗаполнения - Произвольный     - сценарий и параметры заполнения
//
Процедура ЗаполнитьСлужебныеРеквизиты(Форма, ПараметрыЗаполнения = Неопределено) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт

	//++ Локализация
	
	ЗаполнитьПризнакиКатегорииЭксплуатации(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	
	ЗаполнитьНоменклатуруЕГАИС(
		ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ЗаполнитьАлкогольнуюПродукцию(
		ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	АкцизныеМаркиКлиентСервер.ЗаполнитьИндексАкцизнойМаркиДляСтрокиТабличнойЧасти(
		ТекущаяСтрока, СтруктураДействий);
	
	ЗаполнитьПродукциюВЕТИС(
		ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ОбработкаТабличнойЧастиКлиентСерверЛокализация.ПересчитатьКоличествоЕдиницВЕТИСВСтрокеТЧ(
		ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ОбработкаТабличнойЧастиКлиентСерверЛокализация.ПересчитатьКоличествоЕдиницПоВЕТИСВСтрокеТЧ(
		ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
		
	СнятьПризнакМаркируемаяПродукцияАлкоголь(ТекущаяСтрока, СтруктураДействий);
		
	ЗаполнитьСчетФактуруПолученнуюВОтчетеКомитентуОЗакупках(ТекущаяСтрока, СтруктураДействий);
	ЗаполнитьСчетФактуруПеревыставленнуюВОтчетеКомитентуОЗакупках(ТекущаяСтрока, СтруктураДействий);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения, СтруктураДействийЗаполнения) Экспорт
	
	//++ Локализация
	Перем СтруктураПараметровДействия;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакМаркируемаяПродукция", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		СтруктураДействийЗаполнения.Вставить("ЗаполнитьПризнакМаркируемаяПродукция", СтруктураПараметровДействия);
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьВидПродукцииИС", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		СтруктураДействийЗаполнения.Вставить("ЗаполнитьВидПродукцииИС", СтруктураПараметровДействия);
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакПодакцизныйТовар", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		СтруктураДействийЗаполнения.Вставить("ЗаполнитьПризнакПодакцизныйТовар", СтруктураПараметровДействия);
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакТребуетВзвешивания", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		СтруктураДействийЗаполнения.Вставить("ЗаполнитьПризнакТребуетВзвешивания", СтруктураПараметровДействия);
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакПроизвольнаяЕдиницаУчета", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		СтруктураДействийЗаполнения.Вставить("ЗаполнитьПризнакПроизвольнаяЕдиницаУчета", СтруктураПараметровДействия);
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакСкоропортящаясяПродукция", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		СтруктураДействийЗаполнения.Вставить("ЗаполнитьПризнакСкоропортящаясяПродукция", СтруктураПараметровДействия);
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьПоддерживаемыеДействияЗаполненияТЧ(Действия) Экспорт
	
	//++ Локализация
	Действия.Добавить("ЗаполнитьПризнакМаркируемаяПродукция");
	Действия.Добавить("ЗаполнитьПризнакМаркируемаяПродукцияАлкогольная");
	Действия.Добавить("СнятьПризнакМаркируемаяПродукцияАлкоголь");
	Действия.Добавить("ЗаполнитьВидПродукцииИС");
	Действия.Добавить("ЗаполнитьПризнакПодакцизныйТовар");
	Действия.Добавить("ЗаполнитьПризнакТребуетВзвешивания");
	Действия.Добавить("ЗаполнитьПризнакПроизвольнаяЕдиницаУчета");
	Действия.Добавить("ЗаполнитьПризнакСкоропортящаясяПродукция");
	//-- Локализация
	
КонецПроцедуры

Процедура ПриОпределенииШаблонаПоляВыборкиПоКлючуДействия(КлючДействия, Шаблон) Экспорт
	
	//++ Локализация
	
	Если КлючДействия = "ЗаполнитьПризнакМаркируемаяПродукция" Тогда
		
		Шаблон =  ", " + ИнтеграцияИСУТ.ОпределениеПризнакаМаркируемаяПродукцияТекстаЗапроса("втТаблицаНоменклатуры.%Ключ%");
		Шаблон = Шаблон + " КАК %ЗначениеЗамены%";
		
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьВидПродукцииИС" Тогда
		
		Шаблон = ",
		|	&ОпределениеВидаПродукции КАК %ЗначениеЗамены%";
		ИнтеграцияИСУТ.ОпределитьВидПродукцииТекстаЗапроса(Шаблон, "втТаблицаНоменклатуры.%Ключ%");
		
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьПризнакПодакцизныйТовар" Тогда
		Шаблон = ",
		|	втТаблицаНоменклатуры.%Ключ%.ПодакцизныйТовар КАК %ЗначениеЗамены%";
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьПризнакТребуетВзвешивания" Тогда
		Шаблон = ",
		|	1 НЕ В
		|		(ВЫБРАТЬ ПЕРВЫЕ 1
		|			1
		|		ИЗ
		|			РегистрСведений.ОписаниеНоменклатурыИС КАК ОписаниеИС
		|		ГДЕ
		|			втТаблицаНоменклатуры.%Ключ% = ОписаниеИС.Номенклатура
		|			Или втТаблицаНоменклатуры.%Ключ%.НаборУпаковок = ОписаниеИС.Номенклатура)
		|	И втТаблицаНоменклатуры.%Ключ%.ЕдиницаИзмерения.ТипИзмеряемойВеличины В(
		|		ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь)) КАК %ЗначениеЗамены%";
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьПризнакПроизвольнаяЕдиницаУчета" Тогда
		Шаблон = ",
		|	1 В
		|		(ВЫБРАТЬ ПЕРВЫЕ 1
		|			1
		|		ИЗ
		|			РегистрСведений.ОписаниеНоменклатурыИС КАК ОписаниеИС
		|		ГДЕ
		|			(втТаблицаНоменклатуры.%Ключ% = ОписаниеИС.Номенклатура
		|			Или втТаблицаНоменклатуры.%Ключ%.НаборУпаковок = ОписаниеИС.Номенклатура)
		|			И (ОписаниеИС.КоличествоВПотребительскойУпаковке <> 1
		|			Или ОписаниеИС.ЕмкостьПотребительскойУпаковки > 1))
		|	Или (
		|	1 НЕ В
		|		(ВЫБРАТЬ ПЕРВЫЕ 1
		|			1
		|		ИЗ
		|			РегистрСведений.ОписаниеНоменклатурыИС КАК ОписаниеИС
		|		ГДЕ
		|			втТаблицаНоменклатуры.%Ключ% = ОписаниеИС.Номенклатура
		|			Или втТаблицаНоменклатуры.%Ключ%.НаборУпаковок = ОписаниеИС.Номенклатура)
		|	И втТаблицаНоменклатуры.%Ключ%.ЕдиницаИзмерения.ТипИзмеряемойВеличины В(
		|		ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь))
		|	) КАК %ЗначениеЗамены%";
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьПризнакСкоропортящаясяПродукция" Тогда
		Шаблон = ",
		|	втТаблицаНоменклатуры.%Ключ%.ЕдиницаИзмеренияСрокаГодности = ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Час) КАК %ЗначениеЗамены%";
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ Локализация


Процедура ЗаполнитьПризнакиКатегорииЭксплуатации(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения)
	
	Если НЕ СтруктураДействий.Свойство("ЗаполнитьПризнакиКатегорииЭксплуатации") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПризнаков = КэшированныеЗначения.ПризнакиКатегорииЭксплуатации.Получить(
		ТекущаяСтрока.КатегорияЭксплуатации);
		
	Если СтруктураПризнаков = Неопределено Тогда
		
		СтруктураПризнаков = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			ТекущаяСтрока.КатегорияЭксплуатации,
			"ИнвентарныйУчет,УчетПоФизЛицам,СрокЭксплуатации,СтатьяРасходов,
			|УчитыватьВВидеГрупповогоОС,СтатьяКапитализацииСтоимостиОС,
			|СпособПогашенияСтоимостиБУ");
		
		Если СтруктураПризнаков.УчитыватьВВидеГрупповогоОС Тогда
			СтруктураПризнаков.СтатьяРасходов = СтруктураПризнаков.СтатьяКапитализацииСтоимостиОС;
		КонецЕсли;
		
		КэшированныеЗначения.ПризнакиКатегорииЭксплуатации.Вставить(
			ТекущаяСтрока.КатегорияЭксплуатации,
			СтруктураПризнаков);
			
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтруктураПризнаков);
	
КонецПроцедуры

Процедура ЗаполнитьНоменклатуруЕГАИС(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения)
	
	Перем Параметры;
	
	Если СтруктураДействий.Свойство("ЗаполнитьНоменклатуруЕГАИС", Параметры) Тогда
		
		Если Параметры.Свойство("ИмяКолонки") Тогда
			ИмяКолонки = Параметры.ИмяКолонки;
		Иначе
			ИмяКолонки = "НоменклатураЕГАИС";
		КонецЕсли;
		
		Если Параметры.Свойство("Серии") Тогда
			Серии = Параметры.Серии.Выгрузить();
		Иначе
			Серии = Новый ТаблицаЗначений;
			Серии.Колонки.Добавить("Номенклатура"  , Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
			Серии.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
			Серии.Колонки.Добавить("Серия"         , Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
		КонецЕсли;
		
		Если Параметры.Свойство("ЗаполнитьФлагМаркируемаяПродукция") Тогда
			ЗаполнитьФлагЗаполнитьФлагМаркируемаяПродукция = Параметры.ЗаполнитьФлагМаркируемаяПродукция;
		Иначе
			ЗаполнитьФлагЗаполнитьФлагМаркируемаяПродукция = Ложь;
		КонецЕсли;
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТЧСерии.Серия КАК Серия,
		|	ТЧСерии.Номенклатура КАК Номенклатура,
		|	ТЧСерии.Характеристика КАК Характеристика
		|ПОМЕСТИТЬ
		|	Серии
		|ИЗ
		|	&Серии КАК ТЧСерии
		|ГДЕ
		|	ТЧСерии.Номенклатура = &Номенклатура
		|	И ТЧСерии.Характеристика = &Характеристика;
		|
		|ВЫБРАТЬ
		|	ТЧСерии.Серия КАК Серия,
		|	ТЧСерии.Номенклатура КАК Номенклатура,
		|	ТЧСерии.Характеристика КАК Характеристика
		|ПОМЕСТИТЬ
		|	ВтСерии
		|ИЗ
		|	Серии КАК ТЧСерии
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Серия КАК Серия,
		|	&Номенклатура КАК Номенклатура,
		|	&Характеристика КАК Характеристика
		|;
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК НоменклатураЕГАИС,
		|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.ВидПродукции.Маркируемый
		|				ИЛИ СоответствиеНоменклатурыЕГАИС.Номенклатура.ВидАлкогольнойПродукции.Маркируемый
		|			ТОГДА НЕ СоответствиеНоменклатурыЕГАИС.Номенклатура.АлкогольнаяПродукцияВоВскрытойТаре
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК МаркируемаяПродукция,
		|	ВЫБОР
		|		КОГДА СоответствиеНоменклатурыЕГАИС.Номенклатура.АлкогольнаяПродукция
		|				ИЛИ НЕ СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция ЕСТЬ NULL 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК АлкогольнаяПродукция
		|ИЗ
		|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСерии КАК ВтСерии
		|		ПО ВтСерии.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
		|			И ВтСерии.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
		|			И ВтСерии.Серия = СоответствиеНоменклатурыЕГАИС.Серия
		|ГДЕ
		|	СоответствиеНоменклатурыЕГАИС.Номенклатура = &Номенклатура
		|	И СоответствиеНоменклатурыЕГАИС.Характеристика = &Характеристика");
		
		Запрос.УстановитьПараметр("Номенклатура",   ТекущаяСтрока.Номенклатура);
		Запрос.УстановитьПараметр("Характеристика", ТекущаяСтрока.Характеристика);
		Запрос.УстановитьПараметр("Серия", ТекущаяСтрока.Серия);
		Запрос.УстановитьПараметр("Серии", Серии);
		
		УстановитьПривилегированныйРежим(Истина);
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		КоличествоСопоставлено = Выборка.Количество();
		
		ТекущаяСтрока.НоменклатураДляВыбора = Новый СписокЗначений;
		
		Пока Выборка.Следующий() Цикл
			Если КоличествоСопоставлено = 1 Тогда
				ТекущаяСтрока[ИмяКолонки] = Выборка.НоменклатураЕГАИС;
				Если ЗаполнитьФлагЗаполнитьФлагМаркируемаяПродукция Тогда
					ТекущаяСтрока.МаркируемаяПродукция = Выборка.МаркируемаяПродукция;
				КонецЕсли;
			КонецЕсли;
			ТекущаяСтрока.НоменклатураДляВыбора.Добавить(Выборка.НоменклатураЕГАИС);
		КонецЦикла;
		
		Если КоличествоСопоставлено > 1 Тогда
			ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = СтрШаблон(НСтр("ru = '<Несколько позиций (%1)>'"), КоличествоСопоставлено);
		ИначеЕсли КоличествоСопоставлено = 1 Тогда
			ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = "";
		Иначе
			ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = НСтр("ru = '<Не сопоставлено>'");
		КонецЕсли;
		
		Если КоличествоСопоставлено <> 1 Тогда
			
			Если ТекущаяСтрока.НоменклатураДляВыбора.НайтиПоЗначению(ТекущаяСтрока[ИмяКолонки]) = Неопределено Тогда
				ТекущаяСтрока[ИмяКолонки] = Неопределено;
			КонецЕсли;
			Если ЗаполнитьФлагЗаполнитьФлагМаркируемаяПродукция Тогда
				ТекущаяСтрока.МаркируемаяПродукция = Ложь;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьАлкогольнуюПродукцию(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения)
	
	Если СтруктураДействий.Свойство("ЗаполнитьАлкогольнуюПродукцию") Тогда
		
		ЕстьПоляВыбора = ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "НоменклатураДляВыбора");
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция
		|ИЗ
		|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
		|ГДЕ
		|	СоответствиеНоменклатурыЕГАИС.Номенклатура = &Номенклатура
		|	И СоответствиеНоменклатурыЕГАИС.Характеристика = &Характеристика
		|	И (СоответствиеНоменклатурыЕГАИС.Серия = &Серия 
		|		ИЛИ &СерияЗаполнена = ЛОЖЬ)
		|	И &ОтборМаркируемаяПродукция
		|");
		
		Запрос.УстановитьПараметр("Номенклатура",   ТекущаяСтрока.Номенклатура);
		Запрос.УстановитьПараметр("Характеристика", ТекущаяСтрока.Характеристика);
		Запрос.УстановитьПараметр("Серия",          ТекущаяСтрока.Серия);
		Запрос.УстановитьПараметр("СерияЗаполнена", ЗначениеЗаполнено(ТекущаяСтрока.Серия));
		
		Запрос.УстановитьПараметр("ОтборМаркируемаяПродукция", Истина);
		Если СтруктураДействий.ЗаполнитьАлкогольнуюПродукцию.МаркируемаяАлкогольнаяПродукция <> Неопределено Тогда
			Запрос.УстановитьПараметр("ОтборМаркируемаяПродукция", СтруктураДействий.ЗаполнитьАлкогольнуюПродукцию.МаркируемаяАлкогольнаяПродукция);
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборМаркируемаяПродукция",
			"СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.ВидПродукции.Маркируемый = &ОтборМаркируемаяПродукция");
		КонецЕсли;
		
		УстановитьПривилегированныйРежим(Истина);
		Результат = Запрос.Выполнить();
		УстановитьПривилегированныйРежим(Ложь);
		Выборка = Результат.Выбрать();
		
		КоличествоСопоставлено = Выборка.Количество();
		Если ЕстьПоляВыбора Тогда
			ТекущаяСтрока.НоменклатураДляВыбора.Очистить();
		КонецЕсли;
		
		Пока Выборка.Следующий() Цикл
			Если КоличествоСопоставлено = 1 Тогда
				ТекущаяСтрока.АлкогольнаяПродукция = Выборка.АлкогольнаяПродукция;
			КонецЕсли;
			Если ЕстьПоляВыбора Тогда
				ТекущаяСтрока.НоменклатураДляВыбора.Добавить(Выборка.АлкогольнаяПродукция);
			КонецЕсли;
		КонецЦикла;
		
		Если КоличествоСопоставлено = 0 Тогда
			ТекущаяСтрока.АлкогольнаяПродукция = Неопределено;
		КонецЕсли;
		Если ЕстьПоляВыбора Тогда
			Если КоличествоСопоставлено > 1 Тогда
				ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = СтрШаблон(НСтр("ru = '<Несколько позиций (%1)>'"), КоличествоСопоставлено);
			ИначеЕсли КоличествоСопоставлено = 1 Тогда
				ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = "";
			Иначе
				ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = НСтр("ru = '<Не сопоставлено>'");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПродукциюВЕТИС(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения)
	
	ПараметрыЗаполнения = Неопределено;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПродукциюВЕТИС", ПараметрыЗаполнения) Тогда
		Если НЕ ПараметрыЗаполнения.ЗаполнитьПродукциюВЕТИС Тогда
			Возврат
		КонецЕсли;
		
		Отбор = Неопределено;
		ПараметрыЗаполнения.Свойство("ОтборПродукция",Отбор);
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеНоменклатурыВЕТИС.Продукция КАК Продукция,
		|	СоответствиеНоменклатурыВЕТИС.Номенклатура КАК Номенклатура
		|ИЗ
		|	РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
		|ГДЕ
		|	СоответствиеНоменклатурыВЕТИС.Номенклатура = &Номенклатура
		|	И СоответствиеНоменклатурыВЕТИС.Характеристика = &Характеристика
		|	И (СоответствиеНоменклатурыВЕТИС.Серия = &Серия
		|	ИЛИ &СерияЗаполнена = ЛОЖЬ)
		|	И (СоответствиеНоменклатурыВЕТИС.Продукция.Производители.Производитель = &Предприятие
		|	ИЛИ &Предприятие = ЗНАЧЕНИЕ(Справочник.ПредприятияВЕТИС.ПустаяСсылка))
		|	И (СоответствиеНоменклатурыВЕТИС.Продукция.ХозяйствующийСубъектПроизводитель = &ХозяйствующийСубъект
		|	ИЛИ &ХозяйствующийСубъект = ЗНАЧЕНИЕ(Справочник.ХозяйствующиеСубъектыВЕТИС.ПустаяСсылка))
		|	И (НЕ &ИсключатьПродукциюТретьегоУровня
		|	ИЛИ СоответствиеНоменклатурыВЕТИС.Продукция.Идентификатор <> """")");
		
		Запрос.УстановитьПараметр("Номенклатура",   ТекущаяСтрока.Номенклатура);
		Запрос.УстановитьПараметр("Характеристика", ТекущаяСтрока.Характеристика);
		Запрос.УстановитьПараметр("Серия",          ТекущаяСтрока.Серия);
		Запрос.УстановитьПараметр("СерияЗаполнена", ЗначениеЗаполнено(ТекущаяСтрока.Серия));
		Запрос.УстановитьПараметр("ИсключатьПродукциюТретьегоУровня",
			СтруктураДействий.ЗаполнитьПродукциюВЕТИС.ИсключатьПродукциюТретьегоУровня);
		
		Если ЗначениеЗаполнено(Отбор) Тогда
			Если Отбор.Свойство("Предприятие") Тогда
				Запрос.УстановитьПараметр("Предприятие", Отбор.Предприятие);
			Иначе
				Запрос.УстановитьПараметр("Предприятие", Справочники.ПредприятияВЕТИС.ПустаяСсылка());
			КонецЕсли;
			Если Отбор.Свойство("ХозяйствующийСубъект") Тогда
				Запрос.УстановитьПараметр("ХозяйствующийСубъект", Отбор.ХозяйствующийСубъект);
			Иначе
				Запрос.УстановитьПараметр("ХозяйствующийСубъект", Справочники.ХозяйствующиеСубъектыВЕТИС.ПустаяСсылка());
			КонецЕсли;
		Иначе
			Запрос.УстановитьПараметр("Предприятие", Справочники.ПредприятияВЕТИС.ПустаяСсылка());
			Запрос.УстановитьПараметр("ХозяйствующийСубъект", Справочники.ХозяйствующиеСубъектыВЕТИС.ПустаяСсылка());
		КонецЕсли;
		
		УстановитьПривилегированныйРежим(Истина);
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		КоличествоСопоставлено = Выборка.Количество();
		ТекущаяСтрока.НоменклатураДляВыбора.Очистить();
		
		Пока Выборка.Следующий() Цикл
			Если КоличествоСопоставлено = 1 Тогда
				ТекущаяСтрока.Продукция = Выборка.Продукция;
				ИнтеграцияВЕТИС.ПроверитьОчиститьЕдиницуИзмеренияВЕТИС(ТекущаяСтрока);
			КонецЕсли;
			ТекущаяСтрока.НоменклатураДляВыбора.Добавить(Выборка.Продукция);
		КонецЦикла;
		
		Если КоличествоСопоставлено = 0 Тогда
			ТекущаяСтрока.Продукция = Неопределено;
		КонецЕсли;
		Если КоличествоСопоставлено > 1 Тогда
			ТекущаяСтрока.СопоставлениеТекст = СтрШаблон(НСтр("ru = '<Несколько позиций (%1)>'"), КоличествоСопоставлено);
		ИначеЕсли КоличествоСопоставлено = 1 Тогда
			ТекущаяСтрока.СопоставлениеТекст = "";
		Иначе
			ТекущаяСтрока.СопоставлениеТекст = НСтр("ru = '<Не сопоставлено>'");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура СнятьПризнакМаркируемаяПродукцияАлкоголь(ТекущаяСтрока, СтруктураДействий)
	Если СтруктураДействий.Свойство("СнятьПризнакМаркируемаяПродукцияАлкоголь")
		И ТекущаяСтрока.МаркируемаяПродукция
		И ТекущаяСтрока.ВидПродукцииИС = Перечисления.ВидыПродукцииИС.Алкогольная Тогда
		ТекущаяСтрока.МаркируемаяПродукция = Ложь;
	КонецЕсли;
КонецПроцедуры

// Возвращает сведения о коэффициенте пересчета единицы измерения ВЕТИС.
//
// Параметры:
//	ЕдиницаИзмеренияВЕТИС	- СправочникСсылка.ЕдиницыИзмеренияВЕТИС	- Единица измерения ВЕТИС, коэффициент которой нужно 
//																		получить.
//	Номенклатура			- СправочникСсылка.Номенклатура				- Номенклатура для единицы хранения, которой осуществляется 
//																		получение коэффициента пересчета.
//	КэшированныеЗначения	- Структура									- Сохраненные значения параметров, используемых при обработке 
//																		строки таблицы.
//
// Возвращаемое значение:
//	Структура - см. описание модуля менеджера УпаковкиЕдиницы.КоэффициентЕдиницыИзмеренияПоВЕТИС.
//
Функция ДанныеЕдиницыИзмеренияВЕТИС(ЕдиницаИзмеренияВЕТИС, Номенклатура, КэшированныеЗначения) Экспорт
	
	КлючКоэффициента = ОбработкаТабличнойЧастиКлиентСервер.КлючКэшаУпаковки(Номенклатура, ЕдиницаИзмеренияВЕТИС);
	
	ДанныеЕдиницыИзмеренияВЕТИС = КэшированныеЗначения.КоэффициентыУпаковок.Получить(КлючКоэффициента);
	Если ДанныеЕдиницыИзмеренияВЕТИС = Неопределено Тогда
		
		ДанныеЕдиницыИзмеренияВЕТИС = ИнтеграцияВЕТИСУТ.КоэффициентЕдиницыИзмеренияПоВЕТИС(
			ЕдиницаИзмеренияВЕТИС, Номенклатура);
		
		Если ДанныеЕдиницыИзмеренияВЕТИС.КэшироватьДанные Тогда
			
			ИменаКлючей = "КодОшибки, Коэффициент, ТипИзмеряемойВеличины, НужноОкруглятьКоличество,"
							+ "НужноОкруглятьКоличествоВЕТИС";
			
			ДанныеКлюча = Новый Структура(ИменаКлючей);
			ЗаполнитьЗначенияСвойств(ДанныеКлюча, ДанныеЕдиницыИзмеренияВЕТИС);
			
			КэшированныеЗначения.КоэффициентыУпаковок.Вставить(КлючКоэффициента, ДанныеКлюча);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ДанныеЕдиницыИзмеренияВЕТИС;
	
КонецФункции

Процедура ЗаполнитьСчетФактуруПолученнуюВОтчетеКомитентуОЗакупках(ТекущаяСтрока, СтруктураДействий)
	
	Перем ПараметрыДействия;
	
	Если СтруктураДействий.Свойство("ЗаполнитьСчетФактуруПолученнуюВОтчетеКомитентуОЗакупках", ПараметрыДействия) Тогда
		ТекущаяСтрока.СчетФактураПолученный = Документы.СчетФактураПолученный.ПустаяСсылка();
		Если Не ТекущаяСтрока.ДокументПриобретения = Неопределено Тогда
			СоставРеквизитов = "Ссылка,Дата,Организация,Контрагент,НалогообложениеНДС,ХозяйственнаяОперация";
			Если ТипЗнч(ТекущаяСтрока.ДокументПриобретения) = Тип("ДокументСсылка.КорректировкаПриобретения") Тогда
				СоставРеквизитов = "Ссылка,Дата,Организация,Контрагент,НалогообложениеНДС,ВидКорректировки";
			КонецЕсли;	
			СтруктураРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТекущаяСтрока.ДокументПриобретения, СоставРеквизитов);
			
			МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(ТекущаяСтрока.ДокументПриобретения);
			ПараметрыРегистрации = МенеджерОбъекта.ПараметрыРегистрацииСчетовФактурПолученных(СтруктураРеквизитов);
			
			СчетаФактурыПолученныеНаОсновании = УчетНДСУП.СчетаФактурыПолученныеНаОсновании(ПараметрыРегистрации);
			
			Если СчетаФактурыПолученныеНаОсновании.ДокументПоОснованиюТребуется Тогда
				Если СчетаФактурыПолученныеНаОсновании.СчетаФактуры.Количество() Тогда
					ТекущаяСтрока.СчетФактураПолученный = СчетаФактурыПолученныеНаОсновании.СчетаФактуры[0];
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСчетФактуруПеревыставленнуюВОтчетеКомитентуОЗакупках(ТекущаяСтрока, СтруктураДействий)
	
	Перем ПараметрыДействия;
	
	Если СтруктураДействий.Свойство("ЗаполнитьСчетФактуруПеревыставленнуюВОтчетеКомитентуОЗакупках", ПараметрыДействия) Тогда
		
		Запрос = Новый Запрос(УчетНДСРФ.ТекстЗапросаСчетовФактурПеревыставленныхКомитентамДляОтчетаКомитентуОЗакупках());
		
		Запрос.УстановитьПараметр("ДокументОснование", ПараметрыДействия.ОтчетКомитентуОЗакупках);
		Запрос.УстановитьПараметр("СчетаФактурыПолученные", ТекущаяСтрока.СчетФактураПолученный);
		
		Выборка = Запрос.Выполнить().Выбрать();
		ТекущаяСтрока.СчетФактураВыданныйКомитенту = Документы.СчетФактураВыданный.ПустаяСсылка();
		Если Выборка.Следующий() Тогда
			ТекущаяСтрока.СчетФактураВыданныйКомитенту = Выборка.СчетФактураВыданныйКомитенту; 
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

//-- Локализация

#КонецОбласти
