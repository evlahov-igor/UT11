
#Область ПрограммныйИнтерфейс

Функция СоздатьПравилоИнтеграции(ТипОбъектаИС, ТипОбъектаДО, ВидДокумента, Папка) Экспорт
	
	Правило = Справочники.ПравилаИнтеграцииС1СДокументооборотом.СоздатьЭлемент();
	Правило.Заполнить(Неопределено);
	Правило.ТипОбъектаИС = ТипОбъектаИС;
	Правило.ТипОбъектаДО = ТипОбъектаДО;
	Правило.Комментарий = "Создано автоматически";
	
	ПравилаИнтеграцииМенеджер = Справочники.ПравилаИнтеграцииС1СДокументооборотом;
	
	// вид документа
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.УказанноеЗначение,
		"documentType",
		ВидДокумента,
		Ложь,
		Истина);
	
	// папка
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.УказанноеЗначение,
		"folder",
		Папка,
		Ложь);
	
	ЗаполнитьОбщиеРеквизиты(ПравилаИнтеграцииМенеджер, ТипОбъектаИС, Правило);
	ЗаполнитьЧастныеРеквизиты(ПравилаИнтеграцииМенеджер, ТипОбъектаИС, Правило);
	
	Правило.Записать();
	
	Результат = Новый Структура;
	Результат.Вставить("Ссылка", Правило.Ссылка);
	Результат.Вставить("ТипОбъектаИС", ТипОбъектаИС);
	Результат.Вставить("ТипОбъектаДО", ТипОбъектаДО);
	Результат.Вставить("ПредставлениеОбъектаИС", ТипОбъектаИС);
	Результат.Вставить("ПредставлениеОбъектаДО", ТипОбъектаДО);
	Результат.Вставить("ИдентификаторВидаДокумента", ВидДокумента.objectId.id);
	Результат.Вставить("ТипВидаДокумента", ВидДокумента.objectId.type);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьОбщиеРеквизиты(ПравилаИнтеграцииМенеджер, ТипОбъектаИС, Правило)
	
	Прокси = ИнтеграцияС1СДокументооборотПовтИсп.ПолучитьПрокси();
	
	ГрифДоступа = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "DMAccessLevel");
	ГрифДоступа.externalObject = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "ExternalObject");
	ГрифДоступа.externalObject.id = "";
	ГрифДоступа.externalObject.type = "";
	ГрифДоступа.externalObject.name = "";
	ГрифДоступа.objectId = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "DMObjectID");
	ГрифДоступа.objectId.id = "";
	ГрифДоступа.objectId.type = "";
	ГрифДоступа.name = "Общий";
	
	ВопросДеятельности = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "DMActivityMatter");
	ВопросДеятельности.externalObject = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "ExternalObject");
	ВопросДеятельности.externalObject.id = "";
	ВопросДеятельности.externalObject.type = "";
	ВопросДеятельности.externalObject.name = "";
	ВопросДеятельности.objectId = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "DMObjectID");
	ВопросДеятельности.objectId.id = "";
	ВопросДеятельности.objectId.type = "";
	ВопросДеятельности.name = "Основная деятельность";
	
	Документ = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "DMInternalDocument");
	Документ.objectId = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "DMObjectID");
	Документ.objectId.id = "";
	Документ.objectId.type = "DMInternalDocument";
	Документ.name = "Временный";
	Документ.accessLevel = ГрифДоступа;
	Документ.activityMatter = ВопросДеятельности;
	
	Запрос = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "DMCreateRequest");
	Запрос.object = Документ;
	
	ИнтеграцияС1СДокументооборот.ВыполнитьЗапрос(Прокси, Запрос);
	
	РазрешеноБезПерепроведения = Неопределено;
	РазрешеноСПерепроведением = Неопределено;
	Запрещено = Неопределено;
	Если Лев(ТипОбъектаИС, 9) = "Документ." Тогда
		РазрешеноБезПерепроведения =
			Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноБезПерепроведения;
		РазрешеноСПерепроведением =
			Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением;
		Запрещено = Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.Запрещено;
	КонецЕсли;
	
	Правило.НеСоздаватьСвязиПоСсылкам = Истина;
	
	//////////////////////////////////////////////////////
	// Правила выгрузки (Передача в 1С:Документооборот)
	
	// заголовок
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"title",
		"Представление");
	
	// гриф доступа
	
	// Получим гриф доступа
	ГрифДоступа = ИнтеграцияС1СДокументооборотВызовСервера.НайтиОбъектВДОПоИмени("DMAccessLevel", "Общий");
	// Установим правило
	Если ГрифДоступа <> Неопределено Тогда
		ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
			Правило,
			Перечисления.ВариантыПравилЗаполненияРеквизитов.УказанноеЗначение,
			"accessLevel",
			ГрифДоступа,
			Ложь);
	КонецЕсли;
	
	// вопрос деятельности
	
	// Получим вопрос деятельности
	ВопросДеятельности = ИнтеграцияС1СДокументооборотВызовСервера.НайтиОбъектВДОПоИмени(
		"DMActivityMatter",
		"Основная деятельность");
	// Установим правило
	Если ВопросДеятельности <> Неопределено Тогда
		ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
			Правило,
			Перечисления.ВариантыПравилЗаполненияРеквизитов.УказанноеЗначение,
			"activityMatter",
			ВопросДеятельности,
			Ложь);
	КонецЕсли;
	
	//////////////////////////////////////////////////////
	// Правила загрузки (Получение из 1С:Документооборота)
	
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"Статус",
		"statusApproval",,,
		РазрешеноСПерепроведением);
	
	//////////////////////////////////////////////////////
	// Парные правила
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Организация",
		"organization",,,
		РазрешеноСПерепроведением);
	Если (ТипОбъектаИС <> "Документ.ЗаявкаНаРасходованиеДенежныхСредств")
			Или (Не ИнтеграцияС1СДокументооборот.ДоступенФункционалВерсииСервиса("2.1.28.12.CORP")) Тогда
		ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
			Правило,
			"Контрагент",
			"correspondent",,,
			РазрешеноСПерепроведением);
	КонецЕсли;
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Комментарий",
		"comment",,,
		РазрешеноБезПерепроведения);
	
КонецПроцедуры

Процедура ЗаполнитьЧастныеРеквизиты(ПравилаИнтеграцииМенеджер, ТипОбъектаИС, Правило)
	
	Если ТипОбъектаИС = "Справочник.СоглашенияСКлиентами" Тогда
		ДополнитьПравилоИнтеграцииСоглашенияСКлиентами(ПравилаИнтеграцииМенеджер, Правило);
		
	ИначеЕсли ТипОбъектаИС = "Справочник.ДоговорыКонтрагентов" Тогда
		ДополнитьПравилоИнтеграцииДоговорыКонтрагентов(ПравилаИнтеграцииМенеджер, Правило);
		
	ИначеЕсли ТипОбъектаИС = "Документ.КоммерческоеПредложениеКлиенту" Тогда
		ДополнитьПравилоИнтеграцииКоммерческоеПредложениеКлиенту(ПравилаИнтеграцииМенеджер, Правило);
		
	ИначеЕсли ТипОбъектаИС = "Документ.ЗаказКлиента" Тогда
		ДополнитьПравилоИнтеграцииЗаказКлиента(ПравилаИнтеграцииМенеджер, Правило);
		
	ИначеЕсли ТипОбъектаИС = "Документ.ЗаказПоставщику" Тогда
		ДополнитьПравилоИнтеграцииЗаказПоставщику(ПравилаИнтеграцииМенеджер, Правило);
		
	ИначеЕсли ТипОбъектаИС = "Документ.ЗаявкаНаВозвратТоваровОтКлиента" Тогда
		ДополнитьПравилоИнтеграцииЗаявкаНаВозвратТоваровОтКлиента(ПравилаИнтеграцииМенеджер, Правило);
		
	ИначеЕсли ТипОбъектаИС = "Документ.ЗаявкаНаРасходованиеДенежныхСредств" Тогда
		ДополнитьПравилоИнтеграцииЗаявкаНаРасходованиеДенежныхСредств(ПравилаИнтеграцииМенеджер, Правило);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнитьПравилоИнтеграцииСоглашенияСКлиентами(ПравилаИнтеграцииМенеджер, Правило)
	
	//////////////////////////////////////////////////////
	// Правила выгрузки (Передача в 1С:Документооборот)
	
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"author",
		"Менеджер");
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.ВыражениеНаВстроенномЯзыке,
		"openEnded",
		"Параметры.Результат = Не ЗначениеЗаполнено(Параметры.Источник.ДатаОкончанияДействия);");
	
	// Таблица Стороны
	Если ИнтеграцияС1СДокументооборот.ДоступенФункционалВерсииСервиса("2.1.28.12.CORP") Тогда
		ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
			Правило,
			Перечисления.ВариантыПравилЗаполненияРеквизитов.ВыражениеНаВстроенномЯзыке,
			"partyRows.rows",
			"Параметры.Результат = Новый ТаблицаЗначений;
			|Параметры.Результат.Колонки.Добавить(""Комментарий"");
			|Параметры.Результат.Колонки.Добавить(""КонтактноеЛицо"");
			|Параметры.Результат.Колонки.Добавить(""Наименование"");
			|Параметры.Результат.Колонки.Добавить(""НаименованиеID"");
			|Параметры.Результат.Колонки.Добавить(""НаименованиеТип"");
			|Параметры.Результат.Колонки.Добавить(""Сторона"");
			|Параметры.Результат.Колонки.Добавить(""Установил"");
			|Параметры.Результат.Колонки.Добавить(""ДатаПодписи"");
			|Параметры.Результат.Колонки.Добавить(""Подписан"");
			|Параметры.Результат.Колонки.Добавить(""Подписал"");
			|
			|НоваяСтрока = Параметры.Результат.Добавить();
			|НоваяСтрока.Сторона = Параметры.Источник.Организация;
			|НаименованиеПродавецXDTO = ИнтеграцияС1СДокументооборот.ПредопределенноеЗначениеДО(
			|	""DMPartyName"", ""Продавец"");
			|НоваяСтрока.Наименование = НаименованиеПродавецXDTO.name;
			|НоваяСтрока.НаименованиеID = НаименованиеПродавецXDTO.objectID.id;
			|НоваяСтрока.НаименованиеТип = НаименованиеПродавецXDTO.objectID.type;
			|
			|НоваяСтрока = Параметры.Результат.Добавить();
			|НоваяСтрока.Сторона = Параметры.Источник.Контрагент;
			|НаименованиеПокупательXDTO = ИнтеграцияС1СДокументооборот.ПредопределенноеЗначениеДО(
			|	""DMPartyName"", ""Покупатель"");
			|НоваяСтрока.Наименование = НаименованиеПокупательXDTO.name;
			|НоваяСтрока.НаименованиеID = НаименованиеПокупательXDTO.objectID.id;
			|НоваяСтрока.НаименованиеТип = НаименованиеПокупательXDTO.objectID.type;
			|Если ЗначениеЗаполнено(Параметры.Источник.КонтактноеЛицо) Тогда
			|	НоваяСтрока.КонтактноеЛицо = Параметры.Источник.КонтактноеЛицо;
			|КонецЕсли;");
	КонецЕсли;
	
	//////////////////////////////////////////////////////
	// Правила загрузки (Получение из 1С:Документооборота)
	
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"Наименование",
		"title");
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"Номер",
		"regNumber");
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"Дата",
		"regDate");
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"Согласован",
		"statusApproval");
	
	//////////////////////////////////////////////////////
	// Парные правила
	
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"СуммаДокумента",
		"sum");
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Валюта",
		"currency");
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Менеджер",
		"responsible");
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"КонтактноеЛицо",
		"contactPerson");
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"ДатаНачалаДействия",
		"beginDate");
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"ДатаОкончанияДействия",
		"endDate");
	
КонецПроцедуры

Процедура ДополнитьПравилоИнтеграцииДоговорыКонтрагентов(ПравилаИнтеграцииМенеджер, Правило)
	
	//////////////////////////////////////////////////////
	// Правила выгрузки (Передача в 1С:Документооборот)
	
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"author",
		"Менеджер");
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.ВыражениеНаВстроенномЯзыке,
		"VAT",
		"Параметры.Результат = УчетНДСУПКлиентСервер.РассчитатьСуммуНДС(
		|	Параметры.Источник.Сумма,
		|	Параметры.Источник.СтавкаНДС);");
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.ВыражениеНаВстроенномЯзыке,
		"openEnded",
		"Параметры.Результат = Не ЗначениеЗаполнено(Параметры.Источник.ДатаОкончанияДействия);");
	
	// Таблица Стороны
	Если ИнтеграцияС1СДокументооборот.ДоступенФункционалВерсииСервиса("2.1.28.12.CORP") Тогда
		ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
			Правило,
			Перечисления.ВариантыПравилЗаполненияРеквизитов.ВыражениеНаВстроенномЯзыке,
			"partyRows.rows",
			"Параметры.Результат = Новый ТаблицаЗначений;
			|Параметры.Результат.Колонки.Добавить(""Комментарий"");
			|Параметры.Результат.Колонки.Добавить(""КонтактноеЛицо"");
			|Параметры.Результат.Колонки.Добавить(""Наименование"");
			|Параметры.Результат.Колонки.Добавить(""НаименованиеID"");
			|Параметры.Результат.Колонки.Добавить(""НаименованиеТип"");
			|Параметры.Результат.Колонки.Добавить(""Сторона"");
			|Параметры.Результат.Колонки.Добавить(""Установил"");
			|Параметры.Результат.Колонки.Добавить(""ДатаПодписи"");
			|Параметры.Результат.Колонки.Добавить(""Подписан"");
			|Параметры.Результат.Колонки.Добавить(""Подписал"");
			|
			|НоваяСтрока = Параметры.Результат.Добавить();
			|НоваяСтрока.Сторона = Параметры.Источник.Организация;
			|НаименованиеЗаказчикXDTO = ИнтеграцияС1СДокументооборот.ПредопределенноеЗначениеДО(
			|	""DMPartyName"", ""Заказчик"");
			|НоваяСтрока.Наименование = НаименованиеЗаказчикXDTO.name;
			|НоваяСтрока.НаименованиеID = НаименованиеЗаказчикXDTO.objectID.id;
			|НоваяСтрока.НаименованиеТип = НаименованиеЗаказчикXDTO.objectID.type;
			|
			|НоваяСтрока = Параметры.Результат.Добавить();
			|НоваяСтрока.Сторона = Параметры.Источник.Контрагент;
			|НаименованиеИсполнительXDTO = ИнтеграцияС1СДокументооборот.ПредопределенноеЗначениеДО(
			|	""DMPartyName"", ""Исполнитель"");
			|НоваяСтрока.Наименование = НаименованиеИсполнительXDTO.name;
			|НоваяСтрока.НаименованиеID = НаименованиеИсполнительXDTO.objectID.id;
			|НоваяСтрока.НаименованиеТип = НаименованиеИсполнительXDTO.objectID.type;
			|Если ЗначениеЗаполнено(Параметры.Источник.КонтактноеЛицо) Тогда
			|	НоваяСтрока.КонтактноеЛицо = Параметры.Источник.КонтактноеЛицо;
			|КонецЕсли;");
	КонецЕсли;
	
	//////////////////////////////////////////////////////
	// Правила загрузки (Получение из 1С:Документооборота)
	
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"Наименование",
		"title");
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"Номер",
		"regNumber");
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"Дата",
		"regDate");
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"Согласован",
		"statusApproval");
	
	//////////////////////////////////////////////////////
	// Парные правила
	
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Сумма",
		"sum");
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"ВалютаВзаиморасчетов",
		"currency");
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Менеджер",
		"responsible");
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Подразделение",
		"subdivision");
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"КонтактноеЛицо",
		"contactPerson");
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"ДатаНачалаДействия",
		"beginDate");
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"ДатаОкончанияДействия",
		"endDate");
	
КонецПроцедуры

Процедура ДополнитьПравилоИнтеграцииКоммерческоеПредложениеКлиенту(ПравилаИнтеграцииМенеджер, Правило)
	
	//////////////////////////////////////////////////////
	// Правила выгрузки (Передача в 1С:Документооборот)
	
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"author",
		"Менеджер");
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.ВыражениеНаВстроенномЯзыке,
		"sum",
		"Если Параметры.Источник.ЦенаВключаетНДС Тогда
		|	Параметры.Результат = Параметры.Источник.СуммаДокумента;
		|Иначе
		|	Параметры.Результат = Параметры.Источник.СуммаДокумента - Параметры.Источник.Товары.Итог(""СуммаНДС"");
		|КонецЕсли;");
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.ВыражениеНаВстроенномЯзыке,
		"VAT",
		"Параметры.Результат = Параметры.Источник.Товары.Итог(""СуммаНДС"");");
	
	// Таблица Стороны
	Если ИнтеграцияС1СДокументооборот.ДоступенФункционалВерсииСервиса("2.1.28.12.CORP") Тогда
		ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
			Правило,
			Перечисления.ВариантыПравилЗаполненияРеквизитов.ВыражениеНаВстроенномЯзыке,
			"partyRows.rows",
			"Параметры.Результат = Новый ТаблицаЗначений;
			|Параметры.Результат.Колонки.Добавить(""Комментарий"");
			|Параметры.Результат.Колонки.Добавить(""КонтактноеЛицо"");
			|Параметры.Результат.Колонки.Добавить(""Наименование"");
			|Параметры.Результат.Колонки.Добавить(""НаименованиеID"");
			|Параметры.Результат.Колонки.Добавить(""НаименованиеТип"");
			|Параметры.Результат.Колонки.Добавить(""Сторона"");
			|Параметры.Результат.Колонки.Добавить(""Установил"");
			|Параметры.Результат.Колонки.Добавить(""ДатаПодписи"");
			|Параметры.Результат.Колонки.Добавить(""Подписан"");
			|Параметры.Результат.Колонки.Добавить(""Подписал"");
			|
			|НоваяСтрока = Параметры.Результат.Добавить();
			|НоваяСтрока.Сторона = Параметры.Источник.Организация;
			|НаименованиеПродавецXDTO = ИнтеграцияС1СДокументооборот.ПредопределенноеЗначениеДО(
			|	""DMPartyName"", ""Продавец"");
			|НоваяСтрока.Наименование = НаименованиеПродавецXDTO.name;
			|НоваяСтрока.НаименованиеID = НаименованиеПродавецXDTO.objectID.id;
			|НоваяСтрока.НаименованиеТип = НаименованиеПродавецXDTO.objectID.type;
			|
			|НоваяСтрока = Параметры.Результат.Добавить();
			|НоваяСтрока.Сторона = Параметры.Источник.Контрагент;
			|НаименованиеПокупательXDTO = ИнтеграцияС1СДокументооборот.ПредопределенноеЗначениеДО(
			|	""DMPartyName"", ""Покупатель"");
			|НоваяСтрока.Наименование = НаименованиеПокупательXDTO.name;
			|НоваяСтрока.НаименованиеID = НаименованиеПокупательXDTO.objectID.id;
			|НоваяСтрока.НаименованиеТип = НаименованиеПокупательXDTO.objectID.type;
			|Если ЗначениеЗаполнено(Параметры.Источник.КонтактноеЛицо) Тогда
			|	НоваяСтрока.КонтактноеЛицо = Параметры.Источник.КонтактноеЛицо;
			|КонецЕсли;");
	КонецЕсли;
	
	//////////////////////////////////////////////////////
	// Правила загрузки (Получение из 1С:Документооборота)
	
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"СуммаДокумента",
		"sum",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением);
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.УказанноеЗначение,
		"ЦенаВключаетНДС",
		Истина,
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.Запрещено);
	
	//////////////////////////////////////////////////////
	// Парные правила
	
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Валюта",
		"currency",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением);
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Менеджер",
		"responsible",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноБезПерепроведения);
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"КонтактноеЛицо",
		"contactPerson",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноБезПерепроведения);
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"СрокДействия",
		"performanceDate",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением);
	
	// Таблица "Товары и услуги" - "Товары"
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Товары",
		"productRows.rows",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением);
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Номенклатура",
		"product",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"Товары",
		"productRows.rows");
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Цена",
		"price",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"Товары",
		"productRows.rows");
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Количество",
		"quantity",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"Товары",
		"productRows.rows");
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"ЕдиницаИзмерения",
		"measurementUnit",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"Товары",
		"productRows.rows");
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"СуммаНДС",
		"VAT",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"Товары",
		"productRows.rows");
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Сумма",
		"total",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"Товары",
		"productRows.rows");
	
	// Ставка НДС в загрузке и выгрузке будет заполняться по-разному
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"VATRate",
		"Товары.СтавкаНДС",
		Истина,,
		"productRows.rows");
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.УказанноеЗначение,
		"СтавкаНДС",
		Справочники.СтавкиНДС.БезНДС,
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"Товары");
	
	//////////////////////////////////////////////////////
	// Печатные формы
	НоваяСтрока = Правило.ПрисоединяемыеПечатныеФормы.Добавить();
	НоваяСтрока.ИмяКоманды = "КоммерческоеПредложениеКлиенту";
	НоваяСтрока.МенеджерПечати = "Документ.КоммерческоеПредложениеКлиенту";
	НоваяСтрока.Обновлять = Истина;
	НоваяСтрока.ПредставлениеКоманды = "Коммерческое предложение клиенту (со скидками)";
	
КонецПроцедуры

Процедура ДополнитьПравилоИнтеграцииЗаказКлиента(ПравилаИнтеграцииМенеджер, Правило)
	
	//////////////////////////////////////////////////////
	// Правила выгрузки (Передача в 1С:Документооборот)
	
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"author",
		"Менеджер");
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.ВыражениеНаВстроенномЯзыке,
		"sum",
		"Если Параметры.Источник.ЦенаВключаетНДС Тогда
		|	Параметры.Результат = Параметры.Источник.СуммаДокумента;
		|Иначе
		|	Параметры.Результат = Параметры.Источник.СуммаДокумента - Параметры.Источник.Товары.Итог(""СуммаНДС"");
		|КонецЕсли;");
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.ВыражениеНаВстроенномЯзыке,
		"VAT",
		"Параметры.Результат = Параметры.Источник.Товары.Итог(""СуммаНДС"");");
	
	//////////////////////////////////////////////////////
	// Правила загрузки (Получение из 1С:Документооборота)
	
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"СуммаДокумента",
		"sum",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением);
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.УказанноеЗначение,
		"ЦенаВключаетНДС",
		Истина,
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.Запрещено);
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"Согласован",
		"statusApproval",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением);
	
	//////////////////////////////////////////////////////
	// Парные правила
	
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Валюта",
		"currency",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением);
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Менеджер",
		"responsible",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноБезПерепроведения);
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Подразделение",
		"subdivision",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением);
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"КонтактноеЛицо",
		"contactPerson",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноБезПерепроведения);
	
	// Таблица "Товары и услуги" - "Товары"
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Товары",
		"productRows.rows",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением);
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Номенклатура",
		"product",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"Товары",
		"productRows.rows");
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Цена",
		"price",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"Товары",
		"productRows.rows");
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Количество",
		"quantity",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"Товары",
		"productRows.rows");
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"СуммаНДС",
		"VAT",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"Товары",
		"productRows.rows");
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Сумма",
		"total",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"Товары",
		"productRows.rows");
	
	// Ставка НДС в загрузке и выгрузке будет заполняться по-разному
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"VATRate",
		"Товары.СтавкаНДС",
		Истина,,
		"productRows.rows");
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.УказанноеЗначение,
		"СтавкаНДС",
		Справочники.СтавкиНДС.БезНДС,
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"Товары");
	
	// Также нужно заполнить Количество упаковок
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"КоличествоУпаковок",
		"productRows.rows.quantity",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"Товары");
	
	//////////////////////////////////////////////////////
	// Печатные формы
	НоваяСтрока = Правило.ПрисоединяемыеПечатныеФормы.Добавить();
	НоваяСтрока.ИмяКоманды = "ЗаказКлиента";
	НоваяСтрока.МенеджерПечати = "Обработка.ПечатьЗаказовНаТоварыУслуги";
	НоваяСтрока.Обновлять = Истина;
	НоваяСтрока.ПредставлениеКоманды = "Заказ клиента";
	
КонецПроцедуры

Процедура ДополнитьПравилоИнтеграцииЗаказПоставщику(ПравилаИнтеграцииМенеджер, Правило)
	
	//////////////////////////////////////////////////////
	// Правила выгрузки (Передача в 1С:Документооборот)
	
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"author",
		"Менеджер");
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.ВыражениеНаВстроенномЯзыке,
		"sum",
		"Если Параметры.Источник.ЦенаВключаетНДС Тогда
		|	Параметры.Результат = Параметры.Источник.СуммаДокумента;
		|Иначе
		|	Параметры.Результат = Параметры.Источник.СуммаДокумента - Параметры.Источник.Товары.Итог(""СуммаНДС"");
		|КонецЕсли;");
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.ВыражениеНаВстроенномЯзыке,
		"VAT",
		"Параметры.Результат = Параметры.Источник.Товары.Итог(""СуммаНДС"");");
	
	//////////////////////////////////////////////////////
	// Правила загрузки (Получение из 1С:Документооборота)
	
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"СуммаДокумента",
		"sum",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением);
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.УказанноеЗначение,
		"ЦенаВключаетНДС",
		Истина,
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.Запрещено);
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"Согласован",
		"statusApproval",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением);
	
	//////////////////////////////////////////////////////
	// Парные правила
	
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Валюта",
		"currency",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением);
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Менеджер",
		"responsible",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноБезПерепроведения);
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Подразделение",
		"subdivision",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением);
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"КонтактноеЛицо",
		"contactPerson",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноБезПерепроведения);
	
	// Таблица "Товары и услуги" - "Товары"
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Товары",
		"productRows.rows",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением);
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Номенклатура",
		"product",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"Товары",
		"productRows.rows");
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Цена",
		"price",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"Товары",
		"productRows.rows");
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Количество",
		"quantity",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"Товары",
		"productRows.rows");
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"СуммаНДС",
		"VAT",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"Товары",
		"productRows.rows");
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Сумма",
		"total",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"Товары",
		"productRows.rows");
	
	// Ставка НДС в загрузке и выгрузке будет заполняться по-разному
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"VATRate",
		"Товары.СтавкаНДС",
		Истина,,
		"productRows.rows");
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.УказанноеЗначение,
		"СтавкаНДС",
		Справочники.СтавкиНДС.БезНДС,
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"Товары");
	
	// Также нужно заполнить Количество упаковок
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"КоличествоУпаковок",
		"productRows.rows.quantity",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"Товары");
	
	//////////////////////////////////////////////////////
	// Печатные формы
	НоваяСтрока = Правило.ПрисоединяемыеПечатныеФормы.Добавить();
	НоваяСтрока.ИмяКоманды = "ЗаказПоставщику";
	НоваяСтрока.МенеджерПечати = "Обработка.ПечатьЗаказовНаТоварыУслуги";
	НоваяСтрока.Обновлять = Истина;
	НоваяСтрока.ПредставлениеКоманды = "Заказ поставщику";
	
КонецПроцедуры

Процедура ДополнитьПравилоИнтеграцииЗаявкаНаВозвратТоваровОтКлиента(ПравилаИнтеграцииМенеджер, Правило)
	
	//////////////////////////////////////////////////////
	// Правила выгрузки (Передача в 1С:Документооборот)
	
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"author",
		"Менеджер");
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.ВыражениеНаВстроенномЯзыке,
		"sum",
		"Если Параметры.Источник.ЦенаВключаетНДС Тогда
		|	Параметры.Результат = Параметры.Источник.СуммаДокумента;
		|Иначе
		|	Параметры.Результат = Параметры.Источник.СуммаДокумента - Параметры.Источник.ВозвращаемыеТовары.Итог(""СуммаНДС"");
		|КонецЕсли;");
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.ВыражениеНаВстроенномЯзыке,
		"VAT",
		"Параметры.Результат = Параметры.Источник.ВозвращаемыеТовары.Итог(""СуммаНДС"");");
	
	//////////////////////////////////////////////////////
	// Правила загрузки (Получение из 1С:Документооборота)
	
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"СуммаДокумента",
		"sum",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением);
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.УказанноеЗначение,
		"ЦенаВключаетНДС",
		Истина,
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.Запрещено);
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"Согласован",
		"statusApproval",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением);
	
	//////////////////////////////////////////////////////
	// Парные правила
	
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Валюта",
		"currency",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением);
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Менеджер",
		"responsible",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноБезПерепроведения);
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Подразделение",
		"subdivision",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением);
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"КонтактноеЛицо",
		"contactPerson",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноБезПерепроведения);
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"ЖелаемаяДатаПоступления",
		"performanceDate",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением);
	
	// Таблица "Товары и услуги" - "Возвращаемые товары"
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"ВозвращаемыеТовары",
		"productRows.rows",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением);
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Номенклатура",
		"product",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"ВозвращаемыеТовары",
		"productRows.rows");
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Цена",
		"price",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"ВозвращаемыеТовары",
		"productRows.rows");
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Количество",
		"quantity",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"ВозвращаемыеТовары",
		"productRows.rows");
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"СуммаНДС",
		"VAT",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"ВозвращаемыеТовары",
		"productRows.rows");
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Сумма",
		"total",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"ВозвращаемыеТовары",
		"productRows.rows");
	
	// Ставка НДС в загрузке и выгрузке будет заполняться по-разному
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"VATRate",
		"ВозвращаемыеТовары.СтавкаНДС",
		Истина,,
		"productRows.rows");
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.УказанноеЗначение,
		"СтавкаНДС",
		Справочники.СтавкиНДС.БезНДС,
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"ВозвращаемыеТовары");
	
	// Также нужно заполнить Количество упаковок
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"КоличествоУпаковок",
		"productRows.rows.quantity",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"ВозвращаемыеТовары");
	
	//////////////////////////////////////////////////////
	// Печатные формы
	НоваяСтрока = Правило.ПрисоединяемыеПечатныеФормы.Добавить();
	НоваяСтрока.ИмяКоманды = "ЗаявкаНаВозврат";
	НоваяСтрока.МенеджерПечати = "Документ.ЗаявкаНаВозвратТоваровОтКлиента";
	НоваяСтрока.Обновлять = Истина;
	НоваяСтрока.ПредставлениеКоманды = "Заявка на возврат";
	
КонецПроцедуры

Процедура ДополнитьПравилоИнтеграцииЗаявкаНаРасходованиеДенежныхСредств(ПравилаИнтеграцииМенеджер, Правило)
	
	//////////////////////////////////////////////////////
	// Правила выгрузки (Передача в 1С:Документооборот)
	
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"author",
		"КтоЗаявил");
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.ВыражениеНаВстроенномЯзыке,
		"VAT",
		"Параметры.Результат = Параметры.Источник.РасшифровкаПлатежа.Итог(""СуммаНДС"");");
	
	// Таблица Статьи ДДС
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаДО(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.ВыражениеНаВстроенномЯзыке,
		"cashFlowRows.rows",
		"Параметры.Результат = Новый ТаблицаЗначений;
		|Параметры.Результат.Колонки.Добавить(""СтатьяДДС"");
		|Параметры.Результат.Колонки.Добавить(""Сумма"");
		|Параметры.Результат.Колонки.Добавить(""СуммаНДС"");
		|Для Каждого Строка Из Параметры.Источник.РасшифровкаПлатежа Цикл
		|	НоваяСтрока = Параметры.Результат.Добавить();
		|	НоваяСтрока.СтатьяДДС = Строка.СтатьяДвиженияДенежныхСредств;
		|	НоваяСтрока.Сумма = Строка.Сумма;
		|	НоваяСтрока.СуммаНДС = Строка.СуммаНДС;
		|КонецЦикла;
		|Параметры.Результат.Свернуть(""СтатьяДДС"", ""Сумма, СуммаНДС"")");
	
	//////////////////////////////////////////////////////
	// правила загрузки (Получение из 1С:Документооборота)
	
	// Таблица "Статьи движения денежных средств" - "Расшифровка платежа"
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"РасшифровкаПлатежа",
		"cashFlowRows.rows",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением);
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"СтатьяДвиженияДенежныхСредств",
		"cashFlowRows.rows.item",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"РасшифровкаПлатежа");
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"Сумма",
		"cashFlowRows.rows.total",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"РасшифровкаПлатежа");
	ПравилаИнтеграцииМенеджер.ДобавитьПравилоЗаполненияРеквизитаИС(
		Правило,
		Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта,
		"СуммаНДС",
		"cashFlowRows.rows.VAT",
		Ложь,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением,
		"РасшифровкаПлатежа");
	
	//////////////////////////////////////////////////////
	// Парные правила
	
	Если ИнтеграцияС1СДокументооборот.ДоступенФункционалВерсииСервиса("2.1.28.12.CORP") Тогда
		ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
			Правило,
			"Контрагент",
			"recipient",,,
			Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением);
	КонецЕсли;
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"СуммаДокумента",
		"sum",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением);
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Валюта",
		"currency",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением);
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"КтоЗаявил",
		"responsible",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноБезПерепроведения);
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"Подразделение",
		"subdivision",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением);
	ПравилаИнтеграцииМенеджер.ДобавитьПарноеПравило(
		Правило,
		"ЖелательнаяДатаПлатежа",
		"performanceDate",,,
		Перечисления.РежимИзмененияПроведенногоДокументаДанными1СДокументооборота.РазрешеноСПерепроведением);
	
КонецПроцедуры

#КонецОбласти