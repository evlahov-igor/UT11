////////////////////////////////////////////////////////////////////////////////
// Модуль "Распределение запасов (движения)", содержит процедуры и функции
// обслуживающие движения документов по регистру накопления "Распределение запасов - Движения".
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Формирует параметры для проведения документа по регистрам учетного механизма через общий механизм проведения.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  Свойства - ФиксированнаяСтруктура - свойства документа (См. ПроведениеДокументов.СвойстваДокумента).
//
//
// Возвращаемое значение:
//  Структура - См. ПроведениеДокументов.ПараметрыУчетногоМеханизма
//
Функция ПараметрыДляПроведенияДокумента(Документ, Свойства) Экспорт
	
	Параметры = ПроведениеДокументов.ПараметрыУчетногоМеханизма();
	Параметры.ЕстьПроизводныеДвижения = Истина;
	
	ТипДокумента = ТипЗнч(Документ);
	
	ДополнительныеДокументы = Новый Структура;
	ПроведениеДокументовЛокализация.ЗаполнитьЛокальныеДокументыОбеспечения(ДополнительныеДокументы);
	Параметры.КонтрольныеРегистрыЗаданий.Добавить(Метаданные.РегистрыНакопления.РаспределениеЗапасовДвижения);
	
	// Проведение
	Если Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.РаспределениеЗапасовДвижения);
		
	КонецЕсли;
	
	// Контроль
	Если Свойства.РежимЗаписи <> РежимЗаписиДокумента.Запись Тогда

			ИсправительныйДокумент = ИсправлениеДокументов.ЭтоИсправительныйДокумент(Документ);
		
		Если Не ЗапасыСервер.ПроверитьНеобходимостьПерезаполненияВидовЗапасовДокумента(Документ)
			И (Не Документ.ДополнительныеСвойства.Свойство("КонтролироватьОбеспечение")
				Или Документ.ДополнительныеСвойства.КонтролироватьОбеспечение) Тогда
			
				Если ТипДокумента = Тип("ДокументОбъект.АктОРасхожденияхПослеОтгрузки")
					Или ТипДокумента = Тип("ДокументОбъект.АктОРасхожденияхПослеПеремещения")
					Или ТипДокумента = Тип("ДокументОбъект.ВнутреннееПотреблениеТоваров")
					Или ТипДокумента = Тип("ДокументОбъект.ВозвратТоваровПоставщику")
					Или ТипДокумента = Тип("ДокументОбъект.ЗаказКлиента")
					Или ТипДокумента = Тип("ДокументОбъект.ЗаказНаВнутреннееПотребление")
					Или ТипДокумента = Тип("ДокументОбъект.ЗаказНаПеремещение")
					Или ТипДокумента = Тип("ДокументОбъект.ЗаказНаСборку")
					Или ТипДокумента = Тип("ДокументОбъект.КорректировкаНазначенияТоваров")
						И Не Документ.ДополнительныеСвойства.Свойство("ПрограммноеСозданиеДокумента")
					Или ТипДокумента = Тип("ДокументОбъект.ЗаказПоставщику")
					Или ТипДокумента = Тип("ДокументОбъект.КорректировкаРеализации")
					Или ТипДокумента = Тип("ДокументОбъект.ОтгрузкаТоваровСХранения")
					Или ТипДокумента = Тип("ДокументОбъект.ОтчетОРозничныхПродажах")
					Или ТипДокумента = Тип("ДокументОбъект.ПередачаТоваровХранителю")
					Или ТипДокумента = Тип("ДокументОбъект.ПеремещениеТоваров")
					Или ТипДокумента = Тип("ДокументОбъект.ПоступлениеТоваровНаСклад")
					Или ТипДокумента = Тип("ДокументОбъект.ПоступлениеТоваровОтХранителя")
					Или ТипДокумента = Тип("ДокументОбъект.ПриемкаТоваровНаХранение")
					Или ТипДокумента = Тип("ДокументОбъект.ПриобретениеТоваровУслуг")
					Или ТипДокумента = Тип("ДокументОбъект.ПриходныйОрдерНаТовары")
					Или ТипДокумента = Тип("ДокументОбъект.ПрочееОприходованиеТоваров")
					Или ТипДокумента = Тип("ДокументОбъект.РеализацияТоваровУслуг")
					Или ТипДокумента = Тип("ДокументОбъект.СборкаТоваров")
					Или ТипДокумента = Тип("ДокументОбъект.ЧекККМ")
					Или ТипДокумента = Тип("ДокументОбъект.ЧекККМВозврат")
					Или ТипДокумента = Тип("ДокументОбъект.ЧекККМКоррекции")
					
					
					Или ИсправительныйДокумент
						И НЕ Документ.ДополнительныеСвойства.Свойство("ПрограммноеСозданиеДокумента") 
					
					Или (ДополнительныеДокументы.Свойство("КонтрольныеРегистрыИзменений")
						И ДополнительныеДокументы.КонтрольныеРегистрыИзменений.Свойство("РаспределениеЗапасовДвижения")
						И ДополнительныеДокументы.КонтрольныеРегистрыИзменений.РаспределениеЗапасовДвижения.Найти(ТипДокумента)<>Неопределено)
					Тогда
						Параметры.КонтрольныеРегистрыИзменений.Добавить(Метаданные.РегистрыНакопления.РаспределениеЗапасовДвижения);
			КонецЕсли;
			
		КонецЕсли;
	
	КонецЕсли;
	
	Возврат Параметры;
	
КонецФункции

// Возвращает тексты запросов для сторнирования движений при исправлении документов
// 
// Параметры:
// 	МетаданныеДокумента - ОбъектМетаданныхДокумент - Метаданные документа, который проводится.
// 
// Возвращаемое значение:
// 	Соответствие - Соответствие полного имени регистра тексту запроса сторнирования
//
Функция ТекстыЗапросовСторнирования(МетаданныеДокумента) Экспорт
//
	ТекстыЗапросов = Новый Соответствие();
	
	МетаданныеРегистра = Метаданные.РегистрыНакопления.РаспределениеЗапасовДвижения;
	ТекстСторнирования = ПроведениеДокументов.ТекстСторнирующегоЗапроса(МетаданныеРегистра, МетаданныеДокумента);
	ТекстыЗапросов.Вставить(МетаданныеРегистра.ПолноеИмя(), ТекстСторнирования);
	
	Возврат ТекстыЗапросов;
	
КонецФункции

// Дополняет текст запроса механизма проверки даты запрета по таблице изменений.
// 
// Параметры:
// 	Запрос - Запрос - используется для установки параметров запроса.
// 
// Возвращаемое значение:
//	Соответствие - соответствие имен таблиц изменения регистров и текстов запросов.
//	
Функция ТекстыЗапросовКонтрольДатыЗапретаПоТаблицеИзменений(Запрос) Экспорт

	СоответствиеТекстовЗапросов = Новый Соответствие();
	Возврат СоответствиеТекстовЗапросов;
	
КонецФункции

// Процедура формирования движений по подчиненным регистрам обеспечения.
//
// Параметры:
//	ТаблицыДляДвижений - Структура - таблицы данных документа
//	Движения - КоллекцияДвижений - коллекция наборов записей движений документа
//	Отказ - Булево - признак отказа от проведения документа.
//
Процедура ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "РаспределениеЗапасовДвижения");
	
КонецПроцедуры

// Формирует тексты запросов для контроля изменений записанных движений регистров.
//
// Параметры:
//  Запрос - Запрос - запрос, хранящий параметры используемые в списке запросов
//  ТекстыЗапроса - СписокЗначений - список текстов запросов и их имен.
//  Документ - ДокументОбъект - записываемый документ.
//
Процедура ИнициализироватьДанныеКонтроляИзменений(Запрос, ТекстыЗапроса, Документ) Экспорт
	
	Если ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, "ДвиженияРаспределениеЗапасовДвиженияИзменение") Тогда
		
		ТекстЗапросаКонтроль = РаспределениеЗапасов.ТекстЗапросаКонтроль();
		ТекстыЗапроса.Добавить(ТекстЗапросаКонтроль, "РаспределениеЗапасовДвиженияРезультатыКонтроля");
		
	КонецЕсли;
	
КонецПроцедуры

// Выводит сообщения пользователю при наличии ошибок контроля изменений записанных движений регистров.
//
// Параметры:
//  РезультатыКонтроля - Структура - таблицы с результатами контроля изменений
//  Документ - ДокументОбъект - записываемый документ
//  Отказ - Булево - признак отказа от проведения документа.
//
Процедура СообщитьОРезультатахКонтроляИзменений(РезультатыКонтроля, Документ, Отказ) Экспорт
	
	Если ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, "ДвиженияРаспределениеЗапасовДвиженияИзменение") Тогда
		
		ТаблицаРезультатовКонтроля = РезультатыКонтроля.РаспределениеЗапасовДвиженияРезультатыКонтроля;
		РаспределениеЗапасов.СообщитьОбОшибкахПроведения(Документ, Отказ, ТаблицаРезультатовКонтроля);
		
	КонецЕсли;
	
КонецПроцедуры

// Перераспределяет запасы при групповом изменении приоритета заказов на отгрузку.
// 
// Параметры:
// 	Заказы - Массив - ссылки на заказы.
//
Процедура ПриИзмененииПриоритета(Заказы) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Если РаспределениеЗапасов.ДосчитыватьРегистрРегламентнымЗаданием() Тогда
		
		Запрос = Новый Запрос();
		
		Запрос.УстановитьПараметр("Заказы", Заказы);
		Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Сведения.Номенклатура        КАК Номенклатура,
			|	Сведения.Характеристика      КАК Характеристика,
			|	Сведения.Склад               КАК Склад,
			|	Сведения.Назначение          КАК Назначение
			|ИЗ
			|	РегистрСведений.РаспределениеЗапасов КАК Сведения
			|ГДЕ
			|	Сведения.ЗаказНаОтгрузку В(&Заказы)
			|		И Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемаяОтгрузка)
			|		И (Сведения.КОбеспечениюБезРезерва <> 0 ИЛИ Сведения.РезервироватьПоМереПоступления <> 0)";
		Таблица = Запрос.Выполнить().Выгрузить();
		Таблица.Колонки.Добавить("РазделительЗаписи");
		РазделительЗаписи = Новый УникальныйИдентификатор();
		Таблица.ЗаполнитьЗначения(РазделительЗаписи, "РазделительЗаписи");
		Таблица.Колонки.Добавить("ДатаЗаписи");
		Таблица.ЗаполнитьЗначения(ТекущаяДатаСеанса(), "ДатаЗаписи");
		
		Набор = РегистрыСведений.ЗаданияКРаспределениюЗапасов.СоздатьНаборЗаписей();
		Набор.Загрузить(Таблица);
		Набор.Отбор.РазделительЗаписи.Установить(РазделительЗаписи);
		Набор.Записать(Ложь);
		
	Иначе
		
		НачатьТранзакцию();
		Попытка
			
			Запрос = Новый Запрос();
			Запрос.УстановитьПараметр("Заказы", Заказы);
			Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
			Запрос.Текст =
				"ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	Сведения.Номенклатура        КАК Номенклатура,
				|	Сведения.Характеристика      КАК Характеристика,
				|	Сведения.Склад               КАК Склад,
				|	Сведения.Назначение          КАК Назначение
				|ПОМЕСТИТЬ ТоварыДляРаспределенияЗапасов
				|ИЗ
				|	РегистрСведений.РаспределениеЗапасов КАК Сведения
				|ГДЕ
				|	Сведения.ЗаказНаОтгрузку В(&Заказы)
				|		И Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемаяОтгрузка)
				|		И (Сведения.КОбеспечениюБезРезерва <> 0 ИЛИ Сведения.РезервироватьПоМереПоступления <> 0)
				|ИНДЕКСИРОВАТЬ ПО
				|	Номенклатура, Характеристика, Склад, Назначение";
			Запрос.Выполнить();
			
			РаспределениеЗапасов.ДобавитьВременныеТаблицыАктуализацииСостояний(Запрос, "ТоварыДляРаспределенияЗапасов", "ПередЗаписью");
			
			Запрос.Текст =
				"ВЫБРАТЬ
				|	Товары.Номенклатура    КАК Номенклатура,
				|	Товары.Характеристика  КАК Характеристика,
				|	Товары.Склад           КАК Склад,
				|	Товары.Назначение      КАК Назначение
				|ИЗ
				|	ТоварыДляРаспределенияЗапасов КАК Товары";
				
			РезультатЗапроса = Запрос.Выполнить();
			
			БлокировкаДанных = Новый БлокировкаДанных();
			ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрСведений.РаспределениеЗапасов");
			ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура",   "Номенклатура");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад",          "Склад");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Назначение",     "Назначение");
			
			БлокировкаДанных.Заблокировать();
			
			ЗаписатьРаспределениеЗапасов(Запрос, Истина);
			
			РаспределениеЗапасов.ДобавитьВременныеТаблицыАктуализацииСостояний(Запрос, "ТоварыДляРаспределенияЗапасов", "ПриЗаписи");
			РаспределениеЗапасов.ТаблицаИзмененийРаспределениеЗапасовДляРасчетаСостояний(Запрос);
			
			Запрос.Текст =
				"ВЫБРАТЬ
				|	Таблица.Заказ КАК Заказ
				|ИЗ
				|	СостоянияЗаказовКлиентовИзменение КАК Таблица
				|;
				|//////////////////////////////
				|
				|ВЫБРАТЬ
				|	Таблица.Заказ КАК Заказ
				|ИЗ
				|	СостоянияВнутреннихЗаказовИзменение КАК Таблица
				|;
				|//////////////////////////////
				|
				|ВЫБРАТЬ
				|	Таблица.Заказ КАК Заказ
				|ИЗ
				|	СостоянияЭтаповПроизводстваИзменение КАК Таблица";
			Пакет = Запрос.ВыполнитьПакет();
			МассивЗаказов = Пакет[0].Выгрузить().ВыгрузитьКолонку("Заказ");
			РегистрыСведений.СостоянияЗаказовКлиентов.ОтразитьСостояниеЗаказа(МассивЗаказов, Ложь, Ложь);
			МассивЗаказов = Пакет[1].Выгрузить().ВыгрузитьКолонку("Заказ");
			РегистрыСведений.СостоянияВнутреннихЗаказов.ОтразитьСостояниеЗаказа(МассивЗаказов);
			МассивЗаказов = Пакет[2].Выгрузить().ВыгрузитьКолонку("Заказ");
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Изменение приоритета заказа завершилось неудачно по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			СобытиеЖурнала = ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации();
			ЗаписьЖурналаРегистрации(СобытиеЖурнала,
			                         УровеньЖурналаРегистрации.Ошибка,
			                         Метаданные.РегламентныеЗадания.РаспределениеЗапасов,
			                         ,
			                         ТекстСообщения);
			ВызватьИсключение ТекстСообщения;
			
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Шаблоны движений документов.

// Дополняет тексты запроса проведения документа текстами движений регистра РаспределениеЗапасовДвижения,
// отражающего операцию движения товаров к отгрузке (списание из доступного остатка).
// Уменьшает фактический и свободный остаток товара на складе, работы в подразделении.
// Проведение документа может быть выполнено с контролем остатков.
// Если свободного остатка недостаточно могут быть задействованы запасы на складе,
// распределенные ранее на указанный документ планируемого расхода запаса.
//
// Параметры:
//  Запрос - Запрос - Запрос отражения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса отражения документа.
//  Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
//  ТекстЗапросаТабЧасть - Строка - Текст запроса получения данных документа. Выражения выборки должны содержать следующие поля:
//   * Ссылка                                     - ДокументСсылка                        - отражаемый документ.
//   * Период                                     - Дата                                  - дата отражения операции (соответствует дате документа).
//   * Номенклатура                               - СправочникСсылка.Номенклатура         - списываемая из запаса номенклатура.
//   * Характеристика                             - СправочникСсылка.ХарактеристикиНоменклатуры - списываемая из запаса характеристика номенклатуры.
//   * Склад                                      - СправочникСсылка.Склады -             - склад списания.
//   * Назначение                                 - СправочникСсылка.Назначения -         - назначение номенклатуры.
//   * Количество                                 - Число                                 - списываемое количество.
//   * ЗапланированныйРасходРаспределенногоЗапаса - ОпределяемыйТип.ОжидаемаяОтгрузка     - документ планирования расхода запасов,
//                                                                                          распределенные запасы которого будут израсходованы.
//   * КонтрольСвободногоОстатка                  - Булево                                - контроль свободного остатка при списании запасов.
//   * ИгнорироватьРезервыПриКонтролеОстатков     - Булево                                - контроль только наличия при списании запасов.
//  ТекстыШаблоновВременныхТаблиц - см. ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента.ТекстыШаблоновВременныхТаблиц
Процедура РасходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть, ТекстыШаблоновВременныхТаблиц = Неопределено) Экспорт
	
	ТекстЗапросаОперации =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка                                     КАК Регистратор,
		|	ТабЧасть.Период                                     КАК Период,
		|	ТабЧасть.Номенклатура                               КАК Номенклатура,
		|	ТабЧасть.Характеристика                             КАК Характеристика,
		|	ТабЧасть.Склад                                      КАК Склад,
		|	ТабЧасть.Назначение                                 КАК Назначение,
		|	ТабЧасть.ЗапланированныйРасходРаспределенногоЗапаса КАК ЗаказНаОтгрузку,
		|	ДАТАВРЕМЯ(1,1,1)                                    КАК ЖелаемаяДатаОтгрузки,
		|	НЕОПРЕДЕЛЕНО                                        КАК ЗаказНаПоступление,
		|	ДАТАВРЕМЯ(1,1,1)                                    КАК ДатаПоступления,
		|	ВЫБОР КОГДА ТабЧасть.КонтрольСвободногоОстатка ТОГДА
		|				ТабЧасть.Количество
		|			ИНАЧЕ
		|				0
		|		КОНЕЦ                                           КАК Отгрузить,
		|	0                                                   КАК Резервировать,
		|	0                                                   КАК РезервироватьПоМереПоступления,
		|	0                                                   КАК КОбеспечениюБезРезерва,
		|	0                                                   КАК НеОбеспечивать,
		|	0                                                   КАК ЗакрытьГрафикОтгрузки,
		|	ВЫБОР КОГДА ТабЧасть.КонтрольСвободногоОстатка ТОГДА
		|				0
		|			ИНАЧЕ
		|				-ТабЧасть.Количество
		|		КОНЕЦ                                           КАК Поступило,
		|	0                                                   КАК ПоступитКДате,
		|	0                                                   КАК ПоставкаНаСогласовании,
		|	0                                                   КАК ЗакрытьГрафикПоступления,
		|	ТабЧасть.ИгнорироватьРезервыПриКонтролеОстатков     КАК ИгнорироватьРезервыПриКонтролеОстатков,
		|	ЛОЖЬ                                                КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка = &Ссылка
		|		И (ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|			ИЛИ ВсяНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|				И ТабЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))";
	
	ТекстыШаблоновОтражения = ТекстыШаблоновОтражения(Регистры, ТекстЗапросаОперации);
	ТекстыЗапросовТаблицДокумента = Новый Структура;
	ТекстыЗапросовТаблицДокумента.Вставить("ТабЧасть", ТекстЗапросаТабЧасть);
	
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения,
		ТекстыЗапросовТаблицДокумента, ТекстыШаблоновВременныхТаблиц);
	
КонецПроцедуры

// Дополняет тексты запроса проведения документа текстами движений регистра РаспределениеЗапасовДвижения,
// отражающего операцию планируемого расхода товаров.
// Резервировать: уменьшает свободный остаток с контролем остатка, формирует резерв товара на складе по заказу.
// НеОбеспечивать: не формирует потребности и резервов, фиксирует факт приема заказа
// КОбеспечению, если есть свободный остаток на складе / в ожидаемых поступлениях: уменьшает свободный остаток,
// формирует резерв товара на складе по заказуКОбеспечению, если нет свободного остатка на складе / в ожидаемых поступлениях: формирует потребность в товаре / работах
//
// Параметры:
//  Запрос - Запрос - Запрос отражения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса отражения документа.
//  Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
//  ТекстЗапросаТабЧасть - Строка - Текст запроса получения данных документа. Выражения выборки должны содержать следующие поля:
//   * Ссылка                                     - ДокументСсылка                         - отражаемый документ.
//   * Период                                     - Дата                                   - дата отражения операции (соответствует дате документа).
//   * Номенклатура                               - СправочникСсылка.Номенклатура          - списываемая из запаса номенклатура.
//   * Характеристика                             - СправочникСсылка.ХарактеристикиНоменклатуры - списываемая из запаса характеристика номенклатуры.
//   * Склад                                      - СправочникСсылка.Склады -              - склад списания.
//   * Назначение                                 - СправочникСсылка.Назначения -          - назначение номенклатуры.
//   * Количество                                 - Число                                  - заказываемое количество.
//   * ВариантОбеспечения                         - ПеречислениеСсылка.ВариантыОбеспечения - вариант обеспечения.
//   * Заказ                                      - ОпределяемыйТип.ОжидаемаяОтгрузка      - заказ.
//   * ЖелаемаяДатаОтгрузки                       - Дата                                   - планируемая дата списания запасов.
//   * ПоГрафику                                  - Булево - признак, что расход товара происходит по ранее запланированному в графике расходу.
//   * РаспоряжениеВГрафике                       - ОпределяемыйТип.ОжидаемаяОтгрузка      - документ планирования расхода запаса,
//                                                                                           запасы которого будут уменьшены.
//   * КоличествоВГрафике                         - Число                                  - количество запаса, на которое будет уменьшен запас
//                                                                                           ранее запланированного в графике расхода.
//
Процедура ЗапланироватьРасходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть) Экспорт
	
	ТекстЗапросаОперации =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка               КАК Регистратор,
		|	ТабЧасть.Период               КАК Период,
		|	ТабЧасть.Номенклатура         КАК Номенклатура,
		|	ТабЧасть.Характеристика       КАК Характеристика,
		|	ТабЧасть.Склад                КАК Склад,
		|	ТабЧасть.Назначение           КАК Назначение,
		|	ТабЧасть.Заказ                КАК ЗаказНаОтгрузку,
		|	ВЫБОР КОГДА ТабЧасть.ЖелаемаяДатаОтгрузки = НЕОПРЕДЕЛЕНО ТОГДА
		|				ДАТАВРЕМЯ(1,1,1)
		|			ИНАЧЕ
		|				ТабЧасть.ЖелаемаяДатаОтгрузки
		|		КОНЕЦ КАК ЖелаемаяДатаОтгрузки,
		|	
		|	НЕОПРЕДЕЛЕНО                  КАК ЗаказНаПоступление,
		|	ДАТАВРЕМЯ(1,1,1)              КАК ДатаПоступления,
		|	0                             КАК Отгрузить,
		|	
		|	ВЫБОР КОГДА ТабЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада) ТОГДА
		|				ТабЧасть.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК Резервировать,
		|	
		|	ВЫБОР КОГДА ТабЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.РезервироватьПоМереПоступления) ТОГДА
		|				ТабЧасть.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК РезервироватьПоМереПоступления,
		|	
		|	ВЫБОР КОГДА ТабЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.КОбеспечению) ТОГДА
		|				ТабЧасть.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК КОбеспечениюБезРезерва,
		|	
		|	ВЫБОР КОГДА ТабЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется) ТОГДА
		|				ТабЧасть.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК НеОбеспечивать,
		|	
		|	0 КАК ЗакрытьГрафикОтгрузки,
		|	0 КАК Поступило,
		|	0 КАК ПоступитКДате,
		|	0 КАК ПоставкаНаСогласовании,
		|	0 КАК ЗакрытьГрафикПоступления,
		|	ЛОЖЬ КАК ИгнорироватьРезервыПриКонтролеОстатков,
		|	ЛОЖЬ КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка = &Ссылка
		|	И ТабЧасть.Количество <> 0
		|	И (ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|			ИЛИ ВсяНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|				И ТабЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|				И ТабЧасть.ВариантОбеспечения В(
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.КОбеспечению),
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.УдалитьОбособленно)))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТабЧасть.Ссылка               КАК Регистратор,
		|	ТабЧасть.Период               КАК Период,
		|	ТабЧасть.Номенклатура         КАК Номенклатура,
		|	ТабЧасть.Характеристика       КАК Характеристика,
		|	ТабЧасть.Склад                КАК Склад,
		|	ТабЧасть.Назначение           КАК Назначение,
		|	ТабЧасть.РаспоряжениеВГрафике КАК ЗаказНаОтгрузку,
		|	ДАТАВРЕМЯ(1,1,1)              КАК ЖелаемаяДатаОтгрузки,
		|	
		|	НЕОПРЕДЕЛЕНО                  КАК ЗаказНаПоступление,
		|	ДАТАВРЕМЯ(1,1,1)              КАК ДатаПоступления,
		|	0                             КАК Отгрузить,
		|	0                             КАК Резервировать,
		|	0                             КАК РезервироватьПоМереПоступления,
		|	0                             КАК КОбеспечениюБезРезерва,
		|	0                             КАК НеОбеспечивать,
		|	ТабЧасть.КоличествоВГрафике   КАК ЗакрытьГрафикОтгрузки,
		|	0                             КАК Поступило,
		|	0                             КАК ПоступитКДате,
		|	0                             КАК ПоставкаНаСогласовании,
		|	0                             КАК ЗакрытьГрафикПоступления,
		|	ЛОЖЬ                          КАК ИгнорироватьРезервыПриКонтролеОстатков,
		|	ЛОЖЬ                          КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка = &Ссылка
		|	И ТабЧасть.ПоГрафику
		|	И (ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|			ИЛИ ВсяНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|				И ТабЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))
		|";
	
	ТекстыШаблоновОтражения = ТекстыШаблоновОтражения(Регистры, ТекстЗапросаОперации);
	ТекстыЗапросовТаблицДокумента = Новый Структура;
	ТекстыЗапросовТаблицДокумента.Вставить("ТабЧасть", ТекстЗапросаТабЧасть);
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовТаблицДокумента);
	
КонецПроцедуры

// Дополняет тексты запроса проведения документа текстами движений регистра РаспределениеЗапасовДвижения,
// отражающего операцию фактического поступления товаров на склад (пополнение доступного остатка).
// Увеличивает фактический и свободный остаток товара на складе, работы в подразделении.
// Если приход товара ранее был запланирован документом планового прихода запаса (приход по графику),
// то при проведении будет уменьшен запас и свободный остаток в данном ожидаемом приходе (распоряжении).
//
// Параметры:
//  Запрос - Запрос - Запрос отражения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса отражения документа.
//  Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
//  ТекстЗапросаТабЧасть - Строка - Текст запроса получения данных документа. Выражения выборки должны содержать следующие поля:
//   * Ссылка               - ДокументСсылка                        - отражаемый документ.
//   * Период               - Дата                                  - дата отражения операции (соответствует дате документа).
//   * Номенклатура         - СправочникСсылка.Номенклатура         - приходуемая номенклатура.
//   * Характеристика       - СправочникСсылка.ХарактеристикиНоменклатуры - приходуемая характеристика номенклатуры.
//   * Склад                - СправочникСсылка.Склады -             - склад оприходования.
//   * Назначение           - СправочникСсылка.Назначения -         - назначение приходуемой номенклатуры.
//   * Количество           - Число                                 - приходуемое количество.
//   * ПоГрафику            - Булево                                - признак, что приход товара происходит по ранее запланированному в графике поступлению.
//   * РаспоряжениеВГрафике - ОпределяемыйТип.ОжидаемоеПоступление  - документ планирования прихода запаса,
//                                                                    запасы которого будут уменьшены на величину данного прихода запаса.
//  ТекстыШаблоновВременныхТаблиц - см. ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента.ТекстыШаблоновВременныхТаблиц
Процедура ПриходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть, ТекстыШаблоновВременныхТаблиц = Неопределено) Экспорт
	
	ТекстЗапросаОперации =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка         КАК Регистратор,
		|	ТабЧасть.Период         КАК Период,
		|	ТабЧасть.Номенклатура   КАК Номенклатура,
		|	ТабЧасть.Характеристика КАК Характеристика,
		|	ТабЧасть.Склад          КАК Склад,
		|	ТабЧасть.Назначение     КАК Назначение,
		|	НЕОПРЕДЕЛЕНО            КАК ЗаказНаОтгрузку,
		|	ДАТАВРЕМЯ(1,1,1)        КАК ЖелаемаяДатаОтгрузки,
		|	НЕОПРЕДЕЛЕНО            КАК ЗаказНаПоступление,
		|	ДАТАВРЕМЯ(1,1,1)        КАК ДатаПоступления,
		|	0                       КАК Отгрузить,
		|	0                       КАК Резервировать,
		|	0                       КАК РезервироватьПоМереПоступления,
		|	0                       КАК КОбеспечениюБезРезерва,
		|	0                       КАК НеОбеспечивать,
		|	0                       КАК ЗакрытьГрафикОтгрузки,
		|	ТабЧасть.Количество     КАК Поступило,
		|	0                       КАК ПоступитКДате,
		|	0                       КАК ПоставкаНаСогласовании,
		|	0                       КАК ЗакрытьГрафикПоступления,
		|	ЛОЖЬ                    КАК ИгнорироватьРезервыПриКонтролеОстатков,
		|	ЛОЖЬ                    КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка = &Ссылка
		|		И (ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|			ИЛИ ВсяНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|				И ТабЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТабЧасть.Ссылка               КАК Регистратор,
		|	ТабЧасть.Период               КАК Период,
		|	ТабЧасть.Номенклатура         КАК Номенклатура,
		|	ТабЧасть.Характеристика       КАК Характеристика,
		|	ТабЧасть.Склад                КАК Склад,
		|	ТабЧасть.Назначение           КАК Назначение,
		|	НЕОПРЕДЕЛЕНО                  КАК ЗаказНаОтгрузку,
		|	ДАТАВРЕМЯ(1,1,1)              КАК ЖелаемаяДатаОтгрузки,
		|	ТабЧасть.РаспоряжениеВГрафике КАК ЗаказНаПоступление,
		|	ДАТАВРЕМЯ(1,1,1)              КАК ДатаПоступления,
		|	0                             КАК Отгрузить,
		|	0                             КАК Резервировать,
		|	0                             КАК РезервироватьПоМереПоступления,
		|	0                             КАК КОбеспечениюБезРезерва,
		|	0                             КАК НеОбеспечивать,
		|	0                             КАК ЗакрытьГрафикОтгрузки,
		|	0                             КАК Поступило,
		|	0                             КАК ПоступитКДате,
		|	0                             КАК ПоставкаНаСогласовании,
		|	ТабЧасть.Количество           КАК ЗакрытьГрафикПоступления,
		|	ЛОЖЬ                          КАК ИгнорироватьРезервыПриКонтролеОстатков,
		|	ЛОЖЬ                          КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка = &Ссылка
		|		И ТабЧасть.ПоГрафику
		|		И (ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|			ИЛИ ВсяНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|				И ТабЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))";
	
	ТекстыШаблоновОтражения = ТекстыШаблоновОтражения(Регистры, ТекстЗапросаОперации);
	ТекстыЗапросовТаблицДокумента = Новый Структура;
	ТекстыЗапросовТаблицДокумента.Вставить("ТабЧасть", ТекстЗапросаТабЧасть);
	
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения,
		ТекстыЗапросовТаблицДокумента, ТекстыШаблоновВременныхТаблиц);
	
КонецПроцедуры

// Дополняет тексты запроса проведения документа текстами движений регистра РаспределениеЗапасовДвижения,
// отражающего операцию фактического поступления товаров на склад (пополнение доступного остатка).
// Увеличивает фактический и свободный остаток товара на складе, работы в подразделении.
// Если приход товара ранее был запланирован документом планового прихода запаса (приход по графику),
// то при проведении будет уменьшен запас и свободный остаток в данном ожидаемом приходе (распоряжении).
//
// Параметры:
//  Запрос - Запрос - Запрос отражения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса отражения документа.
//  Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
//  ТекстЗапросаТабЧасть - Строка - Текст запроса получения данных документа. Выражения выборки должны содержать следующие поля:
//   * Ссылка               - ДокументСсылка                        - отражаемый документ.
//   * Период               - Дата                                  - дата отражения операции (соответствует дате документа).
//   * Номенклатура         - СправочникСсылка.Номенклатура         - приходуемая номенклатура.
//   * Характеристика       - СправочникСсылка.ХарактеристикиНоменклатуры - приходуемая характеристика номенклатуры.
//   * Склад                - СправочникСсылка.Склады -             - склад оприходования.
//   * Назначение           - СправочникСсылка.Назначения -         - назначение приходуемой номенклатуры.
//   * Количество           - Число                                 - приходуемое количество.
//   * Заказ                - ОпределяемыйТип.ОжидаемоеПоступление  - заказ по которому планируется поступление.
//   * ДатаПоступления      - Булево                                - дата на которую планируется поступление.
//   * ДоступенДляРасхода   - Булево                                - признак, что данный запас можно использовать для обеспечения запланированного расхода запаса.
//   * ПоГрафику            - Булево                                - признак, что приход товара происходит по ранее запланированному в графике поступлению.
//   * РаспоряжениеВГрафике - ОпределяемыйТип.ОжидаемоеПоступление  - документ планирования прихода запаса,
//                                                                    запасы которого будут уменьшены.
//   * КоличествоВГрафике   - Число                                 - количество запаса, на которое будет уменьшен запас ранее запланированного в графике поступления.
Процедура ЗапланироватьПриходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть) Экспорт
	
	ТекстЗапросаОперации =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка         КАК Регистратор,
		|	ТабЧасть.Период         КАК Период,
		|	ТабЧасть.Номенклатура   КАК Номенклатура,
		|	ТабЧасть.Характеристика КАК Характеристика,
		|	ТабЧасть.Склад          КАК Склад,
		|	ТабЧасть.Назначение     КАК Назначение,
		|	НЕОПРЕДЕЛЕНО            КАК ЗаказНаОтгрузку,
		|	ДАТАВРЕМЯ(1,1,1)        КАК ЖелаемаяДатаОтгрузки,
		|	ТабЧасть.Заказ          КАК ЗаказНаПоступление,
		|	
		|	ВЫБОР КОГДА ТабЧасть.ДоступенДляРасхода ТОГДА
		|				НАЧАЛОПЕРИОДА(ТабЧасть.ДатаПоступления, ДЕНЬ)
		|			ИНАЧЕ
		|				ДАТАВРЕМЯ(1, 1, 1)
		|		КОНЕЦ КАК ДатаПоступления,
		|	
		|	0                       КАК Отгрузить,
		|	0                       КАК Резервировать,
		|	0                       КАК РезервироватьПоМереПоступления,
		|	0                       КАК КОбеспечениюБезРезерва,
		|	0                       КАК НеОбеспечивать,
		|	0                       КАК ЗакрытьГрафикОтгрузки,
		|	0                       КАК Поступило,
		|	
		|	ВЫБОР КОГДА ТабЧасть.ДоступенДляРасхода ТОГДА
		|				ТабЧасть.Количество
		|			ИНАЧЕ
		|				0
		|		КОНЕЦ КАК ПоступитКДате,
		|	
		|	ВЫБОР КОГДА ТабЧасть.ДоступенДляРасхода ТОГДА
		|				0
		|			ИНАЧЕ
		|				ТабЧасть.Количество
		|		КОНЕЦ КАК ПоставкаНаСогласовании,
		|	0 КАК ЗакрытьГрафикПоступления,
		|	ЛОЖЬ КАК ИгнорироватьРезервыПриКонтролеОстатков,
		|	ЛОЖЬ КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка = &Ссылка
		|		И ТабЧасть.Количество <> 0
		|		И (ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|			ИЛИ ВсяНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|				И ТабЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТабЧасть.Ссылка               КАК Регистратор,
		|	ТабЧасть.Период               КАК Период,
		|	ТабЧасть.Номенклатура         КАК Номенклатура,
		|	ТабЧасть.Характеристика       КАК Характеристика,
		|	ТабЧасть.Склад                КАК Склад,
		|	ТабЧасть.Назначение           КАК Назначение,
		|	НЕОПРЕДЕЛЕНО                  КАК ЗаказНаОтгрузку,
		|	ДАТАВРЕМЯ(1,1,1)              КАК ЖелаемаяДатаОтгрузки,
		|	ТабЧасть.РаспоряжениеВГрафике КАК ЗаказНаПоступление,
		|	ДАТАВРЕМЯ(1,1,1)              КАК ДатаПоступления,
		|	0                             КАК Отгрузить,
		|	0                             КАК Резервировать,
		|	0                             КАК РезервироватьПоМереПоступления,
		|	0                             КАК КОбеспечениюБезРезерва,
		|	0                             КАК НеОбеспечивать,
		|	0                             КАК ЗакрытьГрафикОтгрузки,
		|	0                             КАК Поступило,
		|	0                             КАК ПоступитКДате,
		|	0                             КАК ПоставкаНаСогласовании,
		|	ТабЧасть.КоличествоВГрафике   КАК ЗакрытьГрафикПоступления,
		|	ЛОЖЬ                          КАК ИгнорироватьРезервыПриКонтролеОстатков,
		|	ЛОЖЬ                          КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка = &Ссылка
		|		И ТабЧасть.ПоГрафику
		|		И (ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|			ИЛИ ВсяНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|				И ТабЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))";
	
	ТекстыШаблоновОтражения = ТекстыШаблоновОтражения(Регистры, ТекстЗапросаОперации);
	ТекстыЗапросовТаблицДокумента = Новый Структура;
	ТекстыЗапросовТаблицДокумента.Вставить("ТабЧасть", ТекстЗапросаТабЧасть);
	
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовТаблицДокумента);
	
КонецПроцедуры

// Дополняет тексты запроса проведения документа текстами движений регистра РаспределениеЗапасовДвижения,
// отражающего операцию отмены запланированного прихода товаров на склад.
// Увеличивает фактический и свободный остаток товара на складе, работы в подразделении.
// Будет уменьшен запас и свободный остаток в ожидаемом приходе (распоряжении).
//
// Параметры:
//  Запрос - Запрос - Запрос отражения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса отражения документа.
//  Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
//  ТекстЗапросаТабЧасть - Строка - Текст запроса получения данных документа. Выражения выборки должны содержать следующие поля:
//   * Ссылка               - ДокументСсылка                        - отражаемый документ.
//   * Период               - Дата                                  - дата отражения операции (соответствует дате документа).
//   * Номенклатура         - СправочникСсылка.Номенклатура         - приходуемая номенклатура.
//   * Характеристика       - СправочникСсылка.ХарактеристикиНоменклатуры - приходуемая характеристика номенклатуры.
//   * Склад                - СправочникСсылка.Склады -             - склад оприходования.
//   * Назначение           - СправочникСсылка.Назначения -         - назначение приходуемой номенклатуры.
//   * Количество           - Число                                 - отменяемое количество.
//   * РаспоряжениеВГрафике - ОпределяемыйТип.ОжидаемоеПоступление  - документ планирования прихода запаса,
//                                                                    запасы которого будут уменьшены.
Процедура ОтменитьЗапланированныйПриходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть) Экспорт
	
	ТекстЗапросаОперации =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка               КАК Регистратор,
		|	ТабЧасть.Период               КАК Период,
		|	ТабЧасть.Номенклатура         КАК Номенклатура,
		|	ТабЧасть.Характеристика       КАК Характеристика,
		|	ТабЧасть.Склад                КАК Склад,
		|	ТабЧасть.Назначение           КАК Назначение,
		|	НЕОПРЕДЕЛЕНО                  КАК ЗаказНаОтгрузку,
		|	ДАТАВРЕМЯ(1,1,1)              КАК ЖелаемаяДатаОтгрузки,
		|	ТабЧасть.РаспоряжениеВГрафике КАК ЗаказНаПоступление,
		|	ДАТАВРЕМЯ(1,1,1)              КАК ДатаПоступления,
		|	0                             КАК Отгрузить,
		|	0                             КАК Резервировать,
		|	0                             КАК РезервироватьПоМереПоступления,
		|	0                             КАК КОбеспечениюБезРезерва,
		|	0                             КАК НеОбеспечивать,
		|	0                             КАК ЗакрытьГрафикОтгрузки,
		|	0                             КАК Поступило,
		|	0                             КАК ПоступитКДате,
		|	0                             КАК ПоставкаНаСогласовании,
		|	ТабЧасть.Количество           КАК ЗакрытьГрафикПоступления,
		|	ЛОЖЬ                          КАК ИгнорироватьРезервыПриКонтролеОстатков,
		|	ЛОЖЬ                          КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка = &Ссылка
		|		И (ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|			ИЛИ ВсяНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|				И ТабЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))";
	
	ТекстыШаблоновОтражения = ТекстыШаблоновОтражения(Регистры, ТекстЗапросаОперации);
	ТекстыЗапросовТаблицДокумента = Новый Структура;
	ТекстыЗапросовТаблицДокумента.Вставить("ТабЧасть", ТекстЗапросаТабЧасть);
	
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовТаблицДокумента);
	
КонецПроцедуры

// Возвращает текст запроса движений регистра РаспределениеЗапасовДвижения,
// отражающего операцию планирования графика отгрузки по датам, а также движения товаров к отгрузке.
//
// Параметры:
//  ТекстЗапросаТабЧасть - Строка - Текст запроса получения данных документа
//  	Выражения выборки должны содержать следующие поля:
//   * Период                                     - Дата                                   - дата отражения операции (соответствует дате документа).
//   * Номенклатура                               - СправочникСсылка.Номенклатура          - списываемая из запаса номенклатура.
//   * Характеристика                             - СправочникСсылка.ХарактеристикиНоменклатуры - списываемая из запаса характеристика номенклатуры.
//   * Склад                                      - СправочникСсылка.Склады -              - склад списания.
//   * Назначение                                 - СправочникСсылка.Назначения -          - назначение номенклатуры.
//   * Количество                                 - Число                                  - заказываемое количество.
//   * ВариантОбеспечения                         - ПеречислениеСсылка.ВариантыОбеспечения - вариант обеспечения.
//   * ЗаказНаОтгрузку                            - ОпределяемыйТип.ОжидаемаяОтгрузка      - заказ.
//   * ЖелаемаяДатаОтгрузки                       - Дата                                   - планируемая дата списания запасов.
//   * ДатаПриема - Дата - 
//   * ПорядокПоПриоритету - Число - 
//   * ГотовКОбеспечению - Булево - 
//   * ГотовКОтгрузке - Булево - 
//  ИгнорироватьГотовностьКОбеспечению - Булево -
//
//	Возвращаемое значение:
//   Строка - Текст запроса.
Функция ТекстЗапросаРаспоряжениеНаОбеспечениеИОтгрузку(ТекстЗапросаТабЧасть, ИгнорироватьГотовностьКОбеспечению) Экспорт
	
	ТекстЗапросаОперации =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка         КАК Регистратор,
		|	ТабЧасть.Период         КАК Период,
		|	ТабЧасть.Номенклатура   КАК Номенклатура,
		|	ТабЧасть.Характеристика КАК Характеристика,
		|	ТабЧасть.Склад          КАК Склад,
		|	
		|	ВЫБОР КОГДА ТабЧасть.Обособленно ТОГДА
		|				ТабЧасть.Назначение
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|		КОНЕЦ КАК Назначение,
		|	
		|	ТабЧасть.ЗаказНаОтгрузку      КАК ЗаказНаОтгрузку,
		|	
		|	ВЫБОР КОГДА ТабЧасть.ЖелаемаяДатаОтгрузки = НЕОПРЕДЕЛЕНО ТОГДА
		|				ДАТАВРЕМЯ(1,1,1)
		|			ИНАЧЕ
		|				ТабЧасть.ЖелаемаяДатаОтгрузки
		|		КОНЕЦ КАК ЖелаемаяДатаОтгрузки,
		|	
		|	НЕОПРЕДЕЛЕНО                  КАК ЗаказНаПоступление,
		|	ДАТАВРЕМЯ(1,1,1)              КАК ДатаПоступления,
		|	
		|	ВЫБОР КОГДА ТабЧасть.ГотовКОтгрузке И ТабЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить) ТОГДА
		|				ТабЧасть.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК Отгрузить,
		|	
		|	ВЫБОР КОГДА НЕ ТабЧасть.ГотовКОтгрузке И ТабЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить) // не Готов к отгрузке и Вариант обеспечения отгрузить
		|					ИЛИ ТабЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада) ТОГДА
		|				ТабЧасть.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК Резервировать,
		|	
		|	ВЫБОР КОГДА ТабЧасть.ГотовКОбеспечению И ТабЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.РезервироватьПоМереПоступления) ТОГДА
		|				ТабЧасть.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК РезервироватьПоМереПоступления,
		|	
		|	ВЫБОР КОГДА ТабЧасть.ГотовКОбеспечению И ТабЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.КОбеспечению) ТОГДА
		|				ТабЧасть.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК КОбеспечениюБезРезерва,
		|
		|	ВЫБОР КОГДА ТабЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется) ТОГДА
		|				ТабЧасть.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК НеОбеспечивать,
		|	
		|	0 КАК Поступило,
		|	0 КАК ПоступитКДате,
		|	0 КАК ПоставкаНаСогласовании,
		|	0 КАК ЗакрытьГрафикПоступления,
		|	ЛОЖЬ КАК ИгнорироватьРезервыПриКонтролеОстатков,
		|	ЛОЖЬ КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка = &Ссылка
		|	И(ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|			ИЛИ ВсяНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|					И ТабЧасть.Обособленно
		|		)
		|	И(ТабЧасть.ГотовКОбеспечению
		|		ИЛИ ТабЧасть.ВариантОбеспечения В(
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада)))";
	
	Если ИгнорироватьГотовностьКОбеспечению Тогда
	
		ТекстЗапросаОперации = СтрЗаменить(ТекстЗапросаОперации, "ТабЧасть.ГотовКОбеспечению", "ИСТИНА");
	
	КонецЕсли;
	
	
	ТекстыЗапросовТаблицДокумента = Новый Структура;
	ТекстыЗапросовТаблицДокумента.Вставить("ТабЧасть", ТекстЗапросаТабЧасть);
	ПроведениеДокументов.ПодготовитьТекстЗапросаОтраженияДокумента(ТекстЗапросаОперации, ТекстыЗапросовТаблицДокумента);
	
	Возврат ТекстЗапросаОперации;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции обслуживающие регистр накопления РаспределениеЗапасовДвижения

Процедура ПередЗаписьюДвиженийДокумента(Документ, МенеджерВременныхТаблиц, Отказ) Экспорт
	
	Набор = Документ.Движения.РаспределениеЗапасовДвижения;
	
	Если Набор.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц; // здесь есть временная таблица изменений регистра Реестр документов.
	
	// Для нового документа расчет и так идет по всем записям набора, так как все они есть в таблице изменений набора.
	ИзменилосьМестоВОчереди =
		Метаданные.ОпределяемыеТипы.ОжидаемаяОтгрузка.Тип.СодержитТип(ТипЗнч(Набор.Отбор.Регистратор.Значение))
		И Набор.ДополнительныеСвойства.Свойство("СвойстваДокумента") // при пакетном проведении этапов свойства документа могут быть не инициализированы.
		И Набор.ДополнительныеСвойства.СвойстваДокумента.РежимЗаписи = РежимЗаписиДокумента.Проведение
		И Не Набор.ДополнительныеСвойства.СвойстваДокумента.ЭтоНовый
		И ИзменилосьМестоВОчереди(Запрос);
		
	Если ИзменилосьМестоВОчереди Тогда
		Набор.ДополнительныеСвойства.Вставить("ИзменилосьМестоВОчередиРаспределенияЗапасов", Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗаписиДвиженийДокумента(Документ, МенеджерВременныхТаблиц, Отказ) Экспорт
	
	Возврат;
	
КонецПроцедуры

Процедура ДвиженияПриЗаписиВоВременнуюТаблицу(Запрос, ЕстьПолеАктивность) Экспорт
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Движения.Регистратор                            КАК Регистратор,
		|	Движения.Номенклатура                           КАК Номенклатура,
		|	Движения.Характеристика                         КАК Характеристика,
		|	Движения.Склад                                  КАК Склад,
		|	Движения.Назначение                             КАК Назначение,
		|	Движения.ЗаказНаОтгрузку                        КАК ЗаказНаОтгрузку,
		|	Движения.ЖелаемаяДатаОтгрузки                   КАК ЖелаемаяДатаОтгрузки,
		|	Движения.ЗаказНаПоступление                     КАК ЗаказНаПоступление,
		|	Движения.ДатаПоступления                        КАК ДатаПоступления,
		|	Движения.Отгрузить                              КАК Отгрузить,
		|	Движения.Резервировать                          КАК Резервировать,
		|	Движения.РезервироватьПоМереПоступления         КАК РезервироватьПоМереПоступления,
		|	Движения.КОбеспечениюБезРезерва                 КАК КОбеспечению,
		|	Движения.НеОбеспечивать                         КАК НеОбеспечивать,
		|	Движения.Поступило                              КАК Поступило,
		|	Движения.ПоступитКДате                          КАК ПоступитКДате,
		|	Движения.ЗакрытьГрафикПоступления               КАК ЗакрытьГрафикПоступления,
		|	Движения.ЗакрытьГрафикОтгрузки                  КАК ЗакрытьГрафикОтгрузки,
		|	Движения.ПоставкаНаСогласовании                 КАК ПоставкаНаСогласовании,
		|	Движения.ИгнорироватьРезервыПриКонтролеОстатков КАК ИгнорироватьРезервыПриКонтролеОстатков
		|ПОМЕСТИТЬ ДвиженияПриЗаписи
		|ИЗ
		|	&НаборЗаписейРаспределениеЗапасовДвижения КАК Движения
		|ГДЕ
		|	&ПроверятьАктивность";
	Подстановка = ?(ЕстьПолеАктивность, "Движения.Активность", "ИСТИНА");
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ПроверятьАктивность", Подстановка);
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура РаспределениеЗапасовДвиженияИзменениеВоВременнуюТаблицу(Запрос) Экспорт
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Изменения.Номенклатура                                     КАК Номенклатура,
		|	Изменения.Характеристика                                   КАК Характеристика,
		|	Изменения.Склад                                            КАК Склад,
		|	Изменения.Назначение                                       КАК Назначение,
		|	Изменения.ЗаказНаОтгрузку                                  КАК ЗаказНаОтгрузку,
		|	Изменения.ЖелаемаяДатаОтгрузки                             КАК ЖелаемаяДатаОтгрузки,
		|	Изменения.ЗаказНаПоступление                               КАК ЗаказНаПоступление,
		|	Изменения.ДатаПоступления                                  КАК ДатаПоступления,
		|	СУММА(Изменения.Отгрузить)                                 КАК Отгрузить,
		|	СУММА(Изменения.Резервировать)                             КАК Резервировать,
		|	СУММА(Изменения.РезервироватьПоМереПоступления)            КАК РезервироватьПоМереПоступления,
		|	СУММА(Изменения.КОбеспечению)                              КАК КОбеспечению,
		|	СУММА(Изменения.НеОбеспечивать)                            КАК НеОбеспечивать,
		|	СУММА(Изменения.Поступило)                                 КАК Поступило,
		|	СУММА(Изменения.ПоступитКДате)                             КАК ПоступитКДате,
		|	СУММА(Изменения.ЗакрытьГрафикПоступления)                  КАК ЗакрытьГрафикПоступления,
		|	СУММА(Изменения.ЗакрытьГрафикОтгрузки)                     КАК ЗакрытьГрафикОтгрузки,
		|	СУММА(Изменения.ПоставкаНаСогласовании)                    КАК ПоставкаНаСогласовании,
		|	ЛОЖЬ                                                       КАК ИгнорироватьРезервыПриКонтролеОстатков
		|ПОМЕСТИТЬ РаспределениеЗапасовДвиженияИзменение
		|ИЗ(
		|	ВЫБРАТЬ
		|		ДвиженияПриЗаписи.Номенклатура                           КАК Номенклатура,
		|		ДвиженияПриЗаписи.Характеристика                         КАК Характеристика,
		|		ДвиженияПриЗаписи.Склад                                  КАК Склад,
		|		ДвиженияПриЗаписи.Назначение                             КАК Назначение,
		|		ДвиженияПриЗаписи.ЗаказНаОтгрузку                        КАК ЗаказНаОтгрузку,
		|		ДвиженияПриЗаписи.ЖелаемаяДатаОтгрузки                   КАК ЖелаемаяДатаОтгрузки,
		|		ДвиженияПриЗаписи.ЗаказНаПоступление                     КАК ЗаказНаПоступление,
		|		ДвиженияПриЗаписи.ДатаПоступления                        КАК ДатаПоступления,
		|		ДвиженияПриЗаписи.Отгрузить                              КАК Отгрузить,
		|		ДвиженияПриЗаписи.Резервировать                          КАК Резервировать,
		|		ДвиженияПриЗаписи.РезервироватьПоМереПоступления         КАК РезервироватьПоМереПоступления,
		|		ДвиженияПриЗаписи.КОбеспечению                           КАК КОбеспечению,
		|		ДвиженияПриЗаписи.НеОбеспечивать                         КАК НеОбеспечивать,
		|		ДвиженияПриЗаписи.Поступило                              КАК Поступило,
		|		ДвиженияПриЗаписи.ПоступитКДате                          КАК ПоступитКДате,
		|		ДвиженияПриЗаписи.ЗакрытьГрафикПоступления               КАК ЗакрытьГрафикПоступления,
		|		ДвиженияПриЗаписи.ЗакрытьГрафикОтгрузки                  КАК ЗакрытьГрафикОтгрузки,
		|		ДвиженияПриЗаписи.ПоставкаНаСогласовании                 КАК ПоставкаНаСогласовании,
		|		ДвиженияПриЗаписи.ИгнорироватьРезервыПриКонтролеОстатков КАК ИгнорироватьРезервыПриКонтролеОстатков
		|	ИЗ
		|		ДвиженияПриЗаписи КАК ДвиженияПриЗаписи
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДвиженияПередЗаписью.Номенклатура                           КАК Номенклатура,
		|		ДвиженияПередЗаписью.Характеристика                         КАК Характеристика,
		|		ДвиженияПередЗаписью.Склад                                  КАК Склад,
		|		ДвиженияПередЗаписью.Назначение                             КАК Назначение,
		|		ДвиженияПередЗаписью.ЗаказНаОтгрузку                        КАК ЗаказНаОтгрузку,
		|		ДвиженияПередЗаписью.ЖелаемаяДатаОтгрузки                   КАК ЖелаемаяДатаОтгрузки,
		|		ДвиженияПередЗаписью.ЗаказНаПоступление                     КАК ЗаказНаПоступление,
		|		ДвиженияПередЗаписью.ДатаПоступления                        КАК ДатаПоступления,
		|		-ДвиженияПередЗаписью.Отгрузить                             КАК Отгрузить,
		|		-ДвиженияПередЗаписью.Резервировать                         КАК Резервировать,
		|		-ДвиженияПередЗаписью.РезервироватьПоМереПоступления        КАК РезервироватьПоМереПоступления,
		|		-ДвиженияПередЗаписью.КОбеспечениюБезРезерва                КАК КОбеспечению,
		|		-ДвиженияПередЗаписью.НеОбеспечивать                        КАК НеОбеспечивать,
		|		-ДвиженияПередЗаписью.Поступило                             КАК Поступило,
		|		-ДвиженияПередЗаписью.ПоступитКДате                         КАК ПоступитКДате,
		|		-ДвиженияПередЗаписью.ЗакрытьГрафикПоступления              КАК ЗакрытьГрафикПоступления,
		|		-ДвиженияПередЗаписью.ЗакрытьГрафикОтгрузки                 КАК ЗакрытьГрафикОтгрузки,
		|		-ДвиженияПередЗаписью.ПоставкаНаСогласовании                КАК ПоставкаНаСогласовании,
		|		ДвиженияПередЗаписью.ИгнорироватьРезервыПриКонтролеОстатков КАК ИгнорироватьРезервыПриКонтролеОстатков
		|	ИЗ
		|		РегистрНакопления.РаспределениеЗапасовДвижения КАК ДвиженияПередЗаписью
		|	ГДЕ
		|		ДвиженияПередЗаписью.Регистратор В(&Регистратор)
		|			И ДвиженияПередЗаписью.Активность) КАК Изменения
		|СГРУППИРОВАТЬ ПО
		|	Изменения.Номенклатура,
		|	Изменения.Характеристика,
		|	Изменения.Склад,
		|	Изменения.Назначение,
		|	Изменения.ЗаказНаОтгрузку,
		|	Изменения.ЖелаемаяДатаОтгрузки,
		|	Изменения.ЗаказНаПоступление,
		|	Изменения.ДатаПоступления
		|ИМЕЮЩИЕ
		|	СУММА(Изменения.Отгрузить)                        <> 0
		|		ИЛИ СУММА(Изменения.Резервировать)            <> 0
		|		ИЛИ СУММА(Изменения.РезервироватьПоМереПоступления) <> 0
		|		ИЛИ СУММА(Изменения.КОбеспечению)             <> 0
		|		ИЛИ СУММА(Изменения.НеОбеспечивать)           <> 0
		|		ИЛИ СУММА(Изменения.Поступило)                <> 0
		|		ИЛИ СУММА(Изменения.ПоступитКДате)            <> 0
		|		ИЛИ СУММА(Изменения.ЗакрытьГрафикПоступления) <> 0
		|		ИЛИ СУММА(Изменения.ЗакрытьГрафикОтгрузки)    <> 0
		|		ИЛИ СУММА(Изменения.ПоставкаНаСогласовании)   <> 0
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	Склад,
		|	Назначение,
		|	ЗаказНаОтгрузку,
		|	ЖелаемаяДатаОтгрузки,
		|	ЗаказНаПоступление,
		|	ДатаПоступления";
	Запрос.Выполнить();
		
КонецПроцедуры

// Параметры:
//  Запрос - Запрос - 
Процедура ЗаписатьРаспределениеЗапасовНаПотребностиПоТаблицеРазличныеТовары(Запрос) Экспорт
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РазличныеТовары.Номенклатура                                     КАК Номенклатура,
		|	РазличныеТовары.Характеристика                                   КАК Характеристика,
		|	РазличныеТовары.Склад                                            КАК Склад,
		|	РазличныеТовары.Назначение                                       КАК Назначение,
		|	СУММА(ЕСТЬNULL(ОжидаемаяОтгрузка.РезервироватьПоМереПоступления, 0)) КАК Количество,
		|	МАКСИМУМ(РазличныеТовары.РаспределятьЕслиОстатокНеотрицательный) КАК РаспределятьЕслиОстатокНеотрицательный
		|ПОМЕСТИТЬ Потребности
		|ИЗ
		|	РазличныеТовары КАК РазличныеТовары
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеЗапасов КАК ОжидаемаяОтгрузка
		|		ПО ОжидаемаяОтгрузка.Номенклатура    = РазличныеТовары.Номенклатура
		|		 И ОжидаемаяОтгрузка.Характеристика  = РазличныеТовары.Характеристика
		|		 И ОжидаемаяОтгрузка.Склад           = РазличныеТовары.Склад
		|		 И ОжидаемаяОтгрузка.Назначение      = РазличныеТовары.Назначение
		|		 И ОжидаемаяОтгрузка.Состояние       = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемаяОтгрузка)
		|		 И ОжидаемаяОтгрузка.РезервироватьПоМереПоступления > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	РазличныеТовары.Номенклатура,
		|	РазличныеТовары.Характеристика,
		|	РазличныеТовары.Склад,
		|	РазличныеТовары.Назначение
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение
		|;
		|
		|/////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Потребности.Количество                             КАК Количество,
		|	Остатки.Состояние                                  КАК Состояние,
		|	1                                                  КАК ТипЗаписиРаспределенияЗапасов,
		|	Остатки.Номенклатура                               КАК Номенклатура,
		|	Остатки.Характеристика                             КАК Характеристика,
		|	Остатки.Склад                                      КАК Склад,
		|	Остатки.Назначение                                 КАК Назначение,
		|	Остатки.ЗаказНаПоступление                         КАК ЗаказНаПоступление,
		|	Остатки.ДатаПоступления                            КАК ДатаПоступления,
		|	Остатки.Запас                                      КАК Запас,
		|	Остатки.Резерв                                     КАК Резерв,
		|	Остатки.Свободно                                   КАК Свободно,
		|	Остатки.ВНаличии                                   КАК ВНаличии,
		|	Потребности.РаспределятьЕслиОстатокНеотрицательный
		|		И Остатки.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе) КАК РаспределятьЕслиОстатокНеотрицательный,
		|	ВЫБОР КОГДА Остатки.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе) ТОГДА
		|					1
		|				КОГДА Остатки.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемоеПоступление) ТОГДА
		|					2
		|				КОГДА Остатки.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ПоступлениеНеподтвержденное) ТОГДА
		|					3
		|		КОНЕЦ КАК Порядок
		|ИЗ
		|	Потребности КАК Потребности
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеЗапасов КАК Остатки
		|		ПО Остатки.Номенклатура    = Потребности.Номенклатура
		|		 И Остатки.Характеристика  = Потребности.Характеристика
		|		 И Остатки.Склад           = Потребности.Склад
		|		 И Остатки.Назначение      = Потребности.Назначение
		|		 И Остатки.Состояние В(
		|			ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе),
		|			ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемоеПоступление),
		|			ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ПоступлениеНеподтвержденное))
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение, Порядок, ДатаПоступления, ЗаказНаПоступление
		|;
		|
		|/////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Потребности";
	
	Пакет = Запрос.ВыполнитьПакет();
	
	Выборка = Пакет[1].Выбрать();
	
	Количество = 0;
	
	Набор = РегистрыСведений.РаспределениеЗапасов.СоздатьНаборЗаписей();
	Набор.Отбор.ТипЗаписиРаспределенияЗапасов.Установить(1);
	Набор.Отбор.ЗаказНаПоступление.Использование = Истина;
	Набор.Отбор.ЗаказНаОтгрузку.Использование = Истина;
	Набор.Отбор.ЗаказНаОтгрузку.Значение = Неопределено;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Номенклатура <> Набор.Отбор.Номенклатура.Значение
				Или Выборка.Характеристика <> Набор.Отбор.Характеристика.Значение
				Или Выборка.Склад <> Набор.Отбор.Склад.Значение
				Или Выборка.Назначение <> Набор.Отбор.Назначение.Значение Тогда
				
				Набор.Отбор.Номенклатура.Установить(Выборка.Номенклатура);
				Набор.Отбор.Характеристика.Установить(Выборка.Характеристика);
				Набор.Отбор.Склад.Установить(Выборка.Склад);
				Набор.Отбор.Назначение.Установить(Выборка.Назначение);
				
				Количество = Выборка.Количество;
				
		КонецЕсли;
		
		Если Не Выборка.РаспределятьЕслиОстатокНеотрицательный Или Выборка.Свободно >= 0 Тогда
			
			КоличествоРаспределить = Мин(Количество, Макс(Выборка.Запас - Выборка.Резерв, 0));
			Свободно = Выборка.Запас - Выборка.Резерв - КоличествоРаспределить;
			Количество = Количество - КоличествоРаспределить;
			Набор.Отбор.Состояние.Установить(Выборка.Состояние);
			Набор.Отбор.ЗаказНаПоступление.Значение = Выборка.ЗаказНаПоступление;
			Набор.Отбор.ДатаПоступления.Установить(Выборка.ДатаПоступления);
			
			Если Выборка.Запас <> 0
					Или Выборка.Резерв <> 0
					Или Свободно <> 0
					Или Выборка.ВНаличии <> 0 Тогда
					
				НоваяСтрока = Набор.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				НоваяСтрока.Свободно = Свободно;
				
			КонецЕсли;
			
			Набор.Записать();
			Набор.Очистить();
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Параметры:
//  Запрос - Запрос - запрос содержащий необходимые временные таблицы.
Процедура ЗаписатьРаспределениеЗапасовНаПотребностиПоТаблицеРазличныеТоварыПриПроведении(Запрос) Экспорт
	
	Текст =
		"ВЫБРАТЬ
		|	РазличныеТовары.Номенклатура КАК Номенклатура,
		|	РазличныеТовары.Характеристика КАК Характеристика,
		|	РазличныеТовары.Склад КАК Склад,
		|	РазличныеТовары.Назначение КАК Назначение,
		|	СУММА(ЕСТЬNULL(ОжидаемаяОтгрузка.РезервироватьПоМереПоступления, 0)) КАК Количество,
		|	МАКСИМУМ(РазличныеТовары.РаспределятьЕслиОстатокНеотрицательный) КАК РаспределятьЕслиОстатокНеотрицательный
		|ПОМЕСТИТЬ Потребности
		|ИЗ
		|	РазличныеТовары КАК РазличныеТовары
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеЗапасов КАК ОжидаемаяОтгрузка
		|		ПО ОжидаемаяОтгрузка.Номенклатура = РазличныеТовары.Номенклатура
		|		 И ОжидаемаяОтгрузка.Характеристика = РазличныеТовары.Характеристика
		|		 И ОжидаемаяОтгрузка.Склад = РазличныеТовары.Склад
		|		 И ОжидаемаяОтгрузка.Назначение = РазличныеТовары.Назначение
		|		 И ОжидаемаяОтгрузка.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемаяОтгрузка)
		|		 И ОжидаемаяОтгрузка.РезервироватьПоМереПоступления > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	РазличныеТовары.Номенклатура,
		|	РазличныеТовары.Характеристика,
		|	РазличныеТовары.Склад,
		|	РазличныеТовары.Назначение
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение
		|;
		|
		|/////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Остатки.Состояние КАК Состояние,
		|	1 КАК ТипЗаписиРаспределенияЗапасов,
		|	Остатки.Номенклатура КАК Номенклатура,
		|	Остатки.Характеристика КАК Характеристика,
		|	Остатки.Склад КАК Склад,
		|	Остатки.Назначение КАК Назначение,
		|	Остатки.Запас КАК Запас,
		|	Остатки.Резерв КАК Резерв,
		|	Остатки.Свободно КАК Свободно,
		|	Остатки.ВНаличии КАК ВНаличии
		|ИЗ
		|	ТаблицаОстатокНаСкладе КАК Остатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Потребности КАК Потребности
		|		ПО Потребности.Номенклатура = Остатки.Номенклатура
		|		 И Потребности.Характеристика = Остатки.Характеристика
		|		 И Потребности.Склад = Остатки.Склад
		|		 И Потребности.Назначение = Остатки.Назначение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеЗапасов КАК ДанныеИБ
		|		ПО ДанныеИБ.Номенклатура    = Остатки.Номенклатура
		|		 И ДанныеИБ.Характеристика  = Остатки.Характеристика
		|		 И ДанныеИБ.Склад           = Остатки.Склад
		|		 И ДанныеИБ.Назначение      = Остатки.Назначение
		|		 И ДанныеИБ.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
		|ГДЕ
		|	Потребности.Номенклатура ЕСТЬ NULL
		|		И ДанныеИБ.Номенклатура ЕСТЬ NULL
		|;
		|
		|/////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Остатки.Состояние КАК Состояние,
		|	1 КАК ТипЗаписиРаспределенияЗапасов,
		|	Остатки.Номенклатура КАК Номенклатура,
		|	Остатки.Характеристика КАК Характеристика,
		|	Остатки.Склад КАК Склад,
		|	Остатки.Назначение КАК Назначение,
		|	Остатки.Запас КАК Запас,
		|	Остатки.Резерв КАК Резерв,
		|	Остатки.Свободно КАК Свободно,
		|	Остатки.ВНаличии КАК ВНаличии
		|ИЗ
		|	ТаблицаОстатокНаСкладе КАК Остатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Потребности КАК Потребности
		|		ПО Потребности.Номенклатура = Остатки.Номенклатура
		|		 И Потребности.Характеристика = Остатки.Характеристика
		|		 И Потребности.Склад = Остатки.Склад
		|		 И Потребности.Назначение = Остатки.Назначение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеЗапасов КАК ДанныеИБ
		|		ПО ДанныеИБ.Номенклатура    = Остатки.Номенклатура
		|		 И ДанныеИБ.Характеристика  = Остатки.Характеристика
		|		 И ДанныеИБ.Склад           = Остатки.Склад
		|		 И ДанныеИБ.Назначение      = Остатки.Назначение
		|		 И ДанныеИБ.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
		|ГДЕ
		|	Потребности.Номенклатура ЕСТЬ NULL
		|		И НЕ ДанныеИБ.Номенклатура ЕСТЬ NULL
		|;
		|
		|/////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Потребности.Количество КАК Количество,
		|	Остатки.Состояние КАК Состояние,
		|	1 КАК ТипЗаписиРаспределенияЗапасов,
		|	Остатки.Номенклатура КАК Номенклатура,
		|	Остатки.Характеристика КАК Характеристика,
		|	Остатки.Склад КАК Склад,
		|	Остатки.Назначение КАК Назначение,
		|	Остатки.ЗаказНаПоступление КАК ЗаказНаПоступление,
		|	Остатки.ДатаПоступления КАК ДатаПоступления,
		|	Остатки.Запас КАК ЗапасДанныеИБ,
		|	Остатки.Резерв КАК РезервДанныеИБ,
		|	Остатки.Свободно КАК СвободноДанныеИБ,
		|	Остатки.ВНаличии КАК ВНаличииДанныеИБ,
		|	ИСТИНА КАК ЕстьДанныеИБ,
		|	Остатки.Запас КАК Запас,
		|	Остатки.Резерв КАК Резерв,
		|	Остатки.Свободно КАК Свободно,
		|	Остатки.ВНаличии КАК ВНаличии,
		|	Потребности.РаспределятьЕслиОстатокНеотрицательный
		|		И Остатки.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе) КАК РаспределятьЕслиОстатокНеотрицательный,
		|	ВЫБОР КОГДА Остатки.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемоеПоступление) ТОГДА
		|					2
		|				КОГДА Остатки.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ПоступлениеНеподтвержденное) ТОГДА
		|					3
		|		КОНЕЦ КАК Порядок
		|ИЗ
		|	Потребности КАК Потребности
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеЗапасов КАК Остатки
		|		ПО Остатки.Номенклатура = Потребности.Номенклатура
		|		 И Остатки.Характеристика = Потребности.Характеристика
		|		 И Остатки.Склад = Потребности.Склад
		|		 И Остатки.Назначение = Потребности.Назначение
		|		 И Остатки.Состояние В(
		|			ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемоеПоступление),
		|			ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ПоступлениеНеподтвержденное))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Потребности.Количество КАК Количество,
		|	Остатки.Состояние КАК Состояние,
		|	1 КАК ТипЗаписиРаспределенияЗапасов,
		|	Остатки.Номенклатура КАК Номенклатура,
		|	Остатки.Характеристика КАК Характеристика,
		|	Остатки.Склад КАК Склад,
		|	Остатки.Назначение КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПоступление,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления,
		|	ЕСТЬNULL(ДанныеИБ.Запас, 0) КАК ЗапасДанныеИБ,
		|	ЕСТЬNULL(ДанныеИБ.Резерв, 0) КАК РезервДанныеИБ,
		|	ЕСТЬNULL(ДанныеИБ.Свободно, 0) КАК СвободноДанныеИБ,
		|	ЕСТЬNULL(ДанныеИБ.ВНаличии, 0) КАК ВНаличииДанныеИБ,
		|	НЕ ДанныеИБ.Номенклатура ЕСТЬ NULL КАК ЕстьДанныеИБ,
		|	Остатки.Запас КАК Запас,
		|	Остатки.Резерв КАК Резерв,
		|	Остатки.Свободно КАК Свободно,
		|	Остатки.ВНаличии КАК ВНаличии,
		|	Потребности.РаспределятьЕслиОстатокНеотрицательный КАК РаспределятьЕслиОстатокНеотрицательный,
		|	1 КАК Порядок
		|ИЗ
		|	Потребности КАК Потребности
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОстатокНаСкладе КАК Остатки
		|		ПО Остатки.Номенклатура = Потребности.Номенклатура
		|		 И Остатки.Характеристика = Потребности.Характеристика
		|		 И Остатки.Склад = Потребности.Склад
		|		 И Остатки.Назначение = Потребности.Назначение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеЗапасов КАК ДанныеИБ
		|		ПО ДанныеИБ.Номенклатура    = Потребности.Номенклатура
		|		 И ДанныеИБ.Характеристика  = Потребности.Характеристика
		|		 И ДанныеИБ.Склад           = Потребности.Склад
		|		 И ДанныеИБ.Назначение      = Потребности.Назначение
		|		 И ДанныеИБ.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Потребности.Количество КАК Количество,
		|	Остатки.Состояние КАК Состояние,
		|	1 КАК ТипЗаписиРаспределенияЗапасов,
		|	Остатки.Номенклатура КАК Номенклатура,
		|	Остатки.Характеристика КАК Характеристика,
		|	Остатки.Склад КАК Склад,
		|	Остатки.Назначение КАК Назначение,
		|	Остатки.ЗаказНаПоступление КАК ЗаказНаПоступление,
		|	Остатки.ДатаПоступления КАК ДатаПоступления,
		|	Остатки.Запас КАК ЗапасДанныеИБ,
		|	Остатки.Резерв КАК РезервДанныеИБ,
		|	Остатки.Свободно КАК СвободноДанныеИБ,
		|	Остатки.ВНаличии КАК ВНаличииДанныеИБ,
		|	ИСТИНА КАК ЕстьДанныеИБ,
		|	Остатки.Запас КАК Запас,
		|	Остатки.Резерв КАК Резерв,
		|	Остатки.Свободно КАК Свободно,
		|	Остатки.ВНаличии КАК ВНаличии,
		|	Потребности.РаспределятьЕслиОстатокНеотрицательный КАК РаспределятьЕслиОстатокНеотрицательный,
		|	1 КАК Порядок
		|ИЗ
		|	Потребности КАК Потребности
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатокНаСкладе КАК ТаблицаОстатокНаСкладе
		|		ПО ТаблицаОстатокНаСкладе.Номенклатура = Потребности.Номенклатура
		|		 И ТаблицаОстатокНаСкладе.Характеристика = Потребности.Характеристика
		|		 И ТаблицаОстатокНаСкладе.Склад = Потребности.Склад
		|		 И ТаблицаОстатокНаСкладе.Назначение = Потребности.Назначение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеЗапасов КАК Остатки
		|		ПО Остатки.Номенклатура    = Потребности.Номенклатура
		|		 И Остатки.Характеристика  = Потребности.Характеристика
		|		 И Остатки.Склад           = Потребности.Склад
		|		 И Остатки.Назначение      = Потребности.Назначение
		|		 И Остатки.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
		|		 И ТаблицаОстатокНаСкладе.Номенклатура ЕСТЬ NULL
		|ГДЕ
		|	НЕ Остатки.Номенклатура ЕСТЬ NULL
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение, Порядок, ДатаПоступления, ЗаказНаПоступление
		|;
		|
		|/////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Потребности;
		|УНИЧТОЖИТЬ ТаблицаОстатокНаСкладе";
	
	Запрос.Текст = Текст;
	Пакет = Запрос.ВыполнитьПакет();
	
	Таблица = Пакет[Пакет.ВГраница() - 4].Выгрузить();
	НаборБезЗамещения = РегистрыСведений.РаспределениеЗапасов.СоздатьНаборЗаписей();
	НаборБезЗамещения.Загрузить(Таблица);
	
	Выборка = Пакет[Пакет.ВГраница() - 3].Выбрать();
	
	Набор = РегистрыСведений.РаспределениеЗапасов.СоздатьНаборЗаписей();
	Набор.Отбор.ТипЗаписиРаспределенияЗапасов.Установить(1);
	Набор.Отбор.Состояние.Установить(Перечисления.РаспределениеЗапасовСостояния.ОстатокНаСкладе);
	
	Пока Выборка.Следующий() Цикл
		
		Набор.Отбор.Номенклатура.Установить(Выборка.Номенклатура);
		Набор.Отбор.Характеристика.Установить(Выборка.Характеристика);
		Набор.Отбор.Склад.Установить(Выборка.Склад);
		Набор.Отбор.Назначение.Установить(Выборка.Назначение);
		Если Выборка.Запас <> 0
				Или Выборка.Резерв <> 0
				Или Выборка.Свободно <> 0
				Или Выборка.ВНаличии <> 0 Тогда
				
				НоваяСтрока = Набор.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				
		КонецЕсли;
		Набор.Записать();
		Набор.Очистить();
		
	КонецЦикла;
	
	Выборка = Пакет[Пакет.ВГраница() - 2].Выбрать();
	
	Количество = 0;
	
	Набор = РегистрыСведений.РаспределениеЗапасов.СоздатьНаборЗаписей();
	Набор.Отбор.ТипЗаписиРаспределенияЗапасов.Установить(1);
	Набор.Отбор.ЗаказНаПоступление.Использование = Истина;
	Набор.Отбор.ЗаказНаОтгрузку.Использование = Истина;
	Набор.Отбор.ЗаказНаОтгрузку.Значение = Неопределено;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Номенклатура <> Набор.Отбор.Номенклатура.Значение
				Или Выборка.Характеристика <> Набор.Отбор.Характеристика.Значение
				Или Выборка.Склад <> Набор.Отбор.Склад.Значение
				Или Выборка.Назначение <> Набор.Отбор.Назначение.Значение Тогда
				
				Набор.Отбор.Номенклатура.Установить(Выборка.Номенклатура);
				Набор.Отбор.Характеристика.Установить(Выборка.Характеристика);
				Набор.Отбор.Склад.Установить(Выборка.Склад);
				Набор.Отбор.Назначение.Установить(Выборка.Назначение);
				
				Количество = Выборка.Количество;
				
		КонецЕсли;
		
		Если Не Выборка.РаспределятьЕслиОстатокНеотрицательный Или Выборка.Свободно >= 0 Тогда
			
			КоличествоРаспределить = Мин(Количество, Макс(Выборка.Запас - Выборка.Резерв, 0));
			Свободно = Выборка.Запас - Выборка.Резерв - КоличествоРаспределить;
			Количество = Количество - КоличествоРаспределить;
			
			Если Выборка.ЗапасДанныеИБ <> Выборка.Запас
					Или Выборка.РезервДанныеИБ <> Выборка.Резерв
					Или Выборка.СвободноДанныеИБ <> Свободно
					Или Выборка.ВНаличииДанныеИБ <> Выборка.ВНаличии Тогда
					
				Если Выборка.ЕстьДанныеИБ Тогда
					Набор.Отбор.Состояние.Установить(Выборка.Состояние);
					Набор.Отбор.ЗаказНаПоступление.Значение = Выборка.ЗаказНаПоступление;
					Набор.Отбор.ДатаПоступления.Установить(Выборка.ДатаПоступления);
					
					Если Выборка.Запас <> 0
							Или Выборка.Резерв <> 0
							Или Свободно <> 0
							Или Выборка.ВНаличии <> 0 Тогда
							
						НоваяСтрока = Набор.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
						НоваяСтрока.Свободно = Свободно;
						
					КонецЕсли;
					
					Набор.Записать();
					Набор.Очистить();
				Иначе
					НоваяСтрока = НаборБезЗамещения.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
					НоваяСтрока.Свободно = Свободно;
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе
			
			Если Выборка.ЗапасДанныеИБ <> Выборка.Запас
					Или Выборка.РезервДанныеИБ <> Выборка.Резерв
					Или Выборка.СвободноДанныеИБ <> Выборка.Свободно
					Или Выборка.ВНаличииДанныеИБ <> Выборка.ВНаличии Тогда
					
				Если Выборка.ЕстьДанныеИБ Тогда
					Набор.Отбор.Состояние.Установить(Выборка.Состояние);
					Набор.Отбор.ЗаказНаПоступление.Значение = Выборка.ЗаказНаПоступление;
					Набор.Отбор.ДатаПоступления.Установить(Выборка.ДатаПоступления);
					
					Если Выборка.Запас <> 0
							Или Выборка.Резерв <> 0
							Или Выборка.Свободно <> 0
							Или Выборка.ВНаличии <> 0 Тогда
							
						НоваяСтрока = Набор.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
						
					КонецЕсли;
					
					Набор.Записать();
					Набор.Очистить();
				Иначе
					НоваяСтрока = НаборБезЗамещения.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	НаборБезЗамещения.Записать(Ложь);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции для пакетной работы с регистром сведений "Распределение запасов"


////////////////////////////////////////////////////////////////////////////////
// Служебные

// Параметры:
//  Таблица - ТаблицаЗначений - таблица в которую нужно добавить колонки.
Процедура ДобавитьКолонкиРегистра(Таблица) Экспорт
	
	ДобавляемыеКолонки =
		"Регистратор,
		|Номенклатура,
		|Характеристика,
		|Склад,
		|Назначение,
		|ЗаказНаОтгрузку,
		|ЖелаемаяДатаОтгрузки,
		|ЗаказНаПоступление,
		|ДатаПоступления,
		|Отгрузить,
		|Резервировать,
		|КОбеспечениюБезРезерва,
		|НеОбеспечивать,
		|Поступило,
		|ПоступитКДате,
		|ЗакрытьГрафикПоступления,
		|ЗакрытьГрафикОтгрузки,
		|ПоставкаНаСогласовании";
	ДобавляемыеКолонки = Новый Структура(ДобавляемыеКолонки);
	
	ВсеКолонки = РегистрыНакопления.РаспределениеЗапасовДвижения.СоздатьНаборЗаписей().ВыгрузитьКолонки().Колонки;
	Для Каждого Колонка Из ДобавляемыеКолонки Цикл
		Если Таблица.Колонки.Найти(Колонка.Ключ) = Неопределено Тогда
			Таблица.Колонки.Добавить(Колонка.Ключ, ВсеКолонки.Найти(Колонка.Ключ).ТипЗначения);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Параметры:
//  ПолноеИмяДокумента - Строка - полное имя документа.
// Возвращаемое значение:
//  Строка - текст запроса.
Функция ТекстыЗапросовПроведенияДокументов(ПолноеИмяДокумента) Экспорт
	
	ИмяРегистра = "РаспределениеЗапасовДвижения";
	Регистры = Новый Структура(ИмяРегистра);
	ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	ДопПараметры.ПолучитьТекстыЗапроса = Истина;
	ИмяДокумента = СтрРазделить(ПолноеИмяДокумента, ".")[1];
	
	Если ПолноеИмяДокумента = "Документ.ЗаказКлиента"
			Или ПолноеИмяДокумента = "Документ.ЗаявкаНаВозвратТоваровОтКлиента"
			Или ПолноеИмяДокумента = "Документ.КорректировкаРеализации"
			Или ПолноеИмяДокумента = "Документ.ЗаказНаПеремещение"
			Или ПолноеИмяДокумента = "Документ.ЗаказНаСборку"
			Или ПолноеИмяДокумента = "Документ.ЗаказНаВнутреннееПотребление"
			Или ПолноеИмяДокумента = "Документ.АктВыполненныхРабот"
			Или ПолноеИмяДокумента = "Документ.РеализацияТоваровУслуг"
			Или ПолноеИмяДокумента = "Документ.ВводОстатков" Тогда
				
			ТекстыЗапроса = Документы[ИмяДокумента].ТекстыЗапросаРаспределениеЗапасовДвиженияДляОбновленияИБ();
			
	//++ Локализация
	ИначеЕсли ПолноеИмяДокумента = "Документ.МаркировкаТоваровГИСМ" Тогда
		
		ТекстыЗапроса = МаркировкаТоваровГИСМУТ.ДанныеДокументаДляПроведения(
			Тип("ДокументСсылка.МаркировкаТоваровГИСМ"), Регистры, ДопПараметры);
		
	ИначеЕсли ПолноеИмяДокумента = "Документ.ПеремаркировкаТоваровГИСМ" Тогда
		
		ТекстыЗапроса = МаркировкаТоваровГИСМУТ.ДанныеДокументаДляПроведения(
			Тип("ДокументСсылка.ПеремаркировкаТоваровГИСМ"), Регистры, ДопПараметры);
		
	//-- Локализация
	Иначе
		
		ТекстыЗапроса = Документы[ИмяДокумента].ДанныеДокументаДляПроведения(Неопределено, Регистры, ДопПараметры);
		
	КонецЕсли;
	
	Тексты = Новый Массив();
	Для Каждого Элемент Из ТекстыЗапроса Цикл
		Если Элемент.Представление = "РаспределениеЗапасовДвижения" Тогда
			Тексты.Добавить(Элемент.Значение);
		КонецЕсли;
	КонецЦикла;
	
	ТекстЗапроса = СтрСоединить(Тексты, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ".Ссылка) = &Ссылка", ".Ссылка.Проведен)");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ".Ссылка В (&Ссылка)", ".Ссылка.Проведен");
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращаемое значение:
//  Структура - структура с полями:
//   * ИспользоватьРасширенныеВозможностиЗаказаКлиента - Булево -
//   * ТипыОжидаемоеПоступление - Массив из Тип -
Функция ЗначенияПараметровДляТекстовЗапросовПроведенияДокументов() Экспорт
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ИспользоватьРасширенныеВозможностиЗаказаКлиента",
		ПолучитьФункциональнуюОпцию("ИспользоватьРасширенныеВозможностиЗаказаКлиента"));
	ЗначенияПараметров.Вставить("ТипыОжидаемоеПоступление",
		Метаданные.ОпределяемыеТипы.ОжидаемоеПоступление.Тип.Типы());
	
	Возврат ЗначенияПараметров;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаписатьРаспределениеЗапасов(Запрос, ПолучатьГраницыПериодаОбеспечения, ИмяТаблицыТовары = "ТоварыДляРаспределенияЗапасов")
	
	Результат = РегистрыСведений.РаспределениеЗапасов.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	Результат.Колонки.Добавить("Пустая", Новый ОписаниеТипов("Булево"));
	Запрос.Текст = РаспределениеЗапасов.ТекстЗапросаРаспределенияЗапасов(ПолучатьГраницыПериодаОбеспечения, ИмяТаблицыТовары);
	Запрос.УстановитьПараметр("НачалоТекущегоДня", НачалоДня(ТекущаяДатаСеанса()));
	Пакет = Запрос.ВыполнитьПакет();
	Таблица = Пакет[Пакет.ВГраница() - 1].Выгрузить();
	График = Пакет[Пакет.ВГраница()].Выгрузить();
	
	РаспределениеЗапасов.РаспределитьЗапасыВТаблицу(Результат, Таблица, График, Истина);
	ВсегоСтрок = Результат.Количество();
	
	Номенклатура   = Неопределено;
	Характеристика = Неопределено;
	Склад          = Неопределено;
	Назначение     = Неопределено;
	
	Набор = РегистрыСведений.РаспределениеЗапасов.СоздатьНаборЗаписей();
	
	Для Индекс = 0 По ВсегоСтрок - 1 Цикл
		
		ТекСтрока = Результат[Индекс];
		Если Номенклатура <> ТекСтрока.Номенклатура
				Или Характеристика <> ТекСтрока.Характеристика
				Или Склад <> ТекСтрока.Склад
				Или Назначение <> ТекСтрока.Назначение Тогда
					
					Если Номенклатура <> Неопределено Тогда
						Набор.Записать();
						Набор.Очистить();
					КонецЕсли;
					
					Номенклатура   = ТекСтрока.Номенклатура;
					Характеристика = ТекСтрока.Характеристика;
					Склад          = ТекСтрока.Склад;
					Назначение     = ТекСтрока.Назначение;
					
					Набор.Отбор.ТипЗаписиРаспределенияЗапасов.Установить(0);
					Набор.Отбор.Номенклатура.Установить(Номенклатура);
					Набор.Отбор.Характеристика.Установить(Характеристика);
					Набор.Отбор.Склад.Установить(Склад);
					Набор.Отбор.Назначение.Установить(Назначение);
		КонецЕсли;
		
		Если Не ТекСтрока.Пустая Тогда
			ЗаполнитьЗначенияСвойств(Набор.Добавить(), ТекСтрока);
		КонецЕсли;
		
	КонецЦикла;
	
	Если Номенклатура <> Неопределено Тогда
		Набор.Записать();
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстыШаблоновОтражения(Регистры, ТекстЗапросаОперации)
	
	ТекстыШаблоновОтражения = Новый Структура();
	ИмяРегистра = "РаспределениеЗапасовДвижения";
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить(ИмяРегистра, ТекстЗапросаОперации);
	КонецЕсли;
	Возврат ТекстыШаблоновОтражения;
	
КонецФункции

Функция ИзменилосьМестоВОчереди(Запрос)
	
	Результат = Ложь;
	Если Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("РеестрДокументовИзменения") <> Неопределено Тогда
		
		Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ИСТИНА КАК ИзменилосьМестоВОчереди
			|ИЗ
			|	РеестрДокументовИзменения КАК Таблица
			|ГДЕ
			|	НЕ Таблица.ДополнительнаяЗаписьДоИзменения
			|		ИЛИ НЕ Таблица.ДополнительнаяЗапись
			|СГРУППИРОВАТЬ ПО
			|	Таблица.Ссылка
			|ИМЕЮЩИЕ
			|	НЕ МАКСИМУМ(Таблица.ПриоритетДоИзменения) ЕСТЬ NULL
			|		И НЕ МАКСИМУМ(Таблица.Приоритет) ЕСТЬ NULL
			|		И (МАКСИМУМ(Таблица.ПриоритетДоИзменения) <> МАКСИМУМ(Таблица.Приоритет)
			|			ИЛИ МАКСИМУМ(Таблица.ДатаДокументаИБ) <> МИНИМУМ(Таблица.ДатаДокументаИБ))";
		Результат = Не Запрос.Выполнить().Пустой();
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
