#Область ПрограммныйИнтерфейс

Процедура ЕмкостьУпаковкиПоGTIN(ПараметрыЗапроса) Экспорт
	
	ПараметрыОбработки                = ПараметрыОбработкиЗапросаДанных(ПараметрыЗапроса);
	ДоступныеМетодыИнтерфейса         = ИнтерфейсИСМПКлиентСервер.ДоступныеМетодыИнтерфейса();
	ПараметрыОбработки.ИмяОбработчика = ДоступныеМетодыИнтерфейса.ЕмкостьУпаковкиПоGTIN;
	
	ОбработкаМетодаИнтефрейсаСАвторизацией(ПараметрыЗапроса, ПараметрыОбработки);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнтерфейсИСМП

Процедура ОбработкаМетодаИнтефрейсаСАвторизацией(ПараметрыЗапроса, ПараметрыОбработки)
	
	ИнтерфейсИСМПВызовСервера.ЗапросаМетодаИнтефрейсаСОбработкой(ПараметрыОбработки);
	
	Результат = ПараметрыЗавершенияОбработки();
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("ПараметрыЗапроса",   ПараметрыЗапроса);
	ДополнительныеПараметры.Вставить("ПараметрыОбработки", ПараметрыОбработки);
	
	Если ПараметрыОбработки.ОрганизацияПоСертификатам <> Неопределено
		И ПараметрыОбработки.ОрганизацияПоСертификатам Тогда
		
		ОповещениеПриЗапросеКлючаСессии = Новый ОписаниеОповещения(
			"ПоискОрганизацияПоСертификатамЗавершение",
			ЭтотОбъект,
			ДополнительныеПараметры);
		ЭлектроннаяПодписьКлиент.НайтиДействительныеЛичныеСертификаты(ОповещениеПриЗапросеКлючаСессии);
		Возврат;
		
	ИначеЕсли ПараметрыОбработки.ТребуетсяОбновлениеКлючаСессии = Истина Тогда
		
		Если ПараметрыОбработки.ВызовПослеАвторизации Тогда
			Результат.ЕстьОшибки  = Истина;
			Результат.ТекстОшибки = НСтр("ru = 'Не удалось выполнить авторизацию.'");
		Иначе
			ОповещениеПриЗапросеКлючаСессии = Новый ОписаниеОповещения(
				"ЗапроситьКлючСессииЗавершение",
				ЭтотОбъект,
				ДополнительныеПараметры);
			ПараметрыЗапросаКлючаСесии = ИнтерфейсИСМПКлиентСервер.ПараметрыЗапросаКлючаСессии(
				ПараметрыОбработки.Организация);
			ИнтерфейсАвторизацииИСМПКлиент.ЗапроситьКлючСессии(
				ПараметрыЗапросаКлючаСесии, 
				ОповещениеПриЗапросеКлючаСессии);
			Возврат;
		КонецЕсли;
		
	ИначеЕсли ПараметрыОбработки.ЕстьОшибки Тогда
		ТекстОшибки = СтрШаблон(
			НСтр("ru = 'Не удалось запросить данные ИС МП по причине: %1'"),
			ПараметрыОбработки.ТекстОшибки);
		Результат.ЕстьОшибки  = Истина;
		Результат.ТекстОшибки = ТекстОшибки;
	Иначе
		Результат.Результат = ПараметрыОбработки.Результат;
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ПараметрыЗапроса.ОповещениеОЗавершении, Результат);
	
КонецПроцедуры

#КонецОбласти

#Область Авторизация

Процедура ПоискОрганизацияПоСертификатамЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ДополнительныеПараметры.ПараметрыОбработки.ОрганизацияПоСертификатам = Ложь;
	
	Если Результат = Неопределено
		Или Результат.Количество() = 0 Тогда
		ДополнительныеПараметры.ПараметрыОбработки.ЕстьОшибки  = Истина;
		ДополнительныеПараметры.ПараметрыОбработки.ТекстОшибки = НСтр("ru = 'Не найдено доступных сертификатов для подписи.'");
	Иначе
		ДополнительныеПараметры.ПараметрыОбработки.Организация = Результат[0].Организация;
	КонецЕсли;
	
	ОбработкаМетодаИнтефрейсаСАвторизацией(ДополнительныеПараметры.ПараметрыЗапроса, ДополнительныеПараметры.ПараметрыОбработки)
	
КонецПроцедуры

Процедура ЗапроситьКлючСессииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ОтказОтАвторизации = Ложь;
	ОшибкаАвторизации  = Ложь;
	
	Если ТипЗнч(Результат) <> Тип("Соответствие") Тогда
		ОтказОтАвторизации = Истина;
	Иначе
		
		Если ДополнительныеПараметры.ПараметрыОбработки.Организация = Неопределено Тогда
			Для Каждого КлючИЗначение Из Результат Цикл
				РезультатАвторизации = КлючИЗначение.Значение;
			КонецЦикла;
		Иначе
			РезультатАвторизации = Результат[ДополнительныеПараметры.ПараметрыОбработки.Организация];
		КонецЕсли;
		
		Если РезультатАвторизации = Неопределено Тогда
			ОшибкаАвторизации = Истина;
			ТекстОшибки = НСтр("ru = 'Произошла ошибка при авторизации.'");
		ИначеЕсли РезультатАвторизации <> Истина Тогда
			ОшибкаАвторизации = Истина;
			ТекстОшибки = РезультатАвторизации;
		Иначе
			ДополнительныеПараметры.ПараметрыОбработки.ТребуетсяОбновлениеКлючаСессии = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если ОтказОтАвторизации Тогда
		Возврат;
	ИначеЕсли ОшибкаАвторизации Тогда
		ДополнительныеПараметры.ПараметрыОбработки.ЕстьОшибки  = Истина;
		ДополнительныеПараметры.ПараметрыОбработки.ТекстОшибки = ТекстОшибки;
	КонецЕсли;

	ДополнительныеПараметры.ПараметрыОбработки.ВызовПослеАвторизации = Истина;
	ОбработкаМетодаИнтефрейсаСАвторизацией(ДополнительныеПараметры.ПараметрыЗапроса, ДополнительныеПараметры.ПараметрыОбработки)
	
КонецПроцедуры

#КонецОбласти

#Область ПараметрыОбработки

Функция ПараметрыЗапросаДанных() Экспорт
	
	ВозвращаемоеЗначение = Новый Структура();
	ВозвращаемоеЗначение.Вставить("Параметры",             Неопределено);
	ВозвращаемоеЗначение.Вставить("Организация",           Неопределено);
	ВозвращаемоеЗначение.Вставить("ОповещениеОЗавершении", Неопределено);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Функция ПараметрыОбработкиЗапросаДанных(ПараметрыЗапроса)
	
	ВозвращаемоеЗначение = Новый Структура();
	ВозвращаемоеЗначение.Вставить("ИмяОбработчика",                 Неопределено);
	ВозвращаемоеЗначение.Вставить("ТребуетсяОбновлениеКлючаСессии", Ложь);
	ВозвращаемоеЗначение.Вставить("ВызовПослеАвторизации",          Ложь);
	ВозвращаемоеЗначение.Вставить("Результат",                      Неопределено);
	ВозвращаемоеЗначение.Вставить("ЕстьОшибки",                     Ложь);
	ВозвращаемоеЗначение.Вставить("ТекстОшибки",                    Неопределено);
	ВозвращаемоеЗначение.Вставить("Параметры",                      ПараметрыЗапроса.Параметры);
	ВозвращаемоеЗначение.Вставить("Организация",                    ПараметрыЗапроса.Организация);
	ВозвращаемоеЗначение.Вставить("ОрганизацияПоСертификатам",      Неопределено);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Функция ПараметрыЗавершенияОбработки()
	
	ВозвращаемоеЗначение = Новый Структура();
	ВозвращаемоеЗначение.Вставить("ЕстьОшибки",                  Ложь);
	ВозвращаемоеЗначение.Вставить("ТекстОшибки",                 Неопределено);
	ВозвращаемоеЗначение.Вставить("Результат",                   Неопределено);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#КонецОбласти

#КонецОбласти
