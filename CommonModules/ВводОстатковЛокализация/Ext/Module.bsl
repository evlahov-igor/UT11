#Область ПрограммныйИнтерфейс

#Область Инициализация

// Заполняет таблицу соответствия раздела дерева документов
// ввод остатков и хозяйственной операции.
//
// Параметры:
//  ОписаниеРазделовВводаОстатков - Структура - Структура инициализированная процедурой
//                                  ИнициализироватьОписаниеРазделаУчета() с заполненными значениями.
// 	УчитыватьФО - Булево - Учет функциональных опций при построении таблицы.
//
Процедура ЗаполнитьТаблицуСоответствияРазделаХозяйственнойОперации(ОписаниеРазделовВводаОстатков, УчитыватьФО) Экспорт
//++ Локализация
#Область НДСПредъявленный
	ОписаниеРаздела = ОписаниеРазделаВводаОстатковНДС();
	ВводОстатковСервер.ДобавитьОписаниеРазделаВводаОстатков(ОписаниеРазделовВводаОстатков, ОписаниеРаздела);
#КонецОбласти
	
#Область Интеркампани
	Если УчитыватьФО И ПолучитьФункциональнуюОпцию("ИспользоватьПередачиТоваровМеждуОрганизациями") Тогда
		ОписаниеРаздела = ОписаниеРазделаВводаОстатковИнтеркампани();
		ВводОстатковСервер.ДобавитьОписаниеРазделаВводаОстатков(ОписаниеРазделовВводаОстатков, ОписаниеРаздела);
	КонецЕсли;
#КонецОбласти
	
#Область ТМЦВЭксплуатации
	Если УчитыватьФО И ПолучитьФункциональнуюОпцию("ИспользоватьВнутреннееПотребление")
		И Не ПолучитьФункциональнуюОпцию("БазоваяВерсия") Тогда
		ОписаниеРаздела = ОписаниеРазделаВводаОстатковТМЦВЭксплуатации();
		ВводОстатковСервер.ДобавитьОписаниеРазделаВводаОстатков(ОписаниеРазделовВводаОстатков, ОписаниеРаздела);
	КонецЕсли;
#КонецОбласти
	
//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

#Область ОбработчикиСобытийВводОстатковДенежныхСредств

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ВводОстатковДенежныхСредствОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ВводОстатковДенежныхСредствОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ВводОстатковДенежныхСредствОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ВводОстатковДенежныхСредствОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ВводОстатковДенежныхСредствПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ВводОстатковДенежныхСредствПриЗаписи(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект            - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект - Исходный документ, который является источником копирования.
//
Процедура ВводОстатковДенежныхСредствПриКопировании(Объект, ОбъектКопирования) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ  - Булево - Флаг отказа от удаления.
//
Процедура ВводОстатковДенежныхСредствПередУдалением(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийВводОстатков

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ВводОстатковОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
	//++ Локализация
	//-- Локализация
	
	Возврат;
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ВводОстатковОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты, НеПроверяемыеРеквизиты) Экспорт
	//++ Локализация
	ХозяйственнаяОперация = Объект.ХозяйственнаяОперация;
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковСобственныхТоваров
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков Тогда
		
		УчетПрослеживаемыхТоваровЛокализация.ПроверитьЗаполнениеКоличестваПоРНПТ(Объект, Отказ, Неопределено);
		
	КонецЕсли;
	//-- Локализация
	ВводОстатковРасходовПриУСНОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты, НеПроверяемыеРеквизиты);
	Возврат;
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ВводОстатковОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ВводОстатковОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ВводОстатковПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	//++ Локализация
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковТМЦВЭксплуатации Тогда
		Справочники.ПартииТМЦВЭксплуатации.ЗаполнитьПартии(Объект, РежимЗаписи);
	КонецЕсли;
	
	//-- Локализация

	Возврат;
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ВводОстатковПриЗаписи(Объект, Отказ) Экспорт
	Возврат;
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект            - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект - Исходный документ, который является источником копирования.
//
Процедура ВводОстатковПриКопировании(Объект, ОбъектКопирования) Экспорт
	Возврат;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийВводОстатковВзаиморасчетов

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ВводОстатковВзаиморасчетовОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ВводОстатковВзаиморасчетовОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ВводОстатковВзаиморасчетовОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ВводОстатковВзаиморасчетовОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ВводОстатковВзаиморасчетовПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ВводОстатковВзаиморасчетовПриЗаписи(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект            - ДокументОбъект - Обрабатываемый объект.
//  ОбъектКопирования - ДокументОбъект - Исходный документ, который является источником копирования.
//
Процедура ВводОстатковВзаиморасчетовПриКопировании(Объект, ОбъектКопирования) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ  - Булево - Флаг отказа от удаления.
//
Процедура ВводОстатковВзаиморасчетовПередУдалением(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийВводОстатковНДСПредъявленного

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ВводОстатковНДСПредъявленногоОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	//++ Локализация
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковНДСПоПриобретеннымЦенностям
		И (Объект.ВидЦенностиНДС = Перечисления.ВидыЦенностей.ТаможенныеПлатежи
			Или Объект.ВидЦенностиНДС = Перечисления.ВидыЦенностей.ТаможенныйСоюз) Тогда
				ЗарегистрироватьСчетаФактурыОжидаетОплатыНДС(Объект, Истина);
	КонецЕсли;
	//-- Локализация
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ВводОстатковНДСПредъявленногоОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ВводОстатковНДСПредъявленногоОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ВводОстатковНДСПредъявленногоОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ВводОстатковНДСПредъявленногоПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ВводОстатковНДСПредъявленногоПриЗаписи(Объект, Отказ) Экспорт
	//++ Локализация
	Если Не Отказ
		И Не Объект.ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		ЗарегистрироватьСчетаФактурыОжидаетОплатыНДС(Объект, Ложь);
		
	КонецЕсли;
	//-- Локализация
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект            - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект - Исходный документ, который является источником копирования.
//
Процедура ВводОстатковНДСПредъявленногоПриКопировании(Объект, ОбъектКопирования) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ  - Булево - Флаг отказа от удаления.
//
Процедура ВводОстатковНДСПредъявленногоПередУдалением(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийВводОстатковОПродажахЗаПрошлыеПериоды

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ВводОстатковОПродажахЗаПрошлыеПериодыОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	Возврат;
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ВводОстатковОПродажахЗаПрошлыеПериодыОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ВводОстатковОПродажахЗаПрошлыеПериодыОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ВводОстатковОПродажахЗаПрошлыеПериодыОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ВводОстатковОПродажахЗаПрошлыеПериодыПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ВводОстатковОПродажахЗаПрошлыеПериодыПриЗаписи(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект            - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект - Исходный документ, который является источником копирования.
//
Процедура ВводОстатковОПродажахЗаПрошлыеПериодыПриКопировании(Объект, ОбъектКопирования) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ  - Булево - Флаг отказа от удаления.
//
Процедура ВводОстатковОПродажахЗаПрошлыеПериодыПередУдалением(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийВводОстатковПоФинансовымИнструментам

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ВводОстатковПоФинансовымИнструментамОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ВводОстатковПоФинансовымИнструментамОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ВводОстатковПоФинансовымИнструментамОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ВводОстатковПоФинансовымИнструментамОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ВводОстатковПоФинансовымИнструментамПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ВводОстатковПоФинансовымИнструментамПриЗаписи(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект            - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект - Исходный документ, который является источником копирования.
//
Процедура ВводОстатковПоФинансовымИнструментамПриКопировании(Объект, ОбъектКопирования) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ  - Булево - Флаг отказа от удаления.
//
Процедура ВводОстатковПоФинансовымИнструментамПередУдалением(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийВводОстатковПрочиеРасходы

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ВводОстатковПрочиеРасходыОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ВводОстатковПрочиеРасходыОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ВводОстатковПрочиеРасходыОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ВводОстатковПрочиеРасходыОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ВводОстатковПрочиеРасходыПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ВводОстатковПрочиеРасходыПриЗаписи(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект            - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект - Исходный документ, который является источником копирования.
//
Процедура ВводОстатковПрочиеРасходыПриКопировании(Объект, ОбъектКопирования) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ  - Булево - Флаг отказа от удаления.
//
Процедура ВводОстатковПрочиеРасходыПередУдалением(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийВводОстатковПрочихАктивовПассивов

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ВводОстатковПрочихАктивовПассивовОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ВводОстатковПрочихАктивовПассивовОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ВводОстатковПрочихАктивовПассивовОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ВводОстатковПрочихАктивовПассивовОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ВводОстатковПрочихАктивовПассивовПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ВводОстатковПрочихАктивовПассивовПриЗаписи(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект            - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект - Исходный документ, который является источником копирования.
//
Процедура ВводОстатковПрочихАктивовПассивовПриКопировании(Объект, ОбъектКопирования) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ  - Булево - Флаг отказа от удаления.
//
Процедура ВводОстатковПрочихАктивовПассивовПередУдалением(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийВводОстатковРасходовПриУСН

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ВводОстатковРасходовПриУСНОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ВводОстатковРасходовПриУСНОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты, НеПроверяемыеРеквизиты) Экспорт
	
	//++ Локализация
	//-- Локализация
	
	Возврат;
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ВводОстатковРасходовПриУСНОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ВводОстатковРасходовПриУСНОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ВводОстатковРасходовПриУСНПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ВводОстатковРасходовПриУСНПриЗаписи(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект            - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект - Исходный документ, который является источником копирования.
//
Процедура ВводОстатковРасходовПриУСНПриКопировании(Объект, ОбъектКопирования) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ  - Булево - Флаг отказа от удаления.
//
Процедура ВводОстатковРасходовПриУСНПередУдалением(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийВводОстатковРасчетовПоЭквайрингу

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ВводОстатковРасчетовПоЭквайрингуОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ВводОстатковРасчетовПоЭквайрингуОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ВводОстатковРасчетовПоЭквайрингуОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ВводОстатковРасчетовПоЭквайрингуОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ВводОстатковРасчетовПоЭквайрингуПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ВводОстатковРасчетовПоЭквайрингуПриЗаписи(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект            - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект - Исходный документ, который является источником копирования.
//
Процедура ВводОстатковРасчетовПоЭквайрингуПриКопировании(Объект, ОбъектКопирования) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ  - Булево - Флаг отказа от удаления.
//
Процедура ВводОстатковРасчетовПоЭквайрингуПередУдалением(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийВводОстатковСПодотчетниками

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ВводОстатковСПодотчетникамиОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ВводОстатковСПодотчетникамиОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ВводОстатковСПодотчетникамиОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ВводОстатковСПодотчетникамиОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ВводОстатковСПодотчетникамиПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ВводОстатковСПодотчетникамиПриЗаписи(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект            - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект - Исходный документ, который является источником копирования.
//
Процедура ВводОстатковСПодотчетникамиПриКопировании(Объект, ОбъектКопирования) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ  - Булево - Флаг отказа от удаления.
//
Процедура ВводОстатковСПодотчетникамиПередУдалением(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийВводОстатковТМЦВЭксплуатации

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ВводОстатковТМЦВЭксплуатацииОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ВводОстатковТМЦВЭксплуатацииОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ВводОстатковТМЦВЭксплуатацииОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ВводОстатковТМЦВЭксплуатацииОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ВводОстатковТМЦВЭксплуатацииПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ВводОстатковТМЦВЭксплуатацииПриЗаписи(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект            - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект - Исходный документ, который является источником копирования.
//
Процедура ВводОстатковТМЦВЭксплуатацииПриКопировании(Объект, ОбъектКопирования) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ  - Булево - Флаг отказа от удаления.
//
Процедура ВводОстатковТМЦВЭксплуатацииПередУдалением(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийВводОстатковТоваров

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ВводОстатковТоваровОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ВводОстатковТоваровОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	//++ Локализация
	ХозяйственнаяОперация = Объект.ХозяйственнаяОперация;
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковСобственныхТоваров
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков Тогда
		
		УчетПрослеживаемыхТоваровЛокализация.ПроверитьЗаполнениеКоличестваПоРНПТ(Объект, Отказ, Неопределено);
		
	КонецЕсли;
	//-- Локализация
	Возврат;
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ВводОстатковТоваровОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ВводОстатковТоваровОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ВводОстатковТоваровПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ВводОстатковТоваровПриЗаписи(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект            - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект - Исходный документ, который является источником копирования.
//
Процедура ВводОстатковТоваровПриКопировании(Объект, ОбъектКопирования) Экспорт
	Возврат;	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ  - Булево - Флаг отказа от удаления.
//
Процедура ВводОстатковТоваровПередУдалением(Объект, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	Возврат;	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Возврат;
КонецПроцедуры

#Область ПодключаемыеКомандыОтчетов

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ВводОстатковДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	Возврат;	
КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ВводОстатковВзаиморасчетовДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	Возврат;	
КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ВводОстатковДенежныхСредствДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	Возврат;	
КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ВводОстатковНДСПредъявленногоДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	Возврат;	
КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ВводОстатковОПродажахЗаПрошлыеПериодыДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	Возврат;	
КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ВводОстатковПоФинансовымИнструментамДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	Возврат;	
КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ВводОстатковПрочиеРасходыДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	Возврат;	
КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ВводОстатковПрочихАктивовПассивовДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	Возврат;	
КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ВводОстатковРасходовПриУСНДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	Возврат;	
КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ВводОстатковРасчетовПоЭквайрингуДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	Возврат;	
КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ВводОстатковСПодотчетникамиДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	Возврат;	
КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ВводОстатковТМЦВЭксплуатацииДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	Возврат;	
КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ВводОстатковТоваровДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	Возврат;	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКомандыПечати

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ВводОстатковВзаиморасчетовДобавитьКомандыПечати(КомандыПечати) Экспорт
	Возврат;	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ВводОстатковДенежныхСредствДобавитьКомандыПечати(КомандыПечати) Экспорт
	Возврат;	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ВводОстатковНДСПредъявленногоДобавитьКомандыПечати(КомандыПечати) Экспорт
	Возврат;	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ВводОстатковОПродажахЗаПрошлыеПериодыДобавитьКомандыПечати(КомандыПечати) Экспорт
	Возврат;	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ВводОстатковПоФинансовымИнструментамДобавитьКомандыПечати(КомандыПечати) Экспорт
	Возврат;	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ВводОстатковПрочиеРасходыДобавитьКомандыПечати(КомандыПечати) Экспорт
	Возврат;	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ВводОстатковПрочихАктивовПассивовДобавитьКомандыПечати(КомандыПечати) Экспорт
	Возврат;	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ВводОстатковРасходовПриУСНДобавитьКомандыПечати(КомандыПечати) Экспорт
	Возврат;	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ВводОстатковРасчетовПоЭквайрингуДобавитьКомандыПечати(КомандыПечати) Экспорт
	Возврат;	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ВводОстатковСПодотчетникамиДобавитьКомандыПечати(КомандыПечати) Экспорт
	Возврат;	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ВводОстатковТМЦВЭксплуатацииДобавитьКомандыПечати(КомандыПечати) Экспорт
	Возврат;	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ВводОстатковДобавитьКомандыПечати(КомандыПечати) Экспорт
	//++ Локализация

	// МХ-1 
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "МХ1";
	КомандаПечати.Представление = НСтр("ru='Акт о приеме-передаче ТМЦ на хранение (МХ-1)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ФункциональныеОпции = "ИспользоватьОтветственноеХранение";

	//-- Локализация
	Возврат;
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ВводОстатковТоваровДобавитьКомандыПечати(КомандыПечати) Экспорт
	//++ Локализация

	// МХ-1 
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "МХ1";
	КомандаПечати.Представление = НСтр("ru='Акт о приеме-передаче ТМЦ на хранение (МХ-1)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ФункциональныеОпции = "ИспользоватьОтветственноеХранение";

	//-- Локализация
	Возврат;	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Возврат;	
КонецПроцедуры

//++ Локализация

// Функция получает данные для формирования печатной формы МХ - 1.
// 
// Параметры:
// 	ПараметрыПечати - Структура - Параметры печати печатной формы
// 	МассивОбъектов  - Массив - Объекты, для которых необходимо сформировать печатную форму
// Возвращаемое значение:
// 	Структура - Описание:
//        * РезультатПоШапке - Массив - Массив выборок для печати 
//        * РезультатПоСкладам - Массив - Массив выборок для печати 
//        * РезультатПоТабличнойЧасти - Массив - Массив выборок для печати
// 
Функция ПолучитьДанныеДляПечатнойФормыМХ1(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
		|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет КАК ПредварительныйРасчет,
		|	Документ.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(Документ.ИсправляемыйДокумент.Номер, Документ.Номер) КАК Номер,
		|	ЕСТЬNULL(Документ.ИсправляемыйДокумент.Дата, Документ.Дата) КАК Дата,
		|	ЕСТЬNULL(Документ.ИсправляемыйДокумент.Дата, Документ.Дата) КАК ДатаДокумента,
		|	Документ.Дата КАК ДатаПолученияСебестоимости,
		|	Документ.Организация КАК Организация,
		|	Документ.Склад КАК Склад,
		|	Склады.ИсточникИнформацииОЦенахДляПечати КАК ИсточникИнформацииОЦенахДляПечати,
		|	Склады.УчетныйВидЦены КАК ВидЦены,
		|	Склады.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены
		|ПОМЕСТИТЬ ВтШапка
		|ИЗ
		|	Документ.ВводОстатков КАК Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
		|		ПО (РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(Документ.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(Документ.Дата, МЕСЯЦ))
		|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен)
		|			И (Документ.Организация = РасчетСебестоимостиТоваровОрганизации.Организация)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|		ПО (Документ.Склад = Склады.Ссылка)
		|ГДЕ
		|	Документ.Ссылка В(&МассивДокументов)
		|	И Документ.Проведен
		|	И Склады.СкладОтветственногоХранения
		|	И Документ.Организация <> Склады.Поклажедержатель
		|	И (Документ.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСобственныхТоваров),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков)))
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.Ссылка КАК Ссылка,
		|	Шапка.Склад КАК Склад,
		|	Товары.Упаковка КАК Упаковка,
		|	Товары.Серия КАК Серия,
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	&ТекстЗапросаНаименованиеЕдиницыИзмерения1 КАК ЕдиницаИзмеренияНаименование,
		|	&ТекстЗапросаКодЕдиницыИзмерения1 КАК ЕдиницаИзмеренияКод,
		|	&ТекстЗапросаНаименованиеЕдиницыИзмерения1 КАК ВидУпаковки,
		|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
		|	Товары.Количество КАК Количество,
		|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
		|	Шапка.ВидЦены КАК ВидЦены,
		|	Шапка.ВалютаЦены КАК ВалютаЦены
		|ПОМЕСТИТЬ ВтТовары
		|ИЗ
		|	Документ.ВводОстатков.Товары КАК Товары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
		|		ПО Товары.Ссылка = Шапка.Ссылка
		|ГДЕ
		|	Товары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|	И (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен)
		|		ИЛИ (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
		|			И Шапка.ПредварительныйРасчет ЕСТЬ NULL))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВидыЗапасов.Ссылка КАК Ссылка,
		|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
		|	Шапка.Организация КАК Организация,
		|	АналитикаУчетаНоменклатуры.МестоХранения КАК Склад,
		|	ВидыЗапасов.Упаковка КАК Упаковка,
		|	ВидыЗапасов.НомерСтроки КАК НомерСтроки,
		|	АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
		|	&ТекстЗапросаНаименованиеЕдиницыИзмерения2 КАК ЕдиницаИзмеренияНаименование,
		|	&ТекстЗапросаКодЕдиницыИзмерения2 КАК ЕдиницаИзмеренияКод,
		|	&ТекстЗапросаНаименованиеЕдиницыИзмерения2 КАК ВидУпаковки,
		|	ВидыЗапасов.КоличествоУпаковок КАК КоличествоУпаковок,
		|	ВидыЗапасов.Количество КАК Количество,
		|	КОНЕЦПЕРИОДА(ВидыЗапасов.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
		|	АналитикаУчетаНоменклатуры.СкладскаяТерритория.УчетныйВидЦены КАК ВидЦены,
		|	АналитикаУчетаНоменклатуры.СкладскаяТерритория.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены,
		|	Шапка.ПредварительныйРасчет КАК ПредварительныйРасчет
		|ПОМЕСТИТЬ ВтВидыЗапасов
		|ИЗ
		|	Документ.ВводОстатков.Товары КАК ВидыЗапасов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
		|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры.СкладскаяТерритория = Шапка.Склад
		|			И ВидыЗапасов.Ссылка = Шапка.Ссылка
		|ГДЕ
		|	АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|	И АналитикаУчетаНоменклатуры.СкладскаяТерритория.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
		|;
		|");
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование", "Товары.Упаковка", "Товары.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код", "Товары.Упаковка", "Товары.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование", "ВидыЗапасов.Упаковка", "ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код", "ВидыЗапасов.Упаковка", "ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура"));
	
	СкладыСервер.ДополнитьТекстЗапросаДляПечатныхФормМХ1Х3(Запрос);
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("КолонкаКодов",     КолонкаКодов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатПоШапке          = МассивРезультатов[6];
	РезультатПоСкладам        = МассивРезультатов[7];
	РезультатПоТабличнойЧасти = МассивРезультатов[8];
	
	СтруктураДанныхДляПечати = Новый Структура(
		"РезультатПоШапке, РезультатПоСкладам, РезультатПоТабличнойЧасти",
		РезультатПоШапке,
		РезультатПоСкладам,
		РезультатПоТабличнойЧасти);
		
	Возврат СтруктураДанныхДляПечати
	
КонецФункции
//-- Локализация

#КонецОбласти


#Область ОбновлениеИБ

// Возвращает значение хозяйственной операции, соответствующее перечислению "ТипыОперацийВводаОстатков"
// 
// Параметры:
// 	ТипОперацииВводаОстатков - ПеречислениеСсылка.УдалитьТипыОперацийВводаОстатков - Значение перечисления.
// Возвращаемое значение:
// 	Соответствие - Соответствие старого типа операции ввода остатков новому значению хозяйственной операции.
//
Функция СоответствиеТипаОперацийВводОстатковХозяйственнойОперации(ТипОперацииВводаОстатков) Экспорт
	
	ТипОперацииВводаОстатковКХозяйственнойОперации = Новый Соответствие();
	
	//++ Локализация	
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство, 
		Перечисления.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров, 
		Перечисления.ХозяйственныеОперации.ВводОстатковСобственныхТоваров);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию, 
		Перечисления.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ПереходНаИспользованиеАдресногоХраненияОстатков, 
		Перечисления.ХозяйственныеОперации.ВводОстатковПриПереходеНаИспользованиеАдресногоХраненияОстатков);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ПереходНаИспользованиеСкладскихПомещений, 
		Перечисления.ХозяйственныеОперации.ВводОстатковПриПереходеНаИспользованиеСкладскихПомещений);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков, 
		Перечисления.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПереданнойКлиентам, 
		Перечисления.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПереданнойКлиентам);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию, 
		Перечисления.ХозяйственныеОперации.ВводОстатковТоваровПереданныхНаКомиссию);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам, 
		Перечисления.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМКОформлениюОтчетовОРозничныхПродажах, 
		Перечисления.ХозяйственныеОперации.ВводОстатковВАвтономныхКассахККМКОформлениюОтчетовОРозничныхПродажах);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМПоРозничнойВыручке, 
		Перечисления.ХозяйственныеОперации.ВводОстатковВАвтономныхКассахККМПоРозничнойВыручке);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиВКассах, 
		Перечисления.ХозяйственныеОперации.ВводОстатковВКассах);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов, 
		Перечисления.ХозяйственныеОперации.ВводОстатковЗадолженностиКлиентов);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками, 
		Перечисления.ХозяйственныеОперации.ВводОстатковЗадолженностиПоставщикам);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетников, 
		Перечисления.ХозяйственныеОперации.ВводОстатковЗадолженностиПодотчетников);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ПерерасходыПодотчетныхСредств, 
		Перечисления.ХозяйственныеОперации.ВводОстатковПерерасходовПодотчетныхСредств);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиНаБанковскихСчетах, 
		Перечисления.ХозяйственныеОперации.ВводОстатковНаБанковскихСчетах);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов, 
		Перечисления.ХозяйственныеОперации.ВводОстатковАвансовКлиентов);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам, 
		Перечисления.ХозяйственныеОперации.ВводОстатковАвансовПоставщикам);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам, 
		Перечисления.ХозяйственныеОперации.ВводОстатковРасчетовМеждуОрганизациямиПоАвансам);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям, 
		Перечисления.ХозяйственныеОперации.ВводОстатковРасчетовМеждуОрганизациямиПоРеализациям);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ДенежныеСредстваКПоступлениюОтЭквайера, 
		Перечисления.ХозяйственныеОперации.ВводОстатковДенежныхСредствКПоступлениюОтЭквайера);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиПрочихАктивовПассивов, 
		Перечисления.ХозяйственныеОперации.ВводОстатковПрочихАктивовПассивов);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ПодарочныеСертификаты,
		Перечисления.ХозяйственныеОперации.ВводОстатковПодарочныхСертификатов);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиПоДоговорамКредитовИДепозитов, 
		Перечисления.ХозяйственныеОперации.ВводОстатковПоДоговорамКредитовИДепозитов);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиТМЦВЭксплуатации, 
		Перечисления.ХозяйственныеОперации.ВводОстатковТМЦВЭксплуатации);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиПрочихРасходов, 
		Перечисления.ХозяйственныеОперации.ВводОстатковПрочихРасходов);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ФинансовыйРезультатЗаПрошлыеПериоды, 
		Перечисления.ХозяйственныеОперации.ВводОстатковФинансовогоРезультатаЗаПрошлыеПериоды);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОптовыеПродажиЗаПрошлыеПериоды, 
		Перечисления.ХозяйственныеОперации.ВводОстатковОптовыхПродажЗаПрошлыеПериоды);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.РозничныеПродажиЗаПрошлыеПериоды, 
		Перечисления.ХозяйственныеОперации.ВводОстатковРозничныхПродажЗаПрошлыеПериоды);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиНДСПоПриобретеннымЦенностям, 
		Перечисления.ХозяйственныеОперации.ВводОстатковНДСПоПриобретеннымЦенностям);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиРасходовУСНПоМатериалам, 
		Перечисления.ХозяйственныеОперации.ВводОстатковРасходовУСНПоМатериалам);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиРасходовУСНПоТоварам, 
		Перечисления.ХозяйственныеОперации.ВводОстатковРасходовУСНПоТоварам);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиОС, 
		Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиПереданныхВАрендуОС, 
		Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиНМА, 
		Перечисления.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиАрендованныхОС, 
		Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСЗаБалансом);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиПредметовЛизингаЗаБалансом, 
		Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиПредметовЛизингаНаБалансе, 
		Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиПереданныхВАрендуПредметовЛизингаНаБалансе, 
		Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиВзаиморасчетовПоДоговорамЛизинга, 
		Перечисления.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамАренды);
	ТипОперацииВводаОстатковКХозяйственнойОперации.Вставить(Перечисления.УдалитьТипыОперацийВводаОстатков.ОстаткиПрочихРасходовУСН, 
		Перечисления.ХозяйственныеОперации.ВводОстатковПрочихРасходовУСН);

	//-- Локализация
	
	Возврат ТипОперацииВводаОстатковКХозяйственнойОперации.Получить(ТипОперацииВводаОстатков);
	
КонецФункции

#КонецОбласти

#Область Проведение

#Область ОбработчикиПроведенияВводОстатковДенежныхСредств

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ВводОстатковДенежныхСредствДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ВводОстатковДенежныхСредствЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиПроведенияВводОстатков

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ВводОстатковДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация
	ВводОстатковТекстЗапросаТаблицаНДССостояниеРеализации0(Запрос, ТекстыЗапроса, Регистры);
	ВводОстатковТекстЗапросаТаблицаНДСПредъявленный(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаИсторияПодарочныхСертификатов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаПодарочныеСертификаты(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТМЦВЭксплуатации(Запрос, ТекстыЗапроса, Регистры);
	//-- Локализация
	
КонецПроцедуры


// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ВводОстатковЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация
	МеханизмыДокумента.Добавить("ПодарочныеСертификаты");
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиПроведенияВводОстатковВзаиморасчетов

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ВводОстатковВзаиморасчетовДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ВводОстатковВзаиморасчетовЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиПроведенияВводОстатковНДСПредъявленного

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ВводОстатковНДСПредъявленногоДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ВводОстатковНДСПредъявленногоЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиПроведенияВводОстатковНМАМеждународныйУчет

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ВводОстатковНМАМеждународныйУчетДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	Возврат;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиПроведенияВводОстатковОПродажахЗаПрошлыеПериоды

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ВводОстатковОПродажахЗаПрошлыеПериодыДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат;
КонецПроцедуры

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ВводОстатковОПродажахЗаПрошлыеПериодыЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиПроведенияВводОстатковОСМеждународныйУчет

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ВводОстатковОСМеждународныйУчетДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	Возврат;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиПроведенияВводОстатковПоФинансовымИнструментам

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ВводОстатковПоФинансовымИнструментамДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат;
КонецПроцедуры

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ВводОстатковПоФинансовымИнструментамЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиПроведенияВводОстатковПрочиеРасходы

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ВводОстатковПрочиеРасходыДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат;	
КонецПроцедуры

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ВводОстатковПрочиеРасходыЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиПроведенияВводОстатковПрочихАктивовПассивов

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ВводОстатковПрочихАктивовПассивовДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	Возврат;
КонецПроцедуры

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ВводОстатковПрочихАктивовПассивовЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	Возврат;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиПроведенияВводОстатковРасходовПриУСН

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ВводОстатковРасходовПриУСНДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт

	//++ Локализация
	Возврат;
	
КонецПроцедуры

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ВводОстатковРасходовПриУСНЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиПроведенияВводОстатковРасчетовПоЭквайрингу

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ВводОстатковРасчетовПоЭквайрингуДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат;
КонецПроцедуры

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ВводОстатковРасчетовПоЭквайрингуЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиПроведенияВводОстатковСПодотчетниками

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ВводОстатковСПодотчетникамиДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат;
КонецПроцедуры

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ВводОстатковСПодотчетникамиЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиПроведенияВводОстатковТМЦВЭксплуатации

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ВводОстатковТМЦВЭксплуатацииДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат;
КонецПроцедуры

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ВводОстатковТМЦВЭксплуатацииЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	//++ Локализация
	МеханизмыДокумента.Добавить("ТМЦВЭксплуатации");
	//-- Локализация
	Возврат;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиПроведенияВводОстатковТоваров

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ВводОстатковТоваровДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат;
КонецПроцедуры

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ВводОстатковТоваровЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат;
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ Локализация

Функция ВводОстатковТекстЗапросаТаблицаНДСПредъявленный(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСПредъявленный";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		Документы.ВводОстатков.ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтДетализацияПартий", ТекстыЗапроса) Тогда
		Документы.ВводОстатков.ТекстЗапросаВтДетализацияПартий(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтДетализацияПартийСуммы", ТекстыЗапроса) Тогда
		Документы.ВводОстатков.ТекстЗапросаВтДетализацияПартийСуммы(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	Запрос.УстановитьПараметр("ДатаНачалаУчетаНДСПоНаправлениямДеятельности", УчетНДСУП.НастройкиУчета().ДатаНачалаУчетаНДСПоНаправлениямДеятельности);

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	Операция.Дата                    КАК Период,
	|	Операция.Организация             КАК Организация,
	|	ТаблицаНДС.ДокументПоступления   КАК СчетФактура,
	|	ТаблицаНДС.Контрагент            КАК Поставщик,
	|	Операция.ВидЦенностиНДС          КАК ВидЦенности,
	|	ТаблицаНДС.СтавкаНДС             КАК СтавкаНДС,
	|	Операция.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                     КАК ИсправленныйСчетФактура,
	|	ВЫБОР 
	|		КОГДА ТаблицаНДС.ДокументРеализации = ЗНАЧЕНИЕ(Документ.ПервичныйДокумент.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаНДС.ДокументРеализации
	|	КОНЕЦ                            КАК РеализацияЭкспорт,
	|	ВЫБОР 
	|		КОГДА Операция.Дата >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			ТОГДА ТаблицаНДС.НаправлениеДеятельности
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	КОНЕЦ                            КАК НаправлениеДеятельности,
	|	ТаблицаНДС.СуммаБезНДС           КАК СуммаБезНДС,
	|	ТаблицаНДС.НДС                   КАК НДС,
	|	ВЫБОР КОГДА &УправленческийУчетОрганизаций 
	|			ТОГДА ТаблицаНДС.НДСУпр
	|				ИНАЧЕ 0
	|		КОНЕЦ                        КАК НДСУпр,
	|	НЕОПРЕДЕЛЕНО                     КАК Событие,
	|	ЛОЖЬ                             КАК РегламентнаяОперация,
	|	&ИдентификаторНеиспользуемойФинЗаписи КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО                     КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	Документ.ВводОстатков КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.НДСПредъявленный КАК ТаблицаНДС
	|	ПО
	|		Операция.Ссылка = ТаблицаНДС.Ссылка
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковНДСПоПриобретеннымЦенностям)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ВводОстатковТекстЗапросаТаблицаНДССостояниеРеализации0(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДССостояниеРеализации0";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаНДС.ДокументРеализации.Дата       КАК ДатаРеализации,
	|	Операция.Организация                     КАК Организация,
	|	ТаблицаНДС.ДокументРеализации.Контрагент КАК Контрагент,
	|	ТаблицаНДС.ДокументРеализации            КАК ДокументРеализации,
	|	ЕСТЬNULL(НДССостояниеРеализации0.Состояние, 
	|		ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ОжидаетсяПодтверждение)) КАК Состояние,
	|	НДССостояниеРеализации0.ДатаПодтверждения                                  КАК ДатаПодтверждения,
	|	ВЫРАЗИТЬ(НДССостояниеРеализации0.Комментарий КАК СТРОКА(500))              КАК Комментарий
	|ИЗ
	|	Документ.ВводОстатков КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.НДСПредъявленный КАК ТаблицаНДС
	|	ПО
	|		Операция.Ссылка = ТаблицаНДС.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|	ПО 
	|		ТаблицаНДС.ДокументРеализации = НДССостояниеРеализации0.ДокументРеализации
	|		И НДССостояниеРеализации0.Регистратор = &Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0ДругойВводОстатков
	|	ПО 
	|		ТаблицаНДС.ДокументРеализации = НДССостояниеРеализации0.ДокументРеализации
	|		И НДССостояниеРеализации0.Регистратор <> &Ссылка
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковНДСПоПриобретеннымЦенностям)
	|	И Операция.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг)
	|	И ТаблицаНДС.ДокументРеализации <> ЗНАЧЕНИЕ(Документ.ПервичныйДокумент.ПустаяСсылка)
	|	И НДССостояниеРеализации0ДругойВводОстатков.ДокументРеализации ЕСТЬ NULL 
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции


Функция ТекстЗапросаИсторияПодарочныхСертификатов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ИсторияПодарочныхСертификатов";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаАктивации                                     КАК Период,
	|	ТабличнаяЧасть.ПодарочныйСертификат                              КАК ПодарочныйСертификат,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Активирован) КАК Статус
	|ИЗ
	|	Документ.ВводОстатков.ПодарочныеСертификаты КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПодарочныеСертификаты(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПодарочныеСертификаты";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаАктивации           КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ПодарочныйСертификат    КАК ПодарочныйСертификат,
	|	ТабличнаяЧасть.СуммаВВалютеСертификата КАК Сумма,
	|	ТабличнаяЧасть.СуммаРегл               КАК СуммаРегл,
	|	&ИдентификаторНеиспользуемойФинЗаписи  КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО                           КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	Документ.ВводОстатков.ПодарочныеСертификаты КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТМЦВЭксплуатации(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТМЦВЭксплуатации";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                           КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация                      КАК Организация,
	|	&Подразделение                    КАК Подразделение,
	|	Таблица.ФизическоеЛицо            КАК ФизическоеЛицо,
	|	Таблица.Номенклатура              КАК Номенклатура,
	|	Таблица.Характеристика            КАК Характеристика,
	|	Таблица.Партия                    КАК Партия,
	|	&НаправлениеДеятельности          КАК НаправлениеДеятельности,
	|	Таблица.ИнвентарныйНомер          КАК ИнвентарныйНомер,
	|	
	|	Таблица.Количество КАК Количество
	|ИЗ
	|	Документ.ВводОстатков.ТМЦВЭксплуатации КАК Таблица
	|	
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТМЦВЭксплуатации)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции


Процедура ЗарегистрироватьСчетаФактурыОжидаетОплатыНДС(Объект, Проведен)
	
	ТаблицаСчетФактур = Объект.НДСПредъявленный.Выгрузить();
	ТаблицаСчетФактур.Свернуть("ДокументПоступления", "НДС");
	
	СчетаФактуры = УчетНДСРФ.НоваяТаблицаСчетовФактур();
	
	Для Каждого СтрокаСчетФактура Из ТаблицаСчетФактур Цикл
		СтрокаСчетаФактуры = СчетаФактуры.Добавить();
		СтрокаСчетаФактуры.СчетФактура = СтрокаСчетФактура.ДокументПоступления;
		СтрокаСчетаФактуры.СуммаОплаты = СтрокаСчетФактура.НДС;
	КонецЦикла;
	
	УчетНДСРФ.ЗарегистрироватьСчетаФактурыОжидаетОплатыНДС(СчетаФактуры, Объект.Ссылка, Проведен);
	
КонецПроцедуры

#Область ОписаниеРазделовВводаОстатков

Функция ОписаниеРазделаВводаОстатковНДС()
	
	ОписаниеРаздела = ВводОстатковСервер.ИнициализироватьОписаниеРазделаУчета();
	
	ОписаниеРаздела.РазделУчета           = НСтр("ru='НДС Предъявленный'");
	ОписаниеРаздела.ПояснениеРазделаУчета = НСтр("ru='Вводятся остатки НДС предъявленного'");
	ОписаниеРаздела.ПорядокВДереве        = 10;
	ОписаниеРаздела.ХозяйственныеОперации = ОписаниеХозяйственныхОперацийВводаОстатковНДС();
	
	Возврат ОписаниеРаздела;
	
КонецФункции

Функция ОписаниеХозяйственныхОперацийВводаОстатковНДС()
	
	ОписаниеХозяйственныхОперацийВводаОстатковНДС = ВводОстатковСервер.ИнициализироватьОписаниеХозяйственнойОперацииВводаОстатков();
	ИмяДокументаВводаНачальныхОстатков            = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Метаданные.Документы.ВводОстатковНДСПредъявленного);
	
	ОписаниеХозяйственнойОперации = ОписаниеХозяйственныхОперацийВводаОстатковНДС.Добавить();
	ОписаниеХозяйственнойОперации.ХозяйственнаяОперация     = Перечисления.ХозяйственныеОперации.ВводОстатковНДСПоПриобретеннымЦенностям;
	ОписаниеХозяйственнойОперации.ДокументВводаОстатков     = ИмяДокументаВводаНачальныхОстатков;
	ОписаниеХозяйственнойОперации.ШаблонЗаголовкаДокумента  = НСтр("ru = 'Входящий НДС по товарам, работам и услугам %1'");
	
	Возврат ОписаниеХозяйственныхОперацийВводаОстатковНДС;
	
КонецФункции

Функция ОписаниеРазделаВводаОстатковТМЦВЭксплуатации()
	
	ОписаниеРаздела = ВводОстатковСервер.ИнициализироватьОписаниеРазделаУчета();
	
	ОписаниеРаздела.РазделУчета           = НСтр("ru='ТМЦ в эксплуатации'");
	ОписаниеРаздела.ПояснениеРазделаУчета = НСтр("ru='Вводятся остатки ТМЦ в эксплуатации'");
	ОписаниеРаздела.ПорядокВДереве        = 9;
	ОписаниеРаздела.ХозяйственныеОперации = ОписаниеХозяйственныхОперацийВводаОстатковТМЦВЭксплуатации();
	
	Возврат ОписаниеРаздела;
	
КонецФункции

Функция ОписаниеХозяйственныхОперацийВводаОстатковТМЦВЭксплуатации()
	
	ОписаниеХозяйственныхОперацийВводаОстатковТМЦВЭксплуатации = ВводОстатковСервер.ИнициализироватьОписаниеХозяйственнойОперацииВводаОстатков();
	ИмяДокументаВводаНачальныхОстатков                         = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Метаданные.Документы.ВводОстатковТМЦВЭксплуатации);
	
	ОписаниеХозяйственнойОперации = ОписаниеХозяйственныхОперацийВводаОстатковТМЦВЭксплуатации.Добавить();
	ОписаниеХозяйственнойОперации.ХозяйственнаяОперация               = Перечисления.ХозяйственныеОперации.ВводОстатковТМЦВЭксплуатации;
	ОписаниеХозяйственнойОперации.ДокументВводаОстатков               = ИмяДокументаВводаНачальныхОстатков;
	ОписаниеХозяйственнойОперации.ШаблонЗаголовкаДокумента            = НСтр("ru = 'Ввод начальных остатков ТМЦ в эксплуатации %1'");
	
	Возврат ОписаниеХозяйственныхОперацийВводаОстатковТМЦВЭксплуатации;
	
КонецФункции

Функция ОписаниеРазделаВводаОстатковИнтеркампани()
	
	ОписаниеРаздела = ВводОстатковСервер.ИнициализироватьОписаниеРазделаУчета();
	
	ОписаниеРаздела.РазделУчета           = НСтр("ru='Расчеты между организациями'");
	ОписаниеРаздела.ПояснениеРазделаУчета = НСтр("ru='Вводятся остатки взаиморасчетов между собственными организациями'");
	ОписаниеРаздела.ПорядокВДереве        = 7;
	ОписаниеРаздела.ДоступностьВвода      = Ложь;
	ОписаниеРаздела.ХозяйственныеОперации = ОписаниеХозяйственныхОперацийВводаОстатковИнтеркампани();
	
	Возврат ОписаниеРаздела;
	
КонецФункции

Функция ОписаниеХозяйственныхОперацийВводаОстатковИнтеркампани()
	
	ОписаниеХозяйственныхОперацийВводаОстатковИнтеркампани = ВводОстатковСервер.ИнициализироватьОписаниеХозяйственнойОперацииВводаОстатков();
	ИмяДокументаВводаНачальныхОстатков                     = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Метаданные.Документы.ВводОстатков);
	
	ОписаниеХозяйственнойОперации = ОписаниеХозяйственныхОперацийВводаОстатковИнтеркампани.Добавить();
	ОписаниеХозяйственнойОперации.ХозяйственнаяОперация               = Перечисления.ХозяйственныеОперации.ВводОстатковРасчетовМеждуОрганизациямиПоАвансам;
	ОписаниеХозяйственнойОперации.ДокументВводаОстатков               = ИмяДокументаВводаНачальныхОстатков;
	ОписаниеХозяйственнойОперации.ШаблонЗаголовкаДокумента            = НСтр("ru = 'Ввод начальных остатков расчетов между организациями по авансам %1'");
	
	ОписаниеХозяйственнойОперации = ОписаниеХозяйственныхОперацийВводаОстатковИнтеркампани.Добавить();
	ОписаниеХозяйственнойОперации.ХозяйственнаяОперация               = Перечисления.ХозяйственныеОперации.ВводОстатковРасчетовМеждуОрганизациямиПоРеализациям;
	ОписаниеХозяйственнойОперации.ДокументВводаОстатков               = ИмяДокументаВводаНачальныхОстатков;
	ОписаниеХозяйственнойОперации.ШаблонЗаголовкаДокумента            = НСтр("ru = 'Ввод начальных остатков расчетов между организациями по реализациям %1'");
	
	Возврат ОписаниеХозяйственныхОперацийВводаОстатковИнтеркампани;
	
КонецФункции


#КонецОбласти

//-- Локализация

#КонецОбласти
