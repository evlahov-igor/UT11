///////////////////////////////////////////////////
//// Общий модуль "КР_ОбщегоНазначениеПовтИсп"
//// Создан: 23.08.2022,  Мельников А.А.,  КРОК,  Jira№ A2105505-384

#Область ПрограммныйИнтерфейс   

// << 11.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-723
// Возвращает значение доп. настройки, приведенное к типу
//
// Параметры:
//  ИмяПредопределенного - Строка - Имя предопределенного элемента доп.настройки
//  ПроверятьЗаполнение - Булево - Проверять заполнение доп.настройки. Если не заполнено, вызывается исключение
//		По умолчанию = Истина
// 
// Возвращаемое значение:
//  Произвольное - значение настройки, приведенное к его типу, определенному для ввода
//
Функция Значение(ИмяПредопределенного, ПроверятьЗаполнение = Истина) Экспорт 
	
	ДополнительныеНастройкиСистемы = Справочники.КР_ДополнительныеНастройкиСистемы;
	СтруктураНастройки = 
		ДополнительныеНастройкиСистемы.ПолучитьОграничениеПолейФормыПредопределенногоЭлемента(ИмяПредопределенного); 
		
	Если СтруктураНастройки = Неопределено Тогда 
		ТекстСообщения = НСтр("ru = 'Для %1 не определены настройки ограничения полей ввода'"); 
		ТекстСообщения = СтрШаблон(ТекстСообщения, ИмяПредопределенного);
		ВызватьИсключение ТекстСообщения;
	ИначеЕсли Не СтруктураНастройки.ДоступноЗначение Тогда 
		ТекстСообщения = НСтр("ru = 'Для %1 недоступно получение значения'"); 
		ТекстСообщения = СтрШаблон(ТекстСообщения, ИмяПредопределенного);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
		
	ОграничениеТипа = СтруктураНастройки.СтруктураСвойствЗначения.ОграничениеТипа;
	
	Значение = ДополнительныеНастройкиСистемы[ИмяПредопределенного].Значение;
	Значение = ОграничениеТипа.ПривестиЗначение(Значение);  

	Если Не ПроверятьЗаполнение
		Или ЗначениеЗаполнено(Значение)
		Или ТипЗнч(Значение) = Тип("Булево") Тогда 
		Возврат Значение;
	КонецЕсли;	    
	
	ТекстСообщения = НСтр("ru = 'Не заполнено значение дополнительной настройки %1'"); 
	ТекстСообщения = СтрШаблон(ТекстСообщения, ИмяПредопределенного);
	ВызватьИсключение ТекстСообщения;
	
КонецФункции // >> 11.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-723

// << 11.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-723
// Возвращает массив значений доп. настройки, приведенных к типу
//
// Параметры:
//  ИмяПредопределенного - Строка - Имя предопределенного элемента доп.настройки
//  ПроверятьЗаполнение - Булево - Проверять заполнение доп.настройки. Проверяется как каждый элемент так массив на наличие элементов.
//		Если не заполнено, вызывается исключение
//		По умолчанию = Истина
// 
// Возвращаемое значение:
//  Массив - массив значений настройки, приведенных к его типу, определенному для ввода
//
Функция МассивЗначений(ИмяПредопределенного, ПроверятьЗаполнение = Истина) Экспорт 
	
	ДополнительныеНастройкиСистемы = Справочники.КР_ДополнительныеНастройкиСистемы;
	СтруктураНастройки = 
		ДополнительныеНастройкиСистемы.ПолучитьОграничениеПолейФормыПредопределенногоЭлемента(ИмяПредопределенного); 
		
	Если СтруктураНастройки = Неопределено Тогда 
		ТекстСообщения = НСтр("ru = 'Для %1 не определены настройки ограничения полей ввода'"); 
		ТекстСообщения = СтрШаблон(ТекстСообщения, ИмяПредопределенного);
		ВызватьИсключение ТекстСообщения;
	ИначеЕсли Не СтруктураНастройки.ДоступенСписокЗначений Тогда 
		ТекстСообщения = НСтр("ru = 'Для %1 недоступно получение массива значений'"); 
		ТекстСообщения = СтрШаблон(ТекстСообщения, ИмяПредопределенного);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
		
	ОграничениеТипа = СтруктураНастройки.СтруктураСвойствСписка.ОграничениеТипа;
	
	МассивЗначений = Новый Массив;
	Данные = ДополнительныеНастройкиСистемы[ИмяПредопределенного].СписокЗначений; 

	Для Каждого СтрокаДанных Из Данные Цикл 

		Значение = СтрокаДанных.Значение;
		Значение = ОграничениеТипа.ПривестиЗначение(Значение);  

		Если Не ПроверятьЗаполнение
			Или ЗначениеЗаполнено(Значение)
			Или ТипЗнч(Значение) = Тип("Булево") Тогда 
			МассивЗначений.Добавить(Значение);
		Иначе
			ТекстСообщения = НСтр("ru = 'Не заполнено значение элемента списка дополнительной настройки %1'"); 
			ТекстСообщения = СтрШаблон(ТекстСообщения, ИмяПредопределенного);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;	    
		
	КонецЦикла;	
	
	Если ПроверятьЗаполнение
		И Не ЗначениеЗаполнено(МассивЗначений) Тогда 
		ТекстСообщения = НСтр("ru = 'Не заполнен список значений дополнительной настройки %1'"); 
		ТекстСообщения = СтрШаблон(ТекстСообщения, ИмяПредопределенного);
		ВызватьИсключение ТекстСообщения;                       
	КонецЕсли;	
	
	Возврат МассивЗначений;
	
КонецФункции // >> 11.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-723

// << 28.12.2022 Маскаев П.Ю., КРОК, JIRA№ A2105505-970
// Получает значение дополнительной настройки системы из хранилища значения
// Значение настройки будет приведено к типу в соответствии с настройкой ограничения типа
//
// Параметры:
//  ИмяПредопределенного - Строка - Имя предопределенного элемента справочника доп. настроек
//  ПроверятьЗаполнение  - Булево - Флаг проверки заполнения значения настройки.
//						   По умолчанию = Истина: при незаполненном значении будет вызвано исключение
//
// Возвращаемое значение:
//  Произвольный - значение настройки, приведенное к типу
//
Функция ЗначениеИзХранилищаЗначения(ИмяПредопределенного, ПроверятьЗаполнение = Истина) Экспорт
	
	ДополнительныеНастройкиСистемы = Справочники.КР_ДополнительныеНастройкиСистемы;
	СтруктураНастройки =
		ДополнительныеНастройкиСистемы.ПолучитьОграничениеПолейФормыПредопределенногоЭлемента(ИмяПредопределенного);
	
	Если СтруктураНастройки = Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'Для ""%1"" не определены настройки ограничения полей ввода'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, ИмяПредопределенного);
		ВызватьИсключение ТекстСообщения;
	ИначеЕсли Не СтруктураНастройки.ДоступноЗначение Тогда
		ТекстСообщения = НСтр("ru = 'Для ""%1"" недоступно получение значения'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, ИмяПредопределенного);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ОграничениеТипа = СтруктураНастройки.СтруктураСвойствЗначения.ОграничениеТипа;
	
	Значение = ДополнительныеНастройкиСистемы[ИмяПредопределенного].ЗначениеВХранилище.Получить();
	Значение = ОграничениеТипа.ПривестиЗначение(Значение);
	
	Если ПроверятьЗаполнение И Не ЗначениеЗаполнено(Значение) И Не ТипЗнч(Значение) = Тип("Булево") Тогда
		ТекстСообщения = НСтр("ru = 'Не заполнено значение в хранилище дополнительной настройки ""%1""'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, ИмяПредопределенного);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Возврат Значение;
	
КонецФункции // >> 28.12.2022 Маскаев П.Ю., КРОК, JIRA№ A2105505-970

// << 28.12.2022 Маскаев П.Ю., КРОК, JIRA№ A2105505-970
// Получает массив значений дополнительной настройки системы из хранилища значения
// Значения настройки будут приведены к типу в соответствии с настройкой ограничения типа
//
// Параметры:
//  ИмяПредопределенного - Строка - Имя предопределенного элемента справочника доп. настроек
//  ПроверятьЗаполнение  - Булево - Флаг проверки заполнения значения настройки.
//						   По умолчанию = Истина: при незаполненном значении будет вызвано исключение
//
// Возвращаемое значение:
//  Массив - Массив значений настройки, приведенных к типу
//
Функция МассивЗначенийИзХранилищаЗначений(ИмяПредопределенного, ПроверятьЗаполнение = Истина) Экспорт
	
	ДополнительныеНастройкиСистемы = Справочники.КР_ДополнительныеНастройкиСистемы;
	СтруктураНастройки =
		ДополнительныеНастройкиСистемы.ПолучитьОграничениеПолейФормыПредопределенногоЭлемента(ИмяПредопределенного);
	
	Если СтруктураНастройки = Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'Для ""%1"" не определены настройки ограничения полей ввода'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, ИмяПредопределенного);
		ВызватьИсключение ТекстСообщения;
	ИначеЕсли Не СтруктураНастройки.ДоступенСписокЗначений Тогда
		ТекстСообщения = НСтр("ru = 'Для ""%1"" недоступно получение массива значений'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, ИмяПредопределенного);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ОграничениеТипа = СтруктураНастройки.СтруктураСвойствСписка.ОграничениеТипа;
	
	МассивЗначений = Новый Массив;
	Данные = ДополнительныеНастройкиСистемы[ИмяПредопределенного].СписокЗначений;
	
	Для Каждого СтрокаДанных Из Данные Цикл
		Значение = СтрокаДанных.ЗначениеВХранилище.Получить();
		Значение = ОграничениеТипа.ПривестиЗначение(Значение);
		
		Если ПроверятьЗаполнение И Не ЗначениеЗаполнено(Значение) И Не ТипЗнч(Значение) = Тип("Булево") Тогда
			ТекстСообщения = НСтр("ru = 'Не заполнено значение в хранилище элемента списка дополнительной настройки ""%1""'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, ИмяПредопределенного);
			ВызватьИсключение ТекстСообщения;
		Иначе
			МассивЗначений.Добавить(Значение);
		КонецЕсли;
	КонецЦикла;
	
	Если ПроверятьЗаполнение И Не МассивЗначений.Количество() Тогда
		ТекстСообщения = НСтр("ru = 'Не заполнен список значений в хранилище дополнительной настройки ""%1""'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, ИмяПредопределенного);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Возврат МассивЗначений;
	
КонецФункции // >> 28.12.2022 Маскаев П.Ю., КРОК, JIRA№ A2105505-970

// Создан: 23.08.2022, Мельников А.А., КРОК
// Получение кэшированных значений доп настроек.
// Параметры: 
// Настройка - СправочникСсылка.КР_ДополнительныеНастройкиСистемы - Та настройка, для которой надо получить значение
// Возвращаемое значение: 
// Структура - Значения справочника ДопНастройки в структуре
//				"Значение, ЗначениеВХранилище, СписокЗначенийБ"	
//							где список значений массив из структур "Значение, ЗначениеВХранилище" 
// 
Функция ПолучитьЗначениеДополнительнойНастройки(Настройка) Экспорт

	ШаблонРезультата = Новый Структура("Значение, ЗначениеВХранилище, СписокЗначений", , , Новый Массив);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КР_ДополнительныеНастройкиСистемы.Значение КАК Значение,
		|	КР_ДополнительныеНастройкиСистемы.ЗначениеВХранилище КАК ЗначениеВХранилище
		|ИЗ
		|	Справочник.КР_ДополнительныеНастройкиСистемы КАК КР_ДополнительныеНастройкиСистемы
		|ГДЕ
		|	КР_ДополнительныеНастройкиСистемы.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КР_ДополнительныеНастройкиСистемыСписокЗначений.Значение КАК Значение,
		|	КР_ДополнительныеНастройкиСистемыСписокЗначений.ЗначениеВХранилище КАК ЗначениеВХранилище
		|ИЗ
		|	Справочник.КР_ДополнительныеНастройкиСистемы.СписокЗначений КАК КР_ДополнительныеНастройкиСистемыСписокЗначений
		|ГДЕ
		|	КР_ДополнительныеНастройкиСистемыСписокЗначений.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Настройка);
	
	РезультатЗапросаПакет = Запрос.ВыполнитьПакет();
	
	Если Не РезультатЗапросаПакет[0].Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапросаПакет[0].Выбрать();  		
		ВыборкаДетальныеЗаписи.Следующий();    
		ЗаполнитьЗначенияСвойств(ШаблонРезультата, ВыборкаДетальныеЗаписи);
	КонецЕсли;
	
	СписокЗначений = Новый Массив;
	Если Не РезультатЗапросаПакет[1].Пустой() Тогда		
		ВыборкаДетальныеЗаписи = РезультатЗапросаПакет[0].Выбрать();  		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ЗначениеВСписке = Новый Структура("Значение, ЗначениеВХранилище");	
			ЗаполнитьЗначенияСвойств(ЗначениеВСписке, ВыборкаДетальныеЗаписи);  
			СписокЗначений.Добавить(ЗначениеВСписке);
		КонецЦикла;
	КонецЕсли;
	 
	ШаблонРезультата.СписокЗначений = Новый ФиксированныйМассив(СписокЗначений);
	
	Возврат Новый ФиксированнаяСтруктура(ШаблонРезультата);
	
КонецФункции  // Создан: 23.08.2022, Мельников А.А., КРОК     
      
#Область ПредопределенныеЗначенияНастроек

// Создан: 23.08.2022, Мельников А.А., КРОК 
// Получает контрагента из предопределенной настройки Ozon
// Возвращаемое значение: 
// СправочникСсылка.Контрагенты
//
Функция КонтрагентOzon() Экспорт
		
	ЗначениеНастройки = ПолучитьЗначениеДополнительнойНастройки(Справочники.КР_ДополнительныеНастройкиСистемы.Ozon);
	
	Если ЗначениеНастройки <> Неопределено Тогда 
		Возврат ЗначениеНастройки.Значение;
	КонецЕсли; 
	
	Возврат Неопределено;
	
КонецФункции  // Создан: 23.08.2022, Мельников А.А., КРОК       

// Создан: 23.08.2022, Мельников А.А., КРОК 
// Получает контрагента из предопределенной настройки WB
// Возвращаемое значение: 
// СправочникСсылка.Контрагенты
//
Функция КонтрагентWB() Экспорт
	
	ЗначениеНастройки = ПолучитьЗначениеДополнительнойНастройки(Справочники.КР_ДополнительныеНастройкиСистемы.WB);
	Если ЗначениеНастройки <> Неопределено Тогда 
		Возврат ЗначениеНастройки.Значение;
	КонецЕсли; 
	
	Возврат Неопределено;  
	
КонецФункции // Создан: 23.08.2022, Мельников А.А., КРОК

// << 02.11.2022, Маскаев П.Ю., КРОК, Jira№ A2105505-772
Функция СкладEsolutions() Экспорт
	
	СкладEsolutions = Справочники.КР_ДополнительныеНастройкиСистемы.СкладEsolutions;
	ЗначениеНастройки = ПолучитьЗначениеДополнительнойНастройки(СкладEsolutions);
	Если Не ЗначениеНастройки = Неопределено Тогда
		Возврат ЗначениеНастройки.Значение;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции // >> 02.11.2022, Маскаев П.Ю., КРОК, Jira№ A2105505-772

#КонецОбласти
  
#Область ОбменСМагазинами

// << 10.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
Функция БазаЯвляетсяЦентральной() Экспорт 
		
	Возврат Константы.КР_БазаЯвляетсяЦентральной.Получить(); 
	
КонецФункции // >> 10.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751

// << 09.03.2023 Марченко С.Н., КРОК, JIRA№A2105505-1241
Функция МассивМаршрутизацийКТекущейБазеДанных() Экспорт 

	МассивСкладовТекущейБазы = КР_ДополнительныеНастройкиПовтИсп.МассивЗначений("СкладыТекущейБазыДанных", Ложь);
	
	МассивМаршрутизаций = Новый Массив;
    ЗначенияРеквизита = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивСкладовТекущейБазы, "КР_НомерМагазина");
	
	Для Каждого КлючЗначение Из ЗначенияРеквизита Цикл 
		
		НомерМагазина = КлючЗначение.Значение;		
		МассивМаршрутизаций.Добавить(XMLСтрока(НомерМагазина));
		
	КонецЦикла;	
	
	Возврат МассивМаршрутизаций;
	
КонецФункции // >> 09.03.2023 Марченко С.Н., КРОК, JIRA№A2105505-1241

// << 10.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
Функция ПолучитьНастройкиОтсечениеДвиженийПоСкладам(РегистраторПолноеИмя, РегистрПолноеИмя) Экспорт 
		
	БазаЯвляетсяЦентральной = КР_ДополнительныеНастройкиПовтИсп.БазаЯвляетсяЦентральной(); 
	Если БазаЯвляетсяЦентральной                 
		// Вызываем извне, чтоб закэшировать значения
		Или Не КР_ДополнительныеНастройкиПовтИсп.ТребуетсяОтсечениеДвиженийПоРегистратору(РегистраторПолноеИмя) Тогда 
		Возврат Неопределено;
	КонецЕсли;	
	
	Если РегистрПолноеИмя = "РегистрНакопления.СебестоимостьТоваров"
		Или РегистрПолноеИмя = "РегистрНакопления.ТоварыОрганизаций" 
		Тогда 
		
		ПутьКОтборуПоСкладу = "Т.АналитикаУчетаНоменклатуры.СкладскаяТерритория";
		
	ИначеЕсли РегистрПолноеИмя = "РегистрНакопления.ТоварыКОтбору" 
		Тогда 
		
		ПутьКОтборуПоСкладу = "ВЫРАЗИТЬ(Т.Распоряжение КАК Документ.ЗаказНаПеремещение).СкладОтправитель";
		
	Иначе

		ПутьКОтборуПоСкладу = "Т.Склад";

	КонецЕсли;	
	
	// Вызываем извне, чтоб закэшировать значения
	МассивСкладов = КР_ДополнительныеНастройкиПовтИсп.МассивЗначений("СкладыТекущейБазыДанных");
	Если Не ЗначениеЗаполнено(МассивСкладов) Тогда 
		ВызватьИсключение НСтр("ru = 'В режиме работы информационной базы в качестве периферийной базы "
		 	+ "(константа ""База является центральной"" = Ложь) должнен быть заполнен список складов текущей базы "
			+ "данных (доп.настройки ""Склады текущей базы данных"")'"
		);
	КонецЕсли;
	
	Настройки = Новый Структура;
	Настройки.Вставить("ПутьКОтборуПоСкладу", ПутьКОтборуПоСкладу);
	Настройки.Вставить("МассивСкладов", МассивСкладов);

	Возврат Настройки;
	
КонецФункции // >> 10.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751

// << 10.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
Функция ТребуетсяОтсечениеДвиженийПоРегистратору(ДокументПолноеИмя) Экспорт  
	
	ИндексированныйСписок = Новый Соответствие;
	ИндексированныйСписок.Вставить("Документ.ЗаказНаПеремещение", Истина); 
	ИндексированныйСписок.Вставить("Документ.ПеремещениеТоваров", Истина); 
	ИндексированныйСписок.Вставить("Документ.УпаковочныйЛист", Истина); 
	ИндексированныйСписок.Вставить("Документ.АктОРасхожденияхПослеПеремещения", Истина);
	
	Возврат (ИндексированныйСписок[ДокументПолноеИмя] <> Неопределено);
	
КонецФункции // >> 10.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751

// << 26.10.2023 Фомичев А.Е
// << 08.11.2023 Петухов А.В., Фактор, #3330
//Функция ИспользоватьСжатиеСообщений() Экспорт 
//		
//	Возврат Константы.КР_ИспользоватьСжатиеСообщений.Получить(); 
//	
//КонецФункции 
Функция ИспользоватьСжатиеСообщений(ТочкаОбмена) Экспорт 
	
	мсвТочки = СтрРазделить(Константы.злТочкиОбменаСоСжатиемСообщений.Получить(),",",Ложь);
	Возврат мсвТочки.Найти(ТочкаОбмена)<>Неопределено;
	
КонецФункции 

// >> 08.11.2023 Петухов А.В., Фактор, #3330

Функция ОбъектыИнтеграцииСИндивидуальнойОчередьюОбработки() Экспорт 
		
	Возврат Константы.КР_ОбъектыИнтеграцииСИндивидуальнойОчередьюОбработки.Получить(); 
	
КонецФункции 
// >> 26.10.2023 Фомичев А.Е

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти 
