
//////////////////////////////////////////////////////////////
//// Модуль формы записи регистра сведений "КР_ГрафикОтгрузкиИПриемкиТМЦ"
//// Создан: 19.12.2022 Маскаев П.Ю., КРОК, JIRA№ A2105505-880
//// Разработка по ФДР С21.015, Разработка НСИ для внутренней логистики

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДнейВПутиПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Запись.ДеньОтгрузки) Тогда
		ЗаполнитьДеньРазгрузки();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Запись.ДеньРазгрузки)
		И Не ЗначениеЗаполнено(Запись.ДеньОтгрузки) Тогда
		ЗаполнитьДеньОтгрузки();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеньОтгрузкиПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Запись.ДнейВПути) Тогда
		ЗаполнитьДеньРазгрузки();
	КонецЕсли;
	
	// Прим. разработчика
	// По требованию заказчика расчет временно отключен
	//Если ЗначениеЗаполнено(Запись.КоличествоДнейВозвратаНаСклад) Тогда
	//	ЗаполнитьДеньВозвратаНаСклад();
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеньРазгрузкиПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Запись.ДнейВПути) Тогда
		ЗаполнитьДеньОтгрузки();
		
		// Прим. разработчика
		// По требованию заказчика расчет временно отключен
		//Если ЗначениеЗаполнено(Запись.КоличествоДнейВозвратаНаСклад) Тогда
		//	ЗаполнитьДеньВозвратаНаСклад();
		//КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоДнейВозвратаНаСкладПриИзменении(Элемент)
	
	// Прим. разработчика
	// По требованию заказчика расчет временно отключен
	//Если ЗначениеЗаполнено(Запись.ДеньОтгрузки) Тогда
	//	ЗаполнитьДеньВозвратаНаСклад();
	//КонецЕсли;
	
	// Прим. разработчика
	// По требованию заказчика расчет временно отключен
	//Если ЗначениеЗаполнено(Запись.ДеньВозвратаНаСклад)
	//	И Не ЗначениеЗаполнено(Запись.ДеньОтгрузки) Тогда
	//	ЗаполнитьДеньОтгрузкиПоВозвратуНаСклад();
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеньВозвратаНаСкладПриИзменении(Элемент)
	
	// Прим. разработчика
	// По требованию заказчика расчет временно отключен
	//Если ЗначениеЗаполнено(Запись.КоличествоДнейВозвратаНаСклад) Тогда
	//	ЗаполнитьДеньОтгрузкиПоВозвратуНаСклад();
	//	
	//	Если ЗначениеЗаполнено(Запись.ДнейВПути) Тогда
	//		ЗаполнитьДеньРазгрузки();
	//	КонецЕсли;
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеньОтгрузкиОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеньРазгрузкиОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеньВозвратаНаСкладОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнитьДеньРазгрузки()
	
	ДеньРазгрузки = (Запись.ДнейВПути + Запись.ДеньОтгрузки - 1) % 7;
	
	Запись.ДеньРазгрузки = ?(ДеньРазгрузки = 0, 7, ДеньРазгрузки);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДеньВозвратаНаСклад()
	
	ДеньВозвратаНаСклад = (Запись.КоличествоДнейВозвратаНаСклад + Запись.ДеньОтгрузки - 1) % 7;
	
	Запись.ДеньВозвратаНаСклад = ?(ДеньВозвратаНаСклад = 0, 7, ДеньВозвратаНаСклад);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДеньОтгрузки()
	
	ДеньОтгрузки = 0;
	Множитель = 0;
	Пока ДеньОтгрузки < 1 Цикл
		ДеньОтгрузки = Запись.ДеньРазгрузки - Запись.ДнейВПути + 1 + 7 * Множитель;
		Множитель = Множитель + 1;
	КонецЦикла;
	
	Запись.ДеньОтгрузки = ДеньОтгрузки;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДеньОтгрузкиПоВозвратуНаСклад()
	
	ДеньОтгрузки = 0;
	Множитель = 0;
	Пока ДеньОтгрузки < 1 Цикл
		ДеньОтгрузки = Запись.ДеньВозвратаНаСклад - Запись.КоличествоДнейВозвратаНаСклад + 1 + 7 * Множитель;
		Множитель = Множитель + 1;
	КонецЦикла;
	
	Запись.ДеньОтгрузки = ДеньОтгрузки;
	
КонецПроцедуры

#КонецОбласти
