#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Склад)";
	
	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// Добавляет в список процедуры-обработчики обновления данных ИБ
// для всех поддерживаемых версий библиотеки или конфигурации.
// Вызывается перед началом обновления данных ИБ для построения плана обновления.
//
//  Обработчики - ТаблицаЗначений - описание полей, см. в процедуре
//                ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления.
//
// Пример добавления процедуры-обработчика в список:
//  Обработчик = Обработчики.Добавить();
//  Обработчик.Версия              = "1.1.0.0";
//  Обработчик.Процедура           = "ОбновлениеИБ.ПерейтиНаВерсию_1_1_0_0";
//  Обработчик.МонопольныйРежим    = Ложь;
//
// Параметры:
// 	Обработчики - см. ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления
//
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыСведений.РаспределениеЗапасов.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "11.5.8.196";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("1ca1c900-2f79-476b-9eed-5d3c17e9ac51");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.РаспределениеЗапасов.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Заполняет сведения о доступности товаров и обеспечении заказов по данным регистра накопления Распределение запасов - Движения (данным движений документов)'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.РегистрыНакопления.РаспределениеЗапасовДвижения.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыСведений.НастройкаКонтроляОбеспечения.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыСведений.РаспределениеЗапасов.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыСведений.РаспределениеЗапасов.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "РегистрыНакопления.РаспределениеЗапасовДвижения.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "РегистрыСведений.НастройкаКонтроляОбеспечения.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаРегистров = "РегистрСведений.РаспределениеЗапасов";
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиИзмеренияНезависимогоРегистраСведений();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.Вставить("ЭтоНезависимыйРегистрСведений", Истина);
	ДополнительныеПараметры.Вставить("ПолноеИмяРегистра", "РегистрСведений.РаспределениеЗапасов");
	
	Регистраторы = РегистрыНакопления.РаспределениеЗапасовДвижения.Регистраторы();
	ЗначенияПараметров = РаспределениеЗапасовДвижения.ЗначенияПараметровДляТекстовЗапросовПроведенияДокументов();
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИСТИНА КАК ЕстьЗаписи
		|ИЗ
		|	РегистрСведений.РаспределениеЗапасов КАК РаспределениеЗапасов";
	ЗаполнятьРегистрМонопольно = Запрос.Выполнить().Пустой()
		И Не (РаботаВМоделиСервиса.РазделениеВключено() И РаботаВМоделиСервиса.ДоступноИспользованиеРазделенныхДанных());
	
	Если ЗаполнятьРегистрМонопольно Тогда
		
		Набор = РегистрыСведений.РаспределениеЗапасов.СоздатьНаборЗаписей();
		Набор.ОбменДанными.Загрузка = Истина;
		
		ТекстыИтоговые = Новый Массив();
		Для Каждого ПолноеИмяДокумента Из Регистраторы Цикл
			ТекстыИтоговые.Добавить(РаспределениеЗапасовДвижения.ТекстыЗапросовПроведенияДокументов(ПолноеИмяДокумента));
		КонецЦикла;
		ВложенныйЗапрос = СтрСоединить(ТекстыИтоговые, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
		
		ТекстЗапроса =
			"ВЫБРАТЬ
			|	Набор.Номенклатура КАК Номенклатура,
			|	Набор.Характеристика КАК Характеристика,
			|	Набор.Склад КАК Склад,
			|	Набор.Назначение КАК Назначение,
			|	ВЫБОР КОГДА Набор.КОбеспечениюБезРезерва = 0 И Набор.РезервироватьПоМереПоступления = 0 И Набор.НеОбеспечивать = 0 И Набор.Резервировать = 0 И Набор.ЗакрытьГрафикОтгрузки = 0 ТОГДА
			|				НЕОПРЕДЕЛЕНО
			|			ИНАЧЕ
			|				Набор.ЗаказНаОтгрузку
			|		КОНЕЦ КАК ЗаказНаОтгрузку,
			|	Набор.ЖелаемаяДатаОтгрузки КАК ЖелаемаяДатаОтгрузки,
			|	Набор.ЗаказНаПоступление КАК ЗаказНаПоступление,
			|	Набор.ДатаПоступления КАК ДатаПоступления,
			|	СУММА(Набор.Отгрузить) КАК Отгрузить,
			|	СУММА(Набор.Резервировать) КАК Резервировать,
			|	СУММА(Набор.РезервироватьПоМереПоступления) КАК РезервироватьПоМереПоступления,
			|	СУММА(Набор.КОбеспечениюБезРезерва) КАК КОбеспечению,
			|	СУММА(Набор.НеОбеспечивать) КАК НеОбеспечивать,
			|	СУММА(Набор.Поступило) КАК Поступило,
			|	СУММА(Набор.ПоступитКДате) КАК ПоступитКДате,
			|	СУММА(Набор.ПоставкаНаСогласовании) КАК ПоставкаНаСогласовании,
			|	СУММА(Набор.ЗакрытьГрафикПоступления) КАК ЗакрытьГрафикПоступления,
			|	СУММА(Набор.ЗакрытьГрафикОтгрузки) КАК ЗакрытьГрафикОтгрузки
			|ПОМЕСТИТЬ РаспределениеЗапасовДвиженияИзменение1
			|ИЗ
			|	ВложенныйЗапросПереопределяемый КАК Набор
			|СГРУППИРОВАТЬ ПО
			|	Набор.Номенклатура,
			|	Набор.Характеристика,
			|	Набор.Склад,
			|	Набор.Назначение,
			|	ВЫБОР КОГДА Набор.КОбеспечениюБезРезерва = 0 И Набор.РезервироватьПоМереПоступления = 0 И Набор.НеОбеспечивать = 0 И Набор.Резервировать = 0 И Набор.ЗакрытьГрафикОтгрузки = 0 ТОГДА
			|				НЕОПРЕДЕЛЕНО
			|			ИНАЧЕ
			|				Набор.ЗаказНаОтгрузку
			|		КОНЕЦ,
			|	Набор.ЖелаемаяДатаОтгрузки,
			|	Набор.ЗаказНаПоступление,
			|	Набор.ДатаПоступления
			|ИМЕЮЩИЕ
			|	СУММА(Набор.Отгрузить) <> 0
			|		ИЛИ СУММА(Набор.Резервировать) <> 0
			|		ИЛИ СУММА(Набор.ЗакрытьГрафикПоступления) <> 0
			|		ИЛИ СУММА(Набор.РезервироватьПоМереПоступления) <> 0
			|		ИЛИ СУММА(Набор.КОбеспечениюБезРезерва) <> 0
			|		ИЛИ СУММА(Набор.НеОбеспечивать) <> 0
			|		ИЛИ СУММА(Набор.Поступило) <> 0
			|		ИЛИ СУММА(Набор.ПоступитКДате) <> 0
			|		ИЛИ СУММА(Набор.ПоставкаНаСогласовании) <> 0
			|ИНДЕКСИРОВАТЬ ПО
			|	ЗаказНаПоступление, Номенклатура, Характеристика, Склад, Назначение";
			
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВложенныйЗапросПереопределяемый", СтрШаблон("(%1)", ВложенныйЗапрос));
		
		Тексты = Новый Массив();
		ТекстТоварныеМеста = РегистрыНакопления.РаспределениеЗапасовДвижения.ТекстТоварныеМеста(Истина);
		Тексты.Добавить(ТекстТоварныеМеста);
		Тексты.Добавить(ТекстЗапроса);
		Тексты.Добавить(
			"УНИЧТОЖИТЬ ТоварныеМеста;
			|УНИЧТОЖИТЬ ТоварныеМестаВДокументе;
			|УНИЧТОЖИТЬ ТоварныеМестаВНоменклатуре;
			|УНИЧТОЖИТЬ ЦелыеКомплекты");
		
		ТекстЗапроса = СтрСоединить(Тексты, ОбщегоНазначения.РазделительПакетаЗапросов());
		Запрос = Новый Запрос(ТекстЗапроса);
		Для Каждого Элемент Из ЗначенияПараметров Цикл
			Запрос.УстановитьПараметр(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		
		Запрос.Текст =
			"ВЫБРАТЬ
			|	Таблица.Номенклатура КАК Номенклатура,
			|	Таблица.Характеристика КАК Характеристика,
			|	Таблица.Склад КАК Склад,
			|	Таблица.Назначение КАК Назначение,
			|	СУММА(Таблица.Поступило) КАК Поступило,
			|	СУММА(Таблица.Отгрузить) КАК Отгрузить
			|ПОМЕСТИТЬ АктивныеТовары
			|ИЗ
			|	РаспределениеЗапасовДвиженияИзменение1 КАК Таблица
			|ГДЕ
			|	Таблица.ЗаказНаПоступление = НЕОПРЕДЕЛЕНО
			|		И Таблица.ЗаказНаОтгрузку = НЕОПРЕДЕЛЕНО
			|СГРУППИРОВАТЬ ПО
			|	Таблица.Номенклатура,
			|	Таблица.Характеристика,
			|	Таблица.Склад,
			|	Таблица.Назначение
			|ИМЕЮЩИЕ
			|	СУММА(Таблица.Поступило) - СУММА(Таблица.Отгрузить) <> 0
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура, Характеристика, Склад, Назначение
			|;
			|
			|////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Таблица.Номенклатура КАК Номенклатура,
			|	Таблица.Характеристика КАК Характеристика,
			|	Таблица.Склад КАК Склад,
			|	Таблица.Назначение КАК Назначение,
			|	Таблица.ЗаказНаПоступление КАК ЗаказНаПоступление
			|ПОМЕСТИТЬ АктивныеЗаказы
			|ИЗ
			|	РаспределениеЗапасовДвиженияИзменение1 КАК Таблица
			|СГРУППИРОВАТЬ ПО
			|	Таблица.Номенклатура,
			|	Таблица.Характеристика,
			|	Таблица.Склад,
			|	Таблица.Назначение,
			|	Таблица.ЗаказНаПоступление
			|ИМЕЮЩИЕ
			|	СУММА(Таблица.ПоступитКДате + Таблица.ПоставкаНаСогласовании - Таблица.ЗакрытьГрафикПоступления) > 0
			|ИНДЕКСИРОВАТЬ ПО
			|	ЗаказНаПоступление, Номенклатура, Характеристика, Склад, Назначение
			|;
			|
			|///////////////////////////////////////////
			|ВЫБРАТЬ
			|	Таблица.Номенклатура КАК Номенклатура,
			|	Таблица.Характеристика КАК Характеристика,
			|	Таблица.Склад КАК Склад,
			|	Таблица.Назначение КАК Назначение,
			|	Таблица.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,
			|	Таблица.ЖелаемаяДатаОтгрузки КАК ЖелаемаяДатаОтгрузки,
			|	Таблица.ЗаказНаПоступление КАК ЗаказНаПоступление,
			|	Таблица.ДатаПоступления КАК ДатаПоступления,
			|	Таблица.Отгрузить КАК Отгрузить,
			|	Таблица.РезервироватьПоМереПоступления КАК РезервироватьПоМереПоступления,
			|	Таблица.Резервировать КАК Резервировать,
			|	Таблица.КОбеспечению КАК КОбеспечению,
			|	Таблица.НеОбеспечивать КАК НеОбеспечивать,
			|	Таблица.Поступило КАК Поступило,
			|	Таблица.ПоступитКДате КАК ПоступитКДате,
			|	Таблица.ПоставкаНаСогласовании КАК ПоставкаНаСогласовании,
			|	Таблица.ЗакрытьГрафикПоступления КАК ЗакрытьГрафикПоступления,
			|	Таблица.ЗакрытьГрафикОтгрузки КАК ЗакрытьГрафикОтгрузки
			|ПОМЕСТИТЬ РаспределениеЗапасовДвиженияИзменение2
			|ИЗ
			|	РаспределениеЗапасовДвиженияИзменение1 КАК Таблица
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ АктивныеЗаказы КАК АктивныеЗаказы
			|		ПО АктивныеЗаказы.Номенклатура = Таблица.Номенклатура
			|		 И АктивныеЗаказы.Характеристика = Таблица.Характеристика
			|		 И АктивныеЗаказы.Склад = Таблица.Склад
			|		 И АктивныеЗаказы.Назначение = Таблица.Назначение
			|		 И АктивныеЗаказы.ЗаказНаПоступление = Таблица.ЗаказНаПоступление
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ АктивныеТовары КАК АктивныеТовары
			|		ПО АктивныеТовары.Номенклатура = Таблица.Номенклатура
			|		 И АктивныеТовары.Характеристика = Таблица.Характеристика
			|		 И АктивныеТовары.Склад = Таблица.Склад
			|		 И АктивныеТовары.Назначение = Таблица.Назначение
			|ГДЕ
			|	(Таблица.ЗаказНаПоступление = НЕОПРЕДЕЛЕНО
			|		ИЛИ НЕ АктивныеЗаказы.Номенклатура ЕСТЬ NULL)
			|	И (Таблица.ЗаказНаПоступление <> НЕОПРЕДЕЛЕНО
			|		ИЛИ Таблица.ЗаказНаОтгрузку <> НЕОПРЕДЕЛЕНО
			|		ИЛИ НЕ АктивныеТовары.Номенклатура ЕСТЬ NULL) 
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура
			|;
			|
			|////////////////////////////////////
			|УНИЧТОЖИТЬ РаспределениеЗапасовДвиженияИзменение1;
			|УНИЧТОЖИТЬ АктивныеТовары;
			|УНИЧТОЖИТЬ АктивныеЗаказы";
		Запрос.Выполнить();
	
		Номенклатура = Неопределено;
		Пока Истина Цикл
			
			Текст =
				"ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	Набор.Номенклатура КАК Номенклатура
				|ПОМЕСТИТЬ РазличныеТовары
				|ИЗ (
				|	ВЫБРАТЬ ПЕРВЫЕ 50000
				|		Таблица.Номенклатура КАК Номенклатура
				|	ИЗ
				|		РаспределениеЗапасовДвиженияИзменение2 КАК Таблица
				|	ГДЕ
				|		(&НоменклатураПереопределяемый)
				|	УПОРЯДОЧИТЬ ПО
				|		Номенклатура) КАК Набор
				|ИНДЕКСИРОВАТЬ ПО
				|	Номенклатура
				|;
				|
				|//////////////////////////////////////////
				|ВЫБРАТЬ
				|	Таблица.Номенклатура КАК Номенклатура,
				|	Таблица.Характеристика КАК Характеристика,
				|	Таблица.Склад КАК Склад,
				|	Таблица.Назначение КАК Назначение,
				|	Таблица.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,
				|	Таблица.ЖелаемаяДатаОтгрузки КАК ЖелаемаяДатаОтгрузки,
				|	Таблица.ЗаказНаПоступление КАК ЗаказНаПоступление,
				|	Таблица.ДатаПоступления КАК ДатаПоступления,
				|	Таблица.Отгрузить КАК Отгрузить,
				|	Таблица.Резервировать КАК Резервировать,
				|	Таблица.РезервироватьПоМереПоступления КАК РезервироватьПоМереПоступления,
				|	Таблица.КОбеспечению КАК КОбеспечению,
				|	Таблица.НеОбеспечивать КАК НеОбеспечивать,
				|	Таблица.Поступило КАК Поступило,
				|	Таблица.ПоступитКДате КАК ПоступитКДате,
				|	Таблица.ПоставкаНаСогласовании КАК ПоставкаНаСогласовании,
				|	Таблица.ЗакрытьГрафикПоступления КАК ЗакрытьГрафикПоступления,
				|	Таблица.ЗакрытьГрафикОтгрузки КАК ЗакрытьГрафикОтгрузки
				|ПОМЕСТИТЬ РаспределениеЗапасовДвиженияИзменение
				|ИЗ
				|	РазличныеТовары КАК Товары
				|		
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РаспределениеЗапасовДвиженияИзменение2 КАК Таблица
				|		ПО Таблица.Номенклатура = Товары.Номенклатура
				|;
				|
				|//////////////////////////////////////////
				|ВЫБРАТЬ ПЕРВЫЕ 1
				|	Таблица.Номенклатура КАК Номенклатура
				|ИЗ
				|	РазличныеТовары КАК Таблица
				|УПОРЯДОЧИТЬ ПО
				|	Номенклатура УБЫВ
				|;
				|
				|//////////////////////////////////////////
				|УНИЧТОЖИТЬ РазличныеТовары";
			
			Запрос.Текст = СтрЗаменить(Текст, "&НоменклатураПереопределяемый",
				?(Номенклатура = Неопределено, "ИСТИНА", "Таблица.Номенклатура > &Номенклатура"));
			Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
			Выборка = Запрос.Выполнить().Выбрать();
			
			Если Выборка.Следующий() Тогда
				НоменклатураДоИзменения = Номенклатура;
				Номенклатура = Выборка.Номенклатура;
			Иначе
				Прервать;
			КонецЕсли;
			
			Таблицы = ТаблицыДляОбновленияВРежимеДополнения(Запрос);
			Набор.Очистить();
			
			НачатьТранзакцию();
			Попытка
				
				Для Каждого ТаблицаРезультат Из Таблицы Цикл
					
					Таблица = ТаблицаРезультат.Значение;
					Для Индекс = 0 По Таблица.Количество() - 1 Цикл
						
						ЗаполнитьЗначенияСвойств(Набор.Добавить(), Таблица[Индекс]);
						Если (((Индекс + 1)/100000) = Цел((Индекс + 1)/100000)) Или (Индекс = Таблица.Количество() - 1) Тогда
							Набор.Записать(Ложь);
							Набор.Очистить();
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЦикла;
				
				Таблица = ТаблицаРаспределенияЗапасов(Запрос);
				Для Индекс = 0 По Таблица.Количество() - 1 Цикл
					
					ЗаполнитьЗначенияСвойств(Набор.Добавить(), Таблица[Индекс]);
					Если (((Индекс + 1)/100000) = Цел((Индекс + 1)/100000)) Или (Индекс = Таблица.Количество() - 1) Тогда
						Набор.Записать(Ложь);
						Набор.Очистить();
					КонецЕсли;
					
				КонецЦикла;
				
				ЗафиксироватьТранзакцию();
				
			Исключение
				
				ОтменитьТранзакцию();
				ИнформацияОбОшибке = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				ТекстСообщения = НСтр("ru = 'Не удалось записать данные о распределении запасов в диапазоне номенклатуры: %1-%2 по причине: %3'");
				ТекстСообщения = СтрШаблон(ТекстСообщения, НоменклатураДоИзменения, Номенклатура, ИнформацияОбОшибке);
				ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
					УровеньЖурналаРегистрации.Предупреждение, , , ТекстСообщения);
				
				Запрос.Текст =
					"ВЫБРАТЬ РАЗЛИЧНЫЕ
					|	Измерения.Номенклатура КАК Номенклатура,
					|	Измерения.Характеристика КАК Характеристика,
					|	Измерения.Склад КАК Склад,
					|	Измерения.Назначение КАК Назначение
					|ИЗ
					|	РаспределениеЗапасовДвиженияИзменение КАК Измерения";
				РезультатЗапроса = Запрос.Выполнить();
				
				ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, РезультатЗапроса.Выгрузить(), ДополнительныеПараметры);
				
			КонецПопытки;
			
			Запрос.Текст =
				"УНИЧТОЖИТЬ РаспределениеЗапасовДвиженияИзменение;
				|УНИЧТОЖИТЬ ГраницыПериодаОбеспечения";
			Запрос.Выполнить();
			
		КонецЦикла;
		
		Запрос.МенеджерВременныхТаблиц.Закрыть();
		
	Иначе
	
		ТекстыИтоговые = Новый Массив();
		Для Каждого ПолноеИмяДокумента Из Регистраторы Цикл
			ТекстыИтоговые.Добавить(РаспределениеЗапасовДвижения.ТекстыЗапросовПроведенияДокументов(ПолноеИмяДокумента));
		КонецЦикла;
		ВложенныйЗапрос = СтрСоединить(ТекстыИтоговые, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
		
		ТекстГруппировки =
			"ВЫБРАТЬ
			|	Набор.Регистратор                     КАК Регистратор,
			|	Набор.Период                          КАК Период,
			|	Набор.Номенклатура                    КАК Номенклатура,
			|	Набор.Характеристика                  КАК Характеристика,
			|	Набор.Склад                           КАК Склад,
			|	Набор.Назначение                      КАК Назначение,
			|	Набор.ЗаказНаОтгрузку                 КАК ЗаказНаОтгрузку,
			|	Набор.ЖелаемаяДатаОтгрузки            КАК ЖелаемаяДатаОтгрузки,
			|	Набор.ЗаказНаПоступление              КАК ЗаказНаПоступление,
			|	Набор.ДатаПоступления                 КАК ДатаПоступления,
			|	СУММА(Набор.Отгрузить)                КАК Отгрузить,
			|	СУММА(Набор.Резервировать)            КАК Резервировать,
			|	СУММА(Набор.РезервироватьПоМереПоступления) КАК РезервироватьПоМереПоступления,
			|	СУММА(Набор.КОбеспечению)             КАК КОбеспечению,
			|	СУММА(Набор.НеОбеспечивать)           КАК НеОбеспечивать,
			|	СУММА(Набор.Поступило)                КАК Поступило,
			|	СУММА(Набор.ПоступитКДате)            КАК ПоступитКДате,
			|	СУММА(Набор.ПоставкаНаСогласовании)   КАК ПоставкаНаСогласовании,
			|	СУММА(Набор.ЗакрытьГрафикПоступления) КАК ЗакрытьГрафикПоступления
			|ИЗ(
			|	ВЫБРАТЬ
			|		Таблица.Регистратор              КАК Регистратор,
			|		Таблица.Период                   КАК Период,
			|		Таблица.Номенклатура             КАК Номенклатура,
			|		Таблица.Характеристика           КАК Характеристика,
			|		Таблица.Склад                    КАК Склад,
			|		Таблица.Назначение               КАК Назначение,
			|		Таблица.ЗаказНаОтгрузку          КАК ЗаказНаОтгрузку,
			|		Таблица.ЖелаемаяДатаОтгрузки     КАК ЖелаемаяДатаОтгрузки,
			|		Таблица.ЗаказНаПоступление       КАК ЗаказНаПоступление,
			|		Таблица.ДатаПоступления          КАК ДатаПоступления,
			|		Таблица.Отгрузить                КАК Отгрузить,
			|		Таблица.Резервировать            КАК Резервировать,
			|		Таблица.РезервироватьПоМереПоступления КАК РезервироватьПоМереПоступления,
			|		Таблица.КОбеспечениюБезРезерва   КАК КОбеспечению,
			|		Таблица.НеОбеспечивать           КАК НеОбеспечивать,
			|		Таблица.Поступило                КАК Поступило,
			|		Таблица.ПоступитКДате            КАК ПоступитКДате,
			|		Таблица.ПоставкаНаСогласовании   КАК ПоставкаНаСогласовании,
			|		Таблица.ЗакрытьГрафикПоступления КАК ЗакрытьГрафикПоступления
			|	ИЗ
			|		&ВложенныйЗапрос КАК Таблица
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		Таблица.Регистратор               КАК Регистратор,
			|		Таблица.Период                    КАК Период,
			|		Таблица.Номенклатура              КАК Номенклатура,
			|		Таблица.Характеристика            КАК Характеристика,
			|		Таблица.Склад                     КАК Склад,
			|		Таблица.Назначение                КАК Назначение,
			|		Таблица.ЗаказНаОтгрузку           КАК ЗаказНаОтгрузку,
			|		Таблица.ЖелаемаяДатаОтгрузки      КАК ЖелаемаяДатаОтгрузки,
			|		Таблица.ЗаказНаПоступление        КАК ЗаказНаПоступление,
			|		Таблица.ДатаПоступления           КАК ДатаПоступления,
			|		-Таблица.Отгрузить                КАК Отгрузить,
			|		-Таблица.Резервировать            КАК Резервировать,
			|		-Таблица.РезервироватьПоМереПоступления КАК РезервироватьПоМереПоступления,
			|		-Таблица.КОбеспечениюБезРезерва   КАК КОбеспечению,
			|		-Таблица.НеОбеспечивать           КАК НеОбеспечивать,
			|		-Таблица.Поступило                КАК Поступило,
			|		-Таблица.ПоступитКДате            КАК ПоступитКДате,
			|		-Таблица.ПоставкаНаСогласовании   КАК ПоставкаНаСогласовании,
			|		-Таблица.ЗакрытьГрафикПоступления КАК ЗакрытьГрафикПоступления
			|	ИЗ
			|		РегистрНакопления.РаспределениеЗапасовДвижения КАК Таблица
			|	ГДЕ
			|		НЕ Таблица.Регистратор ССЫЛКА Документ.КорректировкаРегистров) КАК Набор
			|СГРУППИРОВАТЬ ПО
			|	Набор.Регистратор,
			|	Набор.Период,
			|	Набор.Номенклатура,
			|	Набор.Характеристика,
			|	Набор.Склад,
			|	Набор.Назначение,
			|	Набор.ЗаказНаОтгрузку,
			|	Набор.ЖелаемаяДатаОтгрузки,
			|	Набор.ЗаказНаПоступление,
			|	Набор.ДатаПоступления
			|ИМЕЮЩИЕ
			|	СУММА(Набор.Отгрузить) <> 0
			|		ИЛИ СУММА(Набор.Резервировать) <> 0
			|		ИЛИ СУММА(Набор.РезервироватьПоМереПоступления) <> 0
			|		ИЛИ СУММА(Набор.КОбеспечению) <> 0
			|		ИЛИ СУММА(Набор.НеОбеспечивать) <> 0
			|		ИЛИ СУММА(Набор.Поступило) <> 0
			|		ИЛИ СУММА(Набор.ПоступитКДате) <> 0
			|		ИЛИ СУММА(Набор.ПоставкаНаСогласовании) <> 0
			|		ИЛИ СУММА(Набор.ЗакрытьГрафикПоступления) <> 0";
			
		ТекстГруппировки = СтрЗаменить(ТекстГруппировки, "&ВложенныйЗапрос", СтрШаблон("(%1)", ВложенныйЗапрос));
		ТекстГруппировки = СтрШаблон("(%1)", ТекстГруппировки);
		
		ТекстЗапроса = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Набор.Номенклатура   КАК Номенклатура,
			|	Набор.Характеристика КАК Характеристика,
			|	Набор.Склад          КАК Склад,
			|	Набор.Назначение     КАК Назначение
			|ИЗ
			|	ТекстГруппировки КАК Набор
			|;
			|
			|//////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Набор.Номенклатура                           КАК Номенклатура,
			|	Набор.Характеристика                         КАК Характеристика,
			|	Набор.Склад                                  КАК Склад,
			|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение
			|ИЗ
			|	ТекстГруппировки КАК Набор";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТекстГруппировки", ТекстГруппировки);
		Тексты = Новый Массив();
		ТекстТоварныеМеста = РегистрыНакопления.РаспределениеЗапасовДвижения.ТекстТоварныеМеста(Ложь);
		Тексты.Добавить(ТекстТоварныеМеста);
		Тексты.Добавить(ТекстЗапроса);
		ТекстЗапроса = СтрСоединить(Тексты, ОбщегоНазначения.РазделительПакетаЗапросов());
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Для Каждого Элемент Из ЗначенияПараметров Цикл
			Запрос.УстановитьПараметр(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, РезультатЗапроса[РезультатЗапроса.ВГраница() - 1].Выгрузить(), ДополнительныеПараметры);
		ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, РезультатЗапроса[РезультатЗапроса.ВГраница()].Выгрузить(), ДополнительныеПараметры);
		
		Запрос.Текст =
			"ВЫБРАТЬ
			|	Таблица.Номенклатура КАК Номенклатура,
			|	Таблица.Характеристика КАК Характеристика,
			|	Таблица.Склад КАК Склад,
			|	Таблица.Назначение КАК Назначение
			|ПОМЕСТИТЬ ПроблемныеДокументыКорректировкиРегистров
			|ИЗ
			|	РегистрНакопления.РаспределениеЗапасовДвижения КАК Таблица
			|ГДЕ
			|	ТИПЗНАЧЕНИЯ(Таблица.Регистратор) = ТИП(Документ.КорректировкаРегистров)
			|		И НЕ Таблица.Активность
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура, Характеристика, Склад, Назначение
			|;
			|
			|/////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Набор.Номенклатура КАК Номенклатура,
			|	Набор.Характеристика КАК Характеристика,
			|	Набор.Склад КАК Склад,
			|	Набор.Назначение КАК Назначение
			|ИЗ(
			|	ВЫБРАТЬ
			|		Таблица.Номенклатура КАК Номенклатура,
			|		Таблица.Характеристика КАК Характеристика,
			|		Таблица.Склад КАК Склад,
			|		Таблица.Назначение КАК Назначение,
			|		Таблица.Поступило - Таблица.Отгрузить КАК ЗапасДвижения,
			|		0 КАК ЗапасСведения
			|	ИЗ
			|		РегистрНакопления.РаспределениеЗапасовДвижения КАК Таблица
			|			
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПроблемныеДокументыКорректировкиРегистров КАК Фильтр
			|			ПО Фильтр.Номенклатура = Таблица.Номенклатура
			|			 И Фильтр.Характеристика = Таблица.Характеристика
			|			 И Фильтр.Склад = Таблица.Склад
			|			 И Фильтр.Назначение = Таблица.Назначение
			|	ГДЕ
			|		Таблица.Активность
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		Таблица.Номенклатура КАК Номенклатура,
			|		Таблица.Характеристика КАК Характеристика,
			|		Таблица.Склад КАК Склад,
			|		Таблица.Назначение КАК Назначение,
			|		0 КАК ЗапасДвижения,
			|		Таблица.Запас КАК ЗапасСведения
			|	ИЗ
			|		РегистрСведений.РаспределениеЗапасов КАК Таблица
			|			
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПроблемныеДокументыКорректировкиРегистров КАК Фильтр
			|			ПО Фильтр.Номенклатура = Таблица.Номенклатура
			|			 И Фильтр.Характеристика = Таблица.Характеристика
			|			 И Фильтр.Склад = Таблица.Склад
			|			 И Фильтр.Назначение = Таблица.Назначение
			|	ГДЕ
			|		Таблица.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
			|			) КАК Набор
			|СГРУППИРОВАТЬ ПО
			|	Набор.Номенклатура,
			|	Набор.Характеристика,
			|	Набор.Склад,
			|	Набор.Назначение
			|ИМЕЮЩИЕ
			|	СУММА(Набор.ЗапасДвижения) <> СУММА(Набор.ЗапасСведения)";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		// Пустые подразделения в ТЧ при регистрации к обработки не позволили правильно обработать РС.
		// АктВыполненныхРабот
		// ЗаказКлиента
		// ЗаявкаНаВозвратТоваровОтКлиента
		// КорректировкаРеализации
		Запрос.Текст =
			"ВЫБРАТЬ
			|	Набор.Номенклатура КАК Номенклатура,
			|	Набор.Характеристика КАК Характеристика,
			|	Набор.Склад КАК Склад,
			|	Набор.Назначение КАК Назначение
			|ИЗ(
			|	ВЫБРАТЬ
			|		Таблица.Номенклатура КАК Номенклатура,
			|		Таблица.Характеристика КАК Характеристика,
			|		Таблица.Склад КАК Склад,
			|		Таблица.Назначение КАК Назначение,
			|		Таблица.Поступило - Таблица.Отгрузить КАК ЗапасДвижения,
			|		0 КАК ЗапасСведения
			|	ИЗ
			|		РегистрНакопления.РаспределениеЗапасовДвижения КАК Таблица
			|	ГДЕ
			|		Таблица.Активность
			|			И Таблица.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
			|			И (Таблица.Поступило <> 0 ИЛИ Таблица.Отгрузить <> 0)
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		Таблица.Номенклатура КАК Номенклатура,
			|		Таблица.Характеристика КАК Характеристика,
			|		Таблица.Склад КАК Склад,
			|		Таблица.Назначение КАК Назначение,
			|		0 КАК ЗапасДвижения,
			|		Таблица.Запас КАК ЗапасСведения
			|	ИЗ
			|		РегистрСведений.РаспределениеЗапасов КАК Таблица
			|	ГДЕ
			|		Таблица.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
			|			И Таблица.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
			|			) КАК Набор
			|	СГРУППИРОВАТЬ ПО
			|		Набор.Номенклатура,
			|		Набор.Характеристика,
			|		Набор.Склад,
			|		Набор.Назначение
			|ИМЕЮЩИЕ
			|	СУММА(Набор.ЗапасДвижения) <> СУММА(Набор.ЗапасСведения)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Набор.Номенклатура КАК Номенклатура,
			|	Набор.Характеристика КАК Характеристика,
			|	Набор.Склад КАК Склад,
			|	Набор.Назначение КАК Назначение
			|ИЗ(
			|	ВЫБРАТЬ
			|		Таблица.Номенклатура КАК Номенклатура,
			|		Таблица.Характеристика КАК Характеристика,
			|		Таблица.Склад КАК Склад,
			|		Таблица.Назначение КАК Назначение,
			|		Таблица.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,
			|		Таблица.ЖелаемаяДатаОтгрузки КАК ЖелаемаяДатаОтгрузки,
			|		Таблица.НеОбеспечивать КАК НеОбеспечиватьДвижения,
			|		Таблица.РезервироватьПоМереПоступления КАК РезервироватьПоМереПоступленияДвижения,
			|		0 КАК НеОбеспечиватьСведения,
			|		0 КАК РезервироватьПоМереПоступленияСведения
			|	ИЗ
			|		РегистрНакопления.РаспределениеЗапасовДвижения КАК Таблица
			|	ГДЕ
			|		Таблица.Активность
			|			И (Таблица.РезервироватьПоМереПоступления <> 0 ИЛИ Таблица.НеОбеспечивать <> 0)
			|			И ТИПЗНАЧЕНИЯ(Таблица.ЗаказНаОтгрузку) В(
			|				ТИП(Документ.ЗаказКлиента),
			|				ТИП(Документ.ЗаявкаНаВозвратТоваровОтКлиента))
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		Таблица.Номенклатура КАК Номенклатура,
			|		Таблица.Характеристика КАК Характеристика,
			|		Таблица.Склад КАК Склад,
			|		Таблица.Назначение КАК Назначение,
			|		Таблица.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,
			|		Таблица.ЖелаемаяДатаОтгрузки КАК ЖелаемаяДатаОтгрузки,
			|		0 КАК НеОбеспечиватьДвижения,
			|		0 КАК РезервироватьПоМереПоступленияДвижения,
			|		Таблица.НеОбеспечивать КАК НеОбеспечиватьСведения,
			|		Таблица.РезервироватьПоМереПоступления + Таблица.ОтложитьРезервирование КАК РезервироватьПоМереПоступленияСведения
			|	ИЗ
			|		РегистрСведений.РаспределениеЗапасов КАК Таблица
			|	ГДЕ
			|		Таблица.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемаяОтгрузка)
			|			И ТИПЗНАЧЕНИЯ(Таблица.ЗаказНаОтгрузку) В(
			|				ТИП(Документ.ЗаказКлиента),
			|				ТИП(Документ.ЗаявкаНаВозвратТоваровОтКлиента))
			|	) КАК Набор
			|СГРУППИРОВАТЬ ПО
			|	Набор.Номенклатура,
			|	Набор.Характеристика,
			|	Набор.Склад,
			|	Набор.Назначение,
			|	Набор.ЗаказНаОтгрузку,
			|	Набор.ЖелаемаяДатаОтгрузки
			|ИМЕЮЩИЕ
			|		СУММА(Набор.НеОбеспечиватьДвижения) <> СУММА(Набор.НеОбеспечиватьСведения)
			|			ИЛИ СУММА(Набор.РезервироватьПоМереПоступленияДвижения) <> СУММА(Набор.РезервироватьПоМереПоступленияСведения)";
		РезультатЗапроса = Запрос.Выполнить();
		
		ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, РезультатЗапроса.Выгрузить(), ДополнительныеПараметры);
		
		Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Таблица.Номенклатура КАК Номенклатура,
			|	Таблица.Характеристика КАК Характеристика,
			|	Таблица.Склад КАК Склад,
			|	Таблица.Назначение КАК Назначение
			|ИЗ
			|	РегистрСведений.РаспределениеЗапасов КАК Таблица
			|ГДЕ
			|	Таблица.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.УдалитьОтложитьОбеспечение)";
		
		РезультатЗапроса = Запрос.Выполнить();
		ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, РезультатЗапроса.Выгрузить(), ДополнительныеПараметры);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрСведений.РаспределениеЗапасов";
	
	Если Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра) Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Неопределено, "РегистрНакопления.РаспределениеЗапасовДвижения") Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ТаблицаОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	Для Каждого Строка Из ТаблицаОбновляемыеДанные Цикл
		
		Набор = Неопределено;
		
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных();
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РаспределениеЗапасовДвижения");
			ЭлементБлокировки.УстановитьЗначение("Номенклатура",   Строка.Номенклатура);
			ЭлементБлокировки.УстановитьЗначение("Характеристика", Строка.Характеристика);
			ЭлементБлокировки.УстановитьЗначение("Склад",          Строка.Склад);
			Если ЗначениеЗаполнено(Строка.Назначение) Тогда
				ЭлементБлокировки.УстановитьЗначение("Назначение", Строка.Назначение);
			КонецЕсли;
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.РаспределениеЗапасов");
			ЭлементБлокировки.УстановитьЗначение("Номенклатура",   Строка.Номенклатура);
			ЭлементБлокировки.УстановитьЗначение("Характеристика", Строка.Характеристика);
			ЭлементБлокировки.УстановитьЗначение("Склад",          Строка.Склад);
			ЭлементБлокировки.УстановитьЗначение("Назначение",     Строка.Назначение);
			
			Блокировка.Заблокировать();
			
			Набор = РаспределениеЗапасов.ОбновлениеИБПоТовару(Строка);
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(Набор);
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			Если Набор = Неопределено Тогда
				Набор = РегистрыСведений.РаспределениеЗапасов.СоздатьНаборЗаписей();
				Набор.Отбор.Номенклатура.Установить(Строка.Номенклатура);
				Набор.Отбор.Характеристика.Установить(Строка.Характеристика);
				Набор.Отбор.Склад.Установить(Строка.Склад);
				Набор.Отбор.Назначение.Установить(Строка.Назначение);
			КонецЕсли;
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), Набор);
		КонецПопытки;
		
	КонецЦикла;
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

Функция ТаблицыДляОбновленияВРежимеДополнения(Запрос)
	
	Результат = Новый Структура();
	
	// Сведения по заказам на отгрузку.
	Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Изменения.Номенклатура КАК Номенклатура,
		|	Изменения.Характеристика КАК Характеристика,
		|	Изменения.Склад КАК Склад
		|ПОМЕСТИТЬ РазличныеТоварыБезНазначений
		|ИЗ
		|	РаспределениеЗапасовДвиженияИзменение КАК Изменения
		|ГДЕ
		|	Изменения.ЗаказНаОтгрузку <> НЕОПРЕДЕЛЕНО
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад
		|;
		|
		|/////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Склад КАК Склад,
		|	РасчетПереопределяемый.ГраницаПериода КАК ГраницаПериода,
		|	РасчетПереопределяемый.ДатаПоставки КАК ДатаПоставки,
		|	ИСТИНА КАК ПерераспределятьСкладскиеЗапасы
		|ПОМЕСТИТЬ ГраницыПериодаОбеспечения
		|ИЗ
		|	РазличныеТоварыБезНазначений КАК Товары
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РасчетПереопределяемый ПО ИСТИНА
		|		
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад
		|;
		|
		|/////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемаяОтгрузка) КАК Состояние,
		|	1 КАК ТипЗаписиРаспределенияЗапасов,
		|	Движения.Номенклатура КАК Номенклатура,
		|	Движения.Характеристика КАК Характеристика,
		|	Движения.Склад КАК Склад,
		|	Движения.Назначение КАК Назначение,
		|	Движения.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,
		|	Движения.ЖелаемаяДатаОтгрузки КАК ЖелаемаяДатаОтгрузки,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПоступление,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления,
		|	0 КАК Запас,
		|	0 КАК Свободно,
		|	Движения.Резервировать КАК Резервировать,
		|	ВЫБОР КОГДА Границы.ГраницаПериода = ДАТАВРЕМЯ(1,1,1)
		|					ИЛИ Границы.ГраницаПериода >= Движения.ЖелаемаяДатаОтгрузки ТОГДА
		|				Движения.РезервироватьПоМереПоступления
		|			ИНАЧЕ
		|				0
		|		КОНЕЦ КАК РезервироватьПоМереПоступления,
		|	ВЫБОР КОГДА Границы.ГраницаПериода = ДАТАВРЕМЯ(1,1,1)
		|					ИЛИ Границы.ГраницаПериода >= Движения.ЖелаемаяДатаОтгрузки ТОГДА
		|				0
		|			ИНАЧЕ
		|				Движения.РезервироватьПоМереПоступления
		|		КОНЕЦ КАК ОтложитьРезервирование,
		|	Движения.КОбеспечению КАК КОбеспечениюБезРезерва,
		|	ВЫБОР КОГДА Движения.НеОбеспечивать < Движения.ЗакрытьГрафикОтгрузки ТОГДА
		|				0
		|			ИНАЧЕ
		|				Движения.НеОбеспечивать - Движения.ЗакрытьГрафикОтгрузки
		|		КОНЕЦ КАК НеОбеспечивать,
		|	0 КАК Зарезервировано,
		|	0 КАК НеОбеспечено
		|ИЗ
		|	РаспределениеЗапасовДвиженияИзменение КАК Движения
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ ГраницыПериодаОбеспечения КАК Границы
		|		ПО Границы.Номенклатура = Движения.Номенклатура
		|		 И Границы.Характеристика = Движения.Характеристика
		|		 И Границы.Склад = Движения.Склад
		|ГДЕ
		|	Движения.ЗаказНаОтгрузку <> НЕОПРЕДЕЛЕНО
		|		И (Движения.Резервировать <> 0
		|			ИЛИ Движения.РезервироватьПоМереПоступления <> 0
		|			ИЛИ Движения.КОбеспечению <> 0
		|			ИЛИ ВЫБОР КОГДА Движения.НеОбеспечивать < Движения.ЗакрытьГрафикОтгрузки ТОГДА
		|							0
		|						ИНАЧЕ
		|							Движения.НеОбеспечивать - Движения.ЗакрытьГрафикОтгрузки
		|					КОНЕЦ <> 0)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ВРезерве) КАК Состояние,
		|	1 КАК ТипЗаписиРаспределенияЗапасов,
		|	Движения.Номенклатура КАК Номенклатура,
		|	Движения.Характеристика КАК Характеристика,
		|	Движения.Склад КАК Склад,
		|	Движения.Назначение КАК Назначение,
		|	Движения.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,
		|	Движения.ЖелаемаяДатаОтгрузки КАК ЖелаемаяДатаОтгрузки,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПоступление,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления,
		|	0 КАК Запас,
		|	0 КАК Свободно,
		|	0 КАК Резервировать,
		|	0 КАК РезервироватьПоМереПоступления,
		|	0 КАК ОтложитьРезервирование,
		|	0 КАК КОбеспечениюБезРезерва,
		|	0 КАК НеОбеспечивать,
		|	Движения.Резервировать КАК Зарезервировано,
		|	0 КАК НеОбеспечено
		|ИЗ
		|	РаспределениеЗапасовДвиженияИзменение КАК Движения
		|ГДЕ
		|	Движения.ЗаказНаОтгрузку <> НЕОПРЕДЕЛЕНО
		|		И Движения.Резервировать <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.НеОбеспечивать) КАК Состояние,
		|	1 КАК ТипЗаписиРаспределенияЗапасов,
		|	Движения.Номенклатура КАК Номенклатура,
		|	Движения.Характеристика КАК Характеристика,
		|	Движения.Склад КАК Склад,
		|	Движения.Назначение КАК Назначение,
		|	Движения.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,
		|	Движения.ЖелаемаяДатаОтгрузки КАК ЖелаемаяДатаОтгрузки,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПоступление,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления,
		|	0 КАК Запас,
		|	0 КАК Свободно,
		|	0 КАК Резервировать,
		|	0 КАК РезервироватьПоМереПоступления,
		|	0 КАК ОтложитьРезервирование,
		|	0 КАК КОбеспечениюБезРезерва,
		|	0 КАК НеОбеспечивать,
		|	0 КАК Зарезервировано,
		|	Движения.НеОбеспечивать - Движения.ЗакрытьГрафикОтгрузки КАК НеОбеспечено
		|ИЗ
		|	РаспределениеЗапасовДвиженияИзменение КАК Движения
		|ГДЕ
		|	Движения.ЗаказНаОтгрузку <> НЕОПРЕДЕЛЕНО
		|		И Движения.НеОбеспечивать - Движения.ЗакрытьГрафикОтгрузки > 0
		|УПОРЯДОЧИТЬ ПО
		|	ЗаказНаОтгрузку, Номенклатура, Характеристика, Склад, Назначение, ЖелаемаяДатаОтгрузки
		|;
		|
		|//////////////////////////////////////
		|УНИЧТОЖИТЬ РазличныеТоварыБезНазначений";
	
	Подстановки = ОбеспечениеВДокументахСервер.ПодстановкиГраницыОбеспечиваемогоПериода(
		"Товары.Номенклатура", "Товары.Характеристика", "Товары.Склад", "&НачалоТекущегоДня", "ИСТИНА");
	
	Текст = СтрЗаменить(Текст, "РасчетПереопределяемый.ГраницаПериода", Подстановки.Поле);
	Текст = СтрЗаменить(Текст, "РасчетПереопределяемый.ДатаПоставки",   Подстановки.ПолеДатаПоставки);
	Текст = СтрЗаменить(Текст, "ЛЕВОЕ СОЕДИНЕНИЕ РасчетПереопределяемый ПО ИСТИНА", Подстановки.Соединения);
	Запрос.УстановитьПараметр("НачалоТекущегоДня", НачалоДня(ТекущаяДатаСеанса()));
	
	Запрос.Текст = Текст;
	Пакет = Запрос.ВыполнитьПакет();
	
	ТаблицаЗаказыНаОтгрузку = Пакет[Пакет.Количество() - 2].Выгрузить();
	ТаблицаЗаказыНаОтгрузку.Колонки.Добавить("РезервироватьПоМереПоступленияИтогНаДату");
	
	ЗаказНаОтгрузку = Неопределено; Номенклатура = Неопределено; Характеристика = Неопределено;
	Склад = Неопределено; Назначение = Неопределено;
	Итог = 0;
	Для Индекс = 0 По ТаблицаЗаказыНаОтгрузку.Количество() - 1 Цикл
		
		Запись = ТаблицаЗаказыНаОтгрузку[Индекс];
		
		Если Номенклатура <> Запись.Номенклатура Или Характеристика <> Запись.Характеристика Или Склад <> Запись.Склад
				Или Назначение <> Запись.Назначение Или ЗаказНаОтгрузку <> Запись.ЗаказНаОтгрузку Тогда
				
			Итог = 0;
			Номенклатура = Запись.Номенклатура;
			Характеристика = Запись.Характеристика;
			Склад = Запись.Склад;
			Назначение = Запись.Назначение;
			ЗаказНаОтгрузку = Запись.ЗаказНаОтгрузку;
			
		КонецЕсли;
		
		Если Запись.РезервироватьПоМереПоступления > 0 Тогда
			Итог = Итог + Запись.РезервироватьПоМереПоступления;
			Запись.РезервироватьПоМереПоступленияИтогНаДату = Итог;
		КонецЕсли;
		
	КонецЦикла;
	
	Результат.Вставить("ЗаказыНаОтгрузку", ТаблицаЗаказыНаОтгрузку);
	
	// Сведения по заказам на поступление.
	Запрос.текст =
		"ВЫБРАТЬ
		|	Движения.ЗаказНаПоступление КАК ЗаказНаПоступление,
		|	Движения.Номенклатура КАК Номенклатура,
		|	Движения.Характеристика КАК Характеристика,
		|	Движения.Склад КАК Склад,
		|	Движения.Назначение КАК Назначение,
		|	
		|	СУММА(Движения.ПоставкаНаСогласовании
		|				+ Движения.ПоступитКДате
		|				- Движения.ЗакрытьГрафикПоступления) КАК Количество
		|ПОМЕСТИТЬ ОстаткиПланируемыхПоступлений
		|ИЗ
		|	РаспределениеЗапасовДвиженияИзменение КАК Движения
		|СГРУППИРОВАТЬ ПО
		|	Движения.ЗаказНаПоступление,
		|	Движения.Номенклатура,
		|	Движения.Характеристика,
		|	Движения.Склад,
		|	Движения.Назначение
		|ИМЕЮЩИЕ
		|	СУММА(Движения.ПоставкаНаСогласовании
		|			+ Движения.ПоступитКДате
		|			- Движения.ЗакрытьГрафикПоступления) > 0
		|ИНДЕКСИРОВАТЬ ПО
		|	ЗаказНаПоступление, Номенклатура, Характеристика, Склад, Назначение
		|;
		|
		|////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Остатки.Номенклатура КАК Номенклатура,
		|	Остатки.Характеристика КАК Характеристика,
		|	Остатки.Склад КАК Склад,
		|	Остатки.Назначение КАК Назначение,
		|	Остатки.ЗаказНаПоступление КАК ЗаказНаПоступление,
		|	
		|	ВЫБОР КОГДА Движения.ДатаПоступления <> ДАТАВРЕМЯ(1, 1, 1) ТОГДА
		|				ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемоеПоступление)
		|			ИНАЧЕ
		|				ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ПоступлениеНеподтвержденное)
		|		КОНЕЦ КАК Состояние,
		|	
		|	Движения.ДатаПоступления КАК ДатаПоступления,
		|	Остатки.Количество КАК Распределить,
		|	Движения.ПоставкаНаСогласовании + Движения.ПоступитКДате КАК Запас
		|ИЗ
		|	ОстаткиПланируемыхПоступлений КАК Остатки
		|		
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РаспределениеЗапасовДвиженияИзменение КАК Движения
		|		ПО Движения.Номенклатура         = Остатки.Номенклатура
		|		 И Движения.Характеристика       = Остатки.Характеристика
		|		 И Движения.Склад                = Остатки.Склад
		|		 И Движения.Назначение           = Остатки.Назначение
		|		 И Движения.ЗаказНаПоступление   = Остатки.ЗаказНаПоступление
		|УПОРЯДОЧИТЬ ПО
		|	ЗаказНаПоступление, Номенклатура, Характеристика, Склад, Назначение, ДатаПоступления УБЫВ
		|;
		|
		|/////////////////////////////////////////
		|УНИЧТОЖИТЬ ОстаткиПланируемыхПоступлений";
	
	Пакет = Запрос.ВыполнитьПакет();
	
	Таблица = Пакет[Пакет.Количество() - 2].Выгрузить();
	Таблица.Колонки.Добавить("Загружать", Новый ОписаниеТипов("Булево"));
	
	ЗаказНаПоступление = Неопределено; Номенклатура = Неопределено; Характеристика = Неопределено;
	Склад = Неопределено; Назначение = Неопределено;
	Распределить = 0;
	Для Индекс = 0 По Таблица.Количество() - 1 Цикл
		
		Запись = Таблица[Индекс];
		
		Если Номенклатура <> Запись.Номенклатура Или Характеристика <> Запись.Характеристика Или Склад <> Запись.Склад
				Или Назначение <> Запись.Назначение Или ЗаказНаПоступление <> Запись.ЗаказНаПоступление Тогда
				
			Распределить = Запись.Распределить;
			Номенклатура = Запись.Номенклатура;
			Характеристика = Запись.Характеристика;
			Склад = Запись.Склад;
			Назначение = Запись.Назначение;
			ЗаказНаПоступление = Запись.ЗаказНаПоступление;
			
		КонецЕсли;
		
		Запись.Запас = Макс(Мин(Распределить, Запись.Запас), 0);
		Распределить = Распределить - Запись.Запас;
		Запись.Загружать = Запись.Запас <> 0;
		
	КонецЦикла;
	
	// Сведения по товарам и расчет свободного остатка.
	Запрос.УстановитьПараметр("ГрафикПоступления", Таблица.Скопировать(Новый Структура("Загружать", Истина)));
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ГрафикПоступления.Номенклатура КАК Номенклатура,
		|	ГрафикПоступления.Характеристика КАК Характеристика,
		|	ГрафикПоступления.Склад КАК Склад,
		|	ГрафикПоступления.Назначение КАК Назначение,
		|	ГрафикПоступления.ЗаказНаПоступление КАК ЗаказНаПоступление,
		|	ГрафикПоступления.Состояние КАК Состояние,
		|	ГрафикПоступления.ДатаПоступления КАК ДатаПоступления,
		|	ГрафикПоступления.Запас КАК Запас
		|ПОМЕСТИТЬ ГрафикПоступления
		|ИЗ
		|	&ГрафикПоступления КАК ГрафикПоступления
		|;
		|
		|///////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИзмененияДвижений.Номенклатура КАК Номенклатура,
		|	ИзмененияДвижений.Характеристика КАК Характеристика,
		|	ИзмененияДвижений.Склад КАК Склад,
		|	ИзмененияДвижений.Назначение КАК Назначение,
		|	СУММА(ИзмененияДвижений.Отгрузить) КАК Отгрузить,
		|	СУММА(ИзмененияДвижений.Резервировать) КАК Резервировать,
		|	СУММА(ИзмененияДвижений.Поступило) КАК Поступило
		|ПОМЕСТИТЬ ИзмененияПоТовару
		|ИЗ
		|	РаспределениеЗапасовДвиженияИзменение КАК ИзмененияДвижений
		|СГРУППИРОВАТЬ ПО
		|	ИзмененияДвижений.Номенклатура,
		|	ИзмененияДвижений.Характеристика,
		|	ИзмененияДвижений.Склад,
		|	ИзмененияДвижений.Назначение
		|ИМЕЮЩИЕ
		|	СУММА(ИзмененияДвижений.Отгрузить) <> 0
		|		ИЛИ СУММА(ИзмененияДвижений.Резервировать) <> 0
		|		ИЛИ СУММА(ИзмененияДвижений.Поступило) <> 0
		|;
		|
		|/////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Потребности.Номенклатура КАК Номенклатура,
		|	Потребности.Характеристика КАК Характеристика,
		|	Потребности.Склад КАК Склад,
		|	Потребности.Назначение КАК Назначение,
		|	СУММА(Потребности.РезервироватьПоМереПоступления) КАК РезервироватьПоМереПоступления
		|ПОМЕСТИТЬ Потребности
		|ИЗ
		|	РаспределениеЗапасовДвиженияИзменение КАК Потребности
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ ГраницыПериодаОбеспечения КАК Границы
		|		ПО Границы.Номенклатура = Потребности.Номенклатура
		|		 И Границы.Характеристика = Потребности.Характеристика
		|		 И Границы.Склад = Потребности.Склад
		|ГДЕ
		|	Потребности.ЗаказНаОтгрузку <> НЕОПРЕДЕЛЕНО
		|		И Потребности.РезервироватьПоМереПоступления > 0
		|		И (Границы.ГраницаПериода = ДАТАВРЕМЯ(1,1,1)
		|				ИЛИ Границы.ГраницаПериода >= Потребности.ЖелаемаяДатаОтгрузки)
		|СГРУППИРОВАТЬ ПО
		|	Потребности.Номенклатура,
		|	Потребности.Характеристика,
		|	Потребности.Склад,
		|	Потребности.Назначение
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение
		|;
		|
		|/////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	0 КАК Порядок,
		|	ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе) КАК Состояние,
		|	1 КАК ТипЗаписиРаспределенияЗапасов,
		|	Таблица.Номенклатура КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад КАК Склад,
		|	Таблица.Назначение КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПоступление,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления,
		|	0 КАК ВНаличии,
		|	Таблица.Резервировать КАК Резерв,
		|	Таблица.Поступило - Таблица.Отгрузить КАК Запас,
		|	ЕСТЬNULL(Потребности.РезервироватьПоМереПоступления, 0) КАК Количество
		|ИЗ
		|	ИзмененияПоТовару КАК Таблица
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Потребности КАК Потребности
		|		ПО Потребности.Номенклатура = Таблица.Номенклатура
		|		 И Потребности.Характеристика = Таблица.Характеристика
		|		 И Потребности.Склад = Таблица.Склад
		|		 И Потребности.Назначение = Таблица.Назначение
		|ГДЕ
		|	Таблица.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	0 КАК Порядок,
		|	ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе) КАК Состояние,
		|	1 КАК ТипЗаписиРаспределенияЗапасов,
		|	Таблица.Номенклатура КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПоступление,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления,
		|	СУММА(Таблица.Поступило - Таблица.Отгрузить) КАК ВНаличии,
		|	СУММА(ВЫБОР КОГДА Таблица.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
		|				Таблица.Резервировать
		|			ИНАЧЕ
		|				0
		|		КОНЕЦ) КАК Резерв,
		|	СУММА(ВЫБОР КОГДА Таблица.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
		|				Таблица.Поступило - Таблица.Отгрузить
		|			ИНАЧЕ
		|				0
		|		КОНЕЦ) КАК Запас,
		|	МАКСИМУМ(ЕСТЬNULL(Потребности.РезервироватьПоМереПоступления, 0)) КАК Количество
		|ИЗ
		|	ИзмененияПоТовару КАК Таблица
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Потребности КАК Потребности
		|		ПО Потребности.Номенклатура = Таблица.Номенклатура
		|		 И Потребности.Характеристика = Таблица.Характеристика
		|		 И Потребности.Склад = Таблица.Склад
		|		 И Потребности.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|СГРУППИРОВАТЬ ПО
		|	Таблица.Номенклатура,
		|	Таблица.Характеристика,
		|	Таблица.Склад
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫБОР КОГДА ГрафикПоступления.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемоеПоступление) ТОГДА
		|				1
		|			ИНАЧЕ
		|				2
		|		КОНЕЦ КАК Порядок,
		|	ГрафикПоступления.Состояние КАК Состояние,
		|	1 КАК ТипЗаписиРаспределенияЗапасов,
		|	ГрафикПоступления.Номенклатура КАК Номенклатура,
		|	ГрафикПоступления.Характеристика КАК Характеристика,
		|	ГрафикПоступления.Склад КАК Склад,
		|	ГрафикПоступления.Назначение КАК Назначение,
		|	ГрафикПоступления.ЗаказНаПоступление КАК ЗаказНаПоступление,
		|	ГрафикПоступления.ДатаПоступления КАК ДатаПоступления,
		|	0 КАК ВНаличии,
		|	0 КАК Резерв,
		|	ГрафикПоступления.Запас КАК Запас,
		|	ЕСТЬNULL(Потребности.РезервироватьПоМереПоступления, 0) КАК Количество
		|ИЗ
		|	ГрафикПоступления КАК ГрафикПоступления
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Потребности КАК Потребности
		|		ПО Потребности.Номенклатура = ГрафикПоступления.Номенклатура
		|		 И Потребности.Характеристика = ГрафикПоступления.Характеристика
		|		 И Потребности.Склад = ГрафикПоступления.Склад
		|		 И Потребности.Назначение = ГрафикПоступления.Назначение
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение, Порядок, ДатаПоступления, ЗаказНаПоступление
		|;
		|
		|/////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ИзмененияПоТовару;
		|УНИЧТОЖИТЬ ГрафикПоступления;
		|УНИЧТОЖИТЬ Потребности";
	
	Пакет = Запрос.ВыполнитьПакет();
	
	Таблица = Пакет[Пакет.Количество() - 4].Выгрузить();
	Таблица.Колонки.Добавить("Загружать");
	Таблица.Колонки.Добавить("Свободно");
	Номенклатура = Неопределено; Характеристика = Неопределено; Склад = Неопределено; Назначение = Неопределено;
	Потребность = 0;
	Для Индекс = 0 По Таблица.Количество() - 1 Цикл
		
		Запись = Таблица[Индекс];
		
		Если Номенклатура <> Запись.Номенклатура Или Характеристика <> Запись.Характеристика Или Склад <> Запись.Склад
				Или Назначение <> Запись.Назначение Тогда
				
			Потребность = Запись.Количество;
			Номенклатура = Запись.Номенклатура;
			Характеристика = Запись.Характеристика;
			Склад = Запись.Склад;
			Назначение = Запись.Назначение;
			
		КонецЕсли;
		
		Распределить = Макс(Мин(Запись.Запас - Запись.Резерв, Потребность), 0);
		Потребность = Потребность - Распределить;
		Запись.Свободно = Запись.Запас - Запись.Резерв - Распределить;
		Запись.Загружать = Запись.Свободно <> 0 Или Запись.Запас <> 0 Или Запись.Резерв <> 0 Или Запись.ВНаличии <> 0;
		
	КонецЦикла;
	ТаблицаДоступныеОстатки = Таблица.Скопировать(Новый Структура("Загружать", Истина));
	
	Результат.Вставить("ДоступныеОстатки", ТаблицаДоступныеОстатки);
	Возврат Результат;
	
КонецФункции

Функция ТаблицаРаспределенияЗапасов(Запрос)
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОжидаемаяОтгрузка.Номенклатура КАК Номенклатура,
		|	ОжидаемаяОтгрузка.Характеристика КАК Характеристика,
		|	ОжидаемаяОтгрузка.Склад КАК Склад,
		|	ОжидаемаяОтгрузка.Назначение КАК Назначение
		|ПОМЕСТИТЬ ТоварыДляРаспределенияЗапасов
		|ИЗ
		|	РаспределениеЗапасовДвиженияИзменение КАК ОжидаемаяОтгрузка
		|ГДЕ
		|	ОжидаемаяОтгрузка.ЗаказНаОтгрузку <> НЕОПРЕДЕЛЕНО
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение
		|;
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОжидаемаяОтгрузка.ЗаказНаОтгрузку КАК Ссылка,
		|	ЛОЖЬ КАК ДополнительнаяЗапись,
		|	ВЫБОР КОГДА ЛОЖЬ ТОГДА
		|				НЕОПРЕДЕЛЕНО
		|			ИНАЧЕ
		|					ВЫБОР
		|						КОГДА ЕСТЬNULL(ОжидаемаяОтгрузка.ЗаказНаОтгрузку.Приоритет, ЗНАЧЕНИЕ(Справочник.Приоритеты.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Приоритеты.ПустаяСсылка) ТОГДА
		|								&ПриоритетЕслиДокументЕщеНеОбновился
		|							ИНАЧЕ
		|								ЕСТЬNULL(ОжидаемаяОтгрузка.ЗаказНаОтгрузку.Приоритет, ЗНАЧЕНИЕ(Справочник.Приоритеты.ПустаяСсылка))
		|						КОНЕЦ
		|		КОНЕЦ КАК Приоритет,
		|	ОжидаемаяОтгрузка.ЗаказНаОтгрузку.Дата КАК ДатаДокументаИБ
		|ПОМЕСТИТЬ РеестрДокументовПереопределяемый
		|ИЗ
		|	РаспределениеЗапасовДвиженияИзменение КАК ОжидаемаяОтгрузка
		|ГДЕ
		|	ОжидаемаяОтгрузка.ЗаказНаОтгрузку <> НЕОПРЕДЕЛЕНО
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка, ДополнительнаяЗапись";
	Запрос.УстановитьПараметр("ПриоритетЕслиДокументЕщеНеОбновился", Справочники.Приоритеты.ПолучитьПриоритетПоУмолчанию(Неопределено));
	Запрос.Выполнить();
	Текст = РаспределениеЗапасов.ТекстЗапросаРаспределенияЗапасов(Ложь);
	Запрос.Текст = СтрЗаменить(Текст, "РегистрСведений.РеестрДокументов", "РеестрДокументовПереопределяемый");
	Запрос.УстановитьПараметр("НачалоТекущегоДня", НачалоДня(ТекущаяДатаСеанса()));
	Пакет = Запрос.ВыполнитьПакет();
	
	Запрос.Текст =
		"УНИЧТОЖИТЬ ТоварыДляРаспределенияЗапасов;
		|УНИЧТОЖИТЬ РеестрДокументовПереопределяемый;
		|УНИЧТОЖИТЬ РаспределеноПоЗаказам;
		|УНИЧТОЖИТЬ ПотребностиПоЗаказамГруппировка;
		|УНИЧТОЖИТЬ ПотребностиПоЗаказам;
		|УНИЧТОЖИТЬ ПотребностиПоТовару;
		|УНИЧТОЖИТЬ ГрафикПоступления;
		|УНИЧТОЖИТЬ ГрафикПоступленияПоТовару";
	Запрос.Выполнить();
	
	Таблица = Пакет[Пакет.Количество() - 2].Выгрузить();
	График = Пакет[Пакет.Количество() - 1].Выгрузить();
	
	ТаблицаРаспределениеЗапасов = РегистрыСведений.РаспределениеЗапасов.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	РаспределениеЗапасов.РаспределитьЗапасыВТаблицу(ТаблицаРаспределениеЗапасов, Таблица, График, Ложь);
	Возврат ТаблицаРаспределениеЗапасов;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
