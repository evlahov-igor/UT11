#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ДекорацияЯНеЗнаюНажатие(Элемент)
	
	Элементы.ПодсказкаЯНеЗнаюSKU.Видимость = НЕ Элементы.ПодсказкаЯНеЗнаюSKU.Видимость; 
	Если Элементы.ПодсказкаЯНеЗнаюSKU.Видимость Тогда
		Элементы.ПодсказкаЯЗнаюSKU.Видимость = Ложь;	
	КонецЕсли;

	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияЯЗнаюSKUНажатие(Элемент)
	
	Элементы.ПодсказкаЯЗнаюSKU.Видимость = НЕ Элементы.ПодсказкаЯЗнаюSKU.Видимость;
	Если Элементы.ПодсказкаЯЗнаюSKU.Видимость Тогда
		Элементы.ПодсказкаЯНеЗнаюSKU.Видимость = Ложь;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьЦветТекстаПоМаркеру()
	
	Если Запись.МаркерСтатуса = 0 Тогда
		
		Цвет = ЦветаСтиля.ЦветОсобогоТекста;	
		
	ИначеЕсли Запись.МаркерСтатуса = 1 Тогда
		
		Цвет = ЦветаСтиля.ЦветВажного;
		
	ИначеЕсли Запись.МаркерСтатуса = 2 Тогда
		
		Цвет = ЦветаСтиля.ЦветПустойГиперссылки;
		
	ИначеЕсли Запись.МаркерСтатуса = 3 Тогда 
		
		Цвет = ЦветаСтиля.ЦветАкцента;
		
	КонецЕсли;
	
	Возврат Цвет;
			
КонецФункции

&НаСервере
Процедура ИнициализироватьСтраницы()
	
	Элементы.СтраницаДанныеСвязи.ТолькоПросмотр = Ложь;
	Элементы.СтраницаДанныеТовара.ТолькоПросмотр = Ложь;
	Элементы.СообщениеОНедоступности.Видимость = Ложь;
	Элементы.СтраницаОписаниеОшибки.Видимость = Ложь;
	
	Если Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.НаМодерации
		ИЛИ  Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.МодерацияПройдена
		ИЛИ  Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.УтвержденаРекомендация Тогда
			 
		Элементы.СтраницаДанныеСвязи.ТолькоПросмотр = Истина;
		Элементы.СтраницаДанныеТовара.ТолькоПросмотр = Истина;
		Элементы.СообщениеОНедоступности.Видимость = Истина;
		Элементы.ПолучитьРекомендацию.Видимость = Ложь;
		Элементы.ОтправитьНаМодерацию.Видимость = Ложь;
		Элементы.УтвердитьРекомендацию.Видимость = Ложь;
		Элементы.ОтклонитьРекомендацию.Видимость = Ложь;
	
	ИначеЕсли Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.ПолученаРекомендация Тогда
		
		Элементы.ПолучитьРекомендацию.Видимость = Ложь;
		Элементы.ОтправитьНаМодерацию.Видимость = Ложь;
		Элементы.УтвердитьРекомендацию.Видимость = Истина;
		Элементы.ОтклонитьРекомендацию.Видимость = Истина;
	Иначе
		
		Элементы.ПолучитьРекомендацию.Видимость = Истина;
		Элементы.ОтправитьНаМодерацию.Видимость = Истина;
		Элементы.УтвердитьРекомендацию.Видимость = Ложь;
		Элементы.ОтклонитьРекомендацию.Видимость = Ложь;

	КонецЕсли;

	Если Запись.МаркерСтатуса = 0 И НЕ Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.ПустаяСсылка() Тогда //красный
		
	     Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОписаниеОшибки;
		 Элементы.СтраницаОписаниеОшибки.Видимость = Истина;
		
	ИначеЕсли Запись.МаркерСтатуса = 1 Тогда //желтый
		
	     Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаДанныеСвязи;
		 		
	ИначеЕсли Запись.МаркерСтатуса = 2 Тогда //серый
		
	     Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаДанныеТовара;
		
	ИначеЕсли Запись.МаркерСтатуса = 3  ИЛИ Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.ПустаяСсылка() Тогда //зеленый
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаДанныеТовара;
		
	КонецЕсли;

	
КонецПроцедуры

&НаСервере
Процедура ИнициироватьПодсказки()
	
	Элементы.ПодсказкаЯЗнаюSKU.Заголовок = НСтр("ru = 'Если Вы уже знаете SKU товара на Маркете, заполните информацию на закладке ""Данные связи"" и отправьте товар на модерацию (кнопка ""Отправить на модерацию"").'");
	Элементы.ПодсказкаЯНеЗнаюSKU.Заголовок = НСтр("ru = 'Если Вы не знаете SKU товара на Маркете, получите информацию о рекомендованных связях - проверьте информацию о товаре на закладке ""Данные товара"", при необходимости дозаполните недостающую информацию и нажмите кнопку ""Получить рекомендацию"". Все поля на закладке ""Данные товара"" необязательны, но рекомендованы к заполнению - подробное описание свойств товара увеличит вероятность подбора правильной рекомендации. Дождитесь результатного статуса, после смены статуса переходите к проверке и утверждению рекомендованной связи.'");
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтаНовая = Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.ПустаяСсылка();
	ИнициироватьПодсказки();
	Если  ЭтаНовая Тогда
		
		Элементы.Статус.Видимость = Ложь;
		Элементы.ИдентификаторПубликации.Видимость = Ложь;
		Элементы.ГруппаЕслиСоздание.Видимость = Истина;
		Элементы.Номенклатура.ТолькоПросмотр = Ложь;
		Элементы.Характеристика.ТолькоПросмотр = Ложь;
		Элементы.Упаковка.ТолькоПросмотр = Ложь;

	Иначе
		Элементы.Статус.Видимость = Истина;
		Элементы.ИдентификаторПубликации.Видимость = Истина;
		Элементы.ГруппаЕслиСоздание.Видимость = Ложь;
		Элементы.Номенклатура.ТолькоПросмотр = Истина;
		Элементы.Характеристика.ТолькоПросмотр = Истина;
		Элементы.Упаковка.ТолькоПросмотр = Истина;

	КонецЕсли;
	Элементы.Статус.ЦветТекста = ПолучитьЦветТекстаПоМаркеру();
	ИнициализироватьСтраницы();
	ОбновитьДопИнфо();
	
КонецПроцедуры

&НаСервере
Процедура ЗапуститьПриложениеНаСервере(СтрокаКоманды) 
	
	ЗапуститьПриложение(СтрокаКоманды);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиПоСсылкеНажатие(Элемент)
	
	
		Если ЗначениеЗаполнено(Запись.ГиперссылкаНаРекомендованныеТовар) Тогда
			ЗапуститьПриложениеНаСервере(СокрЛП(Запись.ГиперссылкаНаРекомендованныеТовар));
		Иначе
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Заполните поле ""Гиперссылка на пример товара""'"));
		КонецЕсли;
		ЭтотОбъект.Записать();

КонецПроцедуры

&НаСервере
Процедура ОтправитьНаМодерациюНаСервере()
	
	Если ЗначениеЗаполнено(Запись.ИдентификаторТовараПлощадки) Тогда
		Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.УтвержденаРекомендация;	
	Иначе
		Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.СозданиеНового;
	КонецЕсли;
	ЭтотОбъект.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНаМодерацию(Команда)  
	Отказ = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Запись.Номенклатура) Тогда 
			ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Заполните поле Номенклатура'"),,
			,,
			Отказ);	
	КонецЕсли;

	Если НЕ Отказ Тогда
		ОтправитьНаМодерациюНаСервере();
		Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОтклонитьРекомендациюНаСервере()
	
	Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.НевернаяРекомендация;
	Запись.ОписаниеОшибки = "Если товар определен неправильно: 
	|Проверьте, что товар относится к одной из категорий, представленных на Маркете.
	|Убедитесь, что предоставили наиболее полные и точные данные о товаре. 
	|Если не указана какая-либо информация, уточните входные данные запроса (например, добавьте цвет или размер в характеристики товара или добавьте описание модели, скорректировав данные в поле ""Представление"" на закладке ""Данные о товаре"", укажите базовую цену товара, если она не заполнена).
	|После заполнения данных отправьте повторно публикацию на получение рекомендации (кнопка ""Получить рекомендацию""). 
	|Попробуйте найти товар в поиске по разделу «Покупки» на Маркете. Если товар найдется, SKU на Яндексе можно взять из URL его страницы. Например, если URL страницы товара — https://pokupki.market.yandex.ru/product/7715752, то его SKU на Яндексе — 7715752.Если советы не помогли - отправьте информацию о товаре без SKU на Яндексе (кнопка ""Отправить на модерацию"") - сотрудники Маркета могут подобрать или создать карточки для ваших товаров в личном кабинете, если товар еще не продается на Маркете.";				
	ЭтотОбъект.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтклонитьРекомендацию(Команда) 
	Отказ = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Запись.Номенклатура) Тогда 
			ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Заполните поле Номенклатура'"),,
			,,
			Отказ);	
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		ОтклонитьРекомендациюНаСервере();
		Закрыть(); 
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УтвердитьРекомендациюНаСервере()
	
	Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.УтвержденаРекомендация;	
	ЭтотОбъект.Записать();

	
КонецПроцедуры

&НаКлиенте
Процедура УтвердитьРекомендацию(Команда)
	Отказ = Ложь;   
	
	Если НЕ ЗначениеЗаполнено(Запись.Номенклатура) Тогда 
			ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Заполните поле Номенклатура'"),,
			,,
			Отказ);	
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		УтвердитьРекомендациюНаСервере();
		Закрыть();
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ПолучитьРекомендациюНаСервере()
	
	Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.Новый;	
	ЭтотОбъект.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьРекомендацию(Команда)
	Отказ = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Запись.Номенклатура) Тогда 
			ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Заполните поле Номенклатура'"),,
			,,
			Отказ);	
	КонецЕсли;     
		
	Если НЕ Отказ Тогда	
		ПолучитьРекомендациюНаСервере();
		Закрыть(); 
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьПредставлениеТовара()
	
	Характеристика = "";
	Упаковка = "";
	
	Если Запись.Номенклатура<>Справочники.Номенклатура.ПустаяСсылка() Тогда
		Если Запись.Характеристика <>Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка() Тогда
			Характеристика = ", "+ Запись.Характеристика.Наименование;
		КонецЕсли;
		Если Запись.Упаковка <>Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка() Тогда
			Упаковка = ", "+ Запись.Упаковка.Наименование;
		Иначе
			Запись.Упаковка = Запись.Номенклатура.ЕдиницаИзмерения;
		КонецЕсли;

		Запись.ПредставлениеТовара = Запись.Номенклатура.Наименование + Характеристика+Упаковка;
		Запись.ТоварнаяКатегория = Запись.Номенклатура.ТоварнаяКатегория.Наименование;
		БазовыйПрайсЛист = Константы.БазовыйПрайсЛистЯндексМаркет.Получить(); 
		Если БазовыйПрайсЛист<>Справочники.ВидыЦен.ПустаяСсылка() Тогда
			Запрос = Новый Запрос();
			Запрос.Текст = "ВЫБРАТЬ
			|ЦеныНоменклатуры.Цена КАК Цена
			|ИЗ
			|РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ТекущаяДата, ВидЦены = &БазовыйПрайсЛист И Номенклатура = &Номенклатура И Характеристика = &Характеристика) КАК ЦеныНоменклатуры
			|";	
			Запрос.Параметры.Вставить("ТекущаяДата",ТекущаяДатаСеанса());
			Запрос.Параметры.Вставить("БазовыйПрайсЛист",БазовыйПрайсЛист);	
			Запрос.Параметры.Вставить("Номенклатура", Запись.Номенклатура);
			Запрос.Параметры.Вставить("Характеристика", Запись.Характеристика);

			Результат = Запрос.Выполнить().Выбрать();
			Пока Результат.Следующий() Цикл
				Запись.БазоваяЦена = Результат.Цена;
			КонецЦикла;
			ОбновитьДопИнфо();
		КонецЕсли;
		
	КонецЕсли;
 
КонецПроцедуры

&НаСервере
Процедура ОбновитьДопИнфо()
		
	Если Запись.ТоварнаяКатегория <> "" Тогда 		
		ШаблонСообщения = НСтр("ru = 'Категория: %1
		|'");
		ТоварнаяКатегория = СтрШаблон(ШаблонСообщения, Запись.ТоварнаяКатегория);
	Иначе	
		ТоварнаяКатегория  = НСтр("ru = 'Категория: не указана
		|'");
	КонецЕсли;
	
	Если Запись.БазоваяЦена <> "" Тогда 		
		ШаблонСообщения = НСтр("ru = 'Базовая цена: %1
		|'");
		БазоваяЦена = СтрШаблон(ШаблонСообщения, Запись.БазоваяЦена);
	Иначе	
		БазоваяЦена  = НСтр("ru = 'Базовая цена: не указана
		|'");
	КонецЕсли;

	Если Запись.Номенклатура.Марка <> Справочники.Марки.ПустаяСсылка() Тогда 
		ШаблонСообщения = НСтр("ru = 'Бренд (марка): %1
		|'");
		Бренд = СтрШаблон(ШаблонСообщения, Запись.Номенклатура.Марка.Наименование);
	Иначе
		Бренд  = НСтр("ru = 'Бренд (марка): не указан
		|'");	
	КонецЕсли;
	
	Если Запись.Номенклатура.Артикул <> "" Тогда 
		ШаблонСообщения = НСтр("ru = 'Артикул: %1
		|'");
		Артикул = СтрШаблон(ШаблонСообщения, Запись.Номенклатура.Артикул);
	Иначе	
		Артикул  = НСтр("ru = 'Артикул: не указан
		|'");	
	КонецЕсли;
	
	Если Запись.Номенклатура.Производитель <> Справочники.Производители.ПустаяСсылка() Тогда 
		ШаблонСообщения = НСтр("ru = 'Производитель: %1
		|'");
		Производитель = СтрШаблон(ШаблонСообщения, Запись.Номенклатура.Производитель.Наименование);					
	Иначе	
		Производитель  = НСтр("ru = 'Производитель: не указан (обязателен при отправке на модерацию)
		|'");
	КонецЕсли;
	
	Если Запись.Номенклатура.СтранаПроисхождения <> Справочники.СтраныМира.ПустаяСсылка() Тогда 		
		ШаблонСообщения = НСтр("ru = 'Страна происхождения: %1
		|'");
		Страна = СтрШаблон(ШаблонСообщения, Запись.Номенклатура.СтранаПроисхождения.Наименование);		
	Иначе	
		Страна  = НСтр("ru = 'Страна происхождения: не указана (обязательна при отправке на модерацию)
		|'");
	КонецЕсли;
	
	СрокГодности  = НСтр("ru = 'Срок годности: не указан
		|'");

	ЕстьШтрихКоды = ПолучитьШтрихКоды().Количество()>0; 
	
	Если  ЕстьШтрихКоды Тогда
		ШтрихКоды  = НСтр("ru = 'Для товара указаны штрих-коды
		|'");
	Иначе
		ШтрихКоды  = НСтр("ru = 'Для товара не указаны штрих-коды (обязательны при отправке на модерацию)
		|'");
	КонецЕсли;
	
	Весогабариты =  ИнтеграцияСЯндексМаркетСервер.ПолучитьВесогабариты(Запись.Упаковка);  
    ВесогабаритыЗаголовок = НСтр("ru = 'Весогабариты:
		|'");

	Если Весогабариты.length <>"" Тогда   
		ШаблонСообщения = НСтр("ru = '	Длина (глубина) упаковки товара: %1 см
		|'");
		ВесогабаритыДлина = СтрШаблон(ШаблонСообщения, Число(Весогабариты.length));		
	Иначе
		ВесогабаритыДлина = НСтр("ru = '	Для товара не указана длина (глубина) в параметрах упаковки (обязательный параметр при отправке на модерацию)
		|'");
	КонецЕсли;  
	
	Если Весогабариты.width <>"" Тогда  
		ШаблонСообщения = НСтр("ru = '	Ширина упаковки товара: %1 см
		|'");
		ВесогабаритыШирина = СтрШаблон(ШаблонСообщения, Число(Весогабариты.width));	
	Иначе
		ВесогабаритыШирина = НСтр("ru = '	Для товара не указана ширина в параметрах упаковки (обязательный параметр при отправке на модерацию)
		|'");
	КонецЕсли; 
	
	Если Весогабариты.height <>"" Тогда    
		ШаблонСообщения = НСтр("ru = '	Высота упаковки товара: %1 см
		|'");
		ВесогабаритыВысота = СтрШаблон(ШаблонСообщения, Число(Весогабариты.height));	
	Иначе
		ВесогабаритыВысота = НСтр("ru = '	Для товара не указана высота в параметрах упаковки (обязательный параметр при отправке на модерацию)
		|'");
	КонецЕсли; 

	Если Весогабариты.weight <>"" Тогда   
		ШаблонСообщения = НСтр("ru = '	Вес упаковки товара: %1 см
		|'");
		ВесогабаритыВес = СтрШаблон(ШаблонСообщения, Число(Весогабариты.weight));	
	Иначе
		ВесогабаритыВес = НСтр("ru = '	Для товара не указан вес в параметрах упаковки (обязательный параметр при отправке на модерацию)
		|'");
	КонецЕсли;  
	
	ДопИнфо = ТоварнаяКатегория + БазоваяЦена + Бренд + Артикул + Производитель + Страна + ШтрихКоды + СрокГодности + ВесогабаритыЗаголовок+ ВесогабаритыДлина + ВесогабаритыШирина + ВесогабаритыВысота + ВесогабаритыВес;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьШтрихКоды()
	
	Запрос = Новый Запрос ();
	Запрос.Параметры.Вставить("Номенклатура",Запись.Номенклатура);
	Запрос.Параметры.Вставить("Характеристика",Запись.Характеристика);
	Запрос.Текст = "ВЫБРАТЬ
	|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод,
	|	ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура,
	|	ШтрихкодыНоменклатуры.Характеристика КАК Характеристика
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|
	|ГДЕ
	|	ШтрихкодыНоменклатуры.Номенклатура = &Номенклатура
	|	И ШтрихкодыНоменклатуры.Характеристика = &Характеристика";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	ШтрихКоды = Новый Массив;
	
	Если Результат.Количество()>0 Тогда
		ШтрихКоды = Результат.ВыгрузитьКолонку("Штрихкод");
	КонецЕсли;	
	
	Возврат ШтрихКоды;
КонецФункции


&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	ОбновитьПредставлениеТовара();
	ОбновитьОтображениеДанных();
	Запись.Упаковка = ПредопределенноеЗначение("Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка");
	
КонецПроцедуры

&НаКлиенте
Процедура ХарактеристикаПриИзменении(Элемент)
	
	ОбновитьПредставлениеТовара();
	ОбновитьОтображениеДанных();
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаПриИзменении(Элемент)
	
	ОбновитьПредставлениеТовара();
	ОбновитьОтображениеДанных();
	
КонецПроцедуры

#КонецОбласти
