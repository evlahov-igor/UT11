#Область ОписаниеПеременных

&НаКлиенте
Перем КэшированныеЗначения; //используется механизмом обработки изменения реквизитов ТЧ

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();

	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Запись, ЭтотОбъект);

	ТипНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.СкладскаяГруппаНоменклатуры, "ТипНоменклатуры");

	Если ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар
		И Не ЗначениеЗаполнено(Запись.СкладскаяГруппаУпаковок) Тогда
		Размещение = "ЕдиницыХранения";
		Элементы.СкладскаяГруппаУпаковок.Доступность = Ложь;
	Иначе ЗначениеЗаполнено(Запись.СкладскаяГруппаУпаковок); 
		Размещение = "Упаковки";
		Элементы.СкладскаяГруппаУпаковок.Доступность = Истина;
	КонецЕсли;
	
	Если Запись.ИсходныйКлючЗаписи.Пустой() Тогда
		ПриЧтенииСозданииНаСервере();
	Иначе
		УстановитьДоступность();
	КонецЕсли;

	// << 31.10.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
	КР_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка);
	// >> 31.10.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

	ПриЧтенииСозданииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар
		И Размещение = "Упаковки"
		И Не ЗначениеЗаполнено(Запись.СкладскаяГруппаУпаковок) Тогда
		ТекстСообщения = НСтр("ru = 'Поле ""Складская группа упаковок"" не заполнено'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"СкладскаяГруппаУпаковок","Запись",Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_ПравилаРазмещенияТоваровВЯчейках", ПараметрыЗаписи);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Склад,Помещение",Запись.Склад,Запись.Помещение));
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещениеПриИзменении(Элемент)
	
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Склад,Помещение",Запись.Склад,Запись.Помещение));

КонецПроцедуры

&НаКлиенте
Процедура СкладскаяГруппаНоменклатурыПриИзменении(Элемент)
	УстановитьДоступность();
	
	Если Не Элементы.СкладскаяГруппаУпаковок.Доступность Тогда
		Запись.СкладскаяГруппаУпаковок = Неопределено;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РазмещениеПриИзменении(Элемент)
	
	УстановитьДоступность();
	Если Не Элементы.СкладскаяГруппаУпаковок.Доступность Тогда
		Запись.СкладскаяГруппаУпаковок = Неопределено;
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Склад,Помещение",Запись.Склад,Запись.Помещение));
	УстановитьДоступность();
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступность()
	
	УстановитьПривилегированныйРежим(Истина);
	ТипНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.СкладскаяГруппаНоменклатуры, "ТипНоменклатуры");
	УстановитьПривилегированныйРежим(Ложь);
	Элементы.СкладскаяГруппаУпаковок.Доступность = ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар И Размещение = "Упаковки";
	Элементы.Размещение.Доступность = (ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар)
		И ПравоДоступа("Изменение", Метаданные.РегистрыСведений.ПравилаРазмещенияТоваровВЯчейках);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СкладскаяГруппаУпаковок.Имя);

	ГруппаОтбора1 = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;

	ОтборЭлемента = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Размещение");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = "Упаковки";

	ОтборЭлемента = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипНоменклатуры");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ТипыНоменклатуры.Товар;
	                                                                      
	ОтборЭлемента = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Запись.СкладскаяГруппаУпаковок");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Справочники.СкладскиеГруппыУпаковок.ПустаяСсылка();
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
КонецПроцедуры

#КонецОбласти

#Область КР_ДобавленныеПроцедурыИФункции

// << 31.10.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
&НаСервере
Процедура КР_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка) 
	
	СкладМагазин = (Запись.Склад.КР_ВидСклада = Перечисления.КР_ВидыСкладов.Магазин);
			
	Если СкладМагазин Тогда     
		
		// Помещение
		Элементы.Помещение.Видимость = Ложь;           
		
		// Убираем связь с помещением
		СвязиПараметровВыбора = Новый Массив(Элементы.ОбластьХранения.СвязиПараметровВыбора);  
		Для Итератор = -СвязиПараметровВыбора.ВГраница() По 0 Цикл 
			СвязьПараметраВыбора = СвязиПараметровВыбора[-Итератор];
			Если СвязьПараметраВыбора.ПутьКДанным = "Запись.Помещение" Тогда 
				СвязиПараметровВыбора.Удалить(-Итератор);
				Прервать;
			КонецЕсли;	
		КонецЦикла;	      
		Элементы.ОбластьХранения.СвязиПараметровВыбора = Новый ФиксированныйМассив(СвязиПараметровВыбора);
	КонецЕсли;
	
	// КР_ЗапрещеныПродажи    
	ЭлементФормы = КР_МетодыМодификацииФорм.ВставитьЭлементФормы(ЭтотОбъект,
		"Запись.КР_ЗапрещеныПродажи", , Элементы.Приоритет);
	ЭлементФормы.Заголовок = НСтр("ru = 'Продажи'");  
	ЭлементФормы.ВидФлажка = ВидФлажка.Тумблер;
	ЭлементФормы.ФорматРедактирования = "БЛ=Разрешены; БИ='Запрещены (консервация)'";
	
КонецПроцедуры // >> 31.10.2022 Марченко С.Н., КРОК, JIRA№A2105505-751

#КонецОбласти