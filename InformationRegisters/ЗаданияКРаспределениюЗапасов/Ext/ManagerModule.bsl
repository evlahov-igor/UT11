#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ИмяРегистра = "РаспределениеЗапасов";
	ПолноеИмяРегистра = "РегистрСведений.РаспределениеЗапасов";
	
	// 1) Аналитика расхождений первичных движений
	// Логика синхронизирована с обработчиком обновления РН РаспределениеЗапасовДвижения.
	ТекстыЗапроса = Новый Массив();
	
	ИмяРегистраДвижений = "РаспределениеЗапасовДвижения";
	
	Регистраторы = РегистрыНакопления.РаспределениеЗапасовДвижения.Регистраторы();
	
	Для каждого ПолноеИмяДокумента Из Регистраторы Цикл
		
		ИмяДокумента = СтрРазделить(ПолноеИмяДокумента, ".")[1];
		
		//++ Локализация
		Если ПолноеИмяДокумента = "Документ.МаркировкаТоваровГИСМ" Тогда
			
			РезультатАдаптации = МаркировкаТоваровГИСМУТ.АдаптированныйТекстЗапросаДвиженийПоРегиструМаркировкаТоваров(ИмяРегистраДвижений);
			
		ИначеЕсли ПолноеИмяДокумента = "Документ.ПеремаркировкаТоваровГИСМ" Тогда
			
			РезультатАдаптации = МаркировкаТоваровГИСМУТ.АдаптированныйТекстЗапросаДвиженийПоРегиструПеремаркировкаТоваров(ИмяРегистраДвижений);
			
		Иначе
		//-- Локализация
			
			РезультатАдаптации = Документы[ИмяДокумента].АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистраДвижений);
			
		//++ Локализация
		КонецЕсли;
		//-- Локализация
		ТекстыЗапроса.Добавить(РезультатАдаптации.ТекстЗапроса);
		
	КонецЦикла;
	ВложенныйЗапрос = СтрСоединить(ТекстыЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Набор.Номенклатура   КАК Номенклатура,
		|	Набор.Характеристика КАК Характеристика,
		|	Набор.Склад          КАК Склад,
		|	Набор.Назначение     КАК Назначение
		|ИЗ(
		|	ВЫБРАТЬ
		|		Таблица.Регистратор              КАК Регистратор,
		|		Таблица.Период                   КАК Период,
		|		Таблица.Номенклатура             КАК Номенклатура,
		|		Таблица.Характеристика           КАК Характеристика,
		|		Таблица.Склад                    КАК Склад,
		|		Таблица.Назначение               КАК Назначение,
		|		Таблица.ЗаказНаОтгрузку          КАК ЗаказНаОтгрузку,
		|		Таблица.ЖелаемаяДатаОтгрузки     КАК ЖелаемаяДатаОтгрузки,
		|		Таблица.ЗаказНаПоступление       КАК ЗаказНаПоступление,
		|		Таблица.ДатаПоступления          КАК ДатаПоступления,
		|		Таблица.Отгрузить                КАК Отгрузить,
		|		Таблица.Резервировать            КАК Резервировать,
		|		Таблица.КОбеспечениюБезРезерва   КАК КОбеспечению,
		|		Таблица.НеОбеспечивать           КАК НеОбеспечивать,
		|		Таблица.Поступило                КАК Поступило,
		|		Таблица.ПоступитКДате            КАК ПоступитКДате,
		|		Таблица.ПоставкаНаСогласовании   КАК ПоставкаНаСогласовании,
		|		Таблица.ЗакрытьГрафикПоступления КАК ЗакрытьГрафикПоступления
		|	ИЗ
		|		&ВложенныйЗапрос КАК Таблица
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Таблица.Регистратор               КАК Регистратор,
		|		Таблица.Период                    КАК Период,
		|		Таблица.Номенклатура              КАК Номенклатура,
		|		Таблица.Характеристика            КАК Характеристика,
		|		Таблица.Склад                     КАК Склад,
		|		Таблица.Назначение                КАК Назначение,
		|		Таблица.ЗаказНаОтгрузку           КАК ЗаказНаОтгрузку,
		|		Таблица.ЖелаемаяДатаОтгрузки      КАК ЖелаемаяДатаОтгрузки,
		|		Таблица.ЗаказНаПоступление        КАК ЗаказНаПоступление,
		|		Таблица.ДатаПоступления           КАК ДатаПоступления,
		|		-Таблица.Отгрузить                КАК Отгрузить,
		|		-Таблица.Резервировать            КАК Резервировать,
		|		-Таблица.КОбеспечениюБезРезерва   КАК КОбеспечению,
		|		-Таблица.НеОбеспечивать           КАК НеОбеспечивать,
		|		-Таблица.Поступило                КАК Поступило,
		|		-Таблица.ПоступитКДате            КАК ПоступитКДате,
		|		-Таблица.ПоставкаНаСогласовании   КАК ПоставкаНаСогласовании,
		|		-Таблица.ЗакрытьГрафикПоступления КАК ЗакрытьГрафикПоступления
		|ИЗ
		|		РегистрНакопления.РаспределениеЗапасовДвижения КАК Таблица
		|	ГДЕ
		|		НЕ Таблица.Регистратор ССЫЛКА Документ.КорректировкаРегистров) КАК Набор
		|СГРУППИРОВАТЬ ПО
		|	Набор.Регистратор,
		|	Набор.Период,
		|	Набор.Номенклатура,
		|	Набор.Характеристика,
		|	Набор.Склад,
		|	Набор.Назначение,
		|	Набор.ЗаказНаОтгрузку,
		|	Набор.ЖелаемаяДатаОтгрузки,
		|	Набор.ЗаказНаПоступление,
		|	Набор.ДатаПоступления
		|ИМЕЮЩИЕ
		|	СУММА(Набор.Отгрузить) <> 0
		|		ИЛИ СУММА(Набор.Резервировать) <> 0
		|		ИЛИ СУММА(Набор.КОбеспечению) <> 0
		|		ИЛИ СУММА(Набор.НеОбеспечивать) <> 0
		|		ИЛИ СУММА(Набор.Поступило) <> 0
		|		ИЛИ СУММА(Набор.ПоступитКДате) <> 0
		|		ИЛИ СУММА(Набор.ПоставкаНаСогласовании) <> 0
		|		ИЛИ СУММА(Набор.ЗакрытьГрафикПоступления) <> 0";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВложенныйЗапрос", ВложенныйЗапрос);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Выборка = Запрос.Выполнить().Выбрать();
	
	НаборЗаписей = РегистрыСведений.РаспределениеЗапасов.СоздатьНаборЗаписей();
	
	ОсновныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ОсновныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ОсновныеПараметры.ПолноеИмяРегистра = ПолноеИмяРегистра;
	
	Пока Выборка.Следующий() Цикл
		
		НаборЗаписей.Отбор.Номенклатура.Установить(Выборка.Номенклатура);
		НаборЗаписей.Отбор.Характеристика.Установить(Выборка.Характеристика);
		НаборЗаписей.Отбор.Склад.Установить(Выборка.Склад);
		НаборЗаписей.Отбор.Назначение.Установить(Выборка.Назначение);
		
		ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, НаборЗаписей);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Параметры.ОбработкаЗавершена = Истина;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли