////////////////////////////////////////////////////
//// Модуль менеджера регистра сведений "КР_ИсторияИзмененияТоварныхОграничений"
//// Создан: 22.03.2023 Марченко С.Н., КРОК, JIRA№A2105505-1148
//// Разработка по ФДР С31.010, Обработка для формирования заказов по потребностям

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Формирует параметры для проведения документа по регистрам учетного механизма через общий механизм проведения.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  Свойства - См. ПроведениеДокументов.СвойстваДокумента
//
// Возвращаемое значение:
//  Структура - См. ПроведениеДокументов.ПараметрыУчетногоМеханизма
//
Функция ПараметрыДляПроведенияДокумента(Документ, Свойства) Экспорт
	
	Параметры = ПроведениеДокументов.ПараметрыУчетногоМеханизма();
	
	// Проведение
	Если Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыСведений.КР_ИсторияИзмененияТоварныхОграничений);
		
	КонецЕсли;
	
	Возврат Параметры;
	
КонецФункции

// Возвращает тексты запросов для сторнирования движений при исправлении документов
// 
// Параметры:
// 	МетаданныеДокумента - ОбъектМетаданныхДокумент - Метаданные документа, который проводится.
// 
// Возвращаемое значение:
// 	Соответствие - Соответствие полного имени регистра тексту запроса сторнирования
//
Функция ТекстыЗапросовСторнирования(МетаданныеДокумента) Экспорт
	
	ТекстыЗапросов = Новый Соответствие();
	
	Возврат ТекстыЗапросов;
	
КонецФункции

// Дополняет текст запроса механизма проверки даты запрета по таблице изменений.
// 
// Параметры:
// 	Запрос - Запрос - используется для установки параметров запроса.
// 
// Возвращаемое значение:
//	Соответствие - соответствие имен таблиц изменения регистров и текстов запросов.
//	
Функция ТекстыЗапросовКонтрольДатыЗапретаПоТаблицеИзменений(Запрос) Экспорт

	СоответствиеТекстовЗапросов = Новый Соответствие();
	Возврат СоответствиеТекстовЗапросов;
	
КонецФункции

// Процедура формирования движений по регистру.
//
// Параметры:
//   ТаблицыДляДвижений - Структура - таблицы данных документа
//   Движения - КоллекцияДвижений - коллекция наборов записей движений документа
//   Отказ - Булево - признак отказа от проведения документа.
//
Процедура ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "КР_ИсторияИзмененияТоварныхОграничений");
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ЗаполнениеТоварныхОграничений

// 14.10.2023 Марченко С.Н., КРОК, JIRA№A2105505-2384
// Методы выделены из модуля набора записей в рамках задачи отложенного заполнения товарных ограничений
Процедура ОбновитьТоварныеОграничения(ИзменениеАссортиментаСсылка, ЗначенияАналитикДоИзменения) Экспорт 
	
	// Метод на вход получает предыдущие значения аналитик по регистратору и сравникает их с текущими. 
	// По различным аналитикам выполняет обновление товарных ограничений
	
	// Готовим алиасы
	ТоварныеОграничения = РегистрыСведений.ТоварныеОграничения;
    //
	
	Запрос = Новый Запрос(ТекстЗапросаОбновитьТоварныеОграничения());
	Запрос.УстановитьПараметр("Регистратор", ИзменениеАссортиментаСсылка);
	Запрос.УстановитьПараметр("ЗначенияАналитикДоИзменения", ЗначенияАналитикДоИзменения);
	
	РезультатЗапроса = Запрос.Выполнить(); 
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();   
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл                     
		
		НаборЗаписей = ТоварныеОграничения.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Склад.Установить(ВыборкаДетальныеЗаписи.Склад);
		НаборЗаписей.Отбор.Номенклатура.Установить(ВыборкаДетальныеЗаписи.Номенклатура);
		НаборЗаписей.Отбор.Характеристика.Установить(ВыборкаДетальныеЗаписи.Характеристика);
		
		// Если записей в истории нет то товарные ограничения очищаем
		//	так как они попадают туда как раз при записи истории
		Если Не ВыборкаДетальныеЗаписи.ЕстьЗапись Тогда 
			НаборЗаписей.Записать(); 
			Продолжить;
		КонецЕсли;	          
		
		НаборЗаписей.Прочитать();
		
		// Если записей по отбору нет, то добавляем новую
		Если Не ЗначениеЗаполнено(НаборЗаписей) Тогда 
			
			Запись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, ВыборкаДетальныеЗаписи);
			
			НаборЗаписей.Записать();
			
			Продолжить;
			
		КонецЕсли;	
		
		// Обновляем записи.  
		// На всякий случай сверим что есть изменения так как запись в регистр медленная
		//	Более того на запись может быть навешана какая-то логика
		ИменаПолейКОбновлению = Новый Массив;
		ИменаПолейКОбновлению.Добавить("МаксимальноеКоличествоЗапаса");
		ИменаПолейКОбновлению.Добавить("НормаПотребления");
		ИменаПолейКОбновлению.Добавить("МетодОбеспеченияПотребностей");
		ИменаПолейКОбновлению.Добавить("КР_ЭтапИзмененияАссортимента");
		ИменаПолейКОбновлению.Добавить("ЭтоДействующийПараметр");
		ИменаПолейКОбновлению.Добавить("ЕстьРекомендацияПоИзменению");
		
		НаборМодифицирован = Ложь;
		Для Каждого Запись Из НаборЗаписей Цикл   
			
			Для Каждого ИмяПоля Из ИменаПолейКОбновлению Цикл 
				Если Запись[ИмяПоля] <> ВыборкаДетальныеЗаписи[ИмяПоля] Тогда 
					Запись[ИмяПоля] = ВыборкаДетальныеЗаписи[ИмяПоля];
					НаборМодифицирован = Истина;
				КонецЕсли;	
			КонецЦикла;
			
		КонецЦикла;	   

		Если НаборМодифицирован Тогда 
			НаборЗаписей.Записать();   
		КонецЕсли;	
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ТекстыЗапросов

Функция ТекстЗапросаОбновитьТоварныеОграничения()
	
	Возврат
	"ВЫБРАТЬ
	|	Т.Склад КАК Склад,
	|	Т.Номенклатура КАК Номенклатура,
	|	Т.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ДоИзменения
	|ИЗ
	|	&ЗначенияАналитикДоИзменения КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Склад КАК Склад,
	|	Т.Номенклатура КАК Номенклатура,
	|	Т.Характеристика КАК Характеристика,
	|	Т.МетодОбеспеченияПотребностей КАК МетодОбеспеченияПотребностей,
	|	Т.НормаПотребления КАК НормаПотребления,
	|	Т.МаксимальноеКоличествоЗапаса КАК МаксимальноеКоличествоЗапаса,
	|	Т.Этап КАК Этап
	|ПОМЕСТИТЬ ПослеИзменения
	|ИЗ
	|	РегистрСведений.КР_ИсторияИзмененияТоварныхОграничений КАК Т
	|ГДЕ
	|	Т.Регистратор = &Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Данные.Склад КАК Склад,
	|	Данные.Номенклатура КАК Номенклатура,
	|	Данные.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ЗначенияОтборов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДоИзменения.Склад КАК Склад,
	|		ДоИзменения.Номенклатура КАК Номенклатура,
	|		ДоИзменения.Характеристика КАК Характеристика
	|	ИЗ
	|		ДоИзменения КАК ДоИзменения
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПослеИзменения.Склад,
	|		ПослеИзменения.Номенклатура,
	|		ПослеИзменения.Характеристика
	|	ИЗ
	|		ПослеИзменения КАК ПослеИзменения) КАК Данные
	|
	|СГРУППИРОВАТЬ ПО
	|	Данные.Склад,
	|	Данные.Номенклатура,
	|	Данные.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДоИзменения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Склад КАК Склад,
	|	Т.Номенклатура КАК Номенклатура,
	|	Т.Характеристика КАК Характеристика,
	|	Т.МетодОбеспеченияПотребностей КАК МетодОбеспеченияПотребностей,
	|	Т.НормаПотребления КАК НормаПотребления,
	|	Т.МаксимальноеКоличествоЗапаса КАК МаксимальноеКоличествоЗапаса,
	|	Т.Этап КАК Этап
	|ПОМЕСТИТЬ Срез
	|ИЗ
	|	РегистрСведений.КР_ИсторияИзмененияТоварныхОграничений.СрезПоследних(
	|			,
	|			(Склад, Номенклатура, Характеристика) В
	|				(ВЫБРАТЬ
	|					Т.Склад КАК Склад,
	|					Т.Номенклатура КАК Номенклатура,
	|					Т.Характеристика КАК Характеристика
	|				ИЗ
	|					ЗначенияОтборов КАК Т)) КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Склад КАК Склад,
	|	Т.Номенклатура КАК Номенклатура,
	|	Т.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(Срез.Склад, Набор.Склад) ЕСТЬ НЕ NULL  КАК ЕстьЗапись,
	|	ЕСТЬNULL(Срез.МетодОбеспеченияПотребностей, Набор.МетодОбеспеченияПотребностей) КАК МетодОбеспеченияПотребностей,
	|	ЕСТЬNULL(Срез.НормаПотребления, Набор.НормаПотребления) КАК НормаПотребления,
	|	ЕСТЬNULL(Срез.МаксимальноеКоличествоЗапаса, Набор.МаксимальноеКоличествоЗапаса) КАК МаксимальноеКоличествоЗапаса,
	|	ЕСТЬNULL(Срез.Этап, Набор.Этап) КАК КР_ЭтапИзмененияАссортимента,
	|	ЗНАЧЕНИЕ(Перечисление.ОбеспечениеЗаказовПриПоддержанииЗапаса.ЗаСчетЗапасов) КАК ОбеспечениеЗаказовПриПоддержанииЗапаса,
	|	ИСТИНА КАК ЭтоДействующийПараметр,
	|	ИСТИНА КАК ЕстьРекомендацияПоИзменению
	|ИЗ
	|	ЗначенияОтборов КАК Т
	|		ЛЕВОЕ СОЕДИНЕНИЕ Срез КАК Срез
	|		ПО Т.Склад = Срез.Склад
	|			И Т.Номенклатура = Срез.Номенклатура
	|			И Т.Характеристика = Срез.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПослеИзменения КАК Набор
	|		ПО Т.Склад = Набор.Склад
	|			И Т.Номенклатура = Набор.Номенклатура
	|			И Т.Характеристика = Набор.Характеристика";
	
КонецФункции	

#КонецОбласти

#КонецЕсли
