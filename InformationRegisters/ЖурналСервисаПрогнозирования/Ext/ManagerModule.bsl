#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Записать информацию об обмене.
// 
// Параметры:
//  ИнформацияОРесурсе - Структура - из:
//   * Метод - Строка -
//   * РесурсСервиса - Строка - 
//   * Заголовки - Строка -  
//  КодСостояния - Строка - 
//  ОтветСервиса - Строка - 
//  ЕстьОшибка - Булево - Есть ошибка
//  Исходящее - Булево - Исходящее
Процедура ЗаписатьИнформациюОбОбмене(ИнформацияОРесурсе, КодСостояния, ОтветСервиса, ЕстьОшибка = Ложь, Исходящее = Истина) Экспорт
	
	НачатьТранзакцию();
	
	Попытка
		БлокировкаДанных = Новый БлокировкаДанных;
		ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("РегистрСведений.ЖурналСервисаПрогнозирования");
		ЭлементБлокировкиДанных.Режим = РежимБлокировкиДанных.Исключительный;
		БлокировкаДанных.Заблокировать();
		
		Запрос = Новый Запрос();
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЖурналСервисаПрогнозирования.НомерСообщения КАК НомерСообщения
		|ИЗ
		|	РегистрСведений.ЖурналСервисаПрогнозирования КАК ЖурналСервисаПрогнозирования
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСообщения УБЫВ";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Количество() > 0 Тогда
			Выборка.Следующий();
			НомерСообщенияОбмена = Выборка.НомерСообщения + 1;
		Иначе
			НомерСообщенияОбмена = 0;
		КонецЕсли;
		
		ТекущаяДата = ТекущаяДатаСеанса();
		
		Набор = РегистрыСведений.ЖурналСервисаПрогнозирования.СоздатьНаборЗаписей();
		Набор.Отбор.Период.Установить(ТекущаяДата);
		Набор.Отбор.НомерСообщения.Установить(НомерСообщенияОбмена);
		Набор.Отбор.Исходящее.Установить(Исходящее);
		Набор.Отбор.ЕстьОшибка.Установить(ЕстьОшибка);
		
		Запись = Набор.Добавить();
		Запись.Период = ТекущаяДата;
		Запись.НомерСообщения = НомерСообщенияОбмена;
		Запись.ТекстСообщения = ОтветСервиса;
		Запись.КодСостояния = КодСостояния;
		Запись.ЕстьОшибка = ЕстьОшибка;
		Запись.Исходящее = Исходящее;
		Запись.Метод = ИнформацияОРесурсе.Метод;
		Запись.РесурсСервиса = ИнформацияОРесурсе.РесурсСервиса;
		Запись.Заголовки = ИнформацияОРесурсе.Заголовки;
		
		Набор.Записать();
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		СобытиеЖурналаРегистрации = СервисПрогнозированияПереопределяемый.ТекстСобытиеЖурналаРегистрации();
		ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации,
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.РегистрыСведений.ЖурналСервисаПрогнозирования,
			,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли