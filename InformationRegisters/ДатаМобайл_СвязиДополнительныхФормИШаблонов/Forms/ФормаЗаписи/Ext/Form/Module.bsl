
#Область ОписаниеПеременных

&НаКлиенте
Перем ТекПорядок;
&НаКлиенте
Перем ТекРеквизитИзШапки;
&НаКлиенте
Перем ТекПодборРазмещение;

#КонецОбласти

#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЭтаФорма.Параметры.Свойство("Шаблон") Тогда
		Запись.Шаблон = ЭтаФорма.Параметры.Шаблон;
	КонецЕсли;
	
	Если Параметры.Свойство("РеквизитИзШапки") Тогда
		Запись.РеквизитИзШапки = Параметры.РеквизитИзШапки;
	КонецЕсли;
	
	Если Параметры.Свойство("ИспользоватьПодбор") Тогда
		ИспользоватьПодбор = Параметры.ИспользоватьПодбор;
	КонецЕсли;
	
	Если Параметры.Свойство("ИспользоватьПриемку") Тогда
		ИспользоватьПриемку = Параметры.ИспользоватьПриемку;
	КонецЕсли;
	
	Элементы.НастройкаРеквизитСтрокиШапки.Видимость = Ложь;
		
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ТекРеквизитИзШапки = Запись.РеквизитИзШапки И ТекПодборРазмещение = Запись.ПодборРазмещение И ЗначениеЗаполнено(ТекПорядок) Тогда
		Запись.Порядок = ТекПорядок;
	КонецЕсли;
		
	Если Не ЗначениеЗаполнено(Запись.ДополнительнаяФорма) Тогда
		Сообщить("Не заполнена дополнительная форма. Сохранение невозможно.");
		Отказ = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Запись.Шаблон) Тогда
		Сообщить("Не заполнен шаблон. Сохранение невозможно.");
		Отказ = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Запись.ЗаполняемыйРеквизит) Тогда
		Сообщить("Не заполнен реквизит документа. Сохранение невозможно.");
		Отказ = Истина;
	КонецЕсли;
	
	Если ЕстьДополнительнаяФормаВЭтомШаблоне() Тогда
		Сообщить("Такая дополнительная форма уже добавлена в текущем шаблоне """ + Запись.Шаблон + """");
		Отказ = Истина;
	Иначе
		Если Запись.Порядок = 0 Тогда
			ДобавитьВПорядок();
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(Запись.Шаблон) Тогда
		Элементы.Шаблон.ТолькоПросмотр = Истина;
	КонецЕсли; 
	
	Если Запись.РеквизитИзШапки Тогда
		НастройкаРеквизитСтрокиШапки = 1;
	КонецЕсли; 
	
	ТекПорядок = Запись.Порядок;
	ТекРеквизитИзШапки = Запись.РеквизитИзШапки;
	ТекПодборРазмещение = Запись.ПодборРазмещение;

	ДоступностьВыбораРеквизита();
	ДоступностьНеобходимостьЗаполнения();
	
КонецПроцедуры

#КонецОбласти

#Область СобытияЭлементовФормы

&НаСервере
Функция ЕстьДополнительнаяФормаВЭтомШаблоне()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДатаМобайл_СвязиДополнительныхФормИШаблонов.ДополнительнаяФорма КАК ДополнительнаяФорма
		|ИЗ
		|	РегистрСведений.ДатаМобайл_СвязиДополнительныхФормИШаблонов КАК ДатаМобайл_СвязиДополнительныхФормИШаблонов
		|ГДЕ
		|	ДатаМобайл_СвязиДополнительныхФормИШаблонов.Шаблон = &Шаблон
		|	И ДатаМобайл_СвязиДополнительныхФормИШаблонов.ДополнительнаяФорма = &ДополнительнаяФорма
		|	И ДатаМобайл_СвязиДополнительныхФормИШаблонов.Порядок <> &Порядок
		|	И ДатаМобайл_СвязиДополнительныхФормИШаблонов.РеквизитИзШапки = &РеквизитИзШапки
		|	И ДатаМобайл_СвязиДополнительныхФормИШаблонов.ПодборРазмещение = &ПодборРазмещение
		|	И ДатаМобайл_СвязиДополнительныхФормИШаблонов.ИспользоватьВПоискеСтрок = &ИспользоватьВПоискеСтрок
		|	И ДатаМобайл_СвязиДополнительныхФормИШаблонов.ПроверятьЗаполнение = &ПроверятьЗаполнение";
	
	Запрос.УстановитьПараметр("Шаблон", Запись.Шаблон);
	Запрос.УстановитьПараметр("РеквизитИзШапки", Запись.РеквизитИзШапки);
	Запрос.УстановитьПараметр("ПодборРазмещение", Запись.ПодборРазмещение);
	Запрос.УстановитьПараметр("ДополнительнаяФорма", Запись.ДополнительнаяФорма);
	Запрос.УстановитьПараметр("Порядок", Запись.Порядок);
	Запрос.УстановитьПараметр("ИспользоватьВПоискеСтрок", Запись.ИспользоватьВПоискеСтрок);
	Запрос.УстановитьПараметр("ПроверятьЗаполнение", Запись.ПроверятьЗаполнение);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выб = РезультатЗапроса.Выбрать();
	Возврат Выб.Следующий();
	
КонецФункции

&НаСервере
Функция ДобавитьВПорядок()
	
	Запись.Порядок = 1;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(ДатаМобайл_СвязиДополнительныхФормИШаблонов.Порядок) КАК Порядок
		|ИЗ
		|	РегистрСведений.ДатаМобайл_СвязиДополнительныхФормИШаблонов КАК ДатаМобайл_СвязиДополнительныхФормИШаблонов
		|ГДЕ
		|	ДатаМобайл_СвязиДополнительныхФормИШаблонов.Шаблон = &Шаблон
		|	И ДатаМобайл_СвязиДополнительныхФормИШаблонов.РеквизитИзШапки = &РеквизитИзШапки
		|";
	
	Запрос.УстановитьПараметр("Шаблон", Запись.Шаблон); 
	Запрос.УстановитьПараметр("РеквизитИзШапки", Запись.РеквизитИзШапки); 
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выб = РезультатЗапроса.Выбрать();
	
	Если Выб.Следующий() Тогда
		 Запись.Порядок = Запись.Порядок + ?(ЗначениеЗаполнено(Выб.Порядок), Выб.Порядок, 0);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ЗаполняемыйРеквизитНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СЗ = СобратьРеквизиты();
	Элементы.ЗаполняемыйРеквизит.СписокВыбора = СЗ;
КонецПроцедуры

&НаСервере
Функция СобратьРеквизиты(ЭтоИсходный = Ложь)
	
	СЗ = Новый СписокЗначений;
	
	Если Запись.Шаблон.ВидДокументаНового = "" Тогда
		ТекущийВидДокумента = Запись.Шаблон.ВидДокумента;
		
		Если Запись.ПодборРазмещение = 0 Тогда
			ИмяТЧ = Запись.Шаблон.ИмяТабличнойЧастиПодбор;
		Иначе
			ИмяТЧ = Запись.Шаблон.ИмяТабличнойЧастиПриемка;
		КонецЕсли;		
	Иначе
		Если ЭтоИсходный Тогда
			ТекущийВидДокумента = Запись.Шаблон.ВидДокумента;
		Иначе
			ТекущийВидДокумента = Запись.Шаблон.ВидДокументаНового;
		КонецЕсли;
		
		Если Запись.ПодборРазмещение = 0 Тогда
			ИмяТЧ = Запись.Шаблон.ИмяТабличнойЧастиНовойПодбор;
		Иначе
			ИмяТЧ = Запись.Шаблон.ИмяТабличнойЧастиНовойПриемка;
		КонецЕсли;
	КонецЕсли;	
	
	Если Запись.РеквизитИзШапки Тогда
		Попытка ИскомыеРеквизиты = Метаданные.Документы[ТекущийВидДокумента].Реквизиты; Исключение ИскомыеРеквизиты = Новый Массив; КонецПопытки;
	Иначе
		Попытка ИскомыеРеквизиты = Метаданные.Документы[ТекущийВидДокумента].ТабличныеЧасти[ИмяТЧ].Реквизиты; Исключение ИскомыеРеквизиты = Новый Массив; КонецПопытки;
	КонецЕсли;
	
	Для каждого реквизитПоиска из ИскомыеРеквизиты Цикл
		Если Запись.ДополнительнаяФорма.ТипДанных = "Текст" Тогда
			Если реквизитПоиска.Тип.СодержитТип(Тип("Строка")) Тогда
				СЗ.Добавить(реквизитПоиска.Имя, реквизитПоиска.Синоним);
			КонецЕсли;
		ИначеЕсли Запись.ДополнительнаяФорма.ТипДанных = "Число" Тогда
			Если реквизитПоиска.Тип.СодержитТип(Тип("Строка")) Или реквизитПоиска.Тип.СодержитТип(Тип("Число")) Тогда
				СЗ.Добавить(реквизитПоиска.Имя, реквизитПоиска.Синоним);
			КонецЕсли;
		ИначеЕсли Запись.ДополнительнаяФорма.ТипДанных = "Дата" Тогда
			Если реквизитПоиска.Тип.СодержитТип(Тип("Строка")) Или реквизитПоиска.Тип.СодержитТип(Тип("Дата")) Тогда
				СЗ.Добавить(реквизитПоиска.Имя, реквизитПоиска.Синоним);
			КонецЕсли;
		ИначеЕсли Запись.ДополнительнаяФорма.ТипДанных = "Булево" Тогда
			Если реквизитПоиска.Тип.СодержитТип(Тип("Булево")) Тогда
				СЗ.Добавить(реквизитПоиска.Имя, реквизитПоиска.Синоним);
			КонецЕсли;
		Иначе
			Если Не Метаданные.Справочники.Найти(Запись.ДополнительнаяФорма.ТипДанных) = Неопределено Тогда
				ТипЭлемента = "СправочникСсылка." + Запись.ДополнительнаяФорма.ТипДанных;
			ИначеЕсли Не Метаданные.ПланыВидовХарактеристик.Найти(Запись.ДополнительнаяФорма.ТипДанных) = Неопределено Тогда
				ТипЭлемента = "ПланВидовХарактеристикСсылка." + Запись.ДополнительнаяФорма.ТипДанных;	
			ИначеЕсли Не Метаданные.Перечисления.Найти(Запись.ДополнительнаяФорма.ТипДанных) = Неопределено Тогда
				ТипЭлемента = "ПеречислениеСсылка." + Запись.ДополнительнаяФорма.ТипДанных;
			КонецЕсли;
			Если реквизитПоиска.Тип.СодержитТип(Тип("Строка")) Или реквизитПоиска.Тип.СодержитТип(Тип(ТипЭлемента)) Тогда
				СЗ.Добавить(реквизитПоиска.Имя, реквизитПоиска.Синоним);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СЗ;
	
КонецФункции

&НаКлиенте
Процедура ДоступностьНеобходимостьЗаполнения()
	
	РежимВводаПоУмолчанию = (Запись.РежимВвода = 0 И Запись.РеквизитИзШапки = 0);
	
	Элементы.ПроверятьЗаполнение.Видимость = НЕ РежимВводаПоУмолчанию;
		
	Если РежимВводаПоУмолчанию И Запись.ПроверятьЗаполнение Тогда
		Запись.ПроверятьЗаполнение = Ложь;
		Модифицированность = Истина;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ДоступностьВыбораРеквизита(ИзменилсяПодборРазмещение = Ложь)
	
	ДоступностьВыгружаемыйРеквизит();
	
	ПроверитьПодборРазмещениеПоШаблону(ИзменилсяПодборРазмещение);
	
	Если ИзменилсяПодборРазмещение Тогда
		Возврат;	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Запись.Шаблон) И ЗначениеЗаполнено(Запись.ДополнительнаяФорма) Тогда
		
		Если Запись.Шаблон.ВидДокументаНового = "" Тогда
			ТекущийВидДокумента = Запись.Шаблон.ВидДокумента;
			
			Если Запись.ПодборРазмещение = 0 Тогда
				ИмяТЧ = Запись.Шаблон.ИмяТабличнойЧастиПодбор;
			Иначе
				ИмяТЧ = Запись.Шаблон.ИмяТабличнойЧастиПриемка;
			КонецЕсли;		
		Иначе
			ТекущийВидДокумента = Запись.Шаблон.ВидДокументаНового;
			
			Если Запись.ПодборРазмещение = 0 Тогда
				ИмяТЧ = Запись.Шаблон.ИмяТабличнойЧастиНовойПодбор;
			Иначе
				ИмяТЧ = Запись.Шаблон.ИмяТабличнойЧастиНовойПриемка;
			КонецЕсли;
		КонецЕсли;
			
		Элементы.ГруппаСвязиСДокументом.Доступность = Истина;
		Элементы.ЗаполняемыйРеквизит.Доступность = Истина;
		Элементы.ЗаполняемыйРеквизит.Заголовок = "Заполняемый реквизит в документе " + Метаданные.Документы[ТекущийВидДокумента].Синоним;
		
		Если Не Запись.РеквизитИзШапки Тогда
			Элементы.ЗаполняемыйРеквизит.Заголовок = Элементы.ЗаполняемыйРеквизит.Заголовок + " в таблице " + ИмяТЧ;
		КонецЕсли;
	Иначе
		Элементы.ГруппаСвязиСДокументом.Доступность = Ложь;
		Элементы.ЗаполняемыйРеквизит.Доступность = Ложь;
		Элементы.ЗаполняемыйРеквизит.Заголовок = "Заполняемый реквизит";
	КонецЕсли;
	
	Если Запись.РеквизитИзШапки = 1 Тогда
		Элементы.ПодборРазмещение.Видимость = Ложь;
		Элементы.ИспользоватьВПоискеСтрок.Видимость = Ложь;
	Иначе
		Элементы.ПодборРазмещение.Видимость = Истина;
		Элементы.ИспользоватьВПоискеСтрок.Видимость = Истина;
	КонецЕсли;	
	
	СписокРежимаВвода = Элементы.РежимВвода.СписокВыбора;
	СписокРежимаВвода.Очистить();
	СписокРежимаВвода.Добавить(0, "По умолчанию");
	СписокРежимаВвода.Добавить(1, "Вручную");
	
	Если Запись.РеквизитИзШапки = 0 Тогда
		СписокРежимаВвода.Добавить(2, "Автоматически");
	КонецЕсли;

	Элементы.ПроверкаПоЗаданию.Видимость = (Запись.РежимВвода <> 1 И Запись.РеквизитИзШапки = 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяФормаПриИзменении(Элемент)
	ДоступностьВыбораРеквизита();
КонецПроцедуры

&НаКлиенте
Процедура ШаблонПриИзменении(Элемент)
	ДоступностьВыбораРеквизита();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполняемыйРеквизитНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СЗ = СобратьРеквизиты();
	ДанныеВыбора = СЗ;
КонецПроцедуры

&НаКлиенте
Процедура НастройкаРеквизитСтрокиШапкиПриИзменении(Элемент)
	Запись.ЗаполняемыйРеквизит = "";
	Запись.Порядок = 0;
		
	ДоступностьВыбораРеквизита();
КонецПроцедуры

&НаКлиенте
Процедура ПодборРазмещениеПриИзменении(Элемент)
	Запись.ЗаполняемыйРеквизит = "";
	Запись.Порядок = 0;
	
	ИзменилсяПодборРазмещение = Ложь;
	
	ДоступностьВыбораРеквизита(ИзменилсяПодборРазмещение);	
КонецПроцедуры

&НаКлиенте
Процедура РежимВводаПриИзменении(Элемент)
	
	РежимВручную = (Запись.РежимВвода = 1);	
	Элементы.ПроверкаПоЗаданию.Видимость = (Запись.РежимВвода <> 1 И Запись.РеквизитИзШапки = 0);
	
	Если РежимВручную И Запись.ПроверкаПоЗаданию Тогда
		Запись.ПроверкаПоЗаданию = Ложь;
		Модифицированность = Истина;
	КонецЕсли; 
	
	ДоступностьНеобходимостьЗаполнения();
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьПодборРазмещениеПоШаблону(ИзменилсяПодборРазмещение)
	
	Если Запись.РеквизитИзШапки = 1 Тогда
		Возврат;	
	КонецЕсли;
	
	Если Запись.ПодборРазмещение = 1 И Не ИспользоватьПриемку Тогда
		Запись.ПодборРазмещение = 0;
		ИзменилсяПодборРазмещение = Истина;
		Сообщить("В шаблоне не включен параметр ""Размещение"".", СтатусСообщения.Информация);
	КонецЕсли; 
	
	Если Запись.ПодборРазмещение = 0 И Не ИспользоватьПодбор Тогда
		Запись.ПодборРазмещение = 1;
		ИзменилсяПодборРазмещение = Истина;
		Сообщить("В шаблоне не включен параметр ""Подбор"".", СтатусСообщения.Информация);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгружаемыйРеквизитНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СЗ = СобратьРеквизиты(Истина);
	ДанныеВыбора = СЗ;
	
КонецПроцедуры

&НаСервере
Процедура ДоступностьВыгружаемыйРеквизит()
	
	Если ЗначениеЗаполнено(Запись.Шаблон) И ЗначениеЗаполнено(Запись.ДополнительнаяФорма) Тогда
		ОтображатьРеквизитИсхДокумента = Не (Запись.Шаблон.ВидДокументаНового = "");
		Элементы.ВыгружаемыйРеквизит.Видимость = ОтображатьРеквизитИсхДокумента;
		
		Если Не ОтображатьРеквизитИсхДокумента И ЗначениеЗаполнено(Запись.ВыгружаемыйРеквизит) Тогда
			Запись.ВыгружаемыйРеквизит = "";
		КонецЕсли; 
		
		ТекущийВидДокумента = Запись.Шаблон.ВидДокумента;
		Элементы.ВыгружаемыйРеквизит.Заголовок = "Выгружаемый реквизит в документе " + Метаданные.Документы[ТекущийВидДокумента].Синоним;
		
		Если Не Запись.РеквизитИзШапки Тогда
			Если Запись.ПодборРазмещение = 0 Тогда
				ИмяТЧ = Запись.Шаблон.ИмяТабличнойЧастиПодбор;
			Иначе
				ИмяТЧ = Запись.Шаблон.ИмяТабличнойЧастиПриемка;
			КонецЕсли;
			
			Элементы.ВыгружаемыйРеквизит.Заголовок = Элементы.ВыгружаемыйРеквизит.Заголовок + " в таблице " + ИмяТЧ;
		КонецЕсли;
		
	Иначе
		Элементы.ВыгружаемыйРеквизит.Видимость = Ложь;
		Элементы.ВыгружаемыйРеквизит.Заголовок = "Выгружаемый реквизит";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти