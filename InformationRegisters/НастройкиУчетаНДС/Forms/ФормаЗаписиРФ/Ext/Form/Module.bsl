#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КлючЗаписи = Неопределено;
	ИмяРегистра = Метаданные.РегистрыСведений.НастройкиУчетаНДС.Имя;
	ТолькоПросмотр = НЕ ПравоДоступа("Изменение", Метаданные.РегистрыСведений.НастройкиУчетаНДС);
	
	Организация = Параметры.Организация;
	Элементы.Организация.Видимость = НЕ ЗначениеЗаполнено(Организация);
	Заголовок = Заголовок + " " + Строка(Организация);
	
	ЭтоФормаЗаписи = Параметры.Свойство("Ключ", КлючЗаписи);
	
	Если Параметры.Свойство("ЗначениеКопирования") И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		СкопироватьЗаписьРегистра(Параметры.ЗначениеКопирования);
	Иначе
		ПрочитатьЗаписьРегистра(КлючЗаписи);
	КонецЕсли;
	
	ПараметрыВыбораСтатейИАналитик = РегистрыСведений.НастройкиУчетаНДС.ПараметрыВыбораСтатейИАналитик(
	                                    Запись.Организация, ДатаИзменения, Запись.ВариантУчетаНДСПриИзмененииВидаДеятельности);
	ДоходыИРасходыСервер.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыВыбораСтатейИАналитик);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	СписокПроверяемыхПолейРегистра = ПроверяемыеПоляРегистра();
	МассивПроверяемыхПолей = СписокПроверяемыхПолейРегистра.ВыгрузитьЗначения();
	
	ПараметрыВыбораСтатейИАналитик = РегистрыСведений.НастройкиУчетаНДС.ПараметрыВыбораСтатейИАналитик(
	                                    Запись.Организация, ДатаИзменения, Запись.ВариантУчетаНДСПриИзмененииВидаДеятельности);
	ДоходыИРасходыСервер.ОбработкаПроверкиЗаполнения(Запись, Отказ, МассивПроверяемыхПолей, ПараметрыВыбораСтатейИАналитик);
	
	Для каждого ПроверяемыйРеквизит Из МассивПроверяемыхПолей Цикл
		Если Не ЗначениеЗаполнено(Запись[ПроверяемыйРеквизит]) Тогда
			ЭлементСписка = СписокПроверяемыхПолейРегистра.НайтиПоЗначению(ПроверяемыйРеквизит);
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Поле ""%1"" не заполнено'"), ЭлементСписка.Представление);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Запись." + ПроверяемыйРеквизит, , Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Запись_УчетнаяПолитикаФинансовогоУчета" Тогда
		ПолучитьПараметрыУчетнойПолитикиИСистемыНалогообложения();
		УстановитьСвойстваЭлементов(ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность И ЗавершениеРаботы Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	Если Модифицированность Тогда
		Отказ = Истина;
		ЗадатьВопросФормаМодифицирована("ВопросПередЗакрытиемЗавершение");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаИзмененияПриИзменении(Элемент)
	ДатаИзменения = НачалоКвартала(ДатаИзменения);
	ТекстВопроса  = НСтр("ru = 'Создать новую настройку на %1?'");
	ТекстВопроса  = СтрШаблон(ТекстВопроса, Формат(ДатаИзменения,"ДЛФ=D"));
	ПоказатьВопрос(Новый ОписаниеОповещения("ДатаИзмененияПриИзмененииЗавершение", ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура ДатаИзмененияПриИзмененииЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		ПрочитатьЗаписьРегистраПриИзменииРеквизита(,ДатаИзменения);
	ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
		ПрочитатьЗаписьРегистраПриИзменииРеквизита(,ДатаИзменения, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	Организация = Запись.Организация;
	ПрочитатьЗаписьРегистраПриИзменииРеквизита(,ДатаИзменения);
КонецПроцедуры

&НаКлиенте
Процедура ПрименяетсяОсвобождениеОтУплатыНДСПриИзменении(Элемент)
	ПриИзмененииНастроек(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура РаздельныйУчетТоваровПоНалогообложениюНДСПриИзменении(Элемент)
	ПриИзмененииНастроек(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДСПриИзменении(Элемент)
	ПриИзмененииНастроек(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВариантУчетаНДСПриИзмененииВидаДеятельностиПриИзменении(Элемент)
	ПриИзмененииНастроек(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовСписаниеНДСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.НачалоВыбораСтатьи(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовСписаниеНДСПриИзменении(Элемент)
	ДоходыИРасходыКлиентСервер.СтатьяПриИзменении(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура СтатьяЗатратНеНДСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.НачалоВыбораСтатьи(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СтатьяЗатратНеНДСПриИзменении(Элемент)
	ДоходыИРасходыКлиентСервер.СтатьяПриИзменении(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура СтатьяЗатратЕНВДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.НачалоВыбораСтатьи(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СтатьяЗатратЕНВДПриИзменении(Элемент)
	ДоходыИРасходыКлиентСервер.СтатьяПриИзменении(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовСписаниеНДСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.АвтоПодборАналитикиРасходов(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовСписаниеНДСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.ОкончаниеВводаТекстаАналитикиРасходов(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовСписаниеНДСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.НачалоВыбораАналитикиРасходов(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовНеНДСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.НачалоВыбораАналитикиРасходов(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовНеНДСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.АвтоПодборАналитикиРасходов(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовНеНДСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.ОкончаниеВводаТекстаАналитикиРасходов(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовЕНВДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.НачалоВыбораАналитикиРасходов(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовЕНВДАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.АвтоПодборАналитикиРасходов(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовЕНВДОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.ОкончаниеВводаТекстаАналитикиРасходов(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	Если ЗаписатьИзменения(Истина) Тогда
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	ЗаписатьИзменения();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПолучитьПараметрыУчетнойПолитикиИСистемыНалогообложения()
	ПараметрыУчетнойПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитик(
			"УчетнаяПолитикаФинансовогоУчета",
			Организация,
			ДатаИзменения,
			Истина);
	Если ПараметрыУчетнойПолитики <> Неопределено Тогда
		МетодОценкиСтоимостиТоваров = ПараметрыУчетнойПолитики.МетодОценкиСтоимостиТоваров;
	Иначе
		МетодОценкиСтоимостиТоваров = Перечисления.МетодыОценкиСтоимостиТоваров.СредняяЗаМесяц;
	КонецЕсли;
	ПараметрыСистемыНалогообложения = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитик(
			"НастройкиСистемыНалогообложения",
			Организация,
			ДатаИзменения,
			Истина);
	Если ПараметрыСистемыНалогообложения <> Неопределено Тогда
		СистемаНалогообложения = ПараметрыСистемыНалогообложения.СистемаНалогообложения;
		ПрименяетсяЕНВД = ПараметрыСистемыНалогообложения.ПрименяетсяЕНВД;
	Иначе
		СистемаНалогообложения = Перечисления.СистемыНалогообложения.Общая;
		ПрименяетсяЕНВД = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПрочитатьЗаписьРегистра(КлючЗаписи = Неопределено, ПериодЗаписи = Неопределено, СоздатьНовую = Ложь)
	
	НастройкиНалоговУчетныхПолитик.ПрочитатьЗаписьРегистра(ЭтотОбъект, 
		ИмяРегистра,
		Организация,
		СоздатьНовую,
		КлючЗаписи,
		ПериодЗаписи);
		
	ПартионныйУчетВерсии22 = РасчетСебестоимостиПовтИсп.ПартионныйУчетВерсии22(ДатаИзменения);
	
	ПолучитьПараметрыУчетнойПолитикиИСистемыНалогообложения();
	
	ПараметрыВыбораСтатейИАналитик = РегистрыСведений.НастройкиУчетаНДС.ПараметрыВыбораСтатейИАналитик(
	                                    Запись.Организация, ДатаИзменения, Запись.ВариантУчетаНДСПриИзмененииВидаДеятельности); 
	ДоходыИРасходыСервер.ПриИзмененииПараметровВыбораСтатей(ЭтотОбъект, ПараметрыВыбораСтатейИАналитик);
	УстановитьСвойстваЭлементов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьЗаписьРегистраПриИзменииРеквизита(КлючЗаписи = Неопределено, ПериодЗаписи = Неопределено, СоздатьНовую = Ложь)
	Если НЕ Копирование Тогда
		ПрочитатьЗаписьРегистра(КлючЗаписи, ПериодЗаписи, СоздатьНовую);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СкопироватьЗаписьРегистра(ЗначениеКопирования)
	НастройкиНалоговУчетныхПолитик.СкопироватьУчетнуюПолитику(ЭтотОбъект, ЗначениеКопирования, ИмяРегистра);
	Копирование = Истина;
	Модифицированность = Истина;
	
	ПартионныйУчетВерсии22 = РасчетСебестоимостиПовтИсп.ПартионныйУчетВерсии22(ДатаИзменения);
	ПолучитьПараметрыУчетнойПолитикиИСистемыНалогообложения();
	
	ПараметрыВыбораСтатейИАналитик = РегистрыСведений.НастройкиУчетаНДС.ПараметрыВыбораСтатейИАналитик(
	                                    Запись.Организация, ДатаИзменения, Запись.ВариантУчетаНДСПриИзмененииВидаДеятельности); 
	ДоходыИРасходыСервер.ПриИзмененииПараметровВыбораСтатей(ЭтотОбъект, ПараметрыВыбораСтатейИАналитик);
	УстановитьСвойстваЭлементов(ЭтотОбъект);
		
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьПослеЗаписи()
	
	ПараметрыОповещения = Новый Структура("Организация, Период", Запись.Организация, Запись.Период);
	ИмяСобытия = "Запись_" + ИмяРегистра;
	Оповестить(ИмяСобытия, ПараметрыОповещения);
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьИзмененияНаСервере(Закрытие = Ложь)
	ЗаписьУспешна = НастройкиНалоговУчетныхПолитик.ЗаписатьИзменениеЗаписейРегистра(ЭтотОбъект, Закрытие);
	Возврат ЗаписьУспешна;
КонецФункции

&НаКлиенте
Функция ЗаписатьИзменения(Закрытие = Ложь)
	ОчиститьСообщения();
	ЗаписьУспешна = ЗаписатьИзмененияНаСервере(Закрытие);
	Если ЗаписьУспешна Тогда
		ОповеститьПослеЗаписи();
	КонецЕсли;
	Возврат ЗаписьУспешна;
КонецФункции

&НаКлиенте
Процедура ОписаниеИсторииОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если НавигационнаяСсылкаФорматированнойСтроки = "ИсторияИзменений" Тогда
		Если Модифицированность Тогда
			ЗадатьВопросФормаМодифицирована("ОткрытьИсториюИзмененийПродолжение");
		Иначе
			ОткрытьИсториюИзменений();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗадатьВопросФормаМодифицирована(ИмяОповещения)
	
	ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
	Оповещение = Новый ОписаниеОповещения(ИмяОповещения, ЭтотОбъект);
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Да Тогда
		Если НЕ ЗаписатьИзменения(Истина) Тогда
			Возврат;
		КонецЕсли;
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьИсториюИзменений()
	ОткрытьФорму("РегистрСведений.НастройкиУчетаНДС.Форма.РедактированиеИстории",
		Новый Структура("ТолькоПросмотр, Организация", ТолькоПросмотр, Организация),
		ЭтаФорма,,,,
		Новый ОписаниеОповещения("ОткрытьИсториюИзмененийЗавершение", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьИсториюИзмененийПродолжение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Нет Тогда
		ОткрытьИсториюИзменений();
	ИначеЕсли Результат = КодВозвратаДиалога.Да Тогда
		Если НЕ ЗаписатьИзменения(Ложь) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьИсториюИзмененийЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если ЗначениеЗаполнено(Результат) Тогда
		ОткрытьИсториюИзмененийЗавершениеСервер(Результат)
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОткрытьИсториюИзмененийЗавершениеСервер(Результат) Экспорт
	ПрочитатьЗаписьРегистра(Результат);
	ПолучитьПараметрыУчетнойПолитикиИСистемыНалогообложения();
	УстановитьСвойстваЭлементов(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииНастроек(ИмяНастройки)

	ИзменныеНастройки = Новый Структура;
	ИзменныеНастройки.Вставить(ИмяНастройки, Истина);
	
	Если ИзменныеНастройки.Свойство("ПрименяетсяОсвобождениеОтУплатыНДС") Тогда
		Если Запись.ВариантУчетаНДСПриИзмененииВидаДеятельности = ПредопределенноеЗначение("Перечисление.ВариантыУчетаНДСПриИзмененииВидаДеятельностиНаНеоблагаемую.ВключатьВСтоимость") Тогда
			Запись.ПрименяетсяУчетНДСПоФактическомуИспользованию = Ложь;
			Запись.Учитывать5ПроцентныйПорог = Ложь;
			ИзменныеНастройки.Вставить("ПрименяетсяУчетНДСПоФактическомуИспользованию", Истина);
			ИзменныеНастройки.Вставить("Учитывать5ПроцентныйПорог", Истина);			
		КонецЕсли;
	КонецЕсли;
	
	Если ИзменныеНастройки.Свойство("РаздельныйУчетТоваровПоНалогообложениюНДС") Тогда
		Если НЕ Запись.РаздельныйУчетТоваровПоНалогообложениюНДС Тогда
			Если Запись.ПрименяетсяУчетНДСПоФактическомуИспользованию Тогда
				Запись.ПрименяетсяУчетНДСПоФактическомуИспользованию = Ложь;
				ИзменныеНастройки.Вставить("ПрименяетсяУчетНДСПоФактическомуИспользованию", Истина);
			КонецЕсли;
			Если Запись.РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС Тогда
				Запись.РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС = Ложь;
				ИзменныеНастройки.Вставить("РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС", Истина);
			КонецЕсли;
			Если Запись.РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС Тогда
				Запись.РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС = Ложь;
				ИзменныеНастройки.Вставить("РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС", Истина);
			КонецЕсли;
			Если Запись.Учитывать5ПроцентныйПорог Тогда
				Запись.Учитывать5ПроцентныйПорог = Ложь;
				ИзменныеНастройки.Вставить("Учитывать5ПроцентныйПорог", Истина);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Если ИзменныеНастройки.Свойство("РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС") Тогда
		Если НЕ Запись.РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС Тогда
			Запись.УчетНДСДлительногоЦиклаПроизводства = Ложь;
			ИзменныеНастройки.Вставить("УчетНДСДлительногоЦиклаПроизводства", Истина);
		КонецЕсли;
	КонецЕсли;
	
	Если ИзменныеНастройки.Свойство("ВариантУчетаНДСПриИзмененииВидаДеятельности") Тогда
		ПараметрыВыбораСтатейИАналитик = РегистрыСведений.НастройкиУчетаНДС.ПараметрыВыбораСтатейИАналитик(
			                                    Запись.Организация, ДатаИзменения, Запись.ВариантУчетаНДСПриИзмененииВидаДеятельности); 
		ДоходыИРасходыСервер.ПриИзмененииПараметровВыбораСтатей(ЭтаФорма, ПараметрыВыбораСтатейИАналитик);
	КонецЕсли;
	
	УстановитьСвойстваЭлементов(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Функция ПроверяемыеПоляРегистра()
	
	СписокПроверяемыхПолей = Новый СписокЗначений;
	
	МетаданныеРегистра = Метаданные.РегистрыСведений.НастройкиУчетаНДС;
	Для каждого Измерение Из МетаданныеРегистра.Измерения Цикл
		Если Измерение.ПроверкаЗаполнения = ПроверкаЗаполнения.ВыдаватьОшибку Тогда
			СписокПроверяемыхПолей.Добавить(Измерение.Имя, Измерение.Синоним);
		КонецЕсли;
	КонецЦикла;
	Для каждого Ресурс Из МетаданныеРегистра.Ресурсы Цикл
		Если Ресурс.ПроверкаЗаполнения = ПроверкаЗаполнения.ВыдаватьОшибку Тогда
			СписокПроверяемыхПолей.Добавить(Ресурс.Имя, Ресурс.Синоним);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокПроверяемыхПолей;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСвойстваЭлементов(Форма)
	
	Элементы = Форма.Элементы;
	Запись = Форма.Запись;
	
	Элементы.ГруппаРаздельныйУчетПостатейныхПроизводственныхЗатратКомментарий.Видимость = Ложь;
	
	Элементы.УчетНДСПоФактическомуИспользованию.Доступность =
		Запись.РаздельныйУчетТоваровПоНалогообложениюНДС И НЕ Запись.ПрименяетсяОсвобождениеОтУплатыНДС;
	
	Элементы.Учитывать5ПроцентныйПорог.Доступность = 
		Запись.РаздельныйУчетТоваровПоНалогообложениюНДС И НЕ Запись.ПрименяетсяОсвобождениеОтУплатыНДС;
	
	Элементы.ГруппаВариантУчетаНДСПриИзмененииВидаДеятельности.Доступность = Запись.РаздельныйУчетТоваровПоНалогообложениюНДС;
	
	Форма.ТолькоПросмотр = Форма.ТолькоПросмотр Или Форма.ОбособленноеПодразделение;
	
КонецПроцедуры

#КонецОбласти