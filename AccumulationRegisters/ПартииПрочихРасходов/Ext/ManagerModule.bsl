#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает текст запроса с типовой структурой временной таблицы "ВтИсходныеПрочиеРасходы".
//
// Параметры:
//  ДополнительныеПоля	 - Строка	 - Список дополнительный полей.
//  
// Возвращаемое значение:
//	Строка - Текст запроса формирования временной таблицы ВтИсходныеПрочиеРасходы.
//
Функция ТекстОписаниеВтИсходныеПартииПрочихРасходов(ДополнительныеПоля = "") Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ ПЕРВЫЕ 0
	|	ДД.Период,
	|	ДД.ВидДвижения,
	|	ДД.Организация,
	|	ДД.Подразделение,
	|	ДД.СтатьяРасходов,
	|	ДД.АналитикаРасходов,
	|	ДД.АналитикаАктивовПассивов,
	|	ДД.ДокументПоступленияРасходов,
	|	ДД.АналитикаУчетаПартий,
	|	ДД.НаправлениеДеятельности,
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.ВидДеятельностиНДС,
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК НДСУпр,
	|	0 КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	ДД.ХозяйственнаяОперация,
	|	
	|	ДД.ИдентификаторФинЗаписи,
	|	ДД.НастройкаХозяйственнойОперации
	|
	|	,&ДополнительныеПоля
	|
	|ПОМЕСТИТЬ ВтИсходныеПартииПрочихРасходов
	|ИЗ
	|	РегистрНакопления.ПартииПрочихРасходов КАК ДД
	|";
	
	ДобавитьДополнительныеПоляВТекстЗапроса(ДополнительныеПоля, ТекстЗапроса);
	
	Возврат ТекстЗапроса
	
КонецФункции

// Формирует текст запроса для формирования временной таблицы "ВтПартииПрочихРасходов".
//
// Параметры:
//  ДополнительныеПоля	 - Строка	 - Список дополнительный полей.
//  ВозможныРазныеПериодыВДвижениях - Булево - определяет где хранятся параметры партионного учета, в параметрах запроса или во временной таблице ВТПараметрыПартионногоУчетаДляПроведения
//  
// Возвращаемое значение:
//	Строка - Текст запроса формирования временной таблицы ВтПартииПрочихРасходов.
//
Функция ТекстЗапросаТаблицаВтПартииПрочихРасходов(ДополнительныеПоля = "", ВозможныРазныеПериодыВДвижениях = Ложь) Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Строки.Период КАК Период,
	|	Строки.ВидДвижения КАК ВидДвижения,
	|	Строки.Организация КАК Организация,
	|	Строки.Подразделение КАК Подразделение,
	|	Строки.СтатьяРасходов КАК СтатьяРасходов,
	|	Строки.АналитикаРасходов КАК АналитикаРасходов,
	|	Строки.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	Строки.ДокументПоступленияРасходов КАК ДокументПоступленияРасходов,
	|	Строки.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НаправленияДеятельности.УчетЗатрат, ЛОЖЬ)
	|			ТОГДА Строки.НаправлениеДеятельности
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КОНЕЦ) КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	(ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА Строки.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ВидДеятельностиНДС,
	|
	|	(ВЫБОР
	|		КОГДА Статья.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|			ТОГДА Строки.Стоимость
	|		ИНАЧЕ 0 КОНЕЦ) КАК Стоимость,
	|	(ВЫБОР
	|		КОГДА Статья.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|			ТОГДА Строки.СтоимостьБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьБезНДС,
	|	(ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			И (Статья.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	//++ Локализация
	|				ИЛИ (Статья.ВариантРаспределенияРасходовУпр В (
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства))
	|			 		И &РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС)
	//-- Локализация
	|				)
	|			ТОГДА Строки.НДСУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК НДСУпр,
	|
	|	(ВЫБОР 
	|		КОГДА Статья.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	//++ Локализация
	|			ИЛИ (Статья.ВариантРаспределенияРасходовРегл В (
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства))
	|				И &РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС)
	//-- Локализация
	|			ТОГДА Строки.СтоимостьРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьРегл,
	|	(ВЫБОР
	|		КОГДА Статья.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|		 И НЕ Статья.ПринятиеКналоговомуУчету
	|			ТОГДА Строки.СтоимостьРегл - Строки.ВременнаяРазница
	|		КОГДА Статья.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|			ТОГДА Строки.ПостояннаяРазница
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостояннаяРазница,
	|	(ВЫБОР
	|		КОГДА Статья.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|			ТОГДА Строки.ВременнаяРазница
	|		ИНАЧЕ 0 КОНЕЦ) КАК ВременнаяРазница,
	|	(ВЫБОР
	|		КОГДА Статья.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	//++ Локализация
	|			ИЛИ (Статья.ВариантРаспределенияРасходовРегл В (
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства))
	|				И &РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС)
	//-- Локализация
	|			ТОГДА Строки.НДСРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК НДСРегл,
	|	Строки.ХозяйственнаяОперация,
	|		
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Строки.АналитикаРасходов) = ТИП(Документ.ВводОстатков)
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ВводОстатков).Организация
	|		КОГДА ТИПЗНАЧЕНИЯ(Строки.АналитикаРасходов) = ТИП(Документ.ВводОстатковПрочиеРасходы)
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ВводОстатковПрочиеРасходы).Организация
	|		КОГДА ТИПЗНАЧЕНИЯ(Строки.АналитикаРасходов) = ТИП(Документ.ЗаказНаПеремещение)
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ЗаказНаПеремещение).Организация
	|		КОГДА ТИПЗНАЧЕНИЯ(Строки.АналитикаРасходов) = ТИП(Документ.ЗаказНаСборку)
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ЗаказНаСборку).Организация
	|		КОГДА ТИПЗНАЧЕНИЯ(Строки.АналитикаРасходов) = ТИП(Документ.ЗаказПоставщику)
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ЗаказПоставщику).Организация
	|		КОГДА ТИПЗНАЧЕНИЯ(Строки.АналитикаРасходов) = ТИП(Документ.ПередачаТоваровМеждуОрганизациями)
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ПередачаТоваровМеждуОрганизациями).ОрганизацияПолучатель
	|		КОГДА ТИПЗНАЧЕНИЯ(Строки.АналитикаРасходов) = ТИП(Документ.ПеремещениеТоваров)
	|		 И ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ПеремещениеТоваров).ХозяйственнаяОперация
	|				= ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами)
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ПеремещениеТоваров).ОрганизацияПолучатель
	|		КОГДА ТИПЗНАЧЕНИЯ(Строки.АналитикаРасходов) = ТИП(Документ.ПеремещениеТоваров)
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ПеремещениеТоваров).Организация
	|		КОГДА ТИПЗНАЧЕНИЯ(Строки.АналитикаРасходов) = ТИП(Документ.ПриобретениеТоваровУслуг)
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ПриобретениеТоваровУслуг).Организация
	|		КОГДА ТИПЗНАЧЕНИЯ(Строки.АналитикаРасходов) = ТИП(Документ.СборкаТоваров)
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.СборкаТоваров).Организация
	|		ИНАЧЕ Строки.Организация
	|	КОНЕЦ КАК ОрганизацияПолучатель,
	|	Строки.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	Строки.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|
	|	,&ДополнительныеПоля
	|
	|ПОМЕСТИТЬ ВтПартииПрочихРасходов
	|ИЗ
	|	ВтИсходныеПартииПрочихРасходов КАК Строки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статья
	|		ПО Статья.Ссылка = Строки.СтатьяРасходов
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НаправленияДеятельности КАК НаправленияДеятельности
	|		ПО НаправленияДеятельности.Ссылка = Строки.НаправлениеДеятельности
	|	ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК ТаблицаКонстанты ПО ИСТИНА
	|
	// Условие выборки записей должны соответствовать функции:
	// РасчетСебестоимостиПодготовкаДанных.ТекстЗапросаСтатьиСРаздельнымУчетомНДСВРегистреПартииПрочихРасходов()
	|ГДЕ
	|	&ИспользоватьУчетПрочихДоходовРасходов
	|	И (Статья.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|			И (&ДетализироватьДополнительныеРасходыВСебестоимостиТоваров
	//++ Локализация
	|				ИЛИ &РаздельныйУчетТоваровПоНалогообложениюНДС
	|				ИЛИ &РаздельныйУчетТоваровУСН
	|				ИЛИ НЕ &ПартионныйУчетВерсии22
	//-- Локализация
	|			)
	|		ИЛИ Статья.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|			И (&ДетализироватьДополнительныеРасходыВСебестоимостиТоваров
	//++ Локализация
	|				ИЛИ &РаздельныйУчетТоваровПоНалогообложениюНДС
	|				ИЛИ &РаздельныйУчетТоваровУСН
	|				ИЛИ НЕ &ПартионныйУчетВерсии22
	//-- Локализация
	|			)
	//++ Локализация
	|		ИЛИ (Статья.ВариантРаспределенияРасходовУпр В (
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства))
	|			 И Статья.ВариантРаздельногоУчетаНДС <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			 И &РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС)
	|		ИЛИ (Статья.ВариантРаспределенияРасходовРегл В (
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства))
	|			 И Статья.ВариантРаздельногоУчетаНДС <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			 И &РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС)
	//-- Локализация
	|	)
	|";
	
	ТекстСоединения = "ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК ТаблицаКонстанты ПО ИСТИНА";
	
	Если НЕ ВозможныРазныеПериодыВДвижениях Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ТекстСоединения, "");
		
	Иначе
		
		// Параметры партионного учета хранятся не в параметрах запроса, а в одноименных полях временной таблицы ВТПараметрыПартионногоУчетаДляПроведения.
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ТекстСоединения,
			"ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПараметрыПартионногоУчетаДляПроведения КАК ПараметрыПартионногоУчета
			|	ПО ПараметрыПартионногоУчета.Период = НАЧАЛОПЕРИОДА(Строки.Период, МЕСЯЦ)");
		
		МассивПараметров = Новый Массив;
		МассивПараметров.Добавить("ИспользоватьУчетПрочихДоходовРасходов");
		МассивПараметров.Добавить("ПартионныйУчетВерсии22");
		МассивПараметров.Добавить("УправленческийУчетОрганизаций");
		МассивПараметров.Добавить("РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС");
		МассивПараметров.Добавить("РаздельныйУчетТоваровПоНалогообложениюНДС");
		МассивПараметров.Добавить("РаздельныйУчетТоваровУСН");
		МассивПараметров.Добавить("ДетализироватьДополнительныеРасходыВСебестоимостиТоваров");
		
		Для Каждого ТекущийПараметр Из МассивПараметров Цикл
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&" + ТекущийПараметр, "ПараметрыПартионногоУчета." + ТекущийПараметр);
		КонецЦикла;
		
	КонецЕсли;
	
	ДобавитьДополнительныеПоляВТекстЗапроса(ДополнительныеПоля, ТекстЗапроса);
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Формирует текст запроса для формирования движений по регистру "Партии прочих расходов".
//
// Параметры:
//  ДополнительныеПоля	 - Строка	 - Список дополнительный полей.
//  
// Возвращаемое значение:
//	Строка - Текст запроса формирования таблицы ПартииПрочихРасходов.
//
Функция ТекстЗапросаТаблицаПартииПрочихРасходов(ДополнительныеПоля = "") Экспорт
	
	ТекстЗапроса = "
	// Формирование таблицы для записи в регистр "ПартииПрочихРасходов".
	|ВЫБРАТЬ
	|	Строки.Период КАК Период,
	|	Строки.ВидДвижения КАК ВидДвижения,
	|	Строки.Организация КАК Организация,
	|	Строки.Подразделение КАК Подразделение,
	|	Строки.СтатьяРасходов КАК СтатьяРасходов,
	|	Строки.АналитикаРасходов КАК АналитикаРасходов,
	|	Строки.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	Строки.ДокументПоступленияРасходов КАК ДокументПоступленияРасходов,
	|	Строки.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Строки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Строки.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|
	|	Строки.Стоимость КАК Стоимость,
	|	Строки.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	Строки.НДСУпр КАК НДСУпр,
	|
	|	Строки.СтоимостьРегл КАК СтоимостьРегл,
	|	Строки.ПостояннаяРазница КАК ПостояннаяРазница,
	|	Строки.ВременнаяРазница КАК ВременнаяРазница,
	|	Строки.НДСРегл КАК НДСРегл,
	|
	|	Строки.ХозяйственнаяОперация,
	|
	|	Строки.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	Строки.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|
	|	,&ДополнительныеПоля
	|
	|ИЗ
	|	ВтПартииПрочихРасходов КАК Строки
	|ГДЕ
	|	(Строки.Стоимость <> 0 ИЛИ Строки.СтоимостьБезНДС <> 0 ИЛИ Строки.НДСУпр <> 0
	|		ИЛИ Строки.СтоимостьРегл <> 0 ИЛИ Строки.НДСРегл <> 0
	|		ИЛИ Строки.ПостояннаяРазница <> 0 ИЛИ Строки.ВременнаяРазница <> 0)
	//++ Локализация
	// Сторнирование расходов в упр. учете у организации - источника.
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	Строки.Период КАК Период,
	|	Строки.ВидДвижения КАК ВидДвижения,
	|	Строки.Организация КАК Организация,
	|	Строки.Подразделение КАК Подразделение,
	|	Строки.СтатьяРасходов КАК СтатьяРасходов,
	|	Строки.АналитикаРасходов КАК АналитикаРасходов,
	|	Строки.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	Строки.ДокументПоступленияРасходов КАК ДокументПоступленияРасходов,
	|	Строки.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Строки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Строки.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|
	|	-Строки.Стоимость КАК Стоимость,
	|	-Строки.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	-Строки.НДСУпр КАК НДСУпр,
	|
	|	0 КАК СтоимостьРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	0 КАК НДСРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеРасходовУУ) КАК ХозяйственнаяОперация,
	|
	|	Строки.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	Строки.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|
	|	,&ДополнительныеПоля
	|
	|ИЗ
	|	ВтПартииПрочихРасходов КАК Строки
	|ГДЕ
	|	Строки.ОрганизацияПолучатель <> Строки.Организация
	|	И (Строки.Стоимость <> 0 ИЛИ Строки.СтоимостьБезНДС <> 0 ИЛИ Строки.НДСУпр <> 0)
	|
	// Регистрация расходов в упр. учете у организации - получателя.
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	Строки.Период КАК Период,
	|	Строки.ВидДвижения КАК ВидДвижения,
	|	Строки.ОрганизацияПолучатель КАК Организация,
	|	Строки.Подразделение КАК Подразделение,
	|	Строки.СтатьяРасходов КАК СтатьяРасходов,
	|	Строки.АналитикаРасходов КАК АналитикаРасходов,
	|	Строки.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	Строки.ДокументПоступленияРасходов КАК ДокументПоступленияРасходов,
	|	Строки.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Строки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Строки.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|
	|	Строки.Стоимость КАК Стоимость,
	|	Строки.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	Строки.НДСУпр КАК НДСУпр,
	|
	|	0 КАК СтоимостьРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	0 КАК НДСРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РегистрацияРасходовУУ) КАК ХозяйственнаяОперация,
	|
	|	Строки.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	Строки.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|
	|	,&ДополнительныеПоля
	|
	|ИЗ
	|	ВтПартииПрочихРасходов КАК Строки
	|ГДЕ
	|	Строки.ОрганизацияПолучатель <> Строки.Организация
	|	И (Строки.Стоимость <> 0 ИЛИ Строки.СтоимостьБезНДС <> 0 ИЛИ Строки.НДСУпр <> 0)
	//-- Локализация
	|";
	
	ДобавитьДополнительныеПоляВТекстЗапроса(ДополнительныеПоля, ТекстЗапроса);
		
	Возврат ТекстЗапроса;
	
КонецФункции

// Формирует часть текста запроса получения значения поля ОрганизацияПолучатель.
//
// Возвращаемое значение:
//	Строка - Текст запроса формирования значения поля ОрганизацияПолучатель.
//
Функция ТекстЗапросаЗначениеПоляОрганизацияПолучатель(ИмяТаблицы = "") Экспорт
	
	ТекстЗапроса = "
	|	ВЫБОР
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Справочник.Организации
	|			ТОГДА Строки.АналитикаРасходов
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Документ.АктВыполненныхРабот
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.АктВыполненныхРабот).Организация
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Документ.ВводОстатков
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ВводОстатков).Организация
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Документ.ВводОстатковПрочиеРасходы
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ВводОстатковПрочиеРасходы).Организация
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Документ.ЗаказКлиента
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ЗаказКлиента).Организация
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Документ.ЗаказНаПеремещение
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ЗаказНаПеремещение).Организация
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Документ.ЗаказНаСборку
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ЗаказНаСборку).Организация
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Документ.ЗаказПоставщику
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ЗаказПоставщику).Организация
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Организация
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ПередачаТоваровМеждуОрганизациями).ОрганизацияПолучатель
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Документ.ПеремещениеТоваров
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ПеремещениеТоваров).Организация
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ПриобретениеТоваровУслуг).Организация
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.РеализацияТоваровУслуг).Организация
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Документ.РеализацияУслугПрочихАктивов
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.РеализацияУслугПрочихАктивов).Организация
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Документ.СборкаТоваров
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.СборкаТоваров).Организация
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|";
	Если НЕ ПустаяСтрока(ИмяТаблицы) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Строки", ИмяТаблицы);
	КонецЕсли;
	Возврат ТекстЗапроса;
	
КонецФункции

// Собирает структуру из текстов запросов для дальнейшей проверки даты запрета.
// 
// Параметры:
// 	Запрос - Запрос - Запрос по проверке даты запрета, можно установить параметры
// Возвращаемое значение:
// 	Структура - см. ЗакрытиеМесяцаСервер.ИнициализироватьСтруктуруТекстовЗапросов
Функция ТекстЗапросаКонтрольДатыЗапрета(Запрос) Экспорт
	ИмяРегистра = Метаданные.РегистрыНакопления.ПартииПрочихРасходов.Имя;
	ИмяТаблицыИзменений = "ТаблицаИзмененийПартииПрочихРасходов"; 
	СтруктураТекстовЗапросов = ПроведениеДокументов.ШаблонТекстЗапросаКонтрольДатыЗапрета(Запрос, 
		ИмяРегистра, 
		ИмяТаблицыИзменений, 
		"ФинансовыйКонтур");
	Возврат СтруктураТекстовЗапросов

КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьДополнительныеПоляВТекстЗапроса(ДополнительныеПоля, ТекстЗапроса)

	Если НЕ ЗначениеЗаполнено(ДополнительныеПоля) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ",&ДополнительныеПоля", "");
		Возврат;
	КонецЕсли; 
	
	ТекстДополнительныеПоля = "";
	
	СписокПолей = СтрРазделить(ДополнительныеПоля, ",");
	Для каждого ИмяПоля Из СписокПолей Цикл
		ТекстДополнительныеПоля = ТекстДополнительныеПоля + "
		|	,Строки." + ИмяПоля;
	КонецЦикла; 
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ",&ДополнительныеПоля", ТекстДополнительныеПоля); 

КонецПроцедуры

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыНакопления.ПартииПрочихРасходов.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "11.5.7.10";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("4df8994b-9305-49ea-b2f0-f742bf1d9d37");
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ПартииПрочихРасходов.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Обновляет регистр ""Партии прочих расходов"":
	|- Заполняет реквизит ""Хозяйственная операция"" для записей документа ""Регламентая операция"" (операция ""Признание в НУ арендных платежей"").
	|- Движения по дополнительным расходам по товарам переносятся в регистр ""Прочие расходы"".'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.РегистрыНакопления.ПартииПрочихРасходов.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.ПрочиеРасходы.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыНакопления.ПартииНДСКРаспределению.ПолноеИмя());
	Изменяемые.Добавить(Метаданные.РегистрыНакопления.ПартииПрочихРасходов.ПолноеИмя());
	Изменяемые.Добавить(Метаданные.РегистрыНакопления.ПрочиеРасходы.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "РегистрыНакопления.ПартииНДСКРаспределению.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "До";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "РегистрыНакопления.ПрочиеРасходы.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "До";

КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт

	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрНакопления.ПартииПрочихРасходов";
	
	СписокЗапросов = Новый Массив;

	// Убираем из регистра:
	//    движения по статьям активов/пассивов для ВНА 2.2
	//    движения по пустой статье
	//    распределяемые на себестоимость товаров
	//    и все, не относящееся к себестоимости.
	// К себестоимости относятся:
	//   косвенные постатейные, распределяемые на производство, кроме ситуаций, когда НДС распределяется
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПартииПрочихРасходов.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ПартииПрочихРасходов КАК ПартииПрочихРасходов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ПО СтатьиРасходов.Ссылка = ПартииПрочихРасходов.СтатьяРасходов
	|ГДЕ
	|	(НЕ ПартииПрочихРасходов.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|	ИЛИ ПартииПрочихРасходов.СтатьяРасходов  = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	// и косвенные постатейные, распределяемые на производство, кроме ситуаций, когда НДС распределяется
	|	ИЛИ НЕ (
	|			(СтатьиРасходов.ВариантРаспределенияРасходовРегл
	|				= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
	|			ИЛИ СтатьиРасходов.ВариантРаспределенияРасходовУпр
	|				= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты))
	|			И
	|			ВЫРАЗИТЬ(ПартииПрочихРасходов.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаздельногоУчетаНДС
	|				= ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента)
	|			И НЕ ВЫБОР КОГДА ПартииПрочихРасходов.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) ТОГДА
	|					ПартииПрочихРасходов.АналитикаУчетаПартий.НалогообложениеНДС
	|				ИНАЧЕ
	|					ПартииПрочихРасходов.ВидДеятельностиНДС 
	|				КОНЕЦ В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением),
	|						 ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию))
	|		)
	|	)
	|	И СтатьиРасходов.ВариантРаспределенияРасходовРегл
	|		<> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	И СтатьиРасходов.ВариантРаспределенияРасходовУпр
	|		<> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	И НЕ (ПартииПрочихРасходов.НДСРегл = 0 И ПартииПрочихРасходов.НДСУпр = 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПартииПрочихРасходов.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ПартииПрочихРасходов КАК ПартииПрочихРасходов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ПО СтатьиРасходов.Ссылка = ПартииПрочихРасходов.СтатьяРасходов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК ДвиженияПрочиеРасходы
	|		ПО ДвиженияПрочиеРасходы.Период = ПартииПрочихРасходов.Период
	|		И ДвиженияПрочиеРасходы.Регистратор = ПартииПрочихРасходов.Регистратор
	|		И ДвиженияПрочиеРасходы.Организация = ПартииПрочихРасходов.Организация
	|		И ДвиженияПрочиеРасходы.Подразделение = ПартииПрочихРасходов.Подразделение
	|		И ДвиженияПрочиеРасходы.НаправлениеДеятельности = ПартииПрочихРасходов.НаправлениеДеятельности
	|		И ДвиженияПрочиеРасходы.СтатьяРасходов = ПартииПрочихРасходов.СтатьяРасходов
	|		И ДвиженияПрочиеРасходы.АналитикаРасходов = ПартииПрочихРасходов.АналитикаРасходов
	|		И ДвиженияПрочиеРасходы.ВидДвижения = ПартииПрочихРасходов.ВидДвижения
	|		И ДвиженияПрочиеРасходы.РасчетПартий = ПартииПрочихРасходов.РасчетПартий
	|ГДЕ
	|	СтатьиРасходов.ВариантРаспределенияРасходовРегл
	|		= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|		И ЕСТЬNULL(ДвиженияПрочиеРасходы.СуммаРегл, 0) = 0
	|		И СтатьиРасходов.Ссылка <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.НДСНалоговогоАгента)
	|	ИЛИ СтатьиРасходов.ВариантРаспределенияРасходовУпр
	|		= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|		И ЕСТЬNULL(ДвиженияПрочиеРасходы.Сумма, 0) = 0
	|";
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	
	Если СписокЗапросов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Регистраторы, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт

	ПолноеИмяРегистра = "РегистрНакопления.ПартииПрочихРасходов";
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = ПолноеИмяРегистра;
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц();
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуРегистраторовРегистраДляОбработки(
		Параметры.Очередь,
		Неопределено,
		ПолноеИмяРегистра,
		МенеджерВТ);
		
	Если Не Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяРегистра);
		Возврат;
	КонецЕсли;
	
	Если Не Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Параметры.Вставить("ТипыПартийНДСКРаспределению",
		Метаданные.РегистрыНакопления.ПартииНДСКРаспределению.СтандартныеРеквизиты.Регистратор.Тип.Типы());
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДвиженияПрочиеРасходы.Регистратор КАК Регистратор,
	|	ДвиженияПрочиеРасходы.Организация,
	|	ДвиженияПрочиеРасходы.Подразделение КАК Подразделение,
	|	ДвиженияПрочиеРасходы.НаправлениеДеятельности,
	|	ДвиженияПрочиеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	ДвиженияПрочиеРасходы.АналитикаРасходов,
	|	ДвиженияПрочиеРасходы.ВидДвижения,
	|	ДвиженияПрочиеРасходы.РасчетПартий,
	|	СУММА(ДвиженияПрочиеРасходы.Сумма) КАК Сумма,
	|	СУММА(ДвиженияПрочиеРасходы.СуммаРегл) КАК СуммаРегл
	|ПОМЕСТИТЬ ВтДопРасходы
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы КАК ДвиженияПрочиеРасходы
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДляОбработкиПартииПрочихРасходов КАК РегистраторыКОбработке
	|		ПО ДвиженияПрочиеРасходы.Регистратор = РегистраторыКОбработке.Регистратор
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ПО СтатьиРасходов.Ссылка = ДвиженияПрочиеРасходы.СтатьяРасходов
	|ГДЕ
	|	НЕ ДвиженияПрочиеРасходы.РасчетСебестоимости
	|	И (СтатьиРасходов.ВариантРаспределенияРасходовРегл
	|		= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|		ИЛИ СтатьиРасходов.ВариантРаспределенияРасходовУпр
	|		= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
	|СГРУППИРОВАТЬ ПО
	|	ДвиженияПрочиеРасходы.Регистратор,
	|	ДвиженияПрочиеРасходы.Организация,
	|	ДвиженияПрочиеРасходы.Подразделение,
	|	ДвиженияПрочиеРасходы.НаправлениеДеятельности,
	|	ДвиженияПрочиеРасходы.СтатьяРасходов,
	|	ДвиженияПрочиеРасходы.АналитикаРасходов,
	|	ДвиженияПрочиеРасходы.ВидДвижения,
	|	ДвиженияПрочиеРасходы.РасчетПартий
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	Подразделение,
	|	СтатьяРасходов
	|;
	|ВЫБРАТЬ
	|	ПартииПрочихРасходов.Активность,
	|	ПартииПрочихРасходов.ВидДвижения,
	|	ПартииПрочихРасходов.НомерСтроки,
	|	ПартииПрочихРасходов.Период,
	|	ПартииПрочихРасходов.Регистратор,
	|	ПартииПрочихРасходов.Организация,
	|	ПартииПрочихРасходов.Подразделение,
	|	ПартииПрочихРасходов.СтатьяРасходов,
	|	ПартииПрочихРасходов.СтатьяРасходов.ВариантРаздельногоУчетаНДС КАК ВариантРаздельногоУчетаНДС,
	|	ПартииПрочихРасходов.АналитикаРасходов,
	|	ПартииПрочихРасходов.АналитикаАктивовПассивов,
	|	ПартииПрочихРасходов.ДокументПоступленияРасходов,
	|	ПартииПрочихРасходов.АналитикаУчетаПартий,
	|	ПартииПрочихРасходов.НаправлениеДеятельности,
	|	ПартииПрочихРасходов.АналитикаУчетаНоменклатуры,
	|	ПартииПрочихРасходов.ВидДеятельностиНДС,
	|	ПартииПрочихРасходов.Стоимость,
	|	ПартииПрочихРасходов.СтоимостьБезНДС,
	|	ПартииПрочихРасходов.СтоимостьРегл,
	|	ПартииПрочихРасходов.НДСРегл,
	|	ПартииПрочихРасходов.ПостояннаяРазница,
	|	ПартииПрочихРасходов.ВременнаяРазница,
	|	ПартииПрочихРасходов.НДСУпр,
	|	ПартииПрочихРасходов.НалогообложениеНДС,
	|	ПартииПрочихРасходов.ДокументРеализации,
	|	ПартииПрочихРасходов.СтатьяОтраженияРасходов,
	|	ПартииПрочихРасходов.АналитикаОтраженияРасходов,
	|	ПартииПрочихРасходов.РасчетПартий,
	|	ПартииПрочихРасходов.ПериодБазы,
	|	ПартииПрочихРасходов.ХозяйственнаяОперация,
	|	ПартииПрочихРасходов.МоментВремени,
	|
	|	ВЫБОР КОГДА ПартииПрочихРасходов.НДСРегл = 0 И ПартииПрочихРасходов.НДСУпр = 0
	|		ТОГДА ЛОЖЬ
	|	КОГДА НЕ ТИПЗНАЧЕНИЯ(ПартииПрочихРасходов.Регистратор) В (&ТипыПартийНДСКРаспределению)
	|		ТОГДА ЛОЖЬ
	|	КОГДА НЕ ПартииПрочихРасходов.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|		ТОГДА ИСТИНА
	|	КОГДА ПартииПрочихРасходов.СтатьяРасходов  = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА ИСТИНА
	|	КОГДА НЕ
	|		(	(ВЫРАЗИТЬ(ПартииПрочихРасходов.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходовРегл
	|				= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|			ИЛИ ВЫРАЗИТЬ(ПартииПрочихРасходов.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходовУпр
	|				= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
	|		ИЛИ (
	|			(ВЫРАЗИТЬ(ПартииПрочихРасходов.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходовРегл
	|				= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
	|			ИЛИ ВЫРАЗИТЬ(ПартииПрочихРасходов.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходовУпр
	|				= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты))
	|			И
	|			ВЫРАЗИТЬ(ПартииПрочихРасходов.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаздельногоУчетаНДС
	|				= ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента)
	|			И НЕ ВЫБОР КОГДА ПартииПрочихРасходов.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) ТОГДА
	|					ПартииПрочихРасходов.АналитикаУчетаПартий.НалогообложениеНДС
	|				ИНАЧЕ
	|					ПартииПрочихРасходов.ВидДеятельностиНДС 
	|				КОНЕЦ В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением),
	|						 ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию))
	|			)
	|		)
	|		ТОГДА ИСТИНА
	|	ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПереноситьЗапись,
	|	(ВЫБОР
	|		КОГДА НЕ СтатьиРасходов.ВариантРаспределенияРасходовРегл ЕСТЬ NULL
	|		 И СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|		 И ЕСТЬNULL(ДвиженияПрочиеРасходы.СуммаРегл, 0) = 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ПереноситьЗаписьВПрочиеРасходыРегл,
	|	(ВЫБОР
	|		КОГДА НЕ СтатьиРасходов.ВариантРаспределенияРасходовУпр ЕСТЬ NULL
	|		 И СтатьиРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|		 И ЕСТЬNULL(ДвиженияПрочиеРасходы.Сумма, 0) = 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ПереноситьЗаписьВПрочиеРасходыУпр,
	|
	|	АналитикаПартий.СтавкаНДС КАК СтавкаНДС,
	|	АналитикаПартий.Контрагент КАК Поставщик,
	|	ПартииПрочихРасходов.НалогообложениеНДС КАК КорВидДеятельностиНДС,
	|
	|	ВЫБОР 
	|		КОГДА ПартииПрочихРасходов.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА АналитикаПартий.НалогообложениеНДС
	|		ИНАЧЕ ПартииПрочихРасходов.ВидДеятельностиНДС 
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|
	|	ВЫБОР
	|		КОГДА АналитикаПартий.ВидЦенности <> ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка)
	|			ТОГДА АналитикаПартий.ВидЦенности
	|		КОГДА ТИПЗНАЧЕНИЯ(ПартииПрочихРасходов.ДокументПоступленияРасходов) = ТИП(Документ.ТаможеннаяДекларацияИмпорт)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныеПлатежи)
	|		КОГДА АналитикаНоменклатуры.Номенклатура.ТипНоменклатуры В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)) ТОГДА
	|			ВЫБОР 
	|				КОГДА ЕСТЬNULL(ГруппыФинансовогоУчетаНоменклатуры.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка))
	|					<> ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка)
	|				ТОГДА ГруппыФинансовогоУчетаНоменклатуры.ВидЦенностиНДС
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|			КОНЕЦ
	|		КОГДА НЕ СтатьиРасходов.ВидЦенностиНДС ЕСТЬ NULL И НЕ СтатьиРасходов.ВидЦенностиНДС <> ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка)
	|			ТОГДА СтатьиРасходов.ВидЦенностиНДС
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности
	|	
	|ИЗ
	|	РегистрНакопления.ПартииПрочихРасходов КАК ПартииПрочихРасходов
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ВТДляОбработкиПартииПрочихРасходов КАК РегистраторыКОбработке
	|	ПО
	|		ПартииПрочихРасходов.Регистратор = РегистраторыКОбработке.Регистратор
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Справочник.КлючиАналитикиУчетаПартий КАК АналитикаПартий
	|	ПО 
	|		ПартииПрочихРасходов.АналитикаУчетаПартий = АналитикаПартий.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатуры
	|	ПО 
	|		ПартииПрочихРасходов.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГруппыФинансовогоУчетаНоменклатуры
	|	ПО
	|		АналитикаНоменклатуры.Номенклатура.ГруппаФинансовогоУчета = ГруппыФинансовогоУчетаНоменклатуры.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		ПартииПрочихРасходов.СтатьяРасходов = СтатьиРасходов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтДопРасходы КАК ДвиженияПрочиеРасходы
	|		ПО ДвиженияПрочиеРасходы.Регистратор = ПартииПрочихРасходов.Регистратор
	|		И ДвиженияПрочиеРасходы.Организация = ПартииПрочихРасходов.Организация
	|		И ДвиженияПрочиеРасходы.Подразделение = ПартииПрочихРасходов.Подразделение
	|		И ДвиженияПрочиеРасходы.НаправлениеДеятельности = ПартииПрочихРасходов.НаправлениеДеятельности
	|		И ДвиженияПрочиеРасходы.СтатьяРасходов = ПартииПрочихРасходов.СтатьяРасходов
	|		И ДвиженияПрочиеРасходы.АналитикаРасходов = ПартииПрочихРасходов.АналитикаРасходов
	|		И ДвиженияПрочиеРасходы.ВидДвижения = ПартииПрочихРасходов.ВидДвижения
	|		И ДвиженияПрочиеРасходы.РасчетПартий = ПартииПрочихРасходов.РасчетПартий
	|ИТОГИ
	|	МАКСИМУМ(ПереноситьЗапись) КАК ПереноситьЗапись,
	|	МАКСИМУМ(ПереноситьЗаписьВПрочиеРасходыРегл) КАК ПереноситьЗаписьВПрочиеРасходыРегл,
	|	МАКСИМУМ(ПереноситьЗаписьВПрочиеРасходыУпр) КАК ПереноситьЗаписьВПрочиеРасходыУпр
	|ПО
	|	ПартииПрочихРасходов.Регистратор
	|";
	
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра + ".НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Регистратор);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Если Выборка.ПереноситьЗапись Тогда
				ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПартииНДСКРаспределению.НаборЗаписей");
				ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Регистратор);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			КонецЕсли;
			
			Если Выборка.ПереноситьЗаписьВПрочиеРасходыРегл
				Или Выборка.ПереноситьЗаписьВПрочиеРасходыУпр Тогда
				ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПрочиеРасходы.НаборЗаписей");
				ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Регистратор);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			КонецЕсли;
			
			Блокировка.Заблокировать();
			
			Набор = РегистрыНакопления.ПартииПрочихРасходов.СоздатьНаборЗаписей();
			Набор.Отбор.Регистратор.Установить(Выборка.Регистратор);
			Набор.Прочитать();
			
			
			ДетальныеЗаписи = Выборка.Выбрать();
			Если Выборка.ПереноситьЗапись Тогда
				
				НаборПартийНДС = РегистрыНакопления.ПартииНДСКРаспределению.ПеренестиДанныеРегистраПартииПрочихРасходовВРегистрПартииНДСКРаспределению(
					Выборка.Регистратор,
					Набор,
					ДетальныеЗаписи); // НаборЗаписей
				ДетальныеЗаписи.Сбросить();
				
			КонецЕсли;
			
			Если Выборка.ПереноситьЗаписьВПрочиеРасходыРегл
				Или Выборка.ПереноситьЗаписьВПрочиеРасходыУпр Тогда
				НаборПрочиеРасходы = РегистрыНакопления.ПрочиеРасходы.ПеренестиДанныеРегистраПартииПрочихРасходовВРегистрПрочиеРасходы(
					Выборка.Регистратор,
					Набор,
					ДетальныеЗаписи);
			КонецЕсли;
			
			Если Не НаборПрочиеРасходы = Неопределено
				И НаборПрочиеРасходы.Количество() Тогда
				НаборПрочиеРасходы.Записать();
			КонецЕсли;
			
			Если Набор.Модифицированность() Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
				Если НаборПартийНДС <> Неопределено Тогда
					НаборПартийНДС.Записать();
				КонецЕсли;
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Регистратор, ДополнительныеПараметры);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Регистратор% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", Выборка.Регистратор);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Ошибка,
				Выборка.Регистратор.Метаданные(), ТекстСообщения);
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
