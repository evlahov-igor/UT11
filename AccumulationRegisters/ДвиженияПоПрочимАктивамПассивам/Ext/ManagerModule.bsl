#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Собирает структуру из текстов запросов для дальнейшей проверки даты запрета.
// 
// Параметры:
// 	Запрос - Запрос - Запрос по проверке даты запрета, можно установить параметры
// Возвращаемое значение:
// 	Структура - см. ЗакрытиеМесяцаСервер.ИнициализироватьСтруктуруТекстовЗапросов
Функция ТекстЗапросаКонтрольДатыЗапрета(Запрос) Экспорт
	ИмяРегистра = Метаданные.РегистрыНакопления.ДвиженияПоПрочимАктивамПассивам.Имя;
	ИмяТаблицыИзменений = "ТаблицаИзмененийДвиженияПоПрочимАктивамПассивам"; 
	СтруктураТекстовЗапросов = ПроведениеДокументов.ШаблонТекстЗапросаКонтрольДатыЗапрета(Запрос, 
		ИмяРегистра, 
		ИмяТаблицыИзменений, 
		"ФинансовыйКонтур");
	Возврат СтруктураТекстовЗапросов

КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом


#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыНакопления.ДвиженияПоПрочимАктивамПассивам.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "11.5.6.103";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("919746fa-cb93-4b40-96d3-cf3580744665");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДвиженияПоПрочимАктивамПассивам.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Заполняет регистр по данным документов регисторов.'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.ВзаимозачетЗадолженности.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.КорректировкаЗадолженности.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.КорректировкаЗадолженностиПоФинансовымИнструментам.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.КорректировкаПриобретения.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.НачисленияКредитовИДепозитов.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПоступлениеБезналичныхДенежныхСредств.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПриобретениеУслугПрочихАктивов.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПриходныйКассовыйОрдер.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПрочееОприходованиеТоваров.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПрочиеДоходыРасходы.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.РасходныйКассовыйОрдер.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.РеализацияУслугПрочихАктивов.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.СписаниеБезналичныхДенежныхСредств.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.СписаниеПринятыхНаХранениеТоваров.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.ДвиженияПоПрочимАктивамПассивам.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыНакопления.ДвиженияПоПрочимАктивамПассивам.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.РегистрыНакопления.ДвиженияПоПрочимАктивамПассивам.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");

КонецПроцедуры

// Описание
// 
// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры = Неопределено) Экспорт

	МетаданныеРегистра = СоздатьНаборЗаписей().Метаданные();
	ПолноеИмяРегистра = МетаданныеРегистра.ПолноеИмя();
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаРегистров = ПолноеИмяРегистра;
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Период УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Период УБЫВ");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиРегистраторыРегистра();
	
	ТипыРегистраторов = МетаданныеРегистра.СтандартныеРеквизиты.Регистратор.Тип.Типы();
	СписокДокументов = Новый Массив; 
	Для Каждого ТипРегистратора Из ТипыРегистраторов Цикл
		ДокПустаяСсылка = Новый (ТипРегистратора);
		СписокДокументов.Добавить(ДокПустаяСсылка.Метаданные().ПолноеИмя());
	КонецЦикла;
	
	ПараметрыВыборки.ПолныеИменаОбъектов = СтрСоединить(СписокДокументов, ",");

	// Заполение регистра по ДаннымДокументаДляПроведения
	ТекстЗапроса = ТекстРегистрацииДанныхКОбновлению();
	
	// Заполнение по регистрам ДвиженияДоходыРасходыПрочиеАктивыПассивы и ПрочиеАктивыПассивы
	ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДоходыРасходыПрочиеАктивыПассивы.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК ДоходыРасходыПрочиеАктивыПассивы
		|ГДЕ
		|	(
		|	ДоходыРасходыПрочиеАктивыПассивы.Регистратор ССЫЛКА Документ.РаспределениеПрочихЗатрат
		|	)
		|	И (ДоходыРасходыПрочиеАктивыПассивы.Статья ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
		|		ИЛИ ДоходыРасходыПрочиеАктивыПассивы.КорСтатья ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов)
		|	И НЕ ДоходыРасходыПрочиеАктивыПассивы.Статья В (
		|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки)
		|		)
		|	И НЕ ДоходыРасходыПрочиеАктивыПассивы.КорСтатья В (
		|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки)
		|		)
		|	И НЕ ИСТИНА В
		|		(ВЫБРАТЬ ПЕРВЫЕ 1
		|			ИСТИНА
		|		ИЗ
		|			РегистрНакопления.ДвиженияПоПрочимАктивамПассивам КАК ДвиженияПоПрочимАктивамПассивам
		|		ГДЕ
		|			ДвиженияПоПрочимАктивамПассивам.Регистратор = ДоходыРасходыПрочиеАктивыПассивы.Регистратор)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПрочиеАктивыПассивы.Регистратор
		|ИЗ
		|	РегистрНакопления.ПрочиеАктивыПассивы КАК ПрочиеАктивыПассивы
		|ГДЕ
		|	(
		|	ПрочиеАктивыПассивы.Регистратор ССЫЛКА Документ.РаспределениеПрочихЗатрат
		|	)
		|	И ПрочиеАктивыПассивы.Источник = ЗНАЧЕНИЕ(Перечисление.ИсточникиУправленческогоБаланса.ПустаяСсылка)
		|	И НЕ ПрочиеАктивыПассивы.Статья В (
		|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки)
		|		)
		|	И НЕ ИСТИНА В
		|		(ВЫБРАТЬ ПЕРВЫЕ 1
		|			ИСТИНА
		|		ИЗ
		|			РегистрНакопления.ДвиженияПоПрочимАктивамПассивам КАК ДвиженияПоПрочимАктивамПассивам
		|		ГДЕ
		|			ДвиженияПоПрочимАктивамПассивам.Регистратор = ПрочиеАктивыПассивы.Регистратор)";
		
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(
		Параметры,
		Регистраторы,
		ПолноеИмяРегистра);
		
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МетаданныеРегистра = СоздатьНаборЗаписей().Метаданные();
	ПолноеИмяРегистра = МетаданныеРегистра.ПолноеИмя();
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	ДоходыРасходыПрочиеАктивыПассивы.Регистратор КАК Регистратор,
	|	ДоходыРасходыПрочиеАктивыПассивы.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДоходыРасходыПрочиеАктивыПассивы.Организация КАК Организация,
	|	ДоходыРасходыПрочиеАктивыПассивы.Подразделение КАК Подразделение,
	|	ДоходыРасходыПрочиеАктивыПассивы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДоходыРасходыПрочиеАктивыПассивы.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	ДоходыРасходыПрочиеАктивыПассивы.Статья КАК Статья,
	|	СУММА(ДоходыРасходыПрочиеАктивыПассивы.СуммаРегл) КАК СуммаРегл,
	|	НастройкиХозяйственныхОпераций.Ссылка КАК НастройкаХозяйственнойОперации
	|ПОМЕСТИТЬ ВТДоходыРасходыПрочиеАктивыПассивы
	|ИЗ
	|	РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК ДоходыРасходыПрочиеАктивыПассивы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиХозяйственныхОпераций КАК НастройкиХозяйственныхОпераций
	|		ПО (ДоходыРасходыПрочиеАктивыПассивы.ХозяйственнаяОперация = НастройкиХозяйственныхОпераций.ХозяйственнаяОперация)
	|ГДЕ
	|	ДоходыРасходыПрочиеАктивыПассивы.Регистратор = &Регистратор
	|СГРУППИРОВАТЬ ПО
	|	ДоходыРасходыПрочиеАктивыПассивы.ХозяйственнаяОперация,
	|	ДоходыРасходыПрочиеАктивыПассивы.Организация,
	|	ДоходыРасходыПрочиеАктивыПассивы.Подразделение,
	|	ДоходыРасходыПрочиеАктивыПассивы.НаправлениеДеятельности,
	|	ДоходыРасходыПрочиеАктивыПассивы.АналитикаАктивовПассивов,
	|	ДоходыРасходыПрочиеАктивыПассивы.Статья,
	|	ДоходыРасходыПрочиеАктивыПассивы.Регистратор,
	|	НастройкиХозяйственныхОпераций.Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочиеАктивыПассивы.Регистратор КАК Регистратор,
	|	ПрочиеАктивыПассивы.Период КАК Период,
	|	ПрочиеАктивыПассивы.Организация КАК Организация,
	|	ПрочиеАктивыПассивы.Подразделение КАК Подразделение,
	|	ПрочиеАктивыПассивы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПрочиеАктивыПассивы.Статья КАК Статья,
	|	ПрочиеАктивыПассивы.Аналитика КАК Аналитика,
	|	ПрочиеАктивыПассивы.Сумма КАК Сумма,
	|	ВТДоходыРасходыПрочиеАктивыПассивы.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	ВТДоходыРасходыПрочиеАктивыПассивы.СуммаРегл КАК СуммаРегл,
	|	ПрочиеАктивыПассивы.Сумма КАК СуммаБезНДС,
	|	ПрочиеАктивыПассивы.Сумма КАК СумаСНДС,
	|	ПрочиеАктивыПассивы.Сумма КАК СуммаУпр,
	|	ВЫБОР
	|		КОГДА ПрочиеАктивыПассивы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Кредит)
	|	КОНЕЦ КАК ДебетКредит
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК ПрочиеАктивыПассивы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыРасходыПрочиеАктивыПассивы КАК ВТДоходыРасходыПрочиеАктивыПассивы
	|		ПО (ПрочиеАктивыПассивы.Регистратор = ПрочиеАктивыПассивы.Регистратор)
	|		И (ПрочиеАктивыПассивы.Организация = ВТДоходыРасходыПрочиеАктивыПассивы.Организация)
	|		И (ПрочиеАктивыПассивы.Подразделение = ВТДоходыРасходыПрочиеАктивыПассивы.Подразделение)
	|		И (ПрочиеАктивыПассивы.НаправлениеДеятельности = ВТДоходыРасходыПрочиеАктивыПассивы.НаправлениеДеятельности)
	|		И (ПрочиеАктивыПассивы.Статья = ВТДоходыРасходыПрочиеАктивыПассивы.Статья)
	|		И (ПрочиеАктивыПассивы.Аналитика = ВТДоходыРасходыПрочиеАктивыПассивы.АналитикаАктивовПассивов)
	|ГДЕ
	|	ПрочиеАктивыПассивы.Источник = ЗНАЧЕНИЕ(Перечисление.ИсточникиУправленческогоБаланса.ПустаяСсылка)
	|	И ПрочиеАктивыПассивы.Регистратор = &Регистратор";
	
	Для Каждого Выборка Из ОбновляемыеДанные Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Регистратор = Выборка.Регистратор;// ДокументСсылка - 
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра + ".НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Регистратор);
			
			ФормироватьПоРегистрамИсточникам =
				ТипЗнч(Регистратор) = Тип("ДокументСсылка.РаспределениеПрочихЗатрат")
					Или Ложь;
			
			Если ФормироватьПоРегистрамИсточникам Тогда
				ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПрочиеАктивыПассивы.НаборЗаписей");
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
				ЭлементБлокировки.УстановитьЗначение("Регистратор", Регистратор);

				ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.НаборЗаписей");
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
				ЭлементБлокировки.УстановитьЗначение("Регистратор", Регистратор);
			Иначе
				ЭлементБлокировки = Блокировка.Добавить("Документ." + Регистратор.Метаданные().Имя);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
				ЭлементБлокировки.УстановитьЗначение("Ссылка", Регистратор);
			КонецЕсли;
			
			Блокировка.Заблокировать();
				
			НаборЗаписей = СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Регистратор);
			
			ДвиженияПоПрочимАктивамПассивам = Неопределено;
			Если Не ФормироватьПоРегистрамИсточникам Тогда
				МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Регистратор);
				ДанныеДляПроведения = МенеджерДокумента.ДанныеДокументаДляПроведения(Регистратор, МетаданныеРегистра.Имя);
				ДанныеДляПроведения.Свойство("ТаблицаДвиженияПоПрочимАктивамПассивам", ДвиженияПоПрочимАктивамПассивам); // ТаблицаЗначений -
			Иначе
				Запрос.УстановитьПараметр("Регистратор", Регистратор);
				ДвиженияПоПрочимАктивамПассивам = Запрос.Выполнить().Выгрузить();
			КонецЕсли;
			
			Если ДвиженияПоПрочимАктивамПассивам <> Неопределено И ДвиженияПоПрочимАктивамПассивам.Количество() Тогда
				ОбщегоНазначенияУТ.ДобавитьИдентификаторыВТаблицуЗначений(ДвиженияПоПрочимАктивамПассивам);
				НаборЗаписей.Загрузить(ДвиженияПоПрочимАктивамПассивам);
			КонецЕсли;
			
			Если НаборЗаписей.Модифицированность() Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			Шаблон = НСтр("ru = 'Не удалось записать данные в регистр %1 по регистратору ""%2"", по причине: %3'");
			ТекстСообщения = 
				СтрШаблон(Шаблон,
					ПолноеИмяРегистра,
					Регистратор,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,
				МетаданныеРегистра,
				,
				ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
		
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

Функция ДокументСОнлайнДвижениями()
	
	ТипыДокументов = Новый Массив();
	ТипыДокументов.Добавить("ВзаимозачетЗадолженности");
	ТипыДокументов.Добавить("КорректировкаЗадолженностиПоФинансовымИнструментам");
	ТипыДокументов.Добавить("КорректировкаПриобретения");
	ТипыДокументов.Добавить("НачисленияКредитовИДепозитов");
	ТипыДокументов.Добавить("ПоступлениеБезналичныхДенежныхСредств");
	ТипыДокументов.Добавить("ПриобретениеУслугПрочихАктивов");
	ТипыДокументов.Добавить("ПриходныйКассовыйОрдер");
	ТипыДокументов.Добавить("ПрочееОприходованиеТоваров");
	ТипыДокументов.Добавить("ПрочиеДоходыРасходы");
	ТипыДокументов.Добавить("РасходныйКассовыйОрдер");
	ТипыДокументов.Добавить("РеализацияУслугПрочихАктивов");
	ТипыДокументов.Добавить("СписаниеБезналичныхДенежныхСредств");
	ТипыДокументов.Добавить("КорректировкаЗадолженности");
	ТипыДокументов.Добавить("СписаниеПринятыхНаХранениеТоваров");
	
	
	Возврат ТипыДокументов;
	
КонецФункции

Функция ТекстРегистрацииДанныхКОбновлению()
	
	Шаблон = "
	|ВЫБРАТЬ
	|	Документ.Ссылка КАК Регистратор
	|ИЗ
	|	&ТипДокумента КАК Документ
	|ГДЕ
	|	Документ.Проведен
	|	И НЕ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			РегистрНакопления.ДвиженияПоПрочимАктивамПассивам КАК ДвиженияПоПрочимАктивамПассивам
	|		ГДЕ
	|			ДвиженияПоПрочимАктивамПассивам.Регистратор = Документ.Ссылка
	|		)
	|	И ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			РегистрНакопления.ПрочиеАктивыПассивы КАК ПрочиеАктивыПассивы
	|		ГДЕ
	|			ПрочиеАктивыПассивы.Регистратор = Документ.Ссылка
	|			И ПрочиеАктивыПассивы.ВидИсточника = ЗНАЧЕНИЕ(Перечисление.ВидыИсточниковДвижений.ПустаяСсылка)
	|			И НЕ ПрочиеАктивыПассивы.Статья В (
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки)
	|				)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			РегистрНакопления.ДвиженияДенежныеСредстваДоходыРасходы КАК ДенежныеСредстваДоходыРасходы
	|		ГДЕ
	|			ДенежныеСредстваДоходыРасходы.Регистратор = Документ.Ссылка
	|			И ДенежныеСредстваДоходыРасходы.СтатьяДоходовРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|			И НЕ ДенежныеСредстваДоходыРасходы.СтатьяДоходовРасходов В (
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки)
	|				)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК ДоходыРасходыПрочиеАктивыПассивы
	|		ГДЕ
	|			ДоходыРасходыПрочиеАктивыПассивы.Регистратор = Документ.Ссылка
	|			И (ДоходыРасходыПрочиеАктивыПассивы.Статья ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|				ИЛИ ДоходыРасходыПрочиеАктивыПассивы.КорСтатья ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|			И НЕ ДоходыРасходыПрочиеАктивыПассивы.Статья В (
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки)
	|				)
	|			И НЕ ДоходыРасходыПрочиеАктивыПассивы.КорСтатья В (
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки)
	|				)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			РегистрНакопления.ДвиженияКонтрагентДоходыРасходы КАК КонтрагентДоходыРасходы
	|		ГДЕ
	|			КонтрагентДоходыРасходы.Регистратор = Документ.Ссылка
	|			И КонтрагентДоходыРасходы.СтатьяДоходовРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			РегистрНакопления.ДвиженияКонтрагентКонтрагент КАК КонтрагентКонтрагент
	|		ГДЕ
	|			КонтрагентКонтрагент.Регистратор = Документ.Ссылка
	|			И ((КонтрагентКонтрагент.Организация <> КонтрагентКонтрагент.КорКонтрагент
	|				И КонтрагентКонтрагент.КорКонтрагент ССЫЛКА Справочник.Организации
	|				И КонтрагентКонтрагент.Организация.ГоловнаяОрганизация = ВЫРАЗИТЬ(КонтрагентКонтрагент.КорКонтрагент КАК Справочник.Организации).ГоловнаяОрганизация)
	|			ИЛИ (КонтрагентКонтрагент.Организация <> КонтрагентКонтрагент.Контрагент
	|				И КонтрагентКонтрагент.Контрагент ССЫЛКА Справочник.Организации
	|				И КонтрагентКонтрагент.Организация.ГоловнаяОрганизация = ВЫРАЗИТЬ(КонтрагентКонтрагент.Контрагент КАК Справочник.Организации).ГоловнаяОрганизация)
	|			)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			РегистрНакопления.ДвиженияНоменклатураДоходыРасходы КАК НоменклатураДоходыРасходы
	|		ГДЕ
	|			НоменклатураДоходыРасходы.Регистратор = Документ.Ссылка
	|			И НоменклатураДоходыРасходы.СтатьяДоходовРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|		)
	|	И &ДополнительныеУсловия
	|";
	
	ТекстыЗапроса = Новый Массив();
	
	Для Каждого ТипДокумента Из ДокументСОнлайнДвижениями() Цикл
		Если ТипДокумента = "ПоступлениеБезналичныхДенежныхСредств"
		 ИЛИ ТипДокумента = "СписаниеБезналичныхДенежныхСредств" Тогда
			ДополнительныеУсловия = "Документ.ПроведеноБанком";
		Иначе
			ДополнительныеУсловия = "ИСТИНА";
		КонецЕсли;
		
		ТекстЗапроса = Шаблон;
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТипДокумента", "Документ." + ТипДокумента);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ДополнительныеУсловия", ДополнительныеУсловия);
		ТекстыЗапроса.Добавить(ТекстЗапроса);
	КонецЦикла;
	
	Возврат СтрСоединить(ТекстыЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
