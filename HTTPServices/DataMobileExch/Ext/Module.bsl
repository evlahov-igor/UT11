
// ТОЧКА ВХОДА
Функция API(Запрос)
	
	СтруктураПараметровЗапроса = ПолучитьСтруктуруПараметровЗапроса(Запрос);
	
	МетодЗапроса = СтруктураПараметровЗапроса.МетодЗапроса;
	ИмяОбъекта = СтруктураПараметровЗапроса.ИмяОбъекта;
	ИмяМетода = СтруктураПараметровЗапроса.ИмяМетода;
	ВремяВызова = ТекущаяДата();
	
	Роутинг = "";
	
	Попытка 
		
		Если ИмяОбъекта = "system" Или ИмяОбъекта = Неопределено Или ИмяОбъекта = "" Или ИмяОбъекта = "/" Тогда 
			
			Результат = ОбработатьОбъектSystem(Запрос, СтруктураПараметровЗапроса, Роутинг);
			
		ИначеЕсли ИмяОбъекта = "device" Тогда 
			
			Результат = ОбработатьОбъектDevices(Запрос, СтруктураПараметровЗапроса, Роутинг);
			
		ИначеЕсли ИмяОбъекта = "users" Тогда 
			
			Результат = ОбработатьОбъектUsers(Запрос, СтруктураПараметровЗапроса, Роутинг);	
			
		ИначеЕсли ИмяОбъекта = "templates" Тогда     
			
			Результат = ОбработатьОбъектTemplates(Запрос, СтруктураПараметровЗапроса, Роутинг);
			
		ИначеЕсли ИмяОбъекта = "barcode_templates" Тогда 
			
			Результат = ОбработатьОбъектBarcodeTemplates(Запрос, СтруктураПараметровЗапроса, Роутинг);
			
		ИначеЕсли ИмяОбъекта = "arts" Тогда                
			
			Результат = ОбработатьОбъектArts(Запрос, СтруктураПараметровЗапроса, Роутинг);
			
		ИначеЕсли ИмяОбъекта = "units" Тогда 
			
			Результат = ОбработатьОбъектUnits(Запрос, СтруктураПараметровЗапроса, Роутинг);
			
		ИначеЕсли ИмяОбъекта = "packs" Тогда 
			
			Результат = ОбработатьОбъектPacks(Запрос, СтруктураПараметровЗапроса, Роутинг);
			
		ИначеЕсли ИмяОбъекта = "cells" Тогда 
			
			Результат = ОбработатьОбъектCells(Запрос, СтруктураПараметровЗапроса, Роутинг);
			
		ИначеЕсли ИмяОбъекта = "clients" Тогда  
			
			Результат = ОбработатьОбъектClients(Запрос, СтруктураПараметровЗапроса, Роутинг);	
			
		ИначеЕсли ИмяОбъекта = "warehouses" Тогда 
			
			Результат = ОбработатьОбъектWarehouses(Запрос, СтруктураПараметровЗапроса, Роутинг);
			
		ИначеЕсли ИмяОбъекта = "docs" Тогда   
			
			Результат = ОбработатьОбъектDocs(Запрос, СтруктураПараметровЗапроса, Роутинг);
			
		ИначеЕсли ИмяОбъекта = "egais" Тогда      
			
			Результат = ОбработатьОбъектEgais(Запрос, СтруктураПараметровЗапроса, Роутинг);
			
		ИначеЕсли ИмяОбъекта = "forms" Тогда 
			
			Результат = ОбработатьОбъектForms(Запрос, СтруктураПараметровЗапроса, Роутинг);
			
		ИначеЕсли ИмяОбъекта = "print" Тогда 
			
			Результат = ОбработатьОбъектPrint(Запрос, СтруктураПараметровЗапроса, Роутинг);
			
		ИначеЕсли ИмяОбъекта = "fast_access" Тогда 
			
			Результат = ОбработатьОбъектFastAccess(Запрос, СтруктураПараметровЗапроса, Роутинг);
			
		ИначеЕсли ИмяОбъекта = "photos" Тогда               
			
			Результат = ОбработатьОбъектPhotos(Запрос, СтруктураПараметровЗапроса, Роутинг);
			
		ИначеЕсли ИмяОбъекта = "others" Тогда               
			
			Результат = ОбработатьОбъектOthers(Запрос, СтруктураПараметровЗапроса, Роутинг);
			
		ИначеЕсли ИмяОбъекта = "crpt" Тогда               
			
			Результат = ОбработатьОбъектCrpt(Запрос, СтруктураПараметровЗапроса, Роутинг);
			
		Иначе		
			
			Результат = "001" 
			
		КонецЕсли;
		
		Если Результат = "001" Тогда
			
			СтруктураОписанияОшибки = Новый  Структура;				
			СтруктураОписанияОшибки.Вставить("Описание", "Не найден метод " + МетодЗапроса + " " + ИмяМетода + " у объекта " + ИмяОбъекта + ". ");
			
			Результат = ПодготовитьОтветJSON(, СтруктураОписанияОшибки);
			
		КонецЕсли;
		
	Исключение
		
		СтруктураОписанияОшибки = Новый  Структура;				
		СтруктураОписанияОшибки.Вставить("Описание", "Ошибка метода " + МетодЗапроса + " " + ИмяМетода + " у объекта " + ИмяОбъекта + ". По причине: " + ОписаниеОшибки());
		
		Результат = ПодготовитьОтветJSON(, СтруктураОписанияОшибки);
		
	КонецПопытки;	
	
	ContentType = "application/json";
	Попытка	
		Если Результат.Свойство("ContentType") Тогда
			ContentType = Результат.ContentType;
		КонецЕсли;		
	Исключение
	КонецПопытки;
	
	Попытка	
		Если Результат.Свойство("Result") Тогда
			Результат = Результат.Result;
		КонецЕсли;		
	Исключение
	КонецПопытки;	
	
	Ответ = Новый HTTPСервисОтвет(200);
	
	Попытка
		
		Если ContentType = "application/json" Тогда
			Result = СформироватьJSONОтвета(Результат);
		Иначе
			Result = Результат;
		КонецЕсли;	
		
		Ответ.УстановитьТелоИзСтроки(Result, "UTF-8", ИспользованиеByteOrderMark.НеИспользовать);
		
	Исключение 
		
		СтруктураОписанияОшибки = Новый  Структура;				
		СтруктураОписанияОшибки.Вставить("Описание", "Ошибка ответа метода " + МетодЗапроса + " " + ИмяМетода + " у объекта " + ИмяОбъекта + ". По причине: " + ОписаниеОшибки());
		
		Результат = ПодготовитьОтветJSON(, СтруктураОписанияОшибки);
		
		ContentType = "application/json";
		Result = СформироватьJSONОтвета(Результат);
		
		Ответ.УстановитьТелоИзСтроки(Result, "UTF-8", ИспользованиеByteOrderMark.НеИспользовать);
		
	КонецПопытки;
	
	Ответ.Заголовки.Вставить("Content-Type", ContentType + "; charset=utf-8");
	
	Попытка	
		Если Результат.Свойство("description") Тогда		
			Ответ.КодСостояния = 901;  
			Ответ.Причина = "error"; 
		КонецЕсли;		
	Исключение		
	КонецПопытки;
		
	//ЛОГИРОВАНИЕ
	ИспользоватьЛогирование = Ложь;
	КаталогХраненияЛогов = "C:\DM\";
	Попытка
		СтруктураНастройки = ДатаМобайл_ОбщийМодуль.НастройкиПолучить();
		ИспользоватьЛогирование = СтруктураНастройки.ИспользоватьЛогирование;
		КаталогХраненияЛогов = СтруктураНастройки.КаталогХраненияЛогов;
	Исключение			
	КонецПопытки;
	
	Если ИспользоватьЛогирование И Не Роутинг = "Ping" Тогда // отключаем лог ping 		
		Попытка 	
			ЗаписатьВЛог(Запрос, Ответ, Результат, Роутинг, "", КаталогХраненияЛогов, ВремяВызова);		
		Исключение 		
			Попытка 				
				ЗаписатьВЛог("", "", "", "", ОписаниеОшибки(), КаталогХраненияЛогов, ВремяВызова); 
			Исключение
			КонецПопытки;		
		КонецПопытки;	
	КонецЕсли;	
	
	Возврат Ответ;
	
КонецФункции

// ЛОГИРОВАНИЕ
Процедура ЗаписатьВЛог(Запрос, Ответ, Результат, Роутинг, ОписаниеОшибки, КаталогСохраненияЛогов, ВремяВызова)
	
	//Каталог сохранения логов по умолчанию	
	Если Не ЗначениеЗаполнено(КаталогСохраненияЛогов) Тогда		
		Возврат;
	КонецЕсли;
	
	// версия АРМ модуля
	ВерсияАРМ = ДатаМобайл_ОбщийМодуль.ПолучитьВерсиюАРМ();
	
	ВремяВызоваШтампЗаписи = Число(Формат(ВремяВызова - Дата(1970, 1, 1, 1, 0, 0), "ЧГ=0"));
	
	ВремяОтвета = ТекущаяДата();
	ВремяОтветаШтампЗаписи = Число(Формат(ВремяОтвета - Дата(1970, 1, 1, 1, 0, 0), "ЧГ=0"));
	
	LogЗапись =  Новый ЗаписьJSON;
	LogПараметрыЗаписи = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Windows, " ", Истина);
	
	НастройкиСериализации = Новый НастройкиСериализацииJSON;
	НастройкиСериализации.ФорматСериализацииДаты = ФорматДатыJSON.JavaScript;
	
	Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
		LogИмяФайла = КаталогСохраненияЛогов + "error" + "_" + Формат(ВремяОтвета, "ДФ='dd_MM_yyyy_HH_mm_ss'") + "_1C.log";
		
		ТекущийФайл = Новый Файл(LogИмяФайла);
		
		Сч = 0;
		
		Пока ТекущийФайл.Существует() И Сч < 20 Цикл
			Сч = Сч + 1; 
			
			LogИмяФайла = КаталогСохраненияЛогов + "error" + "_" + Формат(ВремяОтвета, "ДФ='dd_MM_yyyy_HH_mm_ss'") + "_" + Сч + "_1C.log";
			
			ТекущийФайл = Новый Файл(LogИмяФайла);
		КонецЦикла;
		
		LogЗапись.ОткрытьФайл(LogИмяФайла,"UTF-8", , LogПараметрыЗаписи);
		
		LogДанные = Новый Структура;
		LogДанные.Вставить("date_time"     , Формат(ВремяОтвета, "ДФ='dd.MM.yyyy HH:mm:ss'"));
		LogДанные.Вставить("exchange_type" , "REST");
		LogДанные.Вставить("error"         , ОписаниеОшибки);
		LogДанные.Вставить("version_arm_1c", ВерсияАРМ);
		
		ЗаписатьJSON(LogЗапись, LogДанные, НастройкиСериализации);
		LogЗапись.Закрыть();
		
	Иначе	
		
		// Получим параметры запроса строкой для полного url
		ЗапросСтрокаПараметров = "";
		
		Для каждого СтрокаПараметра Из Запрос.ПараметрыЗапроса Цикл
			Если ЗапросСтрокаПараметров <> "" Тогда
				ЗапросСтрокаПараметров = ЗапросСтрокаПараметров + "&";
			КонецЕсли;	
			ЗапросСтрокаПараметров = ЗапросСтрокаПараметров+СтрокаПараметра.Ключ + "=" + СтрокаПараметра.Значение;		
		КонецЦикла;
		
		Если ЗапросСтрокаПараметров <> "" Тогда
			ЗапросСтрокаПараметров = "?" + ЗапросСтрокаПараметров;
		КонецЕсли;
		
		// Получим наименование метода api
		LogИмяМетода = Запрос.ОтносительныйURL;
		LogИмяМетода = СтрЗаменить(LogИмяМетода, "/api/", "");
		LogИмяМетода = СтрЗаменить(LogИмяМетода, "/", "_");
		
		// Установим соответствие старой функции веб сервиса
		LogРоутинг = "";
		Если ЗначениеЗаполнено(Роутинг) Тогда
			LogРоутинг = "_(" + Роутинг + ")";	
		КонецЕсли;
		
		// Пометим файлы с ошибками
		ErrorТэг = "";
		Если Ответ.КодСостояния <> 200 Тогда
			ErrorТэг = "_error";
		КонецЕсли;	
		
		LogИмяФайла = КаталогСохраненияЛогов + LogИмяМетода + LogРоутинг + "_" + Формат(ВремяОтвета, "ДФ='dd_MM_yyyy_HH_mm_ss'") + ErrorТэг + "_1C.log";
		
		ТекущийФайл = Новый Файл(LogИмяФайла);
		Сч = 0;
		
		Пока ТекущийФайл.Существует() И Сч < 20 Цикл
			Сч = Сч + 1;
			LogИмяФайла = КаталогСохраненияЛогов + LogИмяМетода + LogРоутинг + "_" + Формат(ВремяОтвета, "ДФ='dd_MM_yyyy_HH_mm_ss'") + ErrorТэг + "_" + Сч +  "_1C.log";
			ТекущийФайл = Новый Файл(LogИмяФайла);
		КонецЦикла;
		
		LogЗапись.ОткрытьФайл(LogИмяФайла, "UTF-8",, LogПараметрыЗаписи);
		
		LogДанные = Новый Структура;
		LogДанные.Вставить("date_time"    , Формат(ВремяОтвета,"ДФ='dd.MM.yyyy HH:mm:ss'"));
		LogДанные.Вставить("exchange_type", "REST");
		LogДанные.Вставить("method"       , Запрос.HTTPМетод);
		LogДанные.Вставить("function"     , Запрос.ОтносительныйURL);
		LogДанные.Вставить("url"          ,	Запрос.БазовыйURL+Запрос.ОтносительныйURL);  
		LogДанные.Вставить("full_url"     , Запрос.БазовыйURL+Запрос.ОтносительныйURL + ЗапросСтрокаПараметров);
		
		LogДанныеRequest = Новый Структура;
		LogДанныеRequest.Вставить("headers"     , Запрос.Заголовки);
		LogДанныеRequest.Вставить("query_params", Запрос.ПараметрыЗапроса);
		
		// Прочитаем тело для корректного визуального форматирования JSON файла 
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Запрос.ПолучитьТелоКакСтроку());
		ЗапросТело = Неопределено;
		СформироватьДерево(ЧтениеJSON, ЗапросТело);
		ЧтениеJSON.Закрыть();
		LogДанныеRequest.Вставить("body", 	ЗапросТело);
		
		LogДанные.Вставить("request", LogДанныеRequest);
		
		LogДанныеResponse = Новый Структура;
		LogДанныеResponse.Вставить("headers"    , Ответ.Заголовки);
		LogДанныеResponse.Вставить("status_code", Ответ.КодСостояния);
		LogДанныеResponse.Вставить("reason"     , Ответ.Причина);
		
		// В качестве тела укажем сам редультат для корректного визуального форматирования JSON файла
		LogДанныеResponse.Вставить("body",		  Результат);		
		LogДанные.Вставить("response"          , LogДанныеResponse);
		LogДанные.Вставить("request_time"      , Формат(ВремяВызова, "ДФ='dd.MM.yyyy HH:mm:ss'"));
		LogДанные.Вставить("request_timestamp" , ВремяВызоваШтампЗаписи);
		LogДанные.Вставить("response_time"     , Формат(ВремяОтвета, "ДФ='dd.MM.yyyy HH:mm:ss'"));
		LogДанные.Вставить("response_timestamp", ВремяОтветаШтампЗаписи);		
		LogДанные.Вставить("duration_seconds"  , ВремяОтветаШтампЗаписи - ВремяВызоваШтампЗаписи);
		LogДанные.Вставить("version_arm_1c"    , ВерсияАРМ);
		
		ЗаписатьJSON(LogЗапись, LogДанные, НастройкиСериализации);
		
		LogЗапись.Закрыть();		
		
	КонецЕсли;
	
КонецПроцедуры

// ОБРАБОТКА ОБЪЕКТОВ 
Функция ОбработатьОбъектSystem(Запрос, СтруктураПараметровЗапроса, Роутинг)
	
	Ответ = Неопределено;
	
	МетодЗапроса = СтруктураПараметровЗапроса.МетодЗапроса;
	ИмяОбъекта = СтруктураПараметровЗапроса.ИмяОбъекта;
	ИмяМетода = СтруктураПараметровЗапроса.ИмяМетода;
	ВерсияПО = СтруктураПараметровЗапроса.ВерсияПО;
	
	Если ИмяОбъекта = Неопределено Или ИмяОбъекта = "" Или ИмяОбъекта = "/" Тогда
		
		Роутинг = "DMServerInfo"; 
		
		Ответ = ДатаМобайл_HTTP_Логика.DMServerInfo();
		
	ИначеЕсли МетодЗапроса = "GET" Тогда
		
		Если ИмяМетода = "/info" Тогда
			
			Роутинг = "DMServerInfo"; 
			
			Ответ = ДатаМобайл_HTTP_Логика.DMServerInfo();
			
		ИначеЕсли ИмяМетода = "/version" Тогда
			
			Роутинг = "GetVersion"; 
			
			Ответ = ДатаМобайл_HTTP_Логика.GetVersion(ВерсияПО);
			
		ИначеЕсли ИмяМетода = "/ping" Тогда
			
			Роутинг = "Ping"; 
			
			Ответ = ДатаМобайл_HTTP_Логика.Ping();
			
		Иначе
			
			Ответ = "001";
			
		КонецЕсли;
		
	ИначеЕсли МетодЗапроса = "POST" Тогда
		
		Ответ = "001";
		
	ИначеЕсли МетодЗапроса = "PUT" Тогда
		
		Ответ = "001";
		
	ИначеЕсли МетодЗапроса = "DELETE" Тогда
		
		Ответ = "001";
		
	Иначе
		
		Ответ = "001";
		
	КонецЕсли;	
	
	Возврат Ответ;
	
КонецФункции

Функция ОбработатьОбъектDevices(Запрос, СтруктураПараметровЗапроса, Роутинг)
	
	Ответ = Неопределено;
	СтруктураHttpПараметров = Новый Структура;
	
	МетодЗапроса = СтруктураПараметровЗапроса.МетодЗапроса;
	ИмяОбъекта = СтруктураПараметровЗапроса.ИмяОбъекта;
	ИмяМетода = СтруктураПараметровЗапроса.ИмяМетода;
	AppVersion = СтруктураПараметровЗапроса.AppVersion;
	
	Если МетодЗапроса = "GET" Тогда
		
		Если ИмяМетода = "/data" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id = СтруктураHttpПараметров.device_id; 
			username = СтруктураHttpПараметров.username; 
			
			Роутинг = "IsNewData"; 
			
			Ответ = ДатаМобайл_HTTP_Логика.IsNewData(device_id, username); 
			
		Иначе
			
			Ответ = "001";
			
		КонецЕсли;
		
	ИначеЕсли МетодЗапроса = "POST" Тогда	
		
		Если ИмяМетода = "/login" Тогда    
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id = СтруктураHttpПараметров.device_id; 
			username = СтруктураHttpПараметров.username;
			
			Попытка
				device_name = СтруктураHttpПараметров.device_name;	
			Исключение
				device_name = "";
			КонецПопытки;
			
			Роутинг = "Login"; 
			
			Ответ = ДатаМобайл_HTTP_Логика.Login(device_id, username, device_name, AppVersion);
			
		ИначеЕсли ИмяМетода = "/logout" Тогда 	
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id = СтруктураHttpПараметров.device_id; 
			username = СтруктураHttpПараметров.username; 
			
			Роутинг = "Logout";
			
			Ответ = ДатаМобайл_HTTP_Логика.Logout(device_id, username);
			
		Иначе
			
			Ответ = "001";
			
		КонецЕсли;
		
	ИначеЕсли МетодЗапроса = "PUT" Тогда
		
		Ответ = "001";
		
	ИначеЕсли МетодЗапроса = "DELETE" Тогда
		
		Ответ = "001";
		
	Иначе
		
		Ответ = "001";
		
	КонецЕсли;	
	
	Возврат Ответ;
	
КонецФункции  

Функция ОбработатьОбъектUsers(Запрос, СтруктураПараметровЗапроса, Роутинг)
	
	Ответ = Неопределено;
	СтруктураHttpПараметров = Новый Структура;
	
	МетодЗапроса = СтруктураПараметровЗапроса.МетодЗапроса;
	ИмяОбъекта = СтруктураПараметровЗапроса.ИмяОбъекта;
	ИмяМетода = СтруктураПараметровЗапроса.ИмяМетода;
	
	Если ИмяМетода = "" Тогда
		
		ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
		
		device_id = СтруктураHttpПараметров.device_id; 
		username = СтруктураHttpПараметров.username; 
		
		Роутинг = "GetUsers"; 
		
		Ответ = ДатаМобайл_HTTP_Логика.GetUsers(device_id, username);		
		
	ИначеЕсли ИмяМетода = "/roles" Тогда
		
		ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
		
		device_id = СтруктураHttpПараметров.device_id; 
		username = СтруктураHttpПараметров.username; 
		
		Роутинг = "GetRoles"; 
		
		Ответ = ДатаМобайл_HTTP_Логика.GetRoles(device_id, username);	
		
	Иначе
		
		Ответ = "001";
		
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции

Функция ОбработатьОбъектTemplates(Запрос, СтруктураПараметровЗапроса, Роутинг)
	
	Ответ = Неопределено;
	СтруктураHttpПараметров = Новый Структура;
	
	МетодЗапроса = СтруктураПараметровЗапроса.МетодЗапроса;
	ИмяОбъекта = СтруктураПараметровЗапроса.ИмяОбъекта;
	ИмяМетода = СтруктураПараметровЗапроса.ИмяМетода;
	AppVersion = СтруктураПараметровЗапроса.AppVersion;
	
	Если ИмяМетода = "" Тогда
		
		ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
		
		device_id = СтруктураHttpПараметров.device_id; 
		username = СтруктураHttpПараметров.username; 
		
		Роутинг = "GetTemplates";
		
		Ответ = ДатаМобайл_HTTP_Логика.GetTemplates(device_id, username, AppVersion); 	
		
	Иначе
		
		Ответ = "001";
		
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции 

Функция ОбработатьОбъектBarcodeTemplates(Запрос, СтруктураПараметровЗапроса, Роутинг)
	
	Ответ = Неопределено;
	СтруктураHttpПараметров = Новый Структура;
	
	МетодЗапроса = СтруктураПараметровЗапроса.МетодЗапроса;
	ИмяОбъекта = СтруктураПараметровЗапроса.ИмяОбъекта;
	ИмяМетода = СтруктураПараметровЗапроса.ИмяМетода;
	
	Если ИмяМетода = "" Тогда
		
		ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
		
		device_id = СтруктураHttpПараметров.device_id; 
		username = СтруктураHttpПараметров.username; 
		
		Роутинг = "GetBarcodeTemplates";
		
		Ответ = ДатаМобайл_HTTP_Логика.GetBarcodeTemplates(device_id, username); 	
		
	Иначе
		
		Ответ = "001";
		
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции 

Функция ОбработатьОбъектArts(Запрос, СтруктураПараметровЗапроса, Роутинг)
	
	Ответ = Неопределено;
	СтруктураHttpПараметров = Новый Структура;
	
	МетодЗапроса = СтруктураПараметровЗапроса.МетодЗапроса;
	ИмяОбъекта = СтруктураПараметровЗапроса.ИмяОбъекта;
	ИмяМетода = СтруктураПараметровЗапроса.ИмяМетода;
	
	Если МетодЗапроса = "GET" Тогда
		
		
		Если ИмяМетода = "" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 		= СтруктураHttpПараметров.device_id; 
			username 		= СтруктураHttpПараметров.username; 
			operation_type	= СтруктураHttpПараметров.operation_type;
			barcode 		= СтруктураHttpПараметров.barcode; 
			doc_id 			= СтруктураHttpПараметров.doc_id;
			cell_barcode	= СтруктураHttpПараметров.cell_barcode;
			gs1 		    = СтруктураHttpПараметров.gs1;
			
			Если ЗначениеЗаполнено(doc_id) Тогда
				
				Роутинг = "GetDocArts";
				
				Ответ = ДатаМобайл_HTTP_Логика.GetDocArts(device_id, username, doc_id);
				
			ИначеЕсли ЗначениеЗаполнено(cell_barcode) Тогда
				
				Роутинг = "GetCellContent";
				
				Ответ = ДатаМобайл_HTTP_Логика.GetCellContent(device_id, username, cell_barcode);
				
			Иначе
				
				Роутинг = "GetNewArts";
				
				Ответ = ДатаМобайл_HTTP_Логика.GetNewArts(device_id, username);
				
			КонецЕсли;
			
		ИначеЕсли ИмяМетода = "/rest" Тогда  	
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	= СтруктураHttpПараметров.device_id;
			username 	= СтруктураHttpПараметров.username;
			art_id	 	= СтруктураHttpПараметров.art_id;
			Params   	= "";
			
			Роутинг = "GetArtRest";
			
			Ответ = ДатаМобайл_HTTP_Логика.GetArtRest(device_id, username, art_id, Params);	
			
		ИначеЕсли ИмяМетода = "/sn" Тогда  	
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	 = СтруктураHttpПараметров.device_id;
			username	 = СтруктураHttpПараметров.username;
			doc_id		 = СтруктураHttpПараметров.doc_id;
			art_id	 	 = СтруктураHttpПараметров.art_id;
			cell_barcode = СтруктураHttpПараметров.cell_barcode;
			
			Роутинг = "GetSNList";
			
			Ответ = ДатаМобайл_HTTP_Логика.GetSNList(device_id, username, art_id, cell_barcode, doc_id);	
			
		ИначеЕсли ИмяМетода = "/attrs/names" Тогда  
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id = СтруктураHttpПараметров.device_id;
			username = СтруктураHttpПараметров.username;
			
			Роутинг = "GetArtAttributesName";
			
			Ответ = ДатаМобайл_HTTP_Логика.GetArtAttributesName(device_id, username);
			
		ИначеЕсли ИмяМетода = "/sn_types" Тогда  	
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id = СтруктураHttpПараметров.device_id;
			username = СтруктураHttpПараметров.username;
			
			params = "";
			
			Роутинг = "GetSNTypes";
			
			Ответ = ДатаМобайл_HTTP_Логика.GetSNTypes(СтруктураHttpПараметров);
			
		ИначеЕсли ИмяМетода = "/marks" Тогда  	
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	= СтруктураHttpПараметров.device_id;
			username 	= СтруктураHttpПараметров.username;
			
			Роутинг = "GetArtMarks";
			
			Ответ = ДатаМобайл_HTTP_Логика.GetArtMarks(device_id, username);
			
		ИначеЕсли ИмяМетода = "/parts" Тогда  	
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	= СтруктураHttpПараметров.device_id;
			username 	= СтруктураHttpПараметров.username; 
			part 	= СтруктураHttpПараметров.part;   
			doc_id 	= СтруктураHttpПараметров.doc_id;
			
			Роутинг = "GetNewArts";
			
			Если Не ЗначениеЗаполнено(doc_id) Тогда
				
				Ответ = ДатаМобайл_HTTP_Логика.GetNewArts(device_id, username, part);
				
			Иначе
				
				Ответ = ДатаМобайл_HTTP_Логика.GetDocArts(device_id, username, doc_id, part);
				
			КонецЕсли;
			
		ИначеЕсли ИмяМетода = "/prices/names" Тогда 
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id = СтруктураHttpПараметров.device_id;
			username = СтруктураHttpПараметров.username;
			
			Роутинг = "GetArtsPricesNames";
			
			Ответ = ДатаМобайл_HTTP_Логика.GetArtsPricesNames(device_id, username);
			
		Иначе
			
			Ответ = "001";
			
		КонецЕсли;
		
		
	ИначеЕсли МетодЗапроса = "POST" Тогда
		
		Если ИмяМетода = "/barcodes/generate" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id = СтруктураHttpПараметров.device_id; 
			username = СтруктураHttpПараметров.username; 
			art_id = СтруктураHttpПараметров.art_id; 
			Barcode = СтруктураHttpПараметров.barcode; 
			unit_id = СтруктураHttpПараметров.unit_id;
			params = СтруктураHttpПараметров.params;
			p1 = params.Получить("1");
			p2 = params.Получить("2");
			p3 = params.Получить("3");
			
			Роутинг = "GenerateNewBC";
			
			Ответ = ДатаМобайл_HTTP_Логика.GenerateNewBC(device_id, username, art_id, unit_id, p1, p2); 
			
		ИначеЕсли ИмяМетода = "/scan" Тогда 			
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 		= СтруктураHttpПараметров.device_id; 
			username 		= СтруктураHttpПараметров.username; 
			operation_type	= СтруктураHttpПараметров.operation_type;
			barcode 		= СтруктураHttpПараметров.barcode; 
			doc_id 			= СтруктураHttpПараметров.doc_id;
			cell_barcode	= СтруктураHttpПараметров.cell_barcode;
			gs1 		    = СтруктураHttpПараметров.gs1;
			
			obj_kiz 			= ПолучитьСтруктуруИзСоответствия(СтруктураHttpПараметров.kiz); 
			
			Если ЗначениеЗаполнено(obj_kiz) Тогда 
				
				СтруктураДанных = Новый Структура;
				СтруктураДанных.Вставить("device_id", device_id);
				СтруктураДанных.Вставить("username", username);
				СтруктураДанных.Вставить("barcode", barcode);
				СтруктураДанных.Вставить("doc_id", doc_id);
				СтруктураДанных.Вставить("cell_barcode", cell_barcode);
				СтруктураДанных.Вставить("gs1", gs1);
				
				
				Роутинг = "OnArtMarkScan";
				
				Если operation_type = 0 Тогда  // Select
					
					Роутинг = "OnArtMarkScanSelect";
					
					Ответ = ДатаМобайл_HTTP_Логика.OnArtMarkScanSelect(СтруктураДанных, obj_kiz);
					
				ИначеЕсли operation_type = 1 Тогда // Insert
					
					Роутинг = "OnArtMarkScanInsert";
					
					Ответ = ДатаМобайл_HTTP_Логика.OnArtMarkScanInsert(СтруктураДанных, obj_kiz);	
					
				КонецЕсли;
				
			Иначе
				Если ЗначениеЗаполнено(Barcode) И ЗначениеЗаполнено(doc_id) Тогда
					
					Роутинг = "OnArtScan";
					
					Если operation_type = 0 Тогда  // Select
						
						Роутинг = "OnArtScanSelect";
						
						Ответ = ДатаМобайл_HTTP_Логика.OnArtScanSelect(device_id, username, barcode, doc_id, cell_barcode, gs1);
						
					ИначеЕсли operation_type = 1 Тогда // Insert
						
						Роутинг = "OnArtScanInsert";
						
						Ответ = ДатаМобайл_HTTP_Логика.OnArtScanInsert(device_id, username, barcode, doc_id, cell_barcode, gs1);	
						
					КонецЕсли;
					
				ИначеЕсли ЗначениеЗаполнено(Barcode) Тогда
					
					Роутинг = "GetArtOnBC";
					
					Ответ = ДатаМобайл_HTTP_Логика.GetArtOnBC(device_id, username, barcode);
					
				КонецЕсли;
			КонецЕсли;		
		Иначе
			
			Ответ = "001";
			
		КонецЕсли;
		
	ИначеЕсли МетодЗапроса = "PUT" Тогда
		
		Если ИмяМетода = "/barcodes" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	= СтруктураHttpПараметров.device_id; 
			username    = СтруктураHttpПараметров.username; 
			art_id 	    = СтруктураHttpПараметров.art_id; 
			obj_barcode  = СтруктураHttpПараметров.barcode;  		
			
			Роутинг = "UpdateBarcode";
			
			Ответ = ДатаМобайл_HTTP_Логика.UpdateBarcode(device_id, username, art_id, obj_barcode);
			
		ИначеЕсли ИмяМетода = "" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			СтруктураArt = Новый Структура;
			
			device_id 	= СтруктураHttpПараметров.device_id; 
			username    = СтруктураHttpПараметров.username; 
			
			СтруктураArt.Вставить("id", СтруктураHttpПараметров.id); 
			СтруктураArt.Вставить("name", СтруктураHttpПараметров.name); 
			СтруктураArt.Вставить("price", СтруктураHttpПараметров.price); 
			СтруктураArt.Вставить("price_discount", СтруктураHttpПараметров.price_discount); 
			СтруктураArt.Вставить("is_use_sn", СтруктураHttpПараметров.is_use_sn); 
			СтруктураArt.Вставить("is_deleted", СтруктураHttpПараметров.is_deleted); 
			СтруктураArt.Вставить("mark_type", СтруктураHttpПараметров.mark_type); 
			СтруктураArt.Вставить("measure_type", СтруктураHttpПараметров.measure_type); 
			СтруктураArt.Вставить("sn_types", СтруктураHttpПараметров.sn_types); 
			СтруктураArt.Вставить("rest", СтруктураHttpПараметров.rest);
			obj_attributes = ПолучитьСтруктуруИзСоответствия(СтруктураHttpПараметров.attributes);
			СтруктураArt.Вставить("attributes", obj_attributes);
			
			obj_art 		 = ПолучитьСтруктуруИзСоответствия(СтруктураHttpПараметров.art); 
			obj_egais_art    = ПолучитьСтруктуруИзСоответствия(СтруктураHttpПараметров.egais_art);
			
			Если ЗначениеЗаполнено(obj_egais_art) Тогда
				
				Роутинг = "CreateEgaisArt";
				
				Ответ = ДатаМобайл_HTTP_Логика.UpdateArt(device_id, username, obj_art, obj_egais_art);
				
			Иначе	
				
				Роутинг = "UpdateArt";
				
				Ответ = ДатаМобайл_HTTP_Логика.UpdateArt(device_id, username, СтруктураArt);
				
			КонецЕсли;
			
		Иначе
			
			Ответ = "001";
			
		КонецЕсли;
		
	ИначеЕсли МетодЗапроса = "DELETE" Тогда
		
		Если ИмяМетода = "/barcodes" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	= СтруктураHttpПараметров.device_id; 
			username 	= СтруктураHttpПараметров.username; 
			art_id 		= СтруктураHttpПараметров.art_id; 
			barcode 	= СтруктураHttpПараметров.barcode; 
			
			Роутинг = "DeleteBarcode";
			
			Ответ = ДатаМобайл_HTTP_Логика.DeleteBarcode(device_id, username, art_id, barcode); 
			
		ИначеЕсли ИмяМетода = "" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id = СтруктураHttpПараметров.device_id; 
			username = СтруктураHttpПараметров.username; 
			art_id = СтруктураHttpПараметров.art_id; 
			
			Роутинг = "DeleteArt";
			
			Ответ = ДатаМобайл_HTTP_Логика.DeleteArt(device_id, username, art_id); 
			
		Иначе
			
			Ответ = "001";
			
		КонецЕсли;
		
	Иначе 
		
		Ответ = "001";
		
	КонецЕсли;	
	
	Возврат Ответ;
	
КонецФункции    

Функция ОбработатьОбъектUnits(Запрос, СтруктураПараметровЗапроса, Роутинг)
	
	Ответ = Неопределено;
	СтруктураHttpПараметров = Новый Структура;
	
	МетодЗапроса = СтруктураПараметровЗапроса.МетодЗапроса;
	ИмяОбъекта = СтруктураПараметровЗапроса.ИмяОбъекта;
	ИмяМетода = СтруктураПараметровЗапроса.ИмяМетода;
	
	Если ИмяМетода = "" Тогда
		ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
		
		device_id = СтруктураHttpПараметров.device_id; 
		username = СтруктураHttpПараметров.username; 
		
		Роутинг = "GetUnits";
		
		Ответ = ДатаМобайл_HTTP_Логика.GetUnits(device_id, username); 	
		
	Иначе
		
		Ответ = "001";
		
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции  

Функция ОбработатьОбъектPacks(Запрос, СтруктураПараметровЗапроса, Роутинг)
	
	Ответ = Неопределено;
	СтруктураHttpПараметров = Новый Структура;
	
	МетодЗапроса = СтруктураПараметровЗапроса.МетодЗапроса;
	ИмяОбъекта = СтруктураПараметровЗапроса.ИмяОбъекта;
	ИмяМетода = СтруктураПараметровЗапроса.ИмяМетода;
	
	Если МетодЗапроса = "GET" Тогда
		
		Ответ = "001";
		
	ИначеЕсли МетодЗапроса = "POST" Тогда	
		
		Если ИмяМетода = "/generate" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	= СтруктураHttpПараметров.device_id; 
			username 	= СтруктураHttpПараметров.username; 
			doc_id 		= СтруктураHttpПараметров.doc_id;
			
			Роутинг = "OnNewPack";
			
			Ответ = ДатаМобайл_HTTP_Логика.OnNewPack(device_id, username, doc_id);
			
		ИначеЕсли ИмяМетода = "/scan" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);                                           
			
			device_id 		= СтруктураHttpПараметров.device_id; 
			username 		= СтруктураHttpПараметров.username; 
			pack_barcode   	= СтруктураHttpПараметров.pack_barcode; 
			doc_id		    = СтруктураHttpПараметров.doc_id;
			cell_barcode	= СтруктураHttpПараметров.cell_barcode;
			gs1		        = СтруктураHttpПараметров.gs1;
			
			Роутинг = "OnPalletScan";
			
			Ответ = ДатаМобайл_HTTP_Логика.OnPalletScan(device_id, username, pack_barcode, doc_id, cell_barcode, gs1);
			
		ИначеЕсли ИмяМетода = "/verify" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);                                           
			
			docs_pacs   	= ПолучитьСтруктуруИзСоответствия(СтруктураHttpПараметров.docs_pacs); 
								
			Роутинг = "OnPalletScan";
			
			Ответ = ДатаМобайл_HTTP_Логика.OnPalletScan_Verify(docs_pacs);
			
		Иначе
			
			Ответ = "001";
			
		КонецЕсли;
		
	ИначеЕсли МетодЗапроса = "PUT" Тогда
		
		Ответ = "001";
		
	ИначеЕсли МетодЗапроса = "DELETE" Тогда
		
		Ответ = "001";
		
	Иначе
		
		Ответ = "001";
		
	КонецЕсли;	
	
	Возврат Ответ;
	
КонецФункции

Функция ОбработатьОбъектCells(Запрос, СтруктураПараметровЗапроса, Роутинг)
	
	Ответ = Неопределено;
	СтруктураHttpПараметров = Новый Структура;
	
	МетодЗапроса = СтруктураПараметровЗапроса.МетодЗапроса;
	ИмяОбъекта = СтруктураПараметровЗапроса.ИмяОбъекта;
	ИмяМетода = СтруктураПараметровЗапроса.ИмяМетода;
	
	Если МетодЗапроса = "GET" Тогда
		
		Если ИмяМетода = "" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	 	 = СтруктураHttpПараметров.device_id; 
			username 		 = СтруктураHttpПараметров.username; 
			art_id   		 = СтруктураHttpПараметров.art_id;
			doc_id   		 = СтруктураHttpПараметров.doc_id;
			operation_type   = СтруктураHttpПараметров.operation_type;
			art_sn   		 = СтруктураHttpПараметров.art_sn;
			pack             = СтруктураHttpПараметров.pack;
			
			Если ЗначениеЗаполнено(art_id) Или ЗначениеЗаполнено(doc_id) Тогда
				
				Роутинг = "GetArtCells";
				
				Если Строка(operation_type) =  "0" Тогда	
					
					Роутинг = "GetArtCellsSelect";
					
					Ответ = ДатаМобайл_HTTP_Логика.GetArtCellsSelect(device_id, username, doc_id, art_id, art_sn, pack);
					
				ИначеЕсли Строка(operation_type) =  "1" Тогда
					
					Роутинг = "GetArtCellsInsert";
					
					Ответ = ДатаМобайл_HTTP_Логика.GetArtCellsInsert(device_id, username, doc_id, art_id, art_sn, pack);				
					
				КонецЕсли;
				
			Иначе
				
				Роутинг = "GetCells";
				
				Ответ = ДатаМобайл_HTTP_Логика.GetCells(device_id, username); 
			КонецЕсли;
			
		ИначеЕсли ИмяМетода = "/content" Тогда			
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 		= СтруктураHttpПараметров.device_id; 
			username 		= СтруктураHttpПараметров.username; 
			cell_barcode	= СтруктураHttpПараметров.cell_barcode;
			doc_id			= СтруктураHttpПараметров.doc_id;
			
			Роутинг = "GetCellContent";
			
			Ответ = ДатаМобайл_HTTP_Логика.GetCellContent(device_id, username, cell_barcode, doc_id);
			
		Иначе 
			
			Ответ = "001";
			
		КонецЕсли;
		
	ИначеЕсли МетодЗапроса = "POST" Тогда	
		
		Если ИмяМетода = "/scan" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	   = СтруктураHttpПараметров.device_id; 
			username 	   = СтруктураHttpПараметров.username; 
			art_id   	   = СтруктураHttpПараметров.art_id;
			doc_id  	   = СтруктураHttpПараметров.doc_id;
			cell_barcode   = СтруктураHttpПараметров.cell_barcode;
			art_barcode    = СтруктураHttpПараметров.art_barcode;
			operation_type = СтруктураHttpПараметров.operation_type;
			
			Роутинг = "OnCellScan";
			
			Если Строка(operation_type) = "0" Тогда
				
				Роутинг = "OnCellScanSelect";
				
				Ответ = ДатаМобайл_HTTP_Логика.OnCellScanSelect(device_id, username, doc_id, cell_barcode, art_id, art_barcode);
				
			ИначеЕсли Строка(operation_type) = "1" Тогда
				
				Роутинг = "OnCellScanInsert";
				
				Ответ = ДатаМобайл_HTTP_Логика.OnCellScanInsert(device_id, username, doc_id, cell_barcode, art_id, art_barcode);				
				
			КонецЕсли;
			
		Иначе
			
			Ответ = "001";
			
		КонецЕсли;
		
	ИначеЕсли МетодЗапроса = "PUT" Тогда
		
		Ответ = "001";
		
	ИначеЕсли МетодЗапроса = "DELETE" Тогда
		
		Ответ = "001";
		
	Иначе
		Ответ = "001";
		
	КонецЕсли;	
	
	Возврат Ответ;
	
КонецФункции  

Функция ОбработатьОбъектClients(Запрос, СтруктураПараметровЗапроса, Роутинг)
	
	Ответ = Неопределено;
	СтруктураHttpПараметров = Новый Структура;
	
	МетодЗапроса = СтруктураПараметровЗапроса.МетодЗапроса;
	ИмяОбъекта = СтруктураПараметровЗапроса.ИмяОбъекта;
	ИмяМетода = СтруктураПараметровЗапроса.ИмяМетода;
	
	Если ИмяМетода = "" Тогда
		
		ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
		
		device_id = СтруктураHttpПараметров.device_id; 
		username = СтруктураHttpПараметров.username; 
		
		Роутинг = "GetClients";
		
		Ответ = ДатаМобайл_HTTP_Логика.GetClients(device_id, username);		
		
	Иначе
		
		Ответ = "001";
		
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции 

Функция ОбработатьОбъектWarehouses(Запрос, СтруктураПараметровЗапроса, Роутинг)
	
	Ответ = Неопределено;
	СтруктураHttpПараметров = Новый Структура;
	
	МетодЗапроса = СтруктураПараметровЗапроса.МетодЗапроса;
	ИмяОбъекта = СтруктураПараметровЗапроса.ИмяОбъекта;
	ИмяМетода = СтруктураПараметровЗапроса.ИмяМетода;
	
	Если ИмяМетода = "" Тогда
		
		ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
		
		device_id = СтруктураHttpПараметров.device_id; 
		username = СтруктураHttpПараметров.username; 
		
		Роутинг = "GetWarehouses";
		
		Ответ = ДатаМобайл_HTTP_Логика.GetWarehouses(device_id, username); 	
		
	Иначе
		
		Ответ = "001";
		
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции  

Функция ОбработатьОбъектDocs(Запрос, СтруктураПараметровЗапроса, Роутинг)
	
	Ответ = Неопределено;
	СтруктураHttpПараметров = Новый Структура;
	
	МетодЗапроса = СтруктураПараметровЗапроса.МетодЗапроса;
	ИмяОбъекта = СтруктураПараметровЗапроса.ИмяОбъекта;
	ИмяМетода = СтруктураПараметровЗапроса.ИмяМетода;
	AppVersion =  СтруктураПараметровЗапроса.AppVersion;
	
	Если МетодЗапроса = "GET" Тогда
		
		Если ИмяМетода = "/tasks" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	   = СтруктураHttpПараметров.device_id; 
			username 	   = СтруктураHttpПараметров.username; 
			doc_id		   = СтруктураHttpПараметров.doc_id;
			operation_type = СтруктураHttpПараметров.operation_type; 
			
			Роутинг = "GetDocRows";
			
			Если operation_type = "0" Тогда  // Select	
				
				Роутинг = "GetDocRowsSelect";
				
				Ответ = ДатаМобайл_HTTP_Логика.GetDocRowsSelect(device_id, username, doc_id);
				
			ИначеЕсли operation_type = "1" Тогда  // Insert
				
				Роутинг = "GetDocRowsInsert";
				
				Ответ = ДатаМобайл_HTTP_Логика.GetDocRowsInsert(device_id, username, doc_id);
				
			КонецЕсли;
			
		ИначеЕсли ИмяМетода = "/logs" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 		= СтруктураHttpПараметров.device_id; 
			username 		= СтруктураHttpПараметров.username; 
			doc_id 			= СтруктураHttpПараметров.doc_id;
			last_request_at = СтруктураHttpПараметров.last_request_at;
			type 			= СтруктураHttpПараметров.type;			
			
			Если type = "0" Или type = "" Тогда  //Групповя строки подбора
				
				Роутинг = "GetSelectedQtyGroupDocRows";
				
				Ответ = ДатаМобайл_HTTP_Логика.GetSelectedQtyGroupDocRows(device_id, username, doc_id, last_request_at);	
				
			ИначеЕсли type = "1" Тогда  //Прошлые строки подбора 
				
				Роутинг = "GetPreviousDocRows";
				
				Ответ = ДатаМобайл_HTTP_Логика.GetPreviousDocRows(device_id, username, doc_id);			
				
			КонецЕсли;
			
		Иначе
			
			Ответ = "001";
			
		КонецЕсли;
		
	ИначеЕсли МетодЗапроса = "POST" Тогда
		
		Если ИмяМетода = "/sync" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 		= СтруктураHttpПараметров.device_id; 
			username 		= СтруктураHttpПараметров.username; 
			obj_docs_ids	= ПолучитьСтруктуруИзСоответствия(СтруктураHttpПараметров.docs_ids);
			barcode			= СтруктураHttpПараметров.barcode;
			template_id 	= СтруктураHttpПараметров.template_id;
			
			Роутинг = "GetDocHeads";
			
			Ответ = ДатаМобайл_HTTP_Логика.GetDocHeads(device_id, username, obj_docs_ids, AppVersion);
			
		ИначеЕсли ИмяМетода = "/scan" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	= СтруктураHttpПараметров.device_id; 
			username 	= СтруктураHttpПараметров.username; 
			docs_ids	= СтруктураHttpПараметров.docs_ids;
			barcode		= СтруктураHttpПараметров.barcode;
			template_id = СтруктураHttpПараметров.template_id;
			
			Роутинг = "OnDocScan";
			
			Ответ = ДатаМобайл_HTTP_Логика.OnDocScan(device_id, username, barcode, template_id, AppVersion);
			
		Иначе
			
			Ответ = "001";
			
		КонецЕсли;
		
	ИначеЕсли МетодЗапроса = "PUT" Тогда
		
		Если ИмяМетода = "" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 		= СтруктураHttpПараметров.device_id; 
			username 		= СтруктураHttpПараметров.username; 
			is_finished 	= СтруктураHttpПараметров.is_finished;
			template_id 	= СтруктураHttpПараметров.template_id;
			comment         = СтруктураHttpПараметров.comment;
			client_id       = СтруктураHttpПараметров.client_id;
			warehouse_1_id  = СтруктураHttpПараметров.warehouse_1_id;
			warehouse_2_id  = СтруктураHttpПараметров.warehouse_2_id;
			
			obj_doc     = ПолучитьСтруктуруИзСоответствия(СтруктураHttpПараметров.doc);
			
			Если template_id = "" Тогда
				
				Роутинг = "WriteDoc";
				
				Ответ = ДатаМобайл_HTTP_Логика.WriteDoc(device_id, username, obj_doc, is_finished);
			Иначе
				
				Роутинг = "CreateDoc";
				
				Ответ = ДатаМобайл_HTTP_Логика.CreateDoc(device_id, username, template_id, AppVersion, client_id, warehouse_1_id, warehouse_2_id, comment);
			КонецЕсли;
			
		ИначеЕсли ИмяМетода = "/state" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	= СтруктураHttpПараметров.device_id; 
			username 	= СтруктураHttpПараметров.username; 
			doc_id 		= СтруктураHttpПараметров.doc_id;
			state_id 	= СтруктураHttpПараметров.state_id;
			
			Если Не state_id = "" Тогда
				Роутинг = "SetDocState";
				
				Ответ = ДатаМобайл_HTTP_Логика.SetDocState(device_id, username, doc_id, state_id);
				
			Иначе
				Роутинг = "ReopenDoc";
				
				Ответ = ДатаМобайл_HTTP_Логика.ReopenDoc(device_id, username, doc_id);
			КонецЕсли;
			
		ИначеЕсли ИмяМетода = "/logs" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);                                           
			
			device_id 		= СтруктураHttpПараметров.device_id; 
			username 		= СтруктураHttpПараметров.username; 
			doc_id   		= СтруктураHttpПараметров.doc_id; 
			operation_type  = СтруктураHttpПараметров.operation_type;
			
			obj_detail 		= ПолучитьСтруктуруИзСоответствия(СтруктураHttpПараметров.detail);
			
			Роутинг = "OnWriteRec";
			
			Если Строка(operation_type) = "0" Тогда
				
				Роутинг = "OnWriteRecSelect";
				
				Ответ = ДатаМобайл_HTTP_Логика.OnWriteRecSelect(device_id, username, doc_id, obj_detail);
				
			ИначеЕсли Строка(operation_type) = "1" Тогда
				
				Роутинг = "OnWriteRecInsert";
				
				Ответ = ДатаМобайл_HTTP_Логика.OnWriteRecInsert(device_id, username, doc_id, obj_detail);
				
			КонецЕсли;
			
		ИначеЕсли ИмяМетода = "/warehouse" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 		= СтруктураHttpПараметров.device_id; 
			username 		= СтруктураHttpПараметров.username; 
			doc_id 			= СтруктураHttpПараметров.doc_id;
			warehouse_id 	= СтруктураHttpПараметров.warehouse_id;
			warehouse_type 	= СтруктураHttpПараметров.warehouse_type;
			
			Роутинг = "SetDocWarehouse";
			
			Ответ = ДатаМобайл_HTTP_Логика.SetDocWarehouse(device_id, username, doc_id, warehouse_id, warehouse_type);
			
		ИначеЕсли ИмяМетода = "/client" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	= СтруктураHttpПараметров.device_id; 
			username 	= СтруктураHttpПараметров.username; 
			doc_id 		= СтруктураHttpПараметров.doc_id;
			client_id 	= СтруктураHttpПараметров.client_id;
			
			Роутинг = "SetDocClient";
			
			Ответ = ДатаМобайл_HTTP_Логика.SetDocClient(device_id, username, doc_id, client_id);
			
		ИначеЕсли ИмяМетода = "/comment" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	= СтруктураHttpПараметров.device_id; 
			username 	= СтруктураHttpПараметров.username; 
			doc_id 		= СтруктураHttpПараметров.doc_id;
			comment  	= СтруктураHttpПараметров.comment;
			
			Роутинг = "SetDocComment";
			
			Ответ = ДатаМобайл_HTTP_Логика.SetDocComment(device_id, username, doc_id, comment);
			
		Иначе
			
			Ответ = "001";
			
		КонецЕсли;
		
	ИначеЕсли МетодЗапроса = "DELETE" Тогда
		
		Если ИмяМетода = "" Тогда 
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	= СтруктураHttpПараметров.device_id; 
			username 	= СтруктураHttpПараметров.username; 
			doc_id 		= СтруктураHttpПараметров.doc_id;
			
			Роутинг = "DeleteDoc";
			
			Ответ = ДатаМобайл_HTTP_Логика.DeleteDoc(device_id, username, doc_id);
			
		ИначеЕсли ИмяМетода = "/logs" Тогда   
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id   = СтруктураHttpПараметров.device_id; 
			username 	= СтруктураHttpПараметров.username; 
			doc_id 		= СтруктураHttpПараметров.doc_id;
			
			Роутинг = "ClearDoc";
			
			Ответ = ДатаМобайл_HTTP_Логика.ClearDoc(device_id, username, doc_id); 	
			
		Иначе
			
			Ответ = "001";
			
		КонецЕсли;
		
	Иначе 
		
		Ответ = "001";
		
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции  

Функция ОбработатьОбъектEgais(Запрос, СтруктураПараметровЗапроса, Роутинг)
	
	Ответ = Неопределено;
	СтруктураHttpПараметров = Новый Структура;
	
	МетодЗапроса = СтруктураПараметровЗапроса.МетодЗапроса;
	ИмяОбъекта = СтруктураПараметровЗапроса.ИмяОбъекта;
	ИмяМетода = СтруктураПараметровЗапроса.ИмяМетода;
	
	Если МетодЗапроса = "GET" Тогда
		
		Если ИмяМетода = "/arts" Тогда  	
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	= СтруктураHttpПараметров.device_id;
			username 	= СтруктураHttpПараметров.username;
			doc_id   	= СтруктураHttpПараметров.doc_id;
			part   		= СтруктураHttpПараметров.part;
			
			Если ЗначениеЗаполнено(doc_id) Тогда
				
				Роутинг = "GetDocArtsEgais";
				
				Ответ = ДатаМобайл_HTTP_Логика.GetDocArtsEgais(device_id, username, doc_id);
				
			Иначе
				
				Роутинг = "GetEgaisArts";
				
				Ответ = ДатаМобайл_HTTP_Логика.GetEgaisArts(device_id, username, part);
				
			КонецЕсли;			
			
		ИначеЕсли ИмяМетода = "/arts/marks" Тогда 
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	= СтруктураHttpПараметров.device_id;
			username 	= СтруктураHttpПараметров.username;
			
			Роутинг = "GetEgaisMarks";
			
			Ответ = ДатаМобайл_HTTP_Логика.GetEgaisMarks(device_id, username);
			
		ИначеЕсли ИмяМетода = "/arts/date_bottling" Тогда 
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	= СтруктураHttpПараметров.device_id;
			username 	= СтруктураHttpПараметров.username;
			doc_id   	= СтруктураHttpПараметров.doc_id;
			barcode  	= СтруктураHttpПараметров.barcode;
			art_id   	= СтруктураHttpПараметров.art_id;
			mark 	 	= СтруктураHttpПараметров.mark;
			
			Роутинг = "GetArtEgaisDateBottling";
			
			Ответ = ДатаМобайл_HTTP_Логика.GetArtEgaisDateBottling(device_id, username, doc_id, art_id, barcode, mark);
			
		Иначе
			
			Ответ = "001";
			
		КонецЕсли;
		
	ИначеЕсли МетодЗапроса = "POST" Тогда	
		
		Если ИмяМетода = "/packs/scan" Тогда 
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	= СтруктураHttpПараметров.device_id;
			username 	= СтруктураHttpПараметров.username;
			doc_id 	 	= СтруктураHttpПараметров.doc_id;
			pack     	= СтруктураHttpПараметров.pack_barcode;
			type     	= СтруктураHttpПараметров.type;
			
			Роутинг = "OnEgaisPalletScan";
			
			Ответ = ДатаМобайл_HTTP_Логика.OnEgaisPalletScan(device_id, username, pack, doc_id, type);
			
		ИначеЕсли ИмяМетода = "/arts/scan" Тогда 
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	 = СтруктураHttpПараметров.device_id;
			username 	 = СтруктураHttpПараметров.username;
			art_id 	 	 = СтруктураHttpПараметров.art_id;
			doc_id   	 = СтруктураHttpПараметров.doc_id;
			mark     	 = СтруктураHttpПараметров.mark;
			barcode  	 = СтруктураHttpПараметров.barcode;
			cell_barcode = СтруктураHttpПараметров.cell_barcode;
			
			Роутинг = "OnArtEgaisScan";
			
			Ответ = ДатаМобайл_HTTP_Логика.OnArtEgaisScan(device_id, username, art_id, barcode, mark, doc_id, cell_barcode);
			
		Иначе
			
			Ответ = "001";
			
		КонецЕсли;	
		
	ИначеЕсли МетодЗапроса = "PUT" Тогда
		
		Ответ = "001";
		
	ИначеЕсли МетодЗапроса = "DELETE" Тогда
		
		Ответ = "001";
		
	Иначе
		
		Ответ = "001";
		
	КонецЕсли;	
	
	Возврат Ответ;
	
	
КонецФункции

Функция ОбработатьОбъектForms(Запрос, СтруктураПараметровЗапроса, Роутинг)
	
	Ответ = Неопределено;
	СтруктураHttpПараметров = Новый Структура;
	
	МетодЗапроса = СтруктураПараметровЗапроса.МетодЗапроса;
	ИмяОбъекта = СтруктураПараметровЗапроса.ИмяОбъекта;
	ИмяМетода = СтруктураПараметровЗапроса.ИмяМетода;
	
	Если МетодЗапроса = "GET" Тогда
		
		Если ИмяМетода = "/docs" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	= СтруктураHttpПараметров.device_id; 
			username 	= СтруктураHttpПараметров.username; 
			
			Роутинг = "GetDocSteps";
			
			Ответ = ДатаМобайл_HTTP_Логика.GetDocSteps(device_id, username);
			
		ИначеЕсли ИмяМетода = "" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	= СтруктураHttpПараметров.device_id; 
			username 	= СтруктураHttpПараметров.username; 
			
			Роутинг = "GetSteps";
			
			Ответ = ДатаМобайл_HTTP_Логика.GetSteps(device_id, username);
			
		ИначеЕсли ИмяМетода = "/content" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	= СтруктураHttpПараметров.device_id; 
			username 	= СтруктураHttpПараметров.username; 
			
			Роутинг = "GetUserBooks";
			
			Ответ = ДатаМобайл_HTTP_Логика.GetUserBooks(device_id, username);
			
		Иначе
			
			Ответ = "001";
			
		КонецЕсли;
		
	ИначеЕсли МетодЗапроса = "POST" Тогда	
		
		Ответ = "001";
		
	ИначеЕсли МетодЗапроса = "PUT" Тогда
		
		Если ИмяМетода = "/docs/content" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			dmstepvaluelist = Новый Массив;
			
			device_id 		= СтруктураHttpПараметров.device_id; 
			username 		= СтруктураHttpПараметров.username; 
			dmstepvaluelist = СтруктураHttpПараметров.dmstepvaluelist; 
			
			Роутинг = "OnWriteRowStepValues";
			
			Ответ = ДатаМобайл_HTTP_Логика.OnWriteRowStepValues(device_id, username, dmstepvaluelist);
			
		Иначе
			
			Ответ = "001";
			
		КонецЕсли;
		
	ИначеЕсли МетодЗапроса = "DELETE" Тогда
		
		Ответ = "001";
		
	Иначе
		
		Ответ = "001";
		
	КонецЕсли;	
	
	Возврат Ответ;
	
КонецФункции 

Функция ОбработатьОбъектPrint(Запрос, СтруктураПараметровЗапроса, Роутинг)
	
	Ответ = Неопределено;
	СтруктураHttpПараметров = Новый Структура;
	
	МетодЗапроса = СтруктураПараметровЗапроса.МетодЗапроса;
	ИмяОбъекта = СтруктураПараметровЗапроса.ИмяОбъекта;
	ИмяМетода = СтруктураПараметровЗапроса.ИмяМетода;
	
	Если МетодЗапроса = "GET" Тогда
		
		Ответ = "001";
		
	ИначеЕсли МетодЗапроса = "POST" Тогда	
		
		Если ИмяМетода = "" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id = СтруктураHttpПараметров.device_id; 
			username = СтруктураHttpПараметров.username; 
			doc_id = СтруктураHttpПараметров.doc_id; 
			pack_barcode = СтруктураHttpПараметров.pack_barcode;
			art_id = СтруктураHttpПараметров.art_id;
			barcode = СтруктураHttpПараметров.barcode;
			barcode_full = СтруктураHttpПараметров.barcode_full;
			qty = СтруктураHttpПараметров.qty;
			qty_int = СтруктураHttpПараметров.qty_int;
			qty_fraction = СтруктураHttpПараметров.qty_fraction;
			unit_name = СтруктураHttpПараметров.unit_name;
			gs1 = СтруктураHttpПараметров.gs1;
			art_sn = СтруктураHttpПараметров.art_sn;
			is_km = СтруктураHttpПараметров.is_km;
			is_need_print_copy = СтруктураHttpПараметров.is_need_print_copy;
			
			Если ЗначениеЗаполнено(pack_barcode) И ЗначениеЗаполнено(doc_id)Тогда 
				
				Роутинг = "SendPackToPrint";
				
				Ответ = ДатаМобайл_HTTP_Логика.SendPackToPrint(device_id, username, doc_id, pack_barcode);
				
			ИначеЕсли ЗначениеЗаполнено(doc_id) Тогда
				
				Роутинг = "SendDocToPrint";
				
				Ответ = ДатаМобайл_HTTP_Логика.SendDocToPrint(device_id, username, doc_id);
			Иначе
				
				Роутинг = "SendArtToPrint";
				
				Ответ = ДатаМобайл_HTTP_Логика.SendArtToPrint(device_id, username, art_id, barcode, qty, qty_int, qty_fraction, art_sn, unit_name, is_km, gs1, barcode_full, is_need_print_copy);
				
			КонецЕсли;
			
		Иначе
			
			Ответ = "001";
			
		КонецЕсли;
		
	ИначеЕсли МетодЗапроса = "PUT" Тогда
		
		Ответ = "001";
		
	ИначеЕсли МетодЗапроса = "DELETE" Тогда
		
		Ответ = "001";
		
	Иначе
		
		Ответ = "001";
		
	КонецЕсли;	
	
	Возврат Ответ;
	
КонецФункции  

Функция ОбработатьОбъектFastAccess(Запрос, СтруктураПараметровЗапроса, Роутинг)
	
	Ответ = Неопределено;
	СтруктураHttpПараметров = Новый Структура;
	
	МетодЗапроса = СтруктураПараметровЗапроса.МетодЗапроса;
	ИмяОбъекта = СтруктураПараметровЗапроса.ИмяОбъекта;
	ИмяМетода = СтруктураПараметровЗапроса.ИмяМетода;
	ВерсияПО = СтруктураПараметровЗапроса.ВерсияПО;
	
	Если МетодЗапроса = "GET" Тогда
		
		Если ИмяМетода = "" Или ИмяМетода = "/text" Или ИмяМетода = "/url" Или ИмяМетода = "/html" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id  	= СтруктураHttpПараметров.device_id; 
			username 	= СтруктураHttpПараметров.username; 
			barcode  	= СтруктураHttpПараметров.barcode; 
			doc_id   	= СтруктураHttpПараметров.doc_id;
			
			Если ЗначениеЗаполнено(doc_id) Тогда
				
				Роутинг = "FastAccessDoc";
				
				Ответ = ДатаМобайл_HTTP_Логика.FastAccessDoc(device_id, username, doc_id, barcode, , ИмяМетода, ВерсияПО);
				
			Иначе
				
				Роутинг = "FastAccess";
				
				Ответ = ДатаМобайл_HTTP_Логика.FastAccess(device_id, username, barcode, , ИмяМетода, ВерсияПО);
				
			КонецЕсли;
			
		ИначеЕсли ИмяМетода = "/FastAccessSerialNumber" Тогда	
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id  	= СтруктураHttpПараметров.device_id; 
			username 	= СтруктураHttpПараметров.username; 
			barcode  	= СтруктураHttpПараметров.barcode; 
			doc_id   	= СтруктураHttpПараметров.doc_id;
			
			Ответ = ДатаМобайл_HTTP_Логика.FastAccessSerialNumber(device_id, username, barcode, , ИмяМетода, ВерсияПО);	
			
		Иначе
			
			//Пользовательские функции быстрого доступа
			
			СтруктураОписанияОшибки = Новый  Структура;				
			СтруктураОписанияОшибки.Вставить("Описание", "Пользовательская функция быстрого доступа " + ИмяМетода + " не найдена в модуле HTTP сервиса 1C.");
			
			Ответ = ПодготовитьОтветJSON(, СтруктураОписанияОшибки);
			
		КонецЕсли;
		
	ИначеЕсли МетодЗапроса = "POST" Тогда	
		
		Ответ = "001";
		
	ИначеЕсли МетодЗапроса = "PUT" Тогда
		
		Ответ = "001";
		
	ИначеЕсли МетодЗапроса = "DELETE" Тогда
		
		Ответ = "001";
		
	Иначе
		
		Ответ = "001";
		
	КонецЕсли;	
	
	Возврат Ответ;
	
КонецФункции  

Функция ОбработатьОбъектPhotos(Запрос, СтруктураПараметровЗапроса, Роутинг)
	
	Ответ = Неопределено;
	СтруктураHttpПараметров = Новый Структура;
	
	МетодЗапроса = СтруктураПараметровЗапроса.МетодЗапроса;
	ИмяОбъекта = СтруктураПараметровЗапроса.ИмяОбъекта;
	ИмяМетода = СтруктураПараметровЗапроса.ИмяМетода;
	
	Если МетодЗапроса = "GET" Тогда
		
		Если ИмяМетода = "" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	= СтруктураHttpПараметров.device_id;
			username 	= СтруктураHttpПараметров.username;
			art_id 	 	= СтруктураHttpПараметров.art_id;
			
			Если ЗначениеЗаполнено(art_id) Тогда 
				
				Роутинг = "GetArtPhotos";
				
				Ответ = ДатаМобайл_HTTP_Логика.GetArtPhotos(device_id, username, art_id);
				
			Иначе
				
				Роутинг = "GetArtsPhotos";
				
				Ответ = ДатаМобайл_HTTP_Логика.GetArtsPhotos(device_id, username);
				
			КонецЕсли; 
			
		ИначеЕсли ИмяМетода = "/parts" Тогда	
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	= СтруктураHttpПараметров.device_id;
			username 	= СтруктураHttpПараметров.username;
			art_id 	 	= СтруктураHttpПараметров.art_id;
			part 		= СтруктураHttpПараметров.part; 
			
			Если ЗначениеЗаполнено(art_id) Тогда 
				
				Роутинг = "GetArtPhotos";
				
				Ответ = ДатаМобайл_HTTP_Логика.GetArtPhotosParts(device_id, username, art_id, part, "images");
				
			Иначе
				
				Роутинг = "GetArtsPhotos";
				
				Ответ = ДатаМобайл_HTTP_Логика.GetArtsPhotosParts(device_id, username, part, "images");
				
			КонецЕсли;
			
		ИначеЕсли ИмяМетода = "/previews" Тогда	
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	= СтруктураHttpПараметров.device_id;
			username 	= СтруктураHttpПараметров.username;
			art_id 	 	= СтруктураHttpПараметров.art_id;
			part 		= СтруктураHttpПараметров.part; 
			
			Если ЗначениеЗаполнено(art_id) Тогда 
				
				Роутинг = "GetArtPhotos";
				
				Ответ = ДатаМобайл_HTTP_Логика.GetArtPhotosParts(device_id, username, art_id, part, "previews");
				
			Иначе
				
				Роутинг = "GetArtsPhotos";
				
				Ответ = ДатаМобайл_HTTP_Логика.GetArtsPhotosParts(device_id, username, part, "previews");
				
			КонецЕсли; 		
			
		Иначе
			
			Ответ = "001";
			
		КонецЕсли;
		
	ИначеЕсли МетодЗапроса = "POST" Тогда	
		
		Ответ = "001";
		
	ИначеЕсли МетодЗапроса = "PUT" Тогда
		
		Если ИмяМетода = "" Тогда 
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);                                           
			
			device_id 	= СтруктураHttpПараметров.device_id; 
			username 	= СтруктураHttpПараметров.username; 
			doc_id 	 	= СтруктураHttpПараметров.doc_id;
			art_id 	 	= СтруктураHttpПараметров.art_id;
			barcode  	= СтруктураHttpПараметров.barcode;
			
			obg_image 	 	= ПолучитьСтруктуруИзСоответствия(СтруктураHttpПараметров.image);
			
			obg_image.data 	= СтрЗаменить(obg_image.data,Символы.ПС, "");
			obg_image.data 	= СтрЗаменить(obg_image.data,Символы.ВК, "");
			obg_image.data 	= СтрЗаменить(obg_image.data,Символы.Таб, "");
			obg_image.data 	= Base64Значение(obg_image.data);
			
			Если ЗначениеЗаполнено(art_id) И ЗначениеЗаполнено(doc_id) Тогда
				
				Роутинг = "SetRowPhoto";
				
				Ответ = ДатаМобайл_HTTP_Логика.SetRowPhoto(device_id, username, doc_id, art_id, barcode, obg_image.data);	
				
			ИначеЕсли ЗначениеЗаполнено(doc_id) Тогда	
				
				Роутинг = "SetDocPhoto";
				
				Ответ = ДатаМобайл_HTTP_Логика.SetDocPhoto(device_id, username, doc_id, obg_image.data);
				
			Иначе						
				
				Роутинг = "SetArtPhoto";
				
				Ответ = ДатаМобайл_HTTP_Логика.SetArtPhoto(device_id, username, obg_image);
				
			КонецЕсли;
			
		Иначе
			
			Ответ = "001";
			
		КонецЕсли;
		
	ИначеЕсли МетодЗапроса = "DELETE" Тогда
		
		Если ИмяМетода = "" Тогда  	
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	= СтруктураHttpПараметров.device_id;
			username  	= СтруктураHttpПараметров.username;
			art_id    	= СтруктураHttpПараметров.art_id;
			image_id  	= СтруктураHttpПараметров.image_id;
			
			Роутинг = "DeleteArtPhoto";
			
			Ответ = ДатаМобайл_HTTP_Логика.DeleteArtPhoto(device_id, username, art_id, image_id);
			
		Иначе
			
			Ответ = "001";
			
		КонецЕсли;
		
	Иначе
		
		Ответ = "001";
		
	КонецЕсли;	
	
	Возврат Ответ;
	
КонецФункции

Функция ОбработатьОбъектOthers(Запрос, СтруктураПараметровЗапроса, Роутинг)
	
	Ответ = Неопределено;
	СтруктураHttpПараметров = Новый Структура;
	
	МетодЗапроса = СтруктураПараметровЗапроса.МетодЗапроса;
	ИмяОбъекта = СтруктураПараметровЗапроса.ИмяОбъекта;
	ИмяМетода = СтруктураПараметровЗапроса.ИмяМетода;
	
	Если МетодЗапроса = "GET" Тогда
		
		Если ИмяМетода = "/qty_by_scales" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	   = СтруктураHttpПараметров.device_id;
			username 	   = СтруктураHttpПараметров.username;
			doc_id   	   = СтруктураHttpПараметров.doc_id;
			art_id   	   = СтруктураHttpПараметров.art_id;
			cell_barcode   = СтруктураHttpПараметров.cell_barcode;
			art_sn 	       = СтруктураHttpПараметров.art_sn;
			scaled_barcode = СтруктураHttpПараметров.scaled_barcode;
			
			Роутинг = "GetArtQtyByScales"; 
			
			Ответ = ДатаМобайл_HTTP_Логика.GetArtQtyByScales(device_id, username, doc_id, art_id, cell_barcode, art_sn, scaled_barcode);
			
		Иначе
			
			Ответ = "001";
			
		КонецЕсли;
		
	ИначеЕсли МетодЗапроса = "POST" Тогда
		
		Ответ = "001";
		
	ИначеЕсли МетодЗапроса = "PUT" Тогда
		
		Ответ = "001";
		
	ИначеЕсли МетодЗапроса = "DELETE" Тогда
		
		Ответ = "001";
		
	Иначе
		
		Ответ = "001";
		
	КонецЕсли;	
	
	Возврат Ответ;
	
КонецФункции

Функция ОбработатьОбъектCrpt(Запрос, СтруктураПараметровЗапроса, Роутинг)
	
	Ответ = Неопределено;
	СтруктураHttpПараметров = Новый Структура;
	
	МетодЗапроса = СтруктураПараметровЗапроса.МетодЗапроса;
	ИмяОбъекта = СтруктураПараметровЗапроса.ИмяОбъекта;
	ИмяМетода = СтруктураПараметровЗапроса.ИмяМетода;
	
	Если МетодЗапроса = "GET" Тогда
		
		Если ИмяМетода = "/key" Тогда
			
			ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);
			
			device_id 	   = СтруктураHttpПараметров.device_id;
			username 	   = СтруктураHttpПараметров.username;
			
			Роутинг = "CrptKey"; 
			
			Ответ = ДатаМобайл_HTTP_Логика.CrptKey(device_id, username);
			
		Иначе
			
			Ответ = "001";
			
		КонецЕсли;
		
	ИначеЕсли МетодЗапроса = "POST" Тогда
		
		Ответ = "001";
		
	ИначеЕсли МетодЗапроса = "PUT" Тогда
		
		Ответ = "001";
		
	ИначеЕсли МетодЗапроса = "DELETE" Тогда
		
		Ответ = "001";
		
	Иначе
		
		Ответ = "001";
		
	КонецЕсли;	
	
	Возврат Ответ;
	
КонецФункции

// ВХОДЯЩИЕ ПАРАМЕТРЫ
Функция ПолучитьСтруктуруПараметровЗапроса(Запрос)
	
	СтруктураПараметровЗапроса = Новый Структура;
	
	СтруктураПараметровЗапроса.Вставить("МетодЗапроса",     "");
	СтруктураПараметровЗапроса.Вставить("ИмяОбъекта",       "");
	СтруктураПараметровЗапроса.Вставить("ИмяМетода",        "");
	СтруктураПараметровЗапроса.Вставить("ВерсияПО",        	"");
	СтруктураПараметровЗапроса.Вставить("AppVersion",       "");
	
	СтруктураПараметровЗапроса.МетодЗапроса = Запрос.HTTPМетод;
	
	///api/system/info	
	ОтносительныйURL = Запрос.ОтносительныйURL;
	//system/info
	ОтносительныйURL = СтрЗаменить(ОтносительныйURL, "/api/", "");
	
	РазделительМетода = Найти(ОтносительныйURL, "/");
	РазделительМетода = ?(РазделительМетода > 0, РазделительМетода - 1,РазделительМетода);
	
	//system
	ИмяОбъекта = ?(РазделительМетода > 0, Лев(ОтносительныйURL, РазделительМетода), ОтносительныйURL);	
	СтруктураПараметровЗапроса.ИмяОбъекта = ИмяОбъекта;
	
	///info
	ИмяМетода = ?(РазделительМетода > 0, Прав(ОтносительныйURL, СтрДлина(ОтносительныйURL) - РазделительМетода), "");
	СтруктураПараметровЗапроса.ИмяМетода = ИмяМетода;
	
	Попытка 
		ВерсияПО = Запрос.Заголовки["App-Version-Code"]; 
	Исключение 
		Попытка 
			ВерсияПО = Запрос.Заголовки["app-version-code"]; 
		Исключение 
			ВерсияПО = ""; 
		КонецПопытки;		
	КонецПопытки;
	СтруктураПараметровЗапроса.ВерсияПО = ВерсияПО;
	
	Попытка
		AppVersion = Запрос.Заголовки["App-Version"]; 
	Исключение
		Попытка 
			AppVersion = Запрос.Заголовки["app-version"]; 
		Исключение 
			AppVersion = ""; 
		КонецПопытки;
	КонецПопытки; 
	СтруктураПараметровЗапроса.AppVersion = AppVersion;
	
	Возврат СтруктураПараметровЗапроса;
	
КонецФункции

Процедура ПолучитьHttpПараметрыПоМетодамAPI(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров)
	
	МетодЗапроса = СтруктураПараметровЗапроса.МетодЗапроса;
	ИмяОбъекта = СтруктураПараметровЗапроса.ИмяОбъекта;
	ИмяМетода = СтруктураПараметровЗапроса.ИмяМетода;
	
	Если ИмяОбъекта = "docs" Тогда
		
		Если МетодЗапроса = "GET" Тогда  
			
			Если ИмяМетода = "/tasks" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id",      "");
				СтруктураHttpПараметров.Вставить("username",       "");
				СтруктураHttpПараметров.Вставить("doc_id",         "");
				СтруктураHttpПараметров.Вставить("operation_type", ""); 
				
			ИначеЕсли ИмяМетода = "/logs" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id",       "");
				СтруктураHttpПараметров.Вставить("username",        "");
				СтруктураHttpПараметров.Вставить("doc_id",          "");  
				СтруктураHttpПараметров.Вставить("last_request_at", "");
				СтруктураHttpПараметров.Вставить("type", 			"");
				
			КонецЕсли;
			
		ИначеЕсли МетодЗапроса = "POST" Тогда 
			
			Если ИмяМетода = "/sync" Тогда 
				
				СтруктураHttpПараметров.Вставить("device_id",   "");
				СтруктураHttpПараметров.Вставить("username",    "");
				СтруктураHttpПараметров.Вставить("docs_ids",    "");
				СтруктураHttpПараметров.Вставить("barcode",     "");
				СтруктураHttpПараметров.Вставить("template_id", "");
				
			ИначеЕсли ИмяМетода = "/scan" Тогда 
				
				СтруктураHttpПараметров.Вставить("device_id",   "");
				СтруктураHttpПараметров.Вставить("username",    "");
				СтруктураHttpПараметров.Вставить("docs_ids",    "");
				СтруктураHttpПараметров.Вставить("barcode",     "");
				СтруктураHttpПараметров.Вставить("template_id", "");
				
			КонецЕсли;
			
		ИначеЕсли МетодЗапроса = "PUT" Тогда 
			
			Если ИмяМетода = "" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id",   	"");
				СтруктураHttpПараметров.Вставить("username",    	"");
				СтруктураHttpПараметров.Вставить("template_id", 	"");						
				СтруктураHttpПараметров.Вставить("doc",         	"");			
				СтруктураHttpПараметров.Вставить("is_finished", 	"");
				СтруктураHttpПараметров.Вставить("comment", 		"");
				СтруктураHttpПараметров.Вставить("client_id", 		"");
				СтруктураHttpПараметров.Вставить("warehouse_1_id", 	"");
				СтруктураHttpПараметров.Вставить("warehouse_2_id", 	"");
				
			ИначеЕсли ИмяМетода = "/state" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id", "");
				СтруктураHttpПараметров.Вставить("username",  "");
				СтруктураHttpПараметров.Вставить("doc_id",    "");	
				СтруктураHttpПараметров.Вставить("state_id",  "");
				
			ИначеЕсли ИмяМетода = "/client" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id", "");
				СтруктураHttpПараметров.Вставить("username",  "");
				СтруктураHttpПараметров.Вставить("doc_id",    "");
				СтруктураHttpПараметров.Вставить("client_id", "");
				
			ИначеЕсли ИмяМетода = "/comment" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id", "");
				СтруктураHttpПараметров.Вставить("username",  "");
				СтруктураHttpПараметров.Вставить("doc_id",    "");
				СтруктураHttpПараметров.Вставить("comment",   "");
				
			ИначеЕсли ИмяМетода = "/warehouse" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id",      "");
				СтруктураHttpПараметров.Вставить("username",       "");
				СтруктураHttpПараметров.Вставить("doc_id",         ""); 
				СтруктураHttpПараметров.Вставить("warehouse_id",   "");
				СтруктураHttpПараметров.Вставить("warehouse_type", "");
				
			ИначеЕсли ИмяМетода = "/logs" Тогда 	
				
				СтруктураHttpПараметров.Вставить("device_id",      "");
				СтруктураHttpПараметров.Вставить("username",       "");
				СтруктураHttpПараметров.Вставить("operation_type", "");			
				СтруктураHttpПараметров.Вставить("doc_id",         "");
				СтруктураHttpПараметров.Вставить("detail",         Новый Массив);
				
			КонецЕсли;
			
		ИначеЕсли МетодЗапроса = "DELETE" Тогда 
			
			Если ИмяМетода = "" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id", "");
				СтруктураHttpПараметров.Вставить("username",  "");
				СтруктураHttpПараметров.Вставить("doc_id",    ""); 	
				
			ИначеЕсли ИмяМетода = "/logs" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id", "");
				СтруктураHttpПараметров.Вставить("username",  "");
				СтруктураHttpПараметров.Вставить("doc_id",    "");
				
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ИмяОбъекта = "arts" Тогда		
		
		Если МетодЗапроса = "GET" Тогда
			
			Если ИмяМетода = "" Тогда 
				
				СтруктураHttpПараметров.Вставить("device_id",      "");
				СтруктураHttpПараметров.Вставить("username",       "");
				СтруктураHttpПараметров.Вставить("operation_type", "");
				СтруктураHttpПараметров.Вставить("barcode",        "");
				СтруктураHttpПараметров.Вставить("doc_id",         "");
				СтруктураHttpПараметров.Вставить("cell_barcode",   "");
				СтруктураHttpПараметров.Вставить("gs1",            "");
				
			ИначеЕсли ИмяМетода = "/rest" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id", "");
				СтруктураHttpПараметров.Вставить("username",  "");
				СтруктураHttpПараметров.Вставить("art_id",    "");
				
			ИначеЕсли ИмяМетода = "/attrs/names" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id", "");
				СтруктураHttpПараметров.Вставить("username",  "");
				
			ИначеЕсли ИмяМетода = "/sn_types" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id", "");
				СтруктураHttpПараметров.Вставить("username",  "");								
				
			ИначеЕсли ИмяМетода = "/marks" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id", "");
				СтруктураHttpПараметров.Вставить("username",  "");
				
			ИначеЕсли ИмяМетода = "/sn" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id",    "");
				СтруктураHttpПараметров.Вставить("username",     "");
				СтруктураHttpПараметров.Вставить("doc_id",       "");
				СтруктураHttpПараметров.Вставить("art_id",   	 "");
				СтруктураHttpПараметров.Вставить("cell_barcode", "");
				
			ИначеЕсли ИмяМетода = "/parts" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id",    "");
				СтруктураHttpПараметров.Вставить("username",     "");
				СтруктураHttpПараметров.Вставить("part",    	 ""); 
				СтруктураHttpПараметров.Вставить("doc_id",    	 "");
				
			ИначеЕсли ИмяМетода = "/prices/names" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id", "");
				СтруктураHttpПараметров.Вставить("username",  "");
				
			КонецЕсли;
			
		ИначеЕсли МетодЗапроса = "POST" Тогда
			
			Если ИмяМетода = "/barcodes/generate" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id", "");
				СтруктураHttpПараметров.Вставить("username",  "");
				СтруктураHttpПараметров.Вставить("unit_id",   "");
				СтруктураHttpПараметров.Вставить("art_id",    "");
				СтруктураHttpПараметров.Вставить("barcode",   "");
				СтруктураHttpПараметров.Вставить("params",    "");
				
			ИначеЕсли ИмяМетода = "/scan" Тогда				
				
				СтруктураHttpПараметров.Вставить("device_id", 	   "");
				СтруктураHttpПараметров.Вставить("username", 	   "");
				СтруктураHttpПараметров.Вставить("operation_type", "");
				СтруктураHttpПараметров.Вставить("barcode", 	   "");
				СтруктураHttpПараметров.Вставить("doc_id", 		   "");
				СтруктураHttpПараметров.Вставить("cell_barcode",   "");
				СтруктураHttpПараметров.Вставить("gs1", 		   "");
				СтруктураHttpПараметров.Вставить("kiz", 	       Новый Массив);				
				
			КонецЕсли;
			
		ИначеЕсли МетодЗапроса = "PUT" Тогда
			
			Если ИмяМетода = "/barcodes" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id", "");
				СтруктураHttpПараметров.Вставить("username",  "");
				СтруктураHttpПараметров.Вставить("art_id",    "");                  
				СтруктураHttpПараметров.Вставить("barcode",   "");
				
			ИначеЕсли ИмяМетода = "" Тогда
				
				Массив = Новый Массив;
				
				СтруктураHttpПараметров.Вставить("device_id",      "");
				СтруктураHttpПараметров.Вставить("username",       "");
				СтруктураHttpПараметров.Вставить("id",             "");
				СтруктураHttpПараметров.Вставить("name",           "");
				СтруктураHttpПараметров.Вставить("price",          "");
				СтруктураHttpПараметров.Вставить("price_discount", "");
				СтруктураHttpПараметров.Вставить("is_use_sn",      "");
				СтруктураHttpПараметров.Вставить("is_deleted",     "");
				СтруктураHttpПараметров.Вставить("mark_type",      "");
				СтруктураHttpПараметров.Вставить("measure_type",   "");
				СтруктураHttpПараметров.Вставить("sn_types",       "");
				СтруктураHttpПараметров.Вставить("rest",           "");
				СтруктураHttpПараметров.Вставить("attributes",     Новый Массив);
				
				СтруктураHttpПараметров.Вставить("art",      	   "");
				СтруктураHttpПараметров.Вставить("egais_art",      "");
								
			КонецЕсли;
			
		ИначеЕсли МетодЗапроса = "DELETE" Тогда
			
			Если ИмяМетода = "/barcodes" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id", "");
				СтруктураHttpПараметров.Вставить("username",  "");
				СтруктураHttpПараметров.Вставить("art_id",    "");
				СтруктураHttpПараметров.Вставить("barcode",   "");
				
			ИначеЕсли ИмяМетода = "" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id", "");
				СтруктураHttpПараметров.Вставить("username",  "");
				СтруктураHttpПараметров.Вставить("art_id",    "");
				
			КонецЕсли
			
		КонецЕсли;	
		
	ИначеЕсли ИмяОбъекта = "cells" Тогда	
		
		Если МетодЗапроса = "GET" Тогда
			
			Если ИмяМетода = "" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id", 	   "");
				СтруктураHttpПараметров.Вставить("username",  	   "");
				СтруктураHttpПараметров.Вставить("art_id",   	   "");
				СтруктураHttpПараметров.Вставить("doc_id",    	   "");
				СтруктураHttpПараметров.Вставить("operation_type", "");
				СтруктураHttpПараметров.Вставить("art_sn",    	   "");
				СтруктураHttpПараметров.Вставить("pack",    	   "");
				
			ИначеЕсли ИмяМетода = "/content" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id", 	   "");
				СтруктураHttpПараметров.Вставить("username",  	   "");
				СтруктураHttpПараметров.Вставить("cell_barcode",   "");
				СтруктураHttpПараметров.Вставить("doc_id",    	   "");
				
			КонецЕсли;
			
		ИначеЕсли МетодЗапроса = "POST" Тогда	
			
			Если ИмяМетода = "/scan" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id",      "");
				СтруктураHttpПараметров.Вставить("username",       "");
				СтруктураHttpПараметров.Вставить("art_id",    	   "");
				СтруктураHttpПараметров.Вставить("doc_id",    	   "");
				СтруктураHttpПараметров.Вставить("cell_barcode",   "");
				СтруктураHttpПараметров.Вставить("art_barcode",    "");
				СтруктураHttpПараметров.Вставить("operation_type", "");
				
			КонецЕсли;
			
		ИначеЕсли МетодЗапроса = "PUT" Тогда
			
		ИначеЕсли МетодЗапроса = "DELETE" Тогда
			
		КонецЕсли;	
		
	ИначеЕсли ИмяОбъекта = "photos" Тогда
		
		Если МетодЗапроса = "GET" Тогда
			
			Если ИмяМетода = "" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id", "");
				СтруктураHttpПараметров.Вставить("username",  "");
				СтруктураHttpПараметров.Вставить("art_id",    "");  
				
			ИначеЕсли ИмяМетода = "/parts" Или ИмяМетода = "/previews" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id", "");
				СтруктураHttpПараметров.Вставить("username",  "");
				СтруктураHttpПараметров.Вставить("art_id",    ""); 
				СтруктураHttpПараметров.Вставить("part",      "");	
				
			КонецЕсли;
			
		ИначеЕсли МетодЗапроса = "POST" Тогда	
			
		ИначеЕсли МетодЗапроса = "PUT" Тогда
			
			Если ИмяМетода = "" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id", "");
				СтруктураHttpПараметров.Вставить("username",  "");
				
				СтруктураHttpПараметров.Вставить("doc_id",  "");			
				СтруктураHttpПараметров.Вставить("art_id",  "");
				СтруктураHttpПараметров.Вставить("barcode", "");			
				СтруктураHttpПараметров.Вставить("image",   "");
				
			КонецЕсли;
			
		ИначеЕсли МетодЗапроса = "DELETE" Тогда
			
			Если ИмяМетода = "" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id", "");
				СтруктураHttpПараметров.Вставить("username",  "");	
				СтруктураHttpПараметров.Вставить("art_id",    "");	
				СтруктураHttpПараметров.Вставить("image_id",  "");
				
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ИмяОбъекта = "fast_access" Тогда
		
		Если МетодЗапроса = "GET" Тогда
			
			Если ИмяМетода = "" Или ИмяМетода = "/text" Или ИмяМетода = "/url" Или ИмяМетода = "/html" Или ИмяМетода = "/FastAccessSerialNumber" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id", "");
				СтруктураHttpПараметров.Вставить("username",  "");	
				СтруктураHttpПараметров.Вставить("doc_id",    "");	
				СтруктураHttpПараметров.Вставить("barcode",   "");	
				
			КонецЕсли;
			
		ИначеЕсли МетодЗапроса = "POST" Тогда	
			
		ИначеЕсли МетодЗапроса = "PUT" Тогда
			
		ИначеЕсли МетодЗапроса = "DELETE" Тогда
			
		КонецЕсли;
		
	ИначеЕсли ИмяОбъекта = "packs" Тогда
		
		Если МетодЗапроса = "GET" Тогда
			
		ИначеЕсли МетодЗапроса = "POST" Тогда	
			
			Если ИмяМетода = "/scan" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id",    "");
				СтруктураHttpПараметров.Вставить("username",     "");
				СтруктураHttpПараметров.Вставить("pack_barcode", ""); 
				СтруктураHttpПараметров.Вставить("cell_barcode", ""); 
				СтруктураHttpПараметров.Вставить("gs1",          ""); 
				СтруктураHttpПараметров.Вставить("doc_id",       ""); 	
				
			ИначеЕсли ИмяМетода = "/generate" Тогда	
				
				СтруктураHttpПараметров.Вставить("device_id", "");
				СтруктураHttpПараметров.Вставить("username",  "");
				СтруктураHttpПараметров.Вставить("doc_id",    "");
				
			ИначеЕсли ИмяМетода = "/verify" Тогда
				
				СтруктураHttpПараметров.Вставить("docs_pacs",  Новый Массив);
				
			КонецЕсли;
			
		ИначеЕсли МетодЗапроса = "PUT" Тогда
			
		ИначеЕсли МетодЗапроса = "DELETE" Тогда
			
		КонецЕсли;
		
	ИначеЕсли ИмяОбъекта = "egais" Тогда
		
		Если МетодЗапроса = "GET" Тогда
			
			Если ИмяМетода = "/arts" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id",   "");
				СтруктураHttpПараметров.Вставить("username",    "");
				СтруктураHttpПараметров.Вставить("doc_id",    "");
				СтруктураHttpПараметров.Вставить("part",    "");
				
			ИначеЕсли ИмяМетода = "/arts/marks" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id",   "");
				СтруктураHttpПараметров.Вставить("username",    "");
				
			ИначеЕсли ИмяМетода = "/arts/date_bottling" Тогда 
				
				СтруктураHttpПараметров.Вставить("device_id",   "");
				СтруктураHttpПараметров.Вставить("username",    "");
				СтруктураHttpПараметров.Вставить("doc_id",    "");
				СтруктураHttpПараметров.Вставить("barcode",    "");
				СтруктураHttpПараметров.Вставить("art_id",    "");
				СтруктураHttpПараметров.Вставить("mark",    "");
				
			КонецЕсли;
			
		ИначеЕсли МетодЗапроса = "POST" Тогда	
			
			Если ИмяМетода = "/packs/scan" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id",    "");
				СтруктураHttpПараметров.Вставить("username",     "");
				СтруктураHttpПараметров.Вставить("doc_id",       "");
				СтруктураHttpПараметров.Вставить("pack_barcode", "");
				СтруктураHttpПараметров.Вставить("type",         "");
				
			ИначеЕсли ИмяМетода = "/arts/scan" Тогда 
				
				СтруктураHttpПараметров.Вставить("device_id",    "");
				СтруктураHttpПараметров.Вставить("username",     "");
				СтруктураHttpПараметров.Вставить("art_id",       "");
				СтруктураHttpПараметров.Вставить("doc_id",       "");
				СтруктураHttpПараметров.Вставить("mark",         "");
				СтруктураHttpПараметров.Вставить("barcode",      "");
				СтруктураHttpПараметров.Вставить("cell_barcode", "");
				
			КонецЕсли;	
			
		ИначеЕсли МетодЗапроса = "PUT" Тогда
			
		ИначеЕсли МетодЗапроса = "DELETE" Тогда
			
		КонецЕсли;
		
	ИначеЕсли ИмяОбъекта = "forms" Тогда
		
		Если МетодЗапроса = "GET" Тогда
			
			Если ИмяМетода = "/docs" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id",   "");
				СтруктураHttpПараметров.Вставить("username",    "");
				
			ИначеЕсли ИмяМетода = "" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id",   "");
				СтруктураHttpПараметров.Вставить("username",    "");
				
			ИначеЕсли ИмяМетода = "/content" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id",   	"");
				СтруктураHttpПараметров.Вставить("username",    	"");
				СтруктураHttpПараметров.Вставить("dmstepvaluelist", "");
				
			КонецЕсли;
			
		ИначеЕсли МетодЗапроса = "POST" Тогда	
			
		ИначеЕсли МетодЗапроса = "PUT" Тогда
			
			Если ИмяМетода = "/docs" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id",   "");
				СтруктураHttpПараметров.Вставить("username",    "");
				
			ИначеЕсли ИмяМетода = "/docs/content" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id",   "");
				СтруктураHttpПараметров.Вставить("username",    "");
				СтруктураHttpПараметров.Вставить("dmstepvaluelist",    "");
				
			КонецЕсли;
			
		ИначеЕсли МетодЗапроса = "DELETE" Тогда
			
		КонецЕсли;
		
	ИначеЕсли ИмяОбъекта = "device" Тогда
		
		Если МетодЗапроса = "GET" Тогда
			
			Если ИмяМетода = "/data" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id",   "");
				СтруктураHttpПараметров.Вставить("username",    "");
				
			КонецЕсли;
			
		ИначеЕсли МетодЗапроса = "POST" Тогда	
			
			Если ИмяМетода = "/login" Или ИмяМетода = "/logout" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id"	,    "");
				СтруктураHttpПараметров.Вставить("username"		,    "");
				СтруктураHttpПараметров.Вставить("device_name"	,    "");
				
			КонецЕсли;
			
		ИначеЕсли МетодЗапроса = "PUT" Тогда	
			
		ИначеЕсли МетодЗапроса = "DELETE" Тогда
			
		КонецЕсли;
		
	ИначеЕсли ИмяОбъекта = "print" Тогда
		
		Если МетодЗапроса = "GET" Тогда
			
		ИначеЕсли МетодЗапроса = "POST" Тогда	
			
			Если ИмяМетода = "" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id",    		"");
				СтруктураHttpПараметров.Вставить("username",     		"");
				СтруктураHttpПараметров.Вставить("doc_id",       		"");
				СтруктураHttpПараметров.Вставить("pack_barcode", 		"");
				СтруктураHttpПараметров.Вставить("art_id",       		""); 
				СтруктураHttpПараметров.Вставить("barcode",      		"");
				СтруктураHttpПараметров.Вставить("barcode_full", 		"");
				СтруктураHttpПараметров.Вставить("qty_int",      		"");
				СтруктураHttpПараметров.Вставить("qty",          		"");
				СтруктураHttpПараметров.Вставить("qty_fraction", 		"");
				СтруктураHttpПараметров.Вставить("unit_name",    		"");
				СтруктураHttpПараметров.Вставить("gs1",          		"");
				СтруктураHttpПараметров.Вставить("art_sn",       		"");
				СтруктураHttpПараметров.Вставить("is_km",        		"");		
				СтруктураHttpПараметров.Вставить("is_need_print_copy",  "");			
				
			КонецЕсли;
			
		ИначеЕсли МетодЗапроса = "PUT" Тогда		
			
		ИначеЕсли МетодЗапроса = "DELETE" Тогда
			
		КонецЕсли;
		
	ИначеЕсли ИмяОбъекта = "others" Тогда
		
		Если МетодЗапроса = "GET" Тогда
			
			Если ИмяМетода = "/qty_by_scales" Тогда
				
				СтруктураHttpПараметров.Вставить("device_id",      "");
				СтруктураHttpПараметров.Вставить("username",       "");
				СтруктураHttpПараметров.Вставить("doc_id",         "");
				СтруктураHttpПараметров.Вставить("art_id",         "");
				СтруктураHttpПараметров.Вставить("cell_barcode",   "");
				СтруктураHttpПараметров.Вставить("art_sn",    	   "");
				СтруктураHttpПараметров.Вставить("scaled_barcode", "");
				
			КонецЕсли;
			
		ИначеЕсли МетодЗапроса = "POST" Тогда	
			
		ИначеЕсли МетодЗапроса = "PUT" Тогда
			
		ИначеЕсли МетодЗапроса = "DELETE" Тогда
			
		КонецЕсли;
		
	Иначе
		
		СтруктураHttpПараметров.Вставить("device_id", "");
		СтруктураHttpПараметров.Вставить("username",  "");
		
	КонецЕсли;
	
	Попытка 	
		ПрочитатьВсеHttpПараметры(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров);	
	Исключение 			
	КонецПопытки;
	
КонецПроцедуры

Процедура ПрочитатьВсеHttpПараметры(Запрос, СтруктураПараметровЗапроса, СтруктураHttpПараметров)
	
	МетодЗапроса = СтруктураПараметровЗапроса.МетодЗапроса;
	ИмяОбъекта = СтруктураПараметровЗапроса.ИмяОбъекта;
	ИмяМетода = СтруктураПараметровЗапроса.ИмяМетода;
	
	ЗапросТело = Запрос.ПолучитьТелоКакСтроку();
	
	Для каждого Элемент Из СтруктураHttpПараметров Цикл
		ТекущееЗначениеПараметра = ОбработатьЭкранированиеСтроки(Запрос.ПараметрыЗапроса.Получить(Элемент.Ключ));
		Если ТекущееЗначениеПараметра <> Неопределено Тогда 
			СтруктураHttpПараметров[Элемент.Ключ] = ТекущееЗначениеПараметра;
		КонецЕсли;	
	КонецЦикла;
	
	Попытка
		
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(ЗапросТело);
		
		ВходящиеПараметры = Неопределено;
		СформироватьДерево(ЧтениеJSON, ВходящиеПараметры);
		
		ЧтениеJSON.Закрыть();
		
		Если ИмяОбъекта = "docs" И ИмяМетода = "/sync" Тогда
			
			СтруктураHttpПараметров.docs_ids = ВходящиеПараметры;	
			
		ИначеЕсли ИмяОбъекта = "packs" И ИмяМетода = "/verify" Тогда
			
			СтруктураHttpПараметров.docs_pacs = ВходящиеПараметры;
		
		Иначе
			
			Для каждого Элемент Из СтруктураHttpПараметров Цикл
				Если Элемент.Ключ <> "device_id" И Элемент.Ключ <> "username" Тогда
					Если Элемент.Ключ = "dmstepvaluelist" Тогда  
						Если ВходящиеПараметры.Количество() <> 0 Тогда
							МассивЗначений = Новый Массив;
							Для каждого Стр Из ВходящиеПараметры Цикл
								
								МассивЗначений.Добавить(ПолучитьСтруктуруИзСоответствия(Стр));									
								
							КонецЦикла;
							СтруктураHttpПараметров[Элемент.Ключ] = МассивЗначений;
						КонецЕсли;
					Иначе	
						ТекущееЗначениеПараметра = ВходящиеПараметры.Получить(Элемент.Ключ);
						Если ТекущееЗначениеПараметра <> Неопределено Тогда 
							СтруктураHttpПараметров[Элемент.Ключ] = ТекущееЗначениеПараметра;
						КонецЕсли;	
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;	
		
	Исключение 
		
	КонецПопытки;
	
КонецПроцедуры

Процедура СформироватьДерево(ЧтениеJSON, Дерево)
	
	ИмяСвойства = Неопределено;
	
	Пока ЧтениеJSON.Прочитать() Цикл
		TипJSON = ЧтениеJSON.ТипТекущегоЗначения;
		
		Если TипJSON = ТипЗначенияJSON.НачалоОбъекта 
			Или TипJSON = ТипЗначенияJSON.НачалоМассива Тогда
			НовыйОбъект = ?(TипJSON = ТипЗначенияJSON.НачалоОбъекта, Новый Соответствие, Новый Массив);
			
			Если ТипЗнч(Дерево) = Тип("Массив") Тогда
				Дерево.Добавить(НовыйОбъект);
			ИначеЕсли ТипЗнч(Дерево) = Тип("Соответствие") И ЗначениеЗаполнено(ИмяСвойства) Тогда
				Дерево.Вставить(ИмяСвойства, НовыйОбъект);
			КонецЕсли;
			
			СформироватьДерево(ЧтениеJSON, НовыйОбъект);
			
			Если Дерево = Неопределено Тогда
				Дерево = НовыйОбъект;
			КонецЕсли;
		ИначеЕсли TипJSON = ТипЗначенияJSON.ИмяСвойства Тогда
			ИмяСвойства = ЧтениеJSON.ТекущееЗначение;
		ИначеЕсли TипJSON = ТипЗначенияJSON.Число 
			Или TипJSON = ТипЗначенияJSON.Строка 
			Или TипJSON = ТипЗначенияJSON.Булево 
			Или TипJSON = ТипЗначенияJSON.Null Тогда
			Если ТипЗнч(Дерево) = Тип("Массив") Тогда
				Дерево.Добавить(ЧтениеJSON.ТекущееЗначение);
			ИначеЕсли ТипЗнч(Дерево) = Тип("Соответствие") Тогда
				Дерево.Вставить(ИмяСвойства, ЧтениеJSON.ТекущееЗначение);
			КонецЕсли;
		Иначе
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ОбработатьЭкранированиеСтроки(ВходящаяСтрока) Экспорт
	
	ВходящаяСтрока = СтрЗаменить(ВходящаяСтрока, "&lt;", "<");
	ВходящаяСтрока = СтрЗаменить(ВходящаяСтрока, "&gt;", ">");
	ВходящаяСтрока = СтрЗаменить(ВходящаяСтрока, "&quot;", """");
	ВходящаяСтрока = СтрЗаменить(ВходящаяСтрока, "&apos;", "'");
	ВходящаяСтрока = СтрЗаменить(ВходящаяСтрока, "\/", "/");
	ВходящаяСтрока = СтрЗаменить(ВходящаяСтрока, Символ(0), """");
	
	Возврат ВходящаяСтрока;
	
КонецФункции

Функция ПолучитьСтруктуруИзСоответствия(ВходящееЗначение) Экспорт
	
	СтруктураВозврат = Новый Структура;
	
	Если ТипЗнч(ВходящееЗначение) = Тип("Соответствие") Тогда
		
		Для каждого ТекущееЗначение Из ВходящееЗначение Цикл
			Попытка
				СтруктураВозврат.Вставить(ТекущееЗначение.Ключ,ПолучитьСтруктуруИзСоответствия(ТекущееЗначение.Значение));
			Исключение
				ФлагОщибка = Истина;
				Прервать;
			КонецПопытки;
		КонецЦикла;
		
		Возврат СтруктураВозврат; 
		
	ИначеЕсли ТипЗнч(ВходящееЗначение) = Тип("Массив") Тогда
		
		НовыйМассив = Новый Массив;
		Для каждого ЭлементМассива Из ВходящееЗначение Цикл
			НовыйМассив.Добавить(ПолучитьСтруктуруИзСоответствия(ЭлементМассива));
		КонецЦикла;
		
		Возврат НовыйМассив;
		
	КонецЕсли;
	
	Возврат ВходящееЗначение; 
	
КонецФункции

// ПОДГОТОВКА РЕЗУЛЬТАТА
Функция СформироватьJSONОтвета(Данные)
	
	СтрокаJSON = "";
	
	НастройкиСериализации = Новый НастройкиСериализацииJSON;
	НастройкиСериализации.ФорматСериализацииДаты = ФорматДатыJSON.JavaScript;
	ПараметрыJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет, "", Истина);
	
	Запись = Новый ЗаписьJSON;
	Запись.ПроверятьСтруктуру = Истина;
	Запись.УстановитьСтроку(ПараметрыJSON);
		
	ЗаписатьJSON(Запись, Данные, НастройкиСериализации);
	СтрокаJSON = Запись.Закрыть();	
	
	Возврат СтрокаJSON;
	
КонецФункции

Функция ПодготовитьОтветJSON(СтруктураДанных = Неопределено, СтруктураОписанияОшибки = Неопределено, ContentType = Неопределено)
		
	Ответ = Новый Структура;
	
	Если СтруктураДанных <> Неопределено Тогда 
		Ответ.Вставить("Result", СтруктураДанных);
	КонецЕсли;
	
	Если СтруктураОписанияОшибки <> Неопределено Тогда 
		Ответ.Вставить("description", СтруктураОписанияОшибки.Описание);
	КонецЕсли;
	
	Если ContentType <> Неопределено Тогда 
		Ответ.Вставить("ContentType", ContentType);
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции





