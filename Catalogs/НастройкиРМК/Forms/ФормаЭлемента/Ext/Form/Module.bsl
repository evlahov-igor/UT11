
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	ИспользоватьРозничныеПродажи           = ПолучитьФункциональнуюОпцию("ИспользоватьРозничныеПродажи");
	ИспользоватьНесколькоКассККМ           = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоКассККМ");
	ИспользоватьНесколькоКасс              = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоКасс");
	ИспользоватьПодключаемоеОборудование   = ПолучитьФункциональнуюОпцию("ИспользоватьПодключаемоеОборудование");
	ИспользоватьОплатуПлатежнымиКартами    = ПолучитьФункциональнуюОпцию("ИспользоватьОплатуПлатежнымиКартами");
	
	Элементы.ГруппаКассыККМ.Видимость     = ИспользоватьНесколькоКассККМ И ИспользоватьРозничныеПродажи;
	Элементы.ГруппаОднаКассаККМ.Видимость = Не ИспользоватьНесколькоКассККМ И ИспользоватьРозничныеПродажи;
	
	Элементы.ГруппаКассы.Видимость     = ИспользоватьНесколькоКасс;
	Элементы.ГруппаОднаКасса.Видимость = Не ИспользоватьНесколькоКасс;
	
	Элементы.АвтоматическаяИнкассация.Видимость                = Не ИспользоватьНесколькоКассККМ;
	Элементы.ИспользоватьБезПодключенияОборудования.Видимость  = Не ИспользоватьНесколькоКассККМ И ИспользоватьПодключаемоеОборудование;
	Элементы.ПодключаемоеОборудование.Видимость                = Не ИспользоватьНесколькоКассККМ И ИспользоватьПодключаемоеОборудование;
	Элементы.ПодключаемоеОборудованиеКасса.Видимость           = Не ИспользоватьНесколькоКасс    И ИспользоватьПодключаемоеОборудование;
	Элементы.ГруппаЭквайринговыеТерминалы.Видимость            = ИспользоватьОплатуПлатежнымиКартами;
	
	Элементы.ГруппаАвторизация.Видимость                = ИспользоватьРозничныеПродажи;
	Элементы.ИспользоватьАвторизациюПояснение.Видимость = ИспользоватьРозничныеПродажи;
	Элементы.ГорячиеКлавишиПояснение.Видимость          = ИспользоватьРозничныеПродажи;
	
	Если ИспользоватьРозничныеПродажи
		И Не ЗначениеЗаполнено(Объект.Ссылка)
		И Не ИспользоватьНесколькоКассККМ Тогда
		КассаККМ = Справочники.КассыККМ.КассаККМФискальныйРегистраторПоУмолчанию();
		Если Не ЗначениеЗаполнено(КассаККМ) Тогда
			ВызватьИсключение НСтр("ru = 'В информационной базе не создано кассы ККМ с типом: Фискальный регистратор.
			|Для работы с настройкой РМК в системе должен быть зарегистрирован как минимум один фискальный регистратор.'");
		КонецЕсли;
		
		ИспользоватьБезПодключенияОборудования = Истина;
		Элементы.ПодключаемоеОборудование.Доступность = НЕ ИспользоватьБезПодключенияОборудования;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка)
		И Не ИспользоватьНесколькоКасс Тогда
		Касса = Справочники.Кассы.ПолучитьКассуПоУмолчанию(Неопределено);
		Если Не ЗначениеЗаполнено(Касса) Тогда
			ВызватьИсключение НСтр("ru = 'В информационной базе не создано ни одной кассы.
			                             |Для работы с настройкой РМК в системе должна быть зарегистрирована как минимум одна касса предприятия.'");
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	Элементы.РабочееМесто.СписокВыбора.Добавить("", "<" + НСтр("ru='Текущее рабочее место'") + ">");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Не ЗначениеЗаполнено(Объект.РабочееМесто) Тогда
		МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента();
		Объект.РабочееМесто = МенеджерОборудованияВызовСервера.ПолучитьРабочееМестоКлиента();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ДополнительныеПараметры = Новый Структура("ТребуетсяСерверныйВызов", Ложь);
	СобытияФормКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник, ДополнительныеПараметры);
	Если ДополнительныеПараметры.ТребуетсяСерверныйВызов Тогда
		ОбработкаОповещенияНаСервере(ИмяСобытия, Параметр);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	Если ИспользоватьРозничныеПродажи
		И Не ИспользоватьНесколькоКассККМ Тогда
		
		ТекущийОбъект.КассыККМ.Очистить();
		НоваяСтрока = ТекущийОбъект.КассыККМ.Добавить();
		НоваяСтрока.КассаККМ                               = КассаККМ;
		НоваяСтрока.ИспользоватьБезПодключенияОборудования = ИспользоватьБезПодключенияОборудования;
		НоваяСтрока.АвтоматическаяИнкассация               = АвтоматическаяИнкассация;
		НоваяСтрока.ПодключаемоеОборудование               = ПодключаемоеОборудование;
		
	КонецЕсли;
	
	Если Не ИспользоватьНесколькоКасс Тогда
		
		ТекущийОбъект.Кассы.Очистить();
		НоваяСтрока = ТекущийОбъект.Кассы.Добавить();
		НоваяСтрока.Касса                    = Касса;
		НоваяСтрока.ПодключаемоеОборудование = ПодключаемоеОборудованиеКасса;
		
	КонецЕсли;
	
	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	
	СобытияФорм.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	СобытияФорм.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ИспользоватьРозничныеПродажи
		И Не ЗначениеЗаполнено(ПодключаемоеОборудование)
		И Не ИспользоватьБезПодключенияОборудования
		И Не ИспользоватьНесколькоКассККМ Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСТр("ru = 'Не заполнено поле ""Подключаемое оборудование""'"),,"ПодключаемоеОборудование",,Отказ);
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПодключаемоеОборудованиеКасса)
		И Не ИспользоватьНесколькоКасс Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСТр("ru = 'Не заполнено поле ""Подключаемое оборудование""'"),,"ПодключаемоеОборудованиеКасса",,Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СобытияФормКлиент.ОбработкаНавигационнойСсылки(ЭтотОбъект, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьСписокИдентификационныеДанныеПользователей(Команда)
	
	ОткрытьФорму("РегистрСведений.ИдентификационныеДанныеПользователей.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользоватьАвторизациюПриИзменении(Элемент)
	
	Элементы.ИдентификационныеДанныеПользователей.Доступность = Объект.ИспользоватьАвторизацию;
	
КонецПроцедуры

&НаКлиенте
Процедура РабочееМестоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		СтандартнаяОбработка = Ложь;
		МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента();
		Объект.РабочееМесто = МенеджерОборудованияВызовСервера.ПолучитьРабочееМестоКлиента();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КассирМожетБытьПродавцомПриИзменении(Элемент)
	
	Если Не Объект.МенеджерТорговогоЗалаМожетБытьПродавцом И Не Объект.КассирМожетБытьПродавцом Тогда
		Объект.МенеджерТорговогоЗалаМожетБытьПродавцом = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МенеджерТорговогоЗалаМожетБытьПродавцомПриИзменении(Элемент)
	
	Если Не Объект.МенеджерТорговогоЗалаМожетБытьПродавцом И Не Объект.КассирМожетБытьПродавцом Тогда
		Объект.КассирМожетБытьПродавцом = Истина;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ИспользоватьБезПодключенияОборудованияПриИзменении(Элемент)
	
	Элементы.ПодключаемоеОборудование.Доступность = НЕ ИспользоватьБезПодключенияОборудования;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТабличнойЧастиКассыККМ

&НаКлиенте
Процедура КассыККМКассаККМПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.КассыККМ.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	КассыККМКассаККМПриИзмененииНаСервере(ТекущиеДанные.ПолучитьИдентификатор());
	
КонецПроцедуры

&НаСервере
Процедура КассыККМКассаККМПриИзмененииНаСервере(ИдентификаторСтроки)
	
	ДополнительныеПараметры = Новый Структура("ИдентификаторСтроки", ИдентификаторСтроки);
	СобытияФорм.ПриИзмененииЭлемента(ЭтотОбъект, "КассаККМ", ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура КассыККМВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СобытияФормКлиент.ПриВыбореЭлемента(ЭтотОбъект, Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура КассыККМИспользоватьБезПодключенияОборудованияПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.КассыККМ.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ИспользоватьБезПодключенияОборудования Тогда
		ТекущиеДанные.ПодключаемоеОборудование = ПредопределенноеЗначение("Справочник.ПодключаемоеОборудование.ПустаяСсылка");
	КонецЕсли;
	
	КассыККМИспользоватьБезПодключенияОборудованияПриИзмененииНаСервере(ТекущиеДанные.ПолучитьИдентификатор());
	
КонецПроцедуры

&НаСервере
Процедура КассыККМИспользоватьБезПодключенияОборудованияПриИзмененииНаСервере(ИдентификаторСтроки)
	
	ДополнительныеПараметры = Новый Структура("ИдентификаторСтроки", ИдентификаторСтроки);
	СобытияФорм.ПриИзмененииЭлемента(ЭтотОбъект, "ИспользоватьБезПодключенияОборудования", ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ЭквайринговыеТерминалыИспользоватьБезПодключенияОборудованияПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ЭквайринговыеТерминалы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ТекущиеДанные.ИспользоватьБезПодключенияОборудования Тогда
		ТекущиеДанные.НеЗапрашиватьНомерКарты = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбработкаОповещенияНаСервере(ИмяСобытия, Параметр)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяСобытия", ИмяСобытия);
	СобытияФорм.ПриИзмененииЭлемента(ЭтотОбъект, "Оповещение", ДополнительныеПараметры);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КассыККМПодключаемоеОборудование.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.КассыККМ.ИспользоватьБезПодключенияОборудования");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаОтмененнойСтрокиДокумента);
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Используется без подключения'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("Доступность", Ложь);
	
	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ЭквайринговыеТерминалыПодключаемоеОборудование.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ЭквайринговыеТерминалы.ИспользоватьБезПодключенияОборудования");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаОтмененнойСтрокиДокумента);
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Используется без подключения'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("Доступность", Ложь);
	
	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ЭквайринговыеТерминалыНеЗапрашиватьНомерКарты.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ЭквайринговыеТерминалы.ИспользоватьБезПодключенияОборудования");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;

	Элемент.Оформление.УстановитьЗначениеПараметра("Доступность", Ложь);
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеКассыИКассыККМ()
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьРозничныеПродажи")
		И Не ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоКассККМ")
		И ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Если Объект.КассыККМ.Количество() > 0 Тогда
			
			Если Не ЗначениеЗаполнено(Объект.КассыККМ[0].КассаККМ) Тогда
				Объект.КассыККМ[0].КассаККМ = Справочники.КассыККМ.КассаККМФискальныйРегистраторПоУмолчанию();
				Модифицированность = Истина;
			КонецЕсли;
			
			КассаККМ                               = Объект.КассыККМ[0].КассаККМ;
			ПодключаемоеОборудование               = Объект.КассыККМ[0].ПодключаемоеОборудование;
			ИспользоватьБезПодключенияОборудования = Объект.КассыККМ[0].ИспользоватьБезПодключенияОборудования;
			АвтоматическаяИнкассация               = Объект.КассыККМ[0].АвтоматическаяИнкассация;
			
		Иначе
			
			КассаККМ = Справочники.КассыККМ.КассаККМФискальныйРегистраторПоУмолчанию();
			
		КонецЕсли;
		
		Элементы.ПодключаемоеОборудование.Доступность = НЕ ИспользоватьБезПодключенияОборудования;
		
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоКасс")
		И ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Если Объект.Кассы.Количество() > 0 Тогда
			
			Если Не ЗначениеЗаполнено(Объект.Кассы[0].Касса) Тогда
				Объект.Кассы[0].Касса = Справочники.Кассы.ПолучитьКассуПоУмолчанию(Неопределено);
				Модифицированность = Истина;
			КонецЕсли;
			
			Касса                         = Объект.Кассы[0].Касса;
			ПодключаемоеОборудованиеКасса = Объект.Кассы[0].ПодключаемоеОборудование;
			
		Иначе
			
			Касса = Справочники.Кассы.ПолучитьКассуПоУмолчанию(Неопределено);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	ЗаполнитьДанныеКассыИКассыККМ();
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьРозничныеПродажи") Тогда
		
		Элементы.ИдентификационныеДанныеПользователей.Доступность = Объект.ИспользоватьАвторизацию;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
