#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Получает реквизиты объекта, которые необходимо блокировать от изменения
//
// Возвращаемое значение:
//  Массив - блокируемые реквизиты объекта.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт

	Результат = Новый Массив;
	Результат.Добавить("УсловиеПредоставления");
	Результат.Добавить("ВариантОпределенияПериодаНакопительнойСкидки");
	
	Результат.Добавить("ВариантНакопления");
	Результат.Добавить("КритерийОграниченияПримененияЗаОбъемПродаж");
	Результат.Добавить("ВалютаОграничения");
	Результат.Добавить("ГрафикОплаты");
	Результат.Добавить("ФормаОплаты");
	Результат.Добавить("ЗначениеУсловияОграничения");
	Результат.Добавить("СегментНоменклатурыОграничения");
	Результат.Добавить("ПериодНакопления");
	Результат.Добавить("ТипСравнения");
	Результат.Добавить("ГруппаПользователей");
	Результат.Добавить("ВремяДействия");
	Результат.Добавить("ВидКартыЛояльности");
	Результат.Добавить("КоличествоПериодовНакопления");
	Результат.Добавить("СегментПартнеров");
	Результат.Добавить("ВариантОтбораНоменклатуры");
	Результат.Добавить("ВключатьТекущуюПродажуВНакопленныйОбъемПродаж");
	Результат.Добавить("КоличествоДнейПослеДняРождения");
	Результат.Добавить("КоличествоДнейДоДняРождения");

	Возврат Результат;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Справочники.УсловияПредоставленияСкидокНаценок.ОбработатьДанныеПоУсловиямПредоставленияДляОбновленияКешированныхЗапросов";
	Обработчик.Версия = "11.5.7.149";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("75254a18-8b5f-42e9-a8cb-407750cb0fe4");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Справочники.УсловияПредоставленияСкидокНаценок.ЗарегистрироватьДанныеПоУсловиямПредоставленияКОбработкеДляОбновленияКешированныхЗапросов";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Обновление кешированных запросов для Условий предоставления скидок наценок'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Справочники.УсловияПредоставленияСкидокНаценок.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Справочники.УсловияПредоставленияСкидокНаценок.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.Справочники.УсловияПредоставленияСкидокНаценок.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");

КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеПоУсловиямПредоставленияКОбработкеДляОбновленияКешированныхЗапросов(Параметры) Экспорт
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаОбъектов = "Справочник.УсловияПредоставленияСкидокНаценок";
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Ссылка");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиСсылки();
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = ТекстЗапросаДляОбновленияКешированныхЗапросов();
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЭлементыДляРегистрации = Новый Массив();
	
	Пока Выборка.Следующий() Цикл
		
		Если СкидкиНаценкиСервер.НеобходимаРегистрация(Выборка.Ссылка, "#123456789#") Тогда
			ЭлементыДляРегистрации.Добавить(Выборка.Ссылка);
		КонецЕсли;
		
	КонецЦикла;
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, ЭлементыДляРегистрации);
	
КонецПроцедуры

Процедура ОбработатьДанныеПоУсловиямПредоставленияДляОбновленияКешированныхЗапросов(Параметры) Экспорт
	
	ПолноеИмяОбъекта        = "Справочник.УсловияПредоставленияСкидокНаценок";
	
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Для Каждого ЭлементСправочника Из ОбновляемыеДанные Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ЭлементСправочника.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			СправочникОбъект = ЭлементСправочника.Ссылка.ПолучитьОбъект();
			
			Если СправочникОбъект = Неопределено Тогда
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ЭлементСправочника.Ссылка);
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;

			СкидкиНаценкиСервер.ОбновитьКэшированныйЗапрос(СправочникОбъект);
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(СправочникОбъект);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), ЭлементСправочника.Ссылка);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

Функция ТекстЗапросаДляОбновленияКешированныхЗапросов()
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	УсловияПредоставленияСкидокНаценок.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.УсловияПредоставленияСкидокНаценок КАК УсловияПредоставленияСкидокНаценок
	|ГДЕ
	|	(УсловияПредоставленияСкидокНаценок.УсловиеПредоставления = ЗНАЧЕНИЕ(Перечисление.УсловияПредоставленияСкидокНаценок.ЗаРазовыйОбъемПродаж)
	|	ИЛИ
	|		УсловияПредоставленияСкидокНаценок.УсловиеПредоставления = ЗНАЧЕНИЕ(Перечисление.УсловияПредоставленияСкидокНаценок.ЗаНакопленныйОбъемПродаж))";
	
	Возврат ТекстЗапроса;
КонецФункции

// Обновить кешированные запросы по всем элементам справочника.
Процедура ОбновитьКешированныеЗапросы() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаДляОбновленияКешированныхЗапросов();
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Не СкидкиНаценкиСервер.НеобходимаРегистрация(Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		СправочникОбъект = Выборка.Ссылка.ПолучитьОбъект();//СправочникОбъект.УсловияПредоставленияСкидокНаценок
		
		СкидкиНаценкиСервер.ОбновитьКэшированныйЗапрос(СправочникОбъект);
		
		Попытка
			СправочникОбъект.Записать();
		Исключение
			ТекстСообщения = НСтр("ru = 'Не удалось обработать объект: %Объект% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Объект%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ОписаниеОшибки()));
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Обновление кешированных запросов'", ОбщегоНазначения.КодОсновногоЯзыка()),
									УровеньЖурналаРегистрации.Предупреждение,
									Выборка.Ссылка.Метаданные(),
									Выборка.Ссылка,
									ТекстСообщения);
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
