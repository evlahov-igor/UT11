#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает имена блокируемых реквизитов для механизма блокирования реквизитов БСП.
//
// Возвращаемое значение:
//	Массив - имена блокируемых реквизитов.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("МетодОценкиСтоимостиТоваров");
	Результат.Добавить("СистемаНалогообложения");
	Результат.Добавить("ПрименяетсяЕНВД");
	Результат.Добавить("ПрименяетсяУчетНДСПоФактическомуИспользованию");
	Результат.Добавить("МетодНачисленияАмортизацииНУ");
	Результат.Добавить("ВариантУчетаОтложенногоНалога");
	Результат.Добавить("УчетГотовойПродукцииПоПлановойСтоимости; ВариантУчетаСтоимостиПродукции");
	Результат.Добавить("ИспользоватьСчет40");
	Результат.Добавить("Учитывать5ПроцентныйПорог");
	Результат.Добавить("ФормироватьРезервыПоСомнительнымДолгамБУ; НастроитьПорядокОценкиЗадолженности");
	Результат.Добавить("ФормироватьРезервыПоСомнительнымДолгамНУ");
	Результат.Добавить("ПроводкиПоРаботникам");
	Результат.Добавить("ЗабалансовыйУчетТМЦВЭксплуатации");
	Результат.Добавить("ВзаимозачетЧерезСчет76");
	Результат.Добавить("ФормироватьРезервОтпусковБУ");
	Результат.Добавить("ФормироватьРезервОтпусковНУ");
	Результат.Добавить("ОпределятьИзлишкиРезервовОтпусковЕжемесячно");
	Результат.Добавить("МетодНачисленияРезерваОтпусков");
	Результат.Добавить("НормативОтчисленийВРезервОтпусков");
	Результат.Добавить("ПредельнаяВеличинаОтчисленийВРезервОтпусков");
	Результат.Добавить("ОбъектНалогообложенияУСН");
	Результат.Добавить("ДатаПереходаНаУСН");
	Результат.Добавить("УведомлениеНомерУСН");
	Результат.Добавить("УведомлениеДатаУСН");
	Результат.Добавить("СтавкаНалогаУСН");
	Результат.Добавить("БазаРаспределенияКосвенныхРасходовПоВидамДеятельности");
	Результат.Добавить("ВключатьВСоставНалоговыхРасходовАрендныеПлатежи");
	Результат.Добавить("ВариантУчетаНДСПриИзмененииВидаДеятельности");
	Результат.Добавить("СтатьяРасходовСписаниеНДС");
	Результат.Добавить("АналитикаРасходовСписаниеНДС");
	Результат.Добавить("СтатьяРасходовНеНДС");
	Результат.Добавить("АналитикаРасходовНеНДС");
	Результат.Добавить("СтатьяРасходовЕНВД");
	Результат.Добавить("АналитикаРасходовЕНВД");
	Результат.Добавить("ПрименяетсяОсвобождениеОтУплатыНДС");
	Результат.Добавить("ВариантУчетаСтоимостиТоваров");
	Результат.Добавить("СборкаТоваровЧерезСчет20");
	Результат.Добавить("РаздельныйУчетТоваровПоНалогообложениюНДС");
	Результат.Добавить("РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС");
	Результат.Добавить("УчетНДСДлительногоЦиклаПроизводства");
	Результат.Добавить("ПравилоОтбораАвансовДляРегистрацииСчетовФактур");
	Результат.Добавить("ВидРазницПБУ18РезервовПоСомнительнымДолгам");
	Результат.Добавить("ПериодичностьРезервовПоСомнительнымДолгамБУ");
	Результат.Добавить("ПериодичностьРезервовПоСомнительнымДолгамНУ");
	Результат.Добавить("ПериодичностьОформленияСводныхСправок");
	Результат.Добавить("ЕстьРеализацияРаботУслугНеНаТерриторииРФ");
	
	Возврат Результат;
	
КонецФункции

// Возвращает реквизиты объекта, которые не рекомендуется редактировать
// с помощью обработки группового изменения реквизитов.
//
// Возвращаемое значение:
//  Массив - список имен реквизитов объекта.
Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	Результат = Новый Массив;
	
	НастройкиУчетаНДС = УчетНДСУП.НастройкиУчета();
	Если НЕ РасчетСебестоимостиПовтИсп.ПартионныйУчетВключен()
		ИЛИ Не НастройкиУчетаНДС.ФормироватьОтчетностьПоНДС
		ИЛИ Не НастройкиУчетаНДС.РаздельныйУчетНДС Тогда
		Результат.Добавить("ПрименяетсяУчетНДСПоФактическомуИспользованию");
		Результат.Добавить("Учитывать5ПроцентныйПорог");
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("БазоваяВерсия") Тогда
		Результат.Добавить("МетодОценкиСтоимостиТоваров");
	КонецЕсли;
	
	Если НЕ РасчетСебестоимостиПовтИсп.ПартионныйУчетВерсии22() Тогда
		Результат.Добавить("РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС");
		Результат.Добавить("УчетНДСДлительногоЦиклаПроизводства");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет") Тогда
		Результат.Добавить("ВедетсяУчетПостоянныхИВременныхРазниц");
		Результат.Добавить("ВариантУчетаОтложенногоНалога");
		Результат.Добавить("ФормироватьРезервыПоСомнительнымДолгамБУ");
		Результат.Добавить("ФормироватьРезервыПоСомнительнымДолгамНУ");
		Результат.Добавить("ФормироватьРезервОтпусковБУ");
		Результат.Добавить("МетодНачисленияРезерваОтпусков");
		Результат.Добавить("ФормироватьРезервОтпусковНУ");
		Результат.Добавить("ОпределятьИзлишкиРезервовОтпусковЕжемесячно");
		Результат.Добавить("НормативОтчисленийВРезервОтпусков");
		Результат.Добавить("ПредельнаяВеличинаОтчисленийВРезервОтпусков");
		Результат.Добавить("УчетГотовойПродукцииПоПлановойСтоимости");
		Результат.Добавить("ИспользоватьСчет40");
		Результат.Добавить("ПроводкиПоРаботникам");
		Результат.Добавить("ЗабалансовыйУчетТМЦВЭксплуатации");
		Результат.Добавить("ВзаимозачетЧерезСчет76");
		Результат.Добавить("ДатаПереходаНаУСН");
		Результат.Добавить("УведомлениеНомерУСН");
		Результат.Добавить("УведомлениеДатаУСН");
		Результат.Добавить("ОбъектНалогообложенияУСН");
		Результат.Добавить("СтавкаНалогаУСН");
		Результат.Добавить("СборкаТоваровЧерезСчет20");
		Результат.Добавить("ВидРазницПБУ18РезервовПоСомнительнымДолгам");
		Результат.Добавить("ПериодичностьРезервовПоСомнительнымДолгамБУ");
		Результат.Добавить("ПериодичностьРезервовПоСомнительнымДолгамНУ");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПараметрыВыбораСтатейИАналитик() Экспорт
	
	МассивПараметров = Новый Массив;
	
	#Область СтатьяРасходовНеНДС
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект";
	ПараметрыВыбора.Статья      = "СтатьяРасходовНеНДС";
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходовНеНДС";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяЗатратНеНДС");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходовНеНДС");
	
	МассивПараметров.Добавить(ПараметрыВыбора);
	#КонецОбласти
	
	#Область СтатьяРасходовЕНВД
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект";
	ПараметрыВыбора.Статья      = "СтатьяРасходовЕНВД";
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходовЕНВД";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяЗатратЕНВД");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходовЕНВД");
	
	МассивПараметров.Добавить(ПараметрыВыбора);
	#КонецОбласти
	
	#Область СтатьяРасходовСписаниеНДС
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект";
	ПараметрыВыбора.Статья      = "СтатьяРасходовСписаниеНДС";
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходовСписаниеНДС";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяЗатратСписаниеНДС");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходовСписаниеНДС");
	
	МассивПараметров.Добавить(ПараметрыВыбора);
	#КонецОбласти
	
	Возврат МассивПараметров;
	
КонецФункции


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

#КонецОбласти

#КонецОбласти

#КонецЕсли
