
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс


// Возвращает серию для ценообразования
// 
// Параметры:
//  РеквизитыДляПоиска - Структура - Данные для поиска
//  НастройкиИспользованияСерий - Структура - Настройки использования серий:
// * Ошибка - Булево -
// * ОписаниеОшибки - Строка -
// * УказыватьПриПоступлении - Булево -
// * УказыватьПриОтгрузке - Булево -
// * УказыватьПриПланированииОтгрузки - Булево -// 
// Возвращаемое значение:
//  СправочникСсылка.СерииНоменклатурыДляЦенообразования -- Ссылка на Серию для ценообразования
Функция ПолучитьСериюНоменклатурыДляЦенообразования(РеквизитыДляПоиска, НастройкиИспользованияСерий) Экспорт

	ТаблицаРезультата = НайтиСерииПоНаборуРеквизитов(РеквизитыДляПоиска);
	
	Если ТаблицаРезультата.количество()>0 Тогда
		Возврат ТаблицаРезультата[0].СерияНоменклатуры;
	КонецЕсли;

	УстановитьПривилегированныйРежим(Истина);

	МассивДляФормированияНаименования = Новый Массив();
	
	СерияЦенообразования = Справочники.СерииНоменклатурыДляЦенообразования.СоздатьЭлемент();
	СерияЦенообразования.ВидНоменклатуры = РеквизитыДляПоиска.ВидНоменклатуры;
	Для Каждого Строка Из РеквизитыДляПоиска.РеквизитыДляКлючаЦен Цикл
		Если Строка.ЭтоДопРеквизит Тогда
			НоваяСтрокаДополнительныхРеквизитов = СерияЦенообразования.ДополнительныеРеквизитыЦенообразования.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаДополнительныхРеквизитов, Строка);
			МассивДляФормированияНаименования.Добавить(Строка.Значение);
		Иначе
			СерияЦенообразования[Строка.ИмяРеквизита] = Строка.Значение;
		КонецЕсли;
	КонецЦикла;

	СерияЦенообразования.Наименование = НоменклатураКлиентСервер.ПредставлениеСерииБезРасчетаПоШаблонуНаименования(НастройкиИспользованияСерий, СерияЦенообразования);
	ВтораяЧастьНаименования = СтрСоединить(МассивДляФормированияНаименования, ", ");
		
	Если ПустаяСтрока(СерияЦенообразования.Наименование) Тогда
		СерияЦенообразования.Наименование = ВтораяЧастьНаименования;
	ИначеЕсли Не ПустаяСтрока(ВтораяЧастьНаименования) Тогда
		СерияЦенообразования.Наименование = СерияЦенообразования.Наименование + "(" + ВтораяЧастьНаименования + ")";
	КонецЕсли;
	
	СерияЦенообразования.КоличествоРеквизитов = РеквизитыДляПоиска.РеквизитыДляКлючаЦен.Количество();

	СерияЦенообразования.Записать();
	
	Возврат СерияЦенообразования.Ссылка;
	
КонецФункции


// Функция возвращает наименования реквизитов по которым возможен контроль
// 
// Возвращаемое значение:
// 	Массив - Наименования реквизитов по которым возможен контроль
Функция ПолучитьНаборРеквизитовДляКонтроля() Экспорт

	МассивНаименованийРеквизитов  = Новый Массив();
	МассивНаименованийРеквизитов.Добавить("ГоденДо");
	МассивНаименованийРеквизитов.Добавить("ВидНоменклатуры");
	МассивНаименованийРеквизитов.Добавить("Номер");
	МассивНаименованийРеквизитов.Добавить("ДатаПроизводства");
	МассивНаименованийРеквизитов.Добавить("НомерКиЗГИСМ");
	МассивНаименованийРеквизитов.Добавить("ПроизводительЕГАИС");
	МассивНаименованийРеквизитов.Добавить("Справка2ЕГАИС");
	МассивНаименованийРеквизитов.Добавить("ПроизводительВЕТИС");
	МассивНаименованийРеквизитов.Добавить("ЗаписьСкладскогоЖурналаВЕТИС");
	МассивНаименованийРеквизитов.Добавить("ИдентификаторПартииВЕТИС");
	МассивНаименованийРеквизитов.Добавить("МаксимальнаяРозничнаяЦенаМОТП");
	
	Возврат МассивНаименованийРеквизитов;
	
КонецФункции

#КонецОбласти
	
#Область СлужебныеПроцедурыИФункции

Функция НайтиСерииПоНаборуРеквизитов(РеквизитыДляПоиска)
	
	ТаблицаНайдено = Новый ТаблицаЗначений();
	
	РеквизитыДляКлючаЦен = РеквизитыДляПоиска.РеквизитыДляКлючаЦен;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Владелец", РеквизитыДляПоиска.ВидНоменклатуры);
	
	ТекстЗапросаПоДопРеквизитам = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаСерий.Ссылка КАК СерияНоменклатуры
	|ИЗ
	|	Справочник.СерииНоменклатурыДляЦенообразования.ДополнительныеРеквизитыЦенообразования КАК ТаблицаСерий";
	
	ТекстУсловияПоДопРеквизитам = "
	|ГДЕ
	|	ТаблицаСерий.Ссылка.ВидНоменклатуры = &Владелец
	|	И ТаблицаСерий.Ссылка.КоличествоРеквизитов = &КоличествоРеквизитов";
	
	ТекстУсловияПоДопРеквизитамВ = "
	|	И ТаблицаСерий.Ссылка В ";
	
	ТекстЗапросаПоРеквизитам = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаСерий.Ссылка КАК СерияНоменклатуры
	|ИЗ
	|	Справочник.СерииНоменклатурыДляЦенообразования КАК ТаблицаСерий";
	
	ТекстУсловияПоРеквизитам = "
	|ГДЕ
	|	ТаблицаСерий.ВидНоменклатуры = &Владелец
	|	И ТаблицаСерий.КоличествоРеквизитов = &КоличествоРеквизитов";
	
	СчетчикУсловийПоРеквизитам = 0;
	СчетчикУсловийПоДопРеквизитам = 0;
	
	// Генерируем текст условия запроса по дополнительным реквизитам, устанавливаем параметры.
	Для Каждого СтрокаУсловия Из РеквизитыДляКлючаЦен Цикл
		
		Если СтрокаУсловия.ЭтоДопРеквизит Тогда
			СтрокаСчетчикУсловийПоДопРеквизитам = Формат(СчетчикУсловийПоДопРеквизитам,"ЧГ=0");

			ИмяТаблицыСУсловием = "ТаблицаСерийСУсловиемПоДопРеквизиту_" + СтрокаСчетчикУсловийПоДопРеквизитам;
			
			ТекстУсловияПоДопРеквизитам = ТекстУсловияПоДопРеквизитам +
			"
			|  И " + ИмяТаблицыСУсловием + ".Свойство = &СвойствоДоп_" + СтрокаСчетчикУсловийПоДопРеквизитам + 
			"
			|  И " + ИмяТаблицыСУсловием + ".Значение = &ЗначениеДоп_" + СтрокаСчетчикУсловийПоДопРеквизитам +
			"
			|  И " + ИмяТаблицыСУсловием + ".Ссылка.ВидНоменклатуры = &Владелец";
			
			Запрос.УстановитьПараметр("СвойствоДоп_" + СтрокаСчетчикУсловийПоДопРеквизитам, СтрокаУсловия.Свойство);
			Запрос.УстановитьПараметр("ЗначениеДоп_" + СтрокаСчетчикУсловийПоДопРеквизитам, СтрокаУсловия.Значение);
			
			ТекстСоединения = "
			| ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатурыДляЦенообразования.ДополнительныеРеквизитыЦенообразования КАК " + ИмяТаблицыСУсловием + "
			| ПО ТаблицаСерий.Ссылка = " + ИмяТаблицыСУсловием + ".Ссылка";
			
			ТекстЗапросаПоДопРеквизитам = ТекстЗапросаПоДопРеквизитам + ТекстСоединения;
			СчетчикУсловийПоДопРеквизитам = СчетчикУсловийПоДопРеквизитам + 1;
		Иначе
			СтрокаСчетчикУсловийПоРеквизитам = Формат(СчетчикУсловийПоРеквизитам,"ЧГ=0");
			
			ИмяТаблицыСУсловием = "ТаблицаСерийСУсловиемПоРеквизиту_" + СтрокаСчетчикУсловийПоРеквизитам;
			
			ТекстУсловияПоРеквизитам = ТекстУсловияПоРеквизитам +
			"
			|  И " + ИмяТаблицыСУсловием + "." + СтрокаУсловия.ИмяРеквизита + " = &Значение_" + СтрокаСчетчикУсловийПоРеквизитам +
			"
			|  И " + ИмяТаблицыСУсловием + ".ВидНоменклатуры = &Владелец";
			
			Запрос.УстановитьПараметр("Значение_" + СтрокаСчетчикУсловийПоРеквизитам, СтрокаУсловия.Значение);
			
			ТекстСоединения = "
			| ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатурыДляЦенообразования КАК " + ИмяТаблицыСУсловием + "
			| ПО ТаблицаСерий.Ссылка = " + ИмяТаблицыСУсловием + ".Ссылка";
			
			ТекстЗапросаПоРеквизитам = ТекстЗапросаПоРеквизитам + ТекстСоединения;
			СчетчикУсловийПоРеквизитам = СчетчикУсловийПоРеквизитам + 1;
		КонецЕсли;
		
	КонецЦикла;
	
	Если СчетчикУсловийПоРеквизитам = 0
		И СчетчикУсловийПоДопРеквизитам  = 0 Тогда
		Возврат ТаблицаНайдено;
	КонецЕсли;
	
	ЧастиЗапроса = Новый Массив;
	Если СчетчикУсловийПоДопРеквизитам > 0 Тогда
		ЧастиЗапроса.Добавить(ТекстЗапросаПоДопРеквизитам + ТекстУсловияПоДопРеквизитам);
	КонецЕсли;
	
	Если СчетчикУсловийПоРеквизитам > 0 Тогда
		ЧастиЗапроса.Добавить(ТекстЗапросаПоРеквизитам + ТекстУсловияПоРеквизитам);
	КонецЕсли;
	
	Если ЧастиЗапроса.Количество()>1 Тогда
		Запрос.Текст	= ЧастиЗапроса[0] + ТекстУсловияПоДопРеквизитамВ + "(" + ЧастиЗапроса[1] + ")";
	иначе
		Запрос.Текст = ЧастиЗапроса[0];
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("КоличествоРеквизитов", (СчетчикУсловийПоРеквизитам + СчетчикУсловийПоДопРеквизитам));

	ТаблицаНайдено	= Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаНайдено;
КонецФункции

#Область ОбновлениеИнформационнойБазы

#КонецОбласти

#КонецОбласти

#КонецЕсли