#Если Сервер Тогда
	
#Область ОбработчикиСобытий
	
Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
	 	Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ОбъектОбработки = ВнешняяПечатнаяФорма.ПолучитьОбъект();
	
	Если ОбъектОбработки = Неопределено Тогда
		ОбъектОбработки = Справочники.ДополнительныеОтчетыИОбработки.СоздатьЭлемент();
		ОбъектОбработки.УстановитьСсылкуНового(ВнешняяПечатнаяФорма);
	КонецЕсли; 
	
	Модуль_Пользователи = ДатаМобайл_ОбщийМодуль.ОбщийМодуль("Пользователи");
	
	ОбъектОбработки.Вид = Перечисления.ВидыДополнительныхОтчетовИОбработок.ПечатнаяФорма;
	ОбъектОбработки.Наименование = "Выгрузить в DataMobile по шаблону '" + Наименование + "'";
	ОбъектОбработки.ХранилищеОбработки = Новый ХранилищеЗначения(ПолучитьМакет("МакетВПФ"));
	ОбъектОбработки.ИспользоватьДляФормыОбъекта = Истина;
	ОбъектОбработки.ИспользоватьДляФормыСписка = Истина;
	ОбъектОбработки.Публикация = Перечисления.ВариантыПубликацииДополнительныхОтчетовИОбработок.Используется;
	ОбъектОбработки.Назначение.Очистить();
	СтрокаОбъекта = ОбъектОбработки.Назначение.Добавить();
	лПолноеИмяОбъектаМетаданных = Метаданные.Документы[ВидДокумента].ПолноеИмя();
	СтрокаОбъекта.ОбъектНазначения = Справочники.ИдентификаторыОбъектовМетаданных.НайтиПоРеквизиту("ПолноеИмя", лПолноеИмяОбъектаМетаданных);
	ОбъектОбработки.Команды.Очистить();
	ОбъектОбработки.Ответственный = Модуль_Пользователи.ТекущийПользователь();
	НоваяСтрока = ОбъектОбработки.Команды.Добавить();
	НоваяСтрока.Идентификатор	= "ОтправитьВДМ" + Формат(Код, "ЧГ=0");
	НоваяСтрока.Представление	= "Выгрузить в DataMobile по шаблону '" + Наименование + "'";
	НоваяСтрока.Модификатор		= "";
	НоваяСтрока.ПоказыватьОповещение = Ложь;
	НоваяСтрока.ВариантЗапуска = Перечисления.СпособыВызоваДополнительныхОбработок.ВызовКлиентскогоМетода;
	
	Если ЭтотОбъект.ПометкаУдаления Тогда
		ОбъектОбработки.Назначение.Очистить();
		ОбъектОбработки.Команды.Очистить();
	КонецЕсли;
	
	ОбъектОбработки.Записать();
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
	 	Возврат;
	КонецЕсли;
	
	// Отключение механизма регистрации объектов.
	ДополнительныеСвойства.Вставить("ОтключитьМеханизмРегистрацииОбъектов");
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ВнешняяПечатнаяФорма.Пустая() Тогда
		ВнешняяПечатнаяФорма=Справочники.ДополнительныеОтчетыИОбработки.ПолучитьСсылку(Новый УникальныйИдентификатор());
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	// Отключение механизма регистрации объектов.
	ДополнительныеСвойства.Вставить("ОтключитьМеханизмРегистрацииОбъектов");
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ВнешняяПечатнаяФорма.Пустая() Тогда
		
		ВПФ = ВнешняяПечатнаяФорма.ПолучитьОбъект();
		ВПФ.Назначение.Очистить();
		ВПФ.Команды.Очистить();
		ВПФ.Записать();
		ВПФ.Удалить();
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ПриКопировании()
	
	ВнешняяПечатнаяФорма = Неопределено;
	
Конецпроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если Не ИспользоватьПодбор Тогда
		ПорядковыйНомерПодбор = ПроверяемыеРеквизиты.Найти("ИмяТабличнойЧастиПодбор");
		
		Если ПорядковыйНомерПодбор <> Неопределено Тогда
			ПроверяемыеРеквизиты.Удалить(ПорядковыйНомерПодбор);
		КонецЕсли;		
	КонецЕсли; 	
	
	Если Не ИспользоватьПриемку Тогда
		ПорядковыйНомерПриемка = ПроверяемыеРеквизиты.Найти("ИмяТабличнойЧастиПриемка");
		
		Если ПорядковыйНомерПриемка <> Неопределено Тогда
			ПроверяемыеРеквизиты.Удалить(ПорядковыйНомерПриемка);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли


