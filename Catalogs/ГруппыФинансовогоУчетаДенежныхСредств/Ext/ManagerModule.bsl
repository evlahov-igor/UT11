#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// См. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
//
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Справочники.ГруппыФинансовогоУчетаДенежныхСредств.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "11.5.6.14";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("bc084003-04f3-4128-b288-1c4c7f12c7f5");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Справочники.ГруппыФинансовогоУчетаДенежныхСредств.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Заполняет реквизит ""Тип денежных средств""'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Справочники.БанковскиеСчетаОрганизаций.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Справочники.Кассы.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Справочники.ГруппыФинансовогоУчетаДенежныхСредств.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.Справочники.ГруппыФинансовогоУчетаДенежныхСредств.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Справочники.БанковскиеСчетаОрганизаций.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "До";

КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаОбъектов = ПустаяСсылка().Метаданные().ПолноеИмя();
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Ссылка");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиСсылки();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ГФУ.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ГруппыФинансовогоУчетаДенежныхСредств КАК ГФУ
	|ГДЕ
	|	ГФУ.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.ПустаяСсылка)
	|	И ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчетаОрганизаций
	|		ГДЕ
	|			БанковскиеСчетаОрганизаций.ГруппаФинансовогоУчета = ГФУ.Ссылка)
	|	И НЕ (ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			Справочник.Кассы КАК Кассы
	|		ГДЕ
	|			Кассы.ГруппаФинансовогоУчета = ГФУ.Ссылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ГФУ.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ГруппыФинансовогоУчетаДенежныхСредств КАК ГФУ
	|ГДЕ
	|	ГФУ.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.ПустаяСсылка)
	|	И НЕ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчетаОрганизаций
	|		ГДЕ
	|			БанковскиеСчетаОрганизаций.ГруппаФинансовогоУчета = ГФУ.Ссылка)
	|	И (ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			Справочник.Кассы КАК Кассы
	|		ГДЕ
	|			Кассы.ГруппаФинансовогоУчета = ГФУ.Ссылка))
	|
	|";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = ПустаяСсылка().Метаданные().ПолноеИмя();
	
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Если Не ОбновляемыеДанные.Количество() Тогда
		Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
		Возврат;
	КонецЕсли;
	
	ЗапросТипДенежныхСредств = Новый Запрос();
	ЗапросТипДенежныхСредств.Текст =
	"ВЫБРАТЬ
	|	ГФУ.Ссылка КАК Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные) КАК ТипДенежныхСредств
	|ИЗ
	|	Справочник.ГруппыФинансовогоУчетаДенежныхСредств КАК ГФУ
	|ГДЕ
	|	ГФУ.Ссылка В (&ОбновляемыеДанные)
	|	И ГФУ.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.ПустаяСсылка)
	|	И ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчетаОрганизаций
	|		ГДЕ
	|			БанковскиеСчетаОрганизаций.ГруппаФинансовогоУчета = ГФУ.Ссылка)
	|	И НЕ (ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			Справочник.Кассы КАК Кассы
	|		ГДЕ
	|			Кассы.ГруппаФинансовогоУчета = ГФУ.Ссылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ГФУ.Ссылка КАК Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные) КАК ТипДенежныхСредств
	|ИЗ
	|	Справочник.ГруппыФинансовогоУчетаДенежныхСредств КАК ГФУ
	|ГДЕ
	|	ГФУ.Ссылка В (&ОбновляемыеДанные)
	|	И ГФУ.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.ПустаяСсылка)
	|	И НЕ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчетаОрганизаций
	|		ГДЕ
	|			БанковскиеСчетаОрганизаций.ГруппаФинансовогоУчета = ГФУ.Ссылка)
	|	И (ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			Справочник.Кассы КАК Кассы
	|		ГДЕ
	|			Кассы.ГруппаФинансовогоУчета = ГФУ.Ссылка))";
	ЗапросТипДенежныхСредств.УстановитьПараметр("ОбновляемыеДанные", ОбновляемыеДанные.ВыгрузитьКолонку("Ссылка"));
	ДанныеДляЗаполнения = ЗапросТипДенежныхСредств.Выполнить().Выгрузить();
	ДанныеДляЗаполнения.Индексы.Добавить("Ссылка");
	
	Для Каждого ЭлементСправочника Из ОбновляемыеДанные Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Ссылка = ЭлементСправочника.Ссылка;// СправочникСсылка.ГруппыФинансовогоУчетаДенежныхСредств - 
			
			Блокировка = Новый БлокировкаДанных;
			БлокировкаГФУ = Блокировка.Добавить(ПолноеИмяОбъекта);
			БлокировкаГФУ.УстановитьЗначение("Ссылка", Ссылка);
			Блокировка.Заблокировать();
			
			СправочникОбъект = Ссылка.ПолучитьОбъект();
			
			Если СправочникОбъект = Неопределено Тогда
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Ссылка);
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(СправочникОбъект.ТипДенежныхСредств) Тогда
				НайденныеСтроки = ДанныеДляЗаполнения.НайтиСтроки(Новый Структура("Ссылка", Ссылка));
				Если НайденныеСтроки.Количество() Тогда
					СправочникОбъект.ТипДенежныхСредств = НайденныеСтроки[0].ТипДенежныхСредств;
				КонецЕсли;
			КонецЕсли;
			
			Если СправочникОбъект.Модифицированность() Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(СправочникОбъект);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Ссылка);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), Ссылка);
			
		КонецПопытки;
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
