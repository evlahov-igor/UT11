
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаИнОргДовер.Видимость = Ложь;
	Элементы.ГруппаФЛДовер.Видимость = Ложь;
	
	ТипыОрганизацииПредставителяМЧД = Новый Массив(); 
	ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьТипыОрганизацииПредставителяМЧД(
		ТипыОрганизацииПредставителяМЧД);
	НашеОписание = Новый ОписаниеТипов(ТипыОрганизацииПредставителяМЧД);
	Элементы.РеквизитПредставительОрганизация.ОграничениеТипа = НашеОписание; 
	РеквизитПредставительОрганизация = НашеОписание.ПривестиЗначение(РеквизитПредставительОрганизация); 
	
	ЭтоНоваяЗапись = Параметры.Ключ.Пустая();
	Если ЭтоНоваяЗапись Тогда
		
		УстановитьЗаголовокФормы(ЭтоНоваяЗапись);
		
		Объект.Статус = Перечисления.СтатусыМашиночитаемойДоверенности.ВРаботе;
		Объект.ДатаОтправки = Неопределено;
		Объект.ДатаОтправкиЗаявленияНаОтзыв = Неопределено;
		Объект.ДатаОбновленияСтатуса = Неопределено;
		Объект.ИдентификаторТранзакции = "";
		Объект.СтатусОшибки = 0;
		Объект.ТекстОшибки = "";
		Объект.КодОшибки = "";
		Объект.ИмяФайлаВыгрузка = "";
		Объект.ИмяФайлаЗаявленияНаОтзыв = "";
		Объект.ОтпечатокСертификата = "";
		
		Если Объект.ПолномочияПредставителя.Количество() = 0 Тогда
			СтрокаПолномочий = Объект.ПолномочияПредставителя.Добавить();
			СтрокаПолномочий.ПризнакПолныеПолномочия = Истина;
		КонецЕсли;
			
	КонецЕсли;
	
	ОбновитьСостояниеПриОткрытии = Параметры.ОбновитьСостояниеПриОткрытии;
	
	ЦветФонаТекущейОтправки 		= Новый Цвет(253, 246, 195);
	ЦветФонаОшибкиОтправки 			= Новый Цвет(251, 212, 212);
	ЦветФонаУдачнойОтправки 		= Новый Цвет(215, 240, 199);
	ЦветФонаНеначавшейсяОтправки 	= Новый Цвет(240, 240, 240);
	
	СвойстваОрганизации = Неопределено;
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		СвойстваОрганизации = ПолучитьСвойстваОрганизации(Объект.Организация);
	КонецЕсли;
	Доверитель_ЮридическоеЛицо = НЕ ЗначениеЗаполнено(СвойстваОрганизации) ИЛИ СвойстваОрганизации.ЭтоЮридическоеЛицо;
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Владелец", Перечисления.СубъектыДоверенности.ДоверительРук);
	СтрокиФИО = Объект.ФИО.НайтиСтроки(СтруктураПоиска);
	РеквизитДоверительФизЛицоФИО = ?(СтрокиФИО.Количество() <> 0, ПолучитьПредставлениеФИО(СтрокиФИО[0]), "");
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Владелец", Перечисления.СубъектыДоверенности.ПредставительФЛ);
	СтрокиФИО = Объект.ФИО.НайтиСтроки(СтруктураПоиска);
	ПредставительФЛ_ФИО = ?(СтрокиФИО.Количество() <> 0, ПолучитьПредставлениеФИО(СтрокиФИО[0]), "");
	
	СтрокиУдостоверений = Объект.УдостоверенияЛичности.НайтиСтроки(СтруктураПоиска);
	ПредставительФЛ_Удостоверение = ?(СтрокиУдостоверений.Количество() <> 0,
		ПолучитьПредставлениеУдостоверение(СтрокиУдостоверений[0]), "");
	
	КоличествоПолномочий = 25;
	ПолучитьСсылкиНаСтороныДоверенности();
	УправлениеЭУ(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	УстановитьЗаголовокФормы();
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЭтоНоваяЗапись Тогда
		МашиночитаемыеДоверенностиКлиент.ПолучитьНомерМЧД(,, ЭтотОбъект);
		
	ИначеЕсли ОбновитьСостояниеПриОткрытии Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбновитьОтправкуЗавершение", ЭтотОбъект);
		МашиночитаемыеДоверенностиКлиент.ОбновитьСостояниеМЧД(ОписаниеОповещения,, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьЗаголовокФормы();
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОткрытьФормуПросмотра(Команда)

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Объект.Ссылка);

	ОткрытьФорму(
		"Справочник.МашиночитаемыеДоверенностиОрганизаций.Форма.ФормаПросмотра", ПараметрыФормы, ЭтотОбъект,
		УникальныйИдентификатор, , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура РеквизитПредставительОрганизацияПриИзменении(Элемент)
	РеквизитПредставительОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура РеквизитПредставительОрганизацияПриИзмененииНаСервере()
	
	Объект.ПредставительЮЛ_НаимОрг = "";
	Объект.ПредставительЮЛ_ИНН = "";
	Объект.ПредставительЮЛ_КПП = "";
	Объект.ПредставительЮЛ_ОГРН = "";
	Объект.ПредставительФЛ_ОГРН = "";
	
	СвойстваОрганизации = Неопределено;
	Если ЗначениеЗаполнено(РеквизитПредставительОрганизация) Тогда
		СвойстваОрганизации = ПолучитьСвойстваОрганизации(РеквизитПредставительОрганизация);
	Иначе
		Возврат;
	КонецЕсли;
	
	Элементы.ПредставительЮЛ_НаимОрг.Видимость = Не ЗначениеЗаполнено(РеквизитПредставительОрганизация);
	
	Если Не СвойстваОрганизации.ЭтоЮридическоеЛицо Тогда
		ОбщегоНазначения.СообщитьПользователю(
   			НСтр("ru = 'Необходимо выбрать юридическое лицо.'"), , "РеквизитПредставительОрганизация");
		РеквизитПредставительОрганизация = Неопределено;
		Возврат;
	КонецЕсли;
		
	Объект.ПредставительЮЛ_НаимОрг = ?(ЗначениеЗаполнено(СвойстваОрганизации), СвойстваОрганизации.Наименование, "");
	Объект.ПредставительЮЛ_ИНН = ?(ЗначениеЗаполнено(СвойстваОрганизации) И СвойстваОрганизации.ЭтоЮридическоеЛицо,
		СвойстваОрганизации.ИНН , "");
	Объект.ПредставительЮЛ_КПП = ?(ЗначениеЗаполнено(СвойстваОрганизации) И СвойстваОрганизации.ЭтоЮридическоеЛицо,
		СвойстваОрганизации.КПП , "");
	Объект.ПредставительЮЛ_ОГРН = ?(ЗначениеЗаполнено(СвойстваОрганизации) И СвойстваОрганизации.ЭтоЮридическоеЛицо,
		СвойстваОрганизации.ОГРН , "");
	Объект.ПредставительФЛ_ОГРН = ?(ЗначениеЗаполнено(СвойстваОрганизации) И НЕ СвойстваОрганизации.ЭтоЮридическоеЛицо,
		СвойстваОрганизации.ОГРН , "");
		
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура РеквизитПредставительФизЛицоПриИзменении(Элемент)
	РеквизитПредставительФизЛицоПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура РеквизитПредставительФизЛицоПриИзмененииНаСервере()
	
	ОчиститьРеквизитыПредставительФизЛицо();
		
	Если НЕ ЗначениеЗаполнено(РеквизитПредставительФизЛицо) Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаПредставительФИО.Видимость = Не ЗначениеЗаполнено(РеквизитПредставительФизЛицо);
	
	СтруктураСведений = ЭлектронноеВзаимодействие.СтруктураДанныхФизЛица();
	ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьДанныеФизЛица(РеквизитПредставительФизЛицо, СтруктураСведений);
	
	Объект.ПредставительФЛ_ИНН = ?(ЗначениеЗаполнено(СтруктураСведений), СтруктураСведений.ИНН, "");
	Объект.ПредставительФЛ_СНИЛС = ?(ЗначениеЗаполнено(СтруктураСведений), СтруктураСведений.СтраховойНомерПФР, "");
	Объект.ПредставительФЛ_Гражданство = ?(ЗначениеЗаполнено(СтруктураСведений), СтруктураСведений.Гражданство, 
		ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка"));
	Объект.ПредставительФЛ_ДатаРождения = ?(ЗначениеЗаполнено(СтруктураСведений), 
		СтруктураСведений.ДатаРождения, Неопределено);
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Владелец", ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ПредставительФЛ"));
	СтрокиФИО = Объект.ФИО.НайтиСтроки(СтруктураПоиска);
	КоличествоСтрокФИО = СтрокиФИО.Количество();
	Если КоличествоСтрокФИО = 0 Тогда
		СтрокаФИО = Объект.ФИО.Добавить();
		СтрокаФИО.Владелец = ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ПредставительФЛ");
	Иначе
		СтрокаФИО = СтрокиФИО[0];
	КонецЕсли;
	СтрокаФИО.Фамилия 	= СтруктураСведений.Фамилия;
	СтрокаФИО.Имя 		= СтруктураСведений.Имя;
	СтрокаФИО.Отчество 	= СтруктураСведений.Отчество;
	
	Объект.Представитель = ПолучитьПредставлениеФИО(СтрокаФИО);
	
	СтрокиУдостоверений = Объект.УдостоверенияЛичности.НайтиСтроки(СтруктураПоиска);
	Если СтрокиУдостоверений.Количество() = 0 Тогда
		СтрокаУдостоверения = Объект.УдостоверенияЛичности.Добавить();
		СтрокаУдостоверения.Владелец = ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ПредставительФЛ");
	Иначе
		СтрокаУдостоверения = СтрокиУдостоверений[0];
	КонецЕсли;
	СтруктураСведенийДокументыФизЛица = Новый Структура;
	ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьДокументыФизЛица(РеквизитПредставительФизЛицо, 
		СтруктураСведенийДокументыФизЛица);
		
	СтрокаУдостоверения.ВидДок 		= СтруктураСведенийДокументыФизЛица.ВидДокумента.КодМВД;
	СтрокаУдостоверения.СерДок 		= СтруктураСведенийДокументыФизЛица.Серия;
	СтрокаУдостоверения.НомДок 		= СтруктураСведенийДокументыФизЛица.Номер;
	СтрокаУдостоверения.ДатаДок 		= СтруктураСведенийДокументыФизЛица.ДатаВыдачи;
	СтрокаУдостоверения.ВыдДок 		= СтруктураСведенийДокументыФизЛица.КемВыдан;
	СтрокаУдостоверения.КодВыдДок 	= СтруктураСведенийДокументыФизЛица.КодПодразделения;
	
	ПредставительФЛ_Удостоверение = ПолучитьПредставлениеУдостоверение(СтрокаУдостоверения);

	Модифицированность = Истина;	
КонецПроцедуры

&НаСервере
Процедура ОчиститьРеквизитыПредставительФизЛицо()
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Владелец", ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ПредставительФЛ"));
	СтрокиФИО = Объект.ФИО.НайтиСтроки(СтруктураПоиска);
	
	КоличествоСтрок = СтрокиФИО.Количество();
	Для НомерСКонца = 1 По КоличествоСтрок Цикл
		Объект.ФИО.Удалить(СтрокиФИО[КоличествоСтрок - НомерСКонца]);
	КонецЦикла;
	
	СтрокиУдостоверений = Объект.УдостоверенияЛичности.НайтиСтроки(СтруктураПоиска);	
	КоличествоСтрок = СтрокиУдостоверений.Количество();
	Для НомерСКонца = 1 По КоличествоСтрок Цикл
		Объект.УдостоверенияЛичности.Удалить(СтрокиУдостоверений[КоличествоСтрок - НомерСКонца]);
	КонецЦикла;
	
	Объект.ПредставительФЛ_ИНН = "";
	Объект.ПредставительФЛ_СНИЛС = "";
	Объект.ПредставительФЛ_Гражданство = ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка");
	Объект.ПредставительФЛ_ДатаРождения = Неопределено;
			
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	СвойстваОрганизации = Неопределено;
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		СвойстваОрганизации = ПолучитьСвойстваОрганизации(Объект.Организация);
	КонецЕсли;
	
	Доверитель_ЮридическоеЛицо = НЕ ЗначениеЗаполнено(СвойстваОрганизации) ИЛИ СвойстваОрганизации.ЭтоЮридическоеЛицо;
	Объект.ДоверительЮЛ_ИностраннаяОрганизация = ЗначениеЗаполнено(СвойстваОрганизации)
		И НЕ СвойстваОрганизации.ЭтоРоссийскаяОрганизация;

	Объект.ДоверительЮЛ_НаимОрг = ?(ЗначениеЗаполнено(СвойстваОрганизации), СвойстваОрганизации.Наименование, "");
	Объект.ДоверительЮЛ_ИНН = ?(ЗначениеЗаполнено(СвойстваОрганизации) И СвойстваОрганизации.ЭтоЮридическоеЛицо,
		СвойстваОрганизации.ИНН , "");
	Объект.ДоверительЮЛ_КПП = ?(ЗначениеЗаполнено(СвойстваОрганизации) И СвойстваОрганизации.ЭтоЮридическоеЛицо,
		СвойстваОрганизации.КПП , "");
	Объект.ДоверительЮЛ_ОГРН = ?(ЗначениеЗаполнено(СвойстваОрганизации) И СвойстваОрганизации.ЭтоЮридическоеЛицо,
		СвойстваОрганизации.ОГРН , "");
	Объект.ДоверительЮЛ_СтрРег = ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка");
	Объект.ДоверительЮЛ_НаимРегОрг = "";
	Объект.ДоверительЮЛ_РегНомер = "";
	
	Если СвойстваОрганизации.Свойство("АдресXML")Тогда
		Объект.ДоверительЮЛ_АдрXML = СвойстваОрганизации.АдресXML;
		Объект.ДоверительЮЛ_Адр = ПредставлениеКонтактнойИнформации(Объект.ДоверительЮЛ_АдрXML);
	Иначе
		Объект.ДоверительЮЛ_АдрXML = "";
		Объект.ДоверительЮЛ_Адр = "";
	КонецЕсли;
	
	СубъектДоверенности = ?(Доверитель_ЮридическоеЛицо,
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ДоверительРук"),
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ДоверительФЛ"));
	СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенности));
	КоличествоСтрокФИО = СтрокиФИО.Количество();
	Если КоличествоСтрокФИО = 0 Тогда
		Если ЗначениеЗаполнено(СвойстваОрганизации) Тогда
			СтрокаФИО = Объект.ФИО.Добавить();
			СтрокаФИО.Владелец = СубъектДоверенности;
		КонецЕсли;
	Иначе
		Если ЗначениеЗаполнено(СвойстваОрганизации) Тогда
			СтрокаФИО = СтрокиФИО[0];
		Иначе
			Для НомерСКонца = 1 По КоличествоСтрокФИО Цикл
				Объект.ФИО.Удалить(СтрокиФИО[КоличествоСтрокФИО - НомерСКонца]);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(СвойстваОрганизации) Тогда
		СтрокаФИО.Фамилия = СвойстваОрганизации.Фамилия;
		СтрокаФИО.Имя = СвойстваОрганизации.Имя;
		СтрокаФИО.Отчество = СвойстваОрганизации.Отчество;
	КонецЕсли;
	
	СтрокиУдостоверений = Объект.УдостоверенияЛичности.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенности));
	КоличествоСтрокУдостоверений = СтрокиУдостоверений.Количество();
	Если КоличествоСтрокУдостоверений <> 0 Тогда
		Для НомерСКонца = 1 По КоличествоСтрокУдостоверений Цикл
			Объект.УдостоверенияЛичности.Удалить(СтрокиУдостоверений[КоличествоСтрокУдостоверений - НомерСКонца]);
		КонецЦикла;
	КонецЕсли;
	
	Объект.ДоверительФЛ_ИНН = ?(ЗначениеЗаполнено(СвойстваОрганизации) И НЕ СвойстваОрганизации.ЭтоЮридическоеЛицо,
		СвойстваОрганизации.ИНН , "");
	Объект.ДоверительФЛ_ОГРН = ?(ЗначениеЗаполнено(СвойстваОрганизации) И НЕ СвойстваОрганизации.ЭтоЮридическоеЛицо,
		СвойстваОрганизации.ОГРН, "");
	Объект.ДоверительФЛ_СНИЛС = "";
	Объект.ДоверительФЛ_Гражданство = ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка");
	Объект.ДоверительФЛ_ДатаРождения = Неопределено;
	Объект.ДоверительФЛ_МестоРожд = "";
	
	Объект.ЛицоБезДовФЛ = Неопределено;
	Объект.ЛицоБезДовФЛ_ИНН = "";
	Объект.ЛицоБезДовФЛ_СНИЛС = "";
	Объект.ЛицоБезДовФЛ_Гражданство = ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка");
	Объект.ЛицоБезДовФЛ_ДатаРождения = Неопределено;
	Объект.ЛицоБезДовФЛ_Должность = ?(ЗначениеЗаполнено(СвойстваОрганизации) И СвойстваОрганизации.ЭтоЮридическоеЛицо
		И НЕ Объект.ДоверительЮЛ_ИностраннаяОрганизация, СвойстваОрганизации.Должность, "");
	
	РеквизитДоверительФизЛицо = Неопределено;
	
	УправлениеЭУ(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРеквизитыДоверителяНажатие(Элемент)
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Доверитель_ЮридическоеЛицо", Доверитель_ЮридическоеЛицо);
	СтруктураДанных.Вставить("ДоверительЮЛ_РоссийскаяОрганизация", НЕ Объект.ДоверительЮЛ_ИностраннаяОрганизация);
	СтруктураДанных.Вставить("ДоверительЮЛ_НаимОрг", Объект.ДоверительЮЛ_НаимОрг);
	СтруктураДанных.Вставить("ДоверительЮЛ_ИНН", Объект.ДоверительЮЛ_ИНН);
	СтруктураДанных.Вставить("ДоверительЮЛ_КПП", Объект.ДоверительЮЛ_КПП);
	СтруктураДанных.Вставить("ДоверительЮЛ_ОГРН", Объект.ДоверительЮЛ_ОГРН);
	СтруктураДанных.Вставить("ДоверительЮЛ_СтрРег", Объект.ДоверительЮЛ_СтрРег);
	СтруктураДанных.Вставить("ДоверительЮЛ_НаимРегОрг", Объект.ДоверительЮЛ_НаимРегОрг);
	СтруктураДанных.Вставить("ДоверительЮЛ_РегНомер", Объект.ДоверительЮЛ_РегНомер);
	СтруктураДанных.Вставить("ДоверительЮЛ_Адр", Объект.ДоверительЮЛ_Адр);
	СтруктураДанных.Вставить("ДоверительЮЛ_АдрXML", Объект.ДоверительЮЛ_АдрXML);
	
	СубъектДоверенности = ?(Доверитель_ЮридическоеЛицо И Объект.ДоверительЮЛ_ИностраннаяОрганизация,
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ДоверительРук"),
		?(НЕ Доверитель_ЮридическоеЛицо,
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ДоверительФЛ"),
		Неопределено));
	СтрокиФИО = ?(СубъектДоверенности = Неопределено, Новый Массив,
		Объект.ФИО.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенности)));
	СтруктураДанных.Вставить("ДоверительФЛ_Фамилия", ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Фамилия, ""));
	СтруктураДанных.Вставить("ДоверительФЛ_Имя", ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Имя, ""));
	СтруктураДанных.Вставить("ДоверительФЛ_Отчество", ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Отчество, ""));
	
	СубъектДоверенности = ?(НЕ Доверитель_ЮридическоеЛицо,
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ДоверительФЛ"),
		Неопределено);
	СтрокиУдостоверений = ?(СубъектДоверенности = Неопределено, Новый Массив,
		Объект.УдостоверенияЛичности.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенности)));
	СтруктураДанных.Вставить("ДоверительФЛ_ВидДок", ?(СтрокиУдостоверений.Количество() <> 0,
		СтрокиУдостоверений[0].ВидДок, ПредопределенноеЗначение("Справочник.ВидыДокументовФизическихЛиц.ПустаяСсылка")));
	СтруктураДанных.Вставить("ДоверительФЛ_СерДок", ?(СтрокиУдостоверений.Количество() <> 0,
		СтрокиУдостоверений[0].СерДок, ""));
	СтруктураДанных.Вставить("ДоверительФЛ_НомДок", ?(СтрокиУдостоверений.Количество() <> 0,
		СтрокиУдостоверений[0].НомДок, ""));
	СтруктураДанных.Вставить("ДоверительФЛ_ДатаДок", ?(СтрокиУдостоверений.Количество() <> 0,
		СтрокиУдостоверений[0].ДатаДок, Неопределено));
	СтруктураДанных.Вставить("ДоверительФЛ_ВыдДок", ?(СтрокиУдостоверений.Количество() <> 0,
		СтрокиУдостоверений[0].ВыдДок, ""));
	СтруктураДанных.Вставить("ДоверительФЛ_КодВыдДок", ?(СтрокиУдостоверений.Количество() <> 0,
		СтрокиУдостоверений[0].КодВыдДок, ""));
	ДоверительФЛ_Удостоверение = ?(СтрокиУдостоверений.Количество() <> 0,
		ПолучитьПредставлениеУдостоверение(СтрокиУдостоверений[0]), "");
	СтруктураДанных.Вставить("ДоверительФЛ_Удостоверение", ДоверительФЛ_Удостоверение);
	
	СтруктураДанных.Вставить("ДоверительФЛ_ИНН", Объект.ДоверительФЛ_ИНН);
	СтруктураДанных.Вставить("ДоверительФЛ_ОГРН", Объект.ДоверительФЛ_ОГРН);
	СтруктураДанных.Вставить("ДоверительФЛ_СНИЛС", Объект.ДоверительФЛ_СНИЛС);
	СтруктураДанных.Вставить("ДоверительФЛ_Гражданство", Объект.ДоверительФЛ_Гражданство);
	СтруктураДанных.Вставить("ДоверительФЛ_Пол", Объект.ДоверительФЛ_Пол);
	СтруктураДанных.Вставить("ДоверительФЛ_ДатаРождения", Объект.ДоверительФЛ_ДатаРождения);
	СтруктураДанных.Вставить("ДоверительФЛ_МестоРожд", Объект.ДоверительФЛ_МестоРожд);
	
	СтруктураДанных.Вставить("ТолькоПросмотрФормы", ТолькоПросмотрФормы(ЭтотОбъект));
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДекорацияРеквизитыДоверителяНажатиеЗавершение", ЭтотОбъект);
	ОткрытьФорму(
		"Справочник.МашиночитаемыеДоверенностиОрганизаций.Форма.ФормаДоверителя",
		Новый Структура("СтруктураДанных", СтруктураДанных),
		ЭтотОбъект,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРеквизитыЛицаБезДоверенностиЮЛНажатие(Элемент)
	
	Если НЕ Доверитель_ЮридическоеЛицо ИЛИ Объект.ДоверительЮЛ_ИностраннаяОрганизация Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ЛицоБезДовЮЛ_НаимОрг", 	Объект.ЛицоБезДовЮЛ_НаимОрг);
	СтруктураДанных.Вставить("ЛицоБезДовЮЛ_ИНН", 		Объект.ЛицоБезДовЮЛ_ИНН);
	СтруктураДанных.Вставить("ЛицоБезДовЮЛ_КПП", 		Объект.ЛицоБезДовЮЛ_КПП);
	СтруктураДанных.Вставить("ЛицоБезДовЮЛ_ОГРН", 		Объект.ЛицоБезДовЮЛ_ОГРН);
	СтруктураДанных.Вставить("ТолькоПросмотрФормы", 	ТолькоПросмотрФормы(ЭтотОбъект));

	ОписаниеОповещения = Новый ОписаниеОповещения("ДекорацияРеквизитыЛицаБезДоверенностиЮЛНажатиеЗавершение",
		ЭтотОбъект);
	ОткрытьФорму(
		"Справочник.МашиночитаемыеДоверенностиОрганизаций.Форма.ФормаЛицаБезДоверенностиЮЛ",
		Новый Структура("СтруктураДанных", СтруктураДанных),
		ЭтотОбъект,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРеквизитыЛицаБезДоверенностиФЛНажатие(Элемент)
	
	Если НЕ Доверитель_ЮридическоеЛицо ИЛИ Объект.ДоверительЮЛ_ИностраннаяОрганизация Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДанных = Новый Структура;
	СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец",
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ДоверительРук")));
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Фамилия", ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Фамилия, ""));
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Имя", ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Имя, ""));
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Отчество", ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Отчество, ""));
	ФИО = ?(СтрокиФИО.Количество() <> 0, ПолучитьПредставлениеФИО(СтрокиФИО[0]), "");
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_ФИО", ФИО);
	
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_ИНН", Объект.ЛицоБезДовФЛ_ИНН);
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_СНИЛС", Объект.ЛицоБезДовФЛ_СНИЛС);
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Гражданство", Объект.ЛицоБезДовФЛ_Гражданство);
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_ДатаРождения", Объект.ЛицоБезДовФЛ_ДатаРождения);
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Должность", Объект.ЛицоБезДовФЛ_Должность);
	
	СтруктураДанных.Вставить("ТолькоПросмотрФормы", ТолькоПросмотрФормы(ЭтотОбъект));
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДекорацияРеквизитыЛицаБезДоверенностиФЛНажатиеЗавершение",
		ЭтотОбъект);
	ОткрытьФорму(
		"Справочник.МашиночитаемыеДоверенностиОрганизаций.Форма.ФормаЛицаБезДоверенностиФЛ",
		Новый Структура("СтруктураДанных", СтруктураДанных),
		ЭтотОбъект,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЛицоБезДовФЛНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	Если Не Доверитель_ЮридическоеЛицо Или Объект.ДоверительЮЛ_ИностраннаяОрганизация Тогда
		СтруктураДанных = Новый Структура;
		СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец", ПредопределенноеЗначение(
			"Перечисление.СубъектыДоверенности.ДоверительФЛ")));
	Иначе
		СтруктураДанных = Новый Структура;
		СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец", ПредопределенноеЗначение(
			"Перечисление.СубъектыДоверенности.ДоверительРук")));
	КонецЕсли;

	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Фамилия", ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Фамилия, ""));
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Имя", ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Имя, ""));
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Отчество", ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Отчество, ""));
	ФИО = ?(СтрокиФИО.Количество() <> 0, ПолучитьПредставлениеФИО(СтрокиФИО[0]), "");
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_ФИО", ФИО);

	СтруктураДанных.Вставить("ТолькоПросмотрФормы", ТолькоПросмотрФормы(ЭтотОбъект));

	ОписаниеОповещения = Новый ОписаниеОповещения("ДекорацияРеквизитыЛицаБезДоверенностиФЛНажатиеЗавершение",
		ЭтотОбъект);
	ОткрытьФорму(
		"Справочник.МашиночитаемыеДоверенностиОрганизаций.Форма.ФормаЛицаБезДоверенностиФЛ",
		Новый Структура("СтруктураДанных", СтруктураДанных), ЭтотОбъект, , , , ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьЧастиФИО(Команда)
	
	Если Не Доверитель_ЮридическоеЛицо Или Объект.ДоверительЮЛ_ИностраннаяОрганизация Тогда
		СтруктураДанных = Новый Структура;
		СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец", ПредопределенноеЗначение(
			"Перечисление.СубъектыДоверенности.ДоверительФЛ")));
	Иначе
		СтруктураДанных = Новый Структура;
		СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец", ПредопределенноеЗначение(
			"Перечисление.СубъектыДоверенности.ДоверительРук")));
	КонецЕсли;

	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Фамилия", ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Фамилия, ""));
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Имя", ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Имя, ""));
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Отчество", ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Отчество, ""));
	ФИО = ?(СтрокиФИО.Количество() <> 0, ПолучитьПредставлениеФИО(СтрокиФИО[0]), "");
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_ФИО", ФИО);

	СтруктураДанных.Вставить("ТолькоПросмотрФормы", ТолькоПросмотрФормы(ЭтотОбъект));

	ОписаниеОповещения = Новый ОписаниеОповещения("ДекорацияРеквизитыЛицаБезДоверенностиФЛНажатиеЗавершение",
		ЭтотОбъект);
	ОткрытьФорму(
		"Справочник.МашиночитаемыеДоверенностиОрганизаций.Форма.ФормаЛицаБезДоверенностиФЛ",
		Новый Структура("СтруктураДанных", СтруктураДанных), ЭтотОбъект, , , , ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура РеквизитДоверительФизЛицоПриИзменении(Элемент)
	РеквизитДоверительФизЛицоПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура РеквизитДоверительФизЛицоПриИзмененииНаСервере()
	
	ОчиститьРеквизитыДоверителяФизЛицо();
	
	Если НЕ ЗначениеЗаполнено(РеквизитДоверительФизЛицо) Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаЛицоБезДоверенностиФЛ.Видимость = Не ЗначениеЗаполнено(РеквизитДоверительФизЛицо);
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		СвойстваОрганизации = ПолучитьСвойстваОрганизации(Объект.Организация);
	КонецЕсли;

	СтруктураСведений = ЭлектронноеВзаимодействие.СтруктураДанныхФизЛица();
	ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьДанныеФизЛица(РеквизитДоверительФизЛицо, СтруктураСведений);
	
	Если Доверитель_ЮридическоеЛицо И Не Объект.ДоверительЮЛ_ИностраннаяОрганизация Тогда

		Объект.ЛицоБезДовФЛ_ИНН = ?(ЗначениеЗаполнено(СтруктураСведений), СтруктураСведений.ИНН, "");
		Объект.ЛицоБезДовФЛ_СНИЛС = ?(ЗначениеЗаполнено(СтруктураСведений), СтруктураСведений.СтраховойНомерПФР, "");
		Объект.ЛицоБезДовФЛ_Гражданство = ?(ЗначениеЗаполнено(СтруктураСведений), СтруктураСведений.Гражданство,
			ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка"));

		Объект.ЛицоБезДовФЛ_ДатаРождения = ?(ЗначениеЗаполнено(СтруктураСведений), СтруктураСведений.ДатаРождения,
			Неопределено);

		Объект.ЛицоБезДовФЛ_Должность = ?(ЗначениеЗаполнено(СвойстваОрганизации)
			И СвойстваОрганизации.ЭтоЮридическоеЛицо, СвойстваОрганизации.Должность, "");

		СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец", ПредопределенноеЗначение(
			"Перечисление.СубъектыДоверенности.ДоверительРук")));
		Если СтрокиФИО.Количество() = 0 Тогда
			СтрокаФИО = Объект.ФИО.Добавить();
			СтрокаФИО.Владелец = ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ДоверительРук");
		Иначе
			СтрокаФИО = СтрокиФИО[0];
		КонецЕсли;
		СтрокаФИО.Фамилия = СтруктураСведений.Фамилия;
		СтрокаФИО.Имя = СтруктураСведений.Имя;
		СтрокаФИО.Отчество = СтруктураСведений.Отчество;
			
	Иначе
		
		Объект.ДоверительФЛ_ИНН = ?(ЗначениеЗаполнено(СтруктураСведений.ИНН), СтруктураСведений.ИНН, "");
		Объект.ДоверительФЛ_СНИЛС = ?(ЗначениеЗаполнено(СтруктураСведений.СтраховойНомерПФР), 
			СтруктураСведений.СтраховойНомерПФР, "");
		Объект.ДоверительФЛ_Гражданство = ?(ЗначениеЗаполнено(СтруктураСведений.Гражданство), 
			СтруктураСведений.Гражданство, 
			ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка"));
		Объект.ДоверительФЛ_ДатаРождения = ?(ЗначениеЗаполнено(СтруктураСведений.ДатаРождения), 
			СтруктураСведений.ДатаРождения, Неопределено);		
		СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец", ПредопределенноеЗначение(
			"Перечисление.СубъектыДоверенности.ДоверительФЛ")));
		Если СтрокиФИО.Количество() = 0 Тогда
			СтрокаФИО = Объект.ФИО.Добавить();
			СтрокаФИО.Владелец = ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ДоверительФЛ");
		Иначе
			СтрокаФИО = СтрокиФИО[0];
		КонецЕсли;
		СтрокаФИО.Фамилия = СтруктураСведений.Фамилия;
		СтрокаФИО.Имя = СтруктураСведений.Имя;
		СтрокаФИО.Отчество = СтруктураСведений.Отчество;
	
	КонецЕсли;
	
	Если Доверитель_ЮридическоеЛицо И Объект.ДоверительЮЛ_ИностраннаяОрганизация Тогда
		Объект.ДоверительФЛ_МестоРожд = ?(ЗначениеЗаполнено(СтруктураСведений.МестоРождения), 
			СтруктураСведений.МестоРождения, Неопределено);	
	КонецЕсли;
	
	Модифицированность = Истина;	
КонецПроцедуры

&НаСервере
Процедура ОчиститьРеквизитыДоверителяФизЛицо()

	СубъектДоверенности = ?(Доверитель_ЮридическоеЛицо,
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ДоверительРук"),
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ДоверительФЛ"));
	СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенности));
	КоличествоСтрокФИО = СтрокиФИО.Количество();
	Если КоличествоСтрокФИО > 0 Тогда
		Для НомерСКонца = 1 По КоличествоСтрокФИО Цикл
			Объект.ФИО.Удалить(СтрокиФИО[КоличествоСтрокФИО - НомерСКонца]);
		КонецЦикла;
	КонецЕсли;
	
	СтрокиУдостоверений = Объект.УдостоверенияЛичности.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенности));
	КоличествоСтрокУдостоверений = СтрокиУдостоверений.Количество();
	Если КоличествоСтрокУдостоверений > 0 Тогда
		Для НомерСКонца = 1 По КоличествоСтрокУдостоверений Цикл
			Объект.УдостоверенияЛичности.Удалить(СтрокиУдостоверений[КоличествоСтрокУдостоверений - НомерСКонца]);
		КонецЦикла;
	КонецЕсли;
	
	Объект.ДоверительФЛ_ИНН = "";
	Объект.ДоверительФЛ_ОГРН = "";
	Объект.ДоверительФЛ_СНИЛС = "";
	Объект.ДоверительФЛ_Гражданство = ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка");
	Объект.ДоверительФЛ_ДатаРождения = Неопределено;
	Объект.ДоверительФЛ_МестоРожд = "";
	
	Объект.ЛицоБезДовФЛ = Неопределено;
	Объект.ЛицоБезДовФЛ_ИНН = "";
	Объект.ЛицоБезДовФЛ_СНИЛС = "";
	Объект.ЛицоБезДовФЛ_Гражданство = ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка");
	Объект.ЛицоБезДовФЛ_ДатаРождения = Неопределено;
	Объект.ЛицоБезДовФЛ_Должность = "";

КонецПроцедуры

&НаКлиенте
Процедура ПредставительФЛ_ФИОНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец",
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ПредставительФЛ")));
	
	ПараметрыОткрытия = Новый Структура("Фамилия, Имя, Отчество");
	ПараметрыОткрытия.Фамилия 	= ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Фамилия, "");
	ПараметрыОткрытия.Имя 		= ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Имя, "");
	ПараметрыОткрытия.Отчество 	= ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Отчество, "");
	ПараметрыОткрытия.Вставить("СписокСвойств", "Фамилия, Имя, Отчество");
	
	ПараметрыОткрытия.Вставить("ТолькоПросмотрФормы", ТолькоПросмотрФормы(ЭтотОбъект));
	
	ОписаниеОповещенияОЗакрытии =
		Новый ОписаниеОповещения("ПредставительФЛ_ФИОНачалоВыбораЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.МашиночитаемыеДоверенностиОрганизаций.Форма.ФормаРедактированияФИО", ПараметрыОткрытия,
		ЭтотОбъект, , , , ОписаниеОповещенияОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьФИОПредставителя(Команда)
	
	СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец",
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ПредставительФЛ")));
	
	ПараметрыОткрытия = Новый Структура("Фамилия, Имя, Отчество");
	ПараметрыОткрытия.Фамилия 	= ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Фамилия, "");
	ПараметрыОткрытия.Имя 		= ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Имя, "");
	ПараметрыОткрытия.Отчество 	= ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Отчество, "");
	ПараметрыОткрытия.Вставить("СписокСвойств", "Фамилия, Имя, Отчество");
	
	ОписаниеОповещенияОЗакрытии =
		Новый ОписаниеОповещения("ПредставительФЛ_ФИОНачалоВыбораЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.МашиночитаемыеДоверенностиОрганизаций.Форма.ФормаРедактированияФИО", ПараметрыОткрытия,
		ЭтотОбъект, , , , ОписаниеОповещенияОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ПредставительФЛ_ФИООчистка(Элемент, СтандартнаяОбработка)
	
	СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец",
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ПредставительФЛ")));
	
	КоличествоСтрокФИО = СтрокиФИО.Количество();
	Для НомерСКонца = 1 По КоличествоСтрокФИО Цикл
		Объект.ФИО.Удалить(СтрокиФИО[КоличествоСтрокФИО - НомерСКонца]);
	КонецЦикла;
	
	ПредставительФЛ_ФИО = "";
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставительФЛ_УдостоверениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтрокиУдостоверений = Объект.УдостоверенияЛичности.НайтиСтроки(Новый Структура("Владелец",
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ПредставительФЛ")));
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ДокументВид",
		?(СтрокиУдостоверений.Количество() <> 0, СтрокиУдостоверений[0].ВидДок, ""));
	СтруктураДанных.Вставить("ДокументСерия",
		?(СтрокиУдостоверений.Количество() <> 0, СтрокиУдостоверений[0].СерДок, ""));
	СтруктураДанных.Вставить("ДокументНомер",
		?(СтрокиУдостоверений.Количество() <> 0, СтрокиУдостоверений[0].НомДок, ""));
	СтруктураДанных.Вставить("ДокументДатаВыдачи",
		?(СтрокиУдостоверений.Количество() <> 0, СтрокиУдостоверений[0].ДатаДок, ""));
	СтруктураДанных.Вставить("ДокументКемВыдан",
		?(СтрокиУдостоверений.Количество() <> 0, СтрокиУдостоверений[0].ВыдДок, ""));
	СтруктураДанных.Вставить("ДокументКодПодразделения",
		?(СтрокиУдостоверений.Количество() <> 0, СтрокиУдостоверений[0].КодВыдДок, ""));
	СтруктураДанных.Вставить("ТолькоПросмотрФормы", ТолькоПросмотрФормы(ЭтотОбъект));
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПредставительФЛ_УдостоверениеНачалоВыбораЗавершение", ЭтотОбъект);
	ОткрытьФорму(
		"Справочник.МашиночитаемыеДоверенностиОрганизаций.Форма.ФормаВводаУдостоверения",
		Новый Структура("СтруктураДанных", СтруктураДанных),
		ЭтотОбъект,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставительФЛ_УдостоверениеОчистка(Элемент, СтандартнаяОбработка)
	
	СтрокиУдостоверений = Объект.УдостоверенияЛичности.НайтиСтроки(Новый Структура("Владелец",
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ПредставительФЛ")));
	
	КоличествоСтрокУдостоверений = СтрокиУдостоверений.Количество();
	Для НомерСКонца = 1 По КоличествоСтрокУдостоверений Цикл
		Объект.УдостоверенияЛичности.Удалить(СтрокиУдостоверений[КоличествоСтрокУдостоверений - НомерСКонца]);
	КонецЦикла;
	
	ПредставительФЛ_Удостоверение = "";
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПолномочияПредставителяНажатие(Элемент)
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ПризнакПолныеПолномочия", ?(Объект.ПолномочияПредставителя.Количество() <> 0,
		Объект.ПолномочияПредставителя[0].ПризнакПолныеПолномочия, Истина));
	Для ВидПолномочия = 1 По КоличествоПолномочий Цикл
		ПредставлениеВида = Формат(ВидПолномочия, "ЧЦ=2; ЧВН=");
		СтруктураДанных.Вставить("Признак" + ПредставлениеВида, ?(Объект.ПолномочияПредставителя.Количество() <> 0,
			Объект.ПолномочияПредставителя[0]["Признак" + ПредставлениеВида], Ложь));
	КонецЦикла;
	СтруктураДанных.Вставить("ТолькоПросмотрФормы", ТолькоПросмотрФормы(ЭтотОбъект));
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДекорацияПолномочияПредставителяНажатиеЗавершение", ЭтотОбъект);
	ОткрытьФорму(
		"Справочник.МашиночитаемыеДоверенностиОрганизаций.Форма.ФормаВводаПолномочий",
		Новый Структура("СтруктураДанных", СтруктураДанных),
		ЭтотОбъект,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыгрузитьЗаявлениеНаОтмену(Команда)

	Если Модифицированность ИЛИ Параметры.Ключ.Пустая() Тогда
		Записать();
	КонецЕсли;
	
	ЗначенияРеквизитов = ЗначенияРеквизитовОбъекта(Объект.Ссылка, "ИмяФайлаЗаявленияНаОтзыв, ФайлЗаявленияНаОтзыв");
	
	Если ЗначенияРеквизитов.ФайлЗаявленияНаОтзыв = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Заявление на отмену не отправлялось'"));
		Возврат;
	КонецЕсли;
	
	СохраняемыйФайл = Новый Структура;
	СохраняемыйФайл.Вставить("Адрес", ЗначенияРеквизитов.ФайлЗаявленияНаОтзыв);
	СохраняемыйФайл.Вставить("Имя", ЗначенияРеквизитов.ИмяФайлаЗаявленияНаОтзыв);
	ФайловаяСистемаКлиент.СохранитьФайл(Неопределено, СохраняемыйФайл.Адрес, СохраняемыйФайл.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьОтправленныйОтчет(Команда)

	Если Модифицированность ИЛИ Параметры.Ключ.Пустая() Тогда
		Записать();
	КонецЕсли;
	
	ЗначенияРеквизитов = ЗначенияРеквизитовОбъекта(Объект.Ссылка, "ИмяФайлаВыгрузка, XMLизРеестра");
	
	Если ЗначенияРеквизитов.XMLизРеестра = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Отчет не отправлялся'"));
		Возврат;
	КонецЕсли;
	
	СохраняемыйФайл = Новый Структура;
	СохраняемыйФайл.Вставить("Адрес", ЗначенияРеквизитов.XMLизРеестра);
	СохраняемыйФайл.Вставить("Имя", ЗначенияРеквизитов.ИмяФайлаВыгрузка);
	ФайловаяСистемаКлиент.СохранитьФайл(Неопределено, СохраняемыйФайл.Адрес, СохраняемыйФайл.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьПодпись(Команда)

	Если Модифицированность ИЛИ Параметры.Ключ.Пустая() Тогда
		Записать();
	КонецЕсли;
	
	ЗначенияРеквизитов = ЗначенияРеквизитовОбъекта(Объект.Ссылка, "ИмяФайлаВыгрузка, ЭлектроннаяПодпись");
	
	Если ЗначенияРеквизитов.ЭлектроннаяПодпись = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Отчет не отправлялся'"));
		Возврат;
	КонецЕсли;
	
	СохраняемыйФайл = Новый Структура;
	СохраняемыйФайл.Вставить("Адрес", ЗначенияРеквизитов.ЭлектроннаяПодпись);
	СохраняемыйФайл.Вставить("Имя", ЗначенияРеквизитов.ИмяФайлаВыгрузка + ".sig");
	ФайловаяСистемаКлиент.СохранитьФайл(Неопределено, СохраняемыйФайл.Адрес, СохраняемыйФайл.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьПодписьЗаявленияНаОтмену(Команда)

	Если Модифицированность ИЛИ Параметры.Ключ.Пустая() Тогда
		Записать();
	КонецЕсли;
	
	ЗначенияРеквизитов = ЗначенияРеквизитовОбъекта(Объект.Ссылка,
		"ИмяФайлаЗаявленияНаОтзыв, ЭлектроннаяПодписьЗаявленияНаОтзыв");
	
	Если ЗначенияРеквизитов.ЭлектроннаяПодписьЗаявленияНаОтзыв = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Заявление на отмену не отправлялось'"));
		Возврат;
	КонецЕсли;
	
	СохраняемыйФайл = Новый Структура;
	СохраняемыйФайл.Вставить("Адрес", ЗначенияРеквизитов.ЭлектроннаяПодписьЗаявленияНаОтзыв);
	СохраняемыйФайл.Вставить("Имя", ЗначенияРеквизитов.ИмяФайлаЗаявленияНаОтзыв + ".sig");
	ФайловаяСистемаКлиент.СохранитьФайл(Неопределено, СохраняемыйФайл.Адрес, СохраняемыйФайл.Имя);

КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
		
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьЗавершение", ЭтотОбъект);
	МашиночитаемыеДоверенностиКлиент.ЗарегистрироватьМЧД(ОписаниеОповещения,, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Отменить(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтменитьЗавершение", ЭтотОбъект);
	МашиночитаемыеДоверенностиКлиент.ОтменитьМЧД(ОписаниеОповещения,, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбновитьОтправкуЗавершение", ЭтотОбъект);
	МашиночитаемыеДоверенностиКлиент.ОбновитьСостояниеМЧД(ОписаниеОповещения,, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьЗаголовокФормы(ЭтоНоваяДоверенность = Ложь)
	
	Заголовок = МашиночитаемыеДоверенности.ПредставлениеОбъекта(Объект, ЭтоНоваяДоверенность);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗначенияРеквизитовОбъекта(СсылкаНаОбъект, ИменаРеквизитов)
	
	Результат = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СсылкаНаОбъект, ИменаРеквизитов);
	
	Для каждого КлючИЗначение Из Результат Цикл
		Если ТипЗнч(КлючИЗначение.Значение) = Тип("ХранилищеЗначения") Тогда
			ДанныеЗначения = КлючИЗначение.Значение.Получить();
			Если ДанныеЗначения = Неопределено Тогда
				АдресЗначения = Неопределено;
			Иначе
				АдресЗначения = ПоместитьВоВременноеХранилище(ДанныеЗначения, Новый УникальныйИдентификатор);
			КонецЕсли;
			Результат[КлючИЗначение.Ключ] = АдресЗначения;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции
	
&НаСервереБезКонтекста
Функция ПредставлениеКонтактнойИнформации(КонтактнаяИнформация)
	Возврат УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформации(КонтактнаяИнформация);
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеЭУ(Форма)
		
	Форма.Элементы.ГруппаИнОргДовер.Видимость = Форма.Объект.ДоверительЮЛ_ИностраннаяОрганизация;	
	
	Если Форма.Доверитель_ЮридическоеЛицо И Не Форма.Объект.ДоверительЮЛ_ИностраннаяОрганизация Тогда
		Форма.Элементы.ГруппаФЛДовер.Видимость = Ложь;
		Форма.Элементы.ГруппаЛицоБезДов.Видимость = Истина;
		Форма.Элементы.ГруппаРосОргДовер.Видимость = Истина;
	КонецЕсли;
	
	Если Форма.Доверитель_ЮридическоеЛицо И Форма.Объект.ДоверительЮЛ_ИностраннаяОрганизация Тогда
		Форма.Элементы.ГруппаФЛДовер.Видимость = Истина;
		Форма.Элементы.ГруппаЛицоБезДов.Видимость = Ложь;
		Форма.Элементы.ГруппаРосОргДовер.Видимость = Истина;
	КонецЕсли;

	Если НЕ Форма.Доверитель_ЮридическоеЛицо Тогда
		Форма.Элементы.ГруппаФЛДовер.Видимость = Истина;
		Форма.Элементы.ГруппаЛицоБезДов.Видимость = Ложь;
		Форма.Элементы.ГруппаРосОргДовер.Видимость = Ложь;
	КонецЕсли;
	
	СоответствиеПолномочий = Новый Соответствие;
	СоответствиеПолномочий.Вставить("01", НСтр("ru = 'Подписывать налоговую декларацию, др. отчетность'"));
	СоответствиеПолномочий.Вставить("02", НСтр("ru = 'Представлять налоговую декларацию, др. отчетность'"));
	СоответствиеПолномочий.Вставить("03", НСтр("ru = 'Получать документы в инспекции ФНС России'"));
	СоответствиеПолномочий.Вставить("04", НСтр("ru = 'Вносить изменения в документы налоговой отчетности'"));
	СоответствиеПолномочий.Вставить("05", НСтр("ru = 'Подписывать документы, используемые при постановке и снятии с учета и сообщении сведений, установленных НК РФ (за исключением документов, используемых при  учете и контроле банковских счетов)'"));
	СоответствиеПолномочий.Вставить("06", НСтр("ru = 'Представлять документы, используемые при постановке и снятии с учета и сообщении сведений, установленных НК РФ (за исключением документов,  используемых при  учете и контроле банковских счетов)'"));
	СоответствиеПолномочий.Вставить("07", НСтр("ru = 'Получать от налогового органа документы, подтверждающие постановку и снятие с учета'"));
	СоответствиеПолномочий.Вставить("08", НСтр("ru = 'Подписывать документы, используемые при  учете и контроле банковских счетов'"));
	СоответствиеПолномочий.Вставить("09", НСтр("ru = 'Представлять документы, используемые при  учете и контроле банковских счетов'"));
	СоответствиеПолномочий.Вставить("10", НСтр("ru = 'Представлять документы по применению специальных налоговых режимов и консолидации учета по обособленным подразделениям'"));
	СоответствиеПолномочий.Вставить("11", НСтр("ru = 'Получать в инспекции ФНС России документы по применению специальных налоговых режимов и консолидации учета по обособленным подразделениям'"));
	СоответствиеПолномочий.Вставить("12", НСтр("ru = 'Подписывать документы по консолидации учета по обособленным подразделениям'"));
	СоответствиеПолномочий.Вставить("13", НСтр("ru = 'Представлять заявления и запросы на проведение сверки расчетов с бюджетом, получение справок о состоянии расчетов с бюджетом'"));
	СоответствиеПолномочий.Вставить("14", НСтр("ru = 'Получать в инспекции ФНС России акты сверок и справки о состоянии расчетов с бюджетом'"));
	СоответствиеПолномочий.Вставить("15", НСтр("ru = 'Подписывать акт сверки расчетов с бюджетом'"));
	СоответствиеПолномочий.Вставить("16", НСтр("ru = 'Подписывать акт и решение налоговой проверки'"));
	СоответствиеПолномочий.Вставить("17", НСтр("ru = 'Подписывать заявление на зачет/возврат налога'"));
	СоответствиеПолномочий.Вставить("18", НСтр("ru = 'Подписывать заявления о ввозе товаров и уплате косвенных налогов'"));
	СоответствиеПолномочий.Вставить("19", НСтр("ru = 'Получать заявления о ввозе товаров и уплате'"));
	СоответствиеПолномочий.Вставить("20", НСтр("ru = 'Подписывать документы по применению специальных налоговых режимов, игорному бизнесу и консолидации учета по обособленным подразделениям'"));
	СоответствиеПолномочий.Вставить("21", НСтр("ru = 'Подписывать документы (информацию)'"));
	СоответствиеПолномочий.Вставить("22", НСтр("ru = 'Представлять документы (информацию)'"));
	СоответствиеПолномочий.Вставить("23", НСтр("ru = 'Подписывать, представлять и получать от налогового органа документы по регистрации (перерегистрации) контрольно-кассовой техники'"));
	СоответствиеПолномочий.Вставить("24", НСтр("ru = 'Подписывать, представлять и получать от налогового органа документы по снятию контрольно-кассовой техники с регистрационного учета'"));
	СоответствиеПолномочий.Вставить("25", НСтр("ru = 'Подписывать и представлять перечень автоматических устройств для расчетов'"));

	Если Форма.Объект.ПолномочияПредставителя.Количество() = 0
		Или Форма.Объект.ПолномочияПредставителя[0].ПризнакПолныеПолномочия Тогда
		Форма.Элементы.ДекорацияПолномочияПредставителя.Заголовок = НСтр("ru = 'Все'");
	Иначе
		ПредставленияВидов = "";
		КоличествоПолномочий = 0;
		Для ВидПолномочия = 1 По Форма.КоличествоПолномочий Цикл
			ПредставлениеВида = Формат(ВидПолномочия, "ЧЦ=2; ЧВН=");
			Если Форма.Объект.ПолномочияПредставителя[0]["Признак" + ПредставлениеВида] Тогда
				Если НЕ КоличествоПолномочий >= 4 Тогда 					
					ПредставленияВидов = ПредставленияВидов + СоответствиеПолномочий.Получить(ПредставлениеВида) + "; ";
				КонецЕсли;
				КоличествоПолномочий = КоличествоПолномочий + 1;					
			КонецЕсли;
		КонецЦикла;
		Если КоличествоПолномочий > 4 Тогда 
			ПредставленияВидов = ПредставленияВидов + " и еще " + Строка(КоличествоПолномочий - 4);
		КонецЕсли;
		Форма.Элементы.ДекорацияПолномочияПредставителя.Заголовок = ПредставленияВидов;
	КонецЕсли;
	
	ТолькоПросмотрФормы = ТолькоПросмотрФормы(Форма);
	Форма.Элементы.ГруппаКолонки.ТолькоПросмотр	= ТолькоПросмотрФормы;
	Форма.Элементы.ГруппаШапка.ТолькоПросмотр	= ТолькоПросмотрФормы;
	
	Если Форма.Объект.Статус =
		ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенности.Отправлено") Тогда
		Форма.Элементы.НаименованиеЭтапа.Заголовок = НСтр("ru = 'Отправлена'");
		Форма.Элементы.БлокСостоянияОтправки.ЦветФона = Форма.ЦветФонаТекущейОтправки; // желтый
	ИначеЕсли Форма.Объект.Статус =
		ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенности.ОшибкаРегистрации") Тогда
		Форма.Элементы.НаименованиеЭтапа.Заголовок = НСтр("ru = 'Ошибка регистрации'")
			+ ?(ЗначениеЗаполнено(Форма.Объект.ТекстОшибки), ": ", "") + Форма.Объект.ТекстОшибки;
		Форма.Элементы.БлокСостоянияОтправки.ЦветФона = Форма.ЦветФонаОшибкиОтправки; // красный
	ИначеЕсли Форма.Объект.Статус =
		ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенности.Зарегистрировано") Тогда
		Форма.Элементы.НаименованиеЭтапа.Заголовок = НСтр("ru = 'Зарегистрирована'");
		Форма.Элементы.БлокСостоянияОтправки.ЦветФона = Форма.ЦветФонаУдачнойОтправки; // зеленый
	ИначеЕсли Форма.Объект.Статус =
		ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенности.ДатаНачалаДействияНеНаступила") Тогда
		Форма.Элементы.НаименованиеЭтапа.Заголовок = НСтр("ru = 'Зарегистрирована, дата начала действия еще не наступила'");
		Форма.Элементы.БлокСостоянияОтправки.ЦветФона = Форма.ЦветФонаОшибкиОтправки; // красный
	ИначеЕсли Форма.Объект.Статус =
		ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенности.ИстекСрокДействия") Тогда
		Форма.Элементы.НаименованиеЭтапа.Заголовок = НСтр("ru = 'Истек срок действия'");
		Форма.Элементы.БлокСостоянияОтправки.ЦветФона = Форма.ЦветФонаОшибкиОтправки; // красный
	ИначеЕсли Форма.Объект.Статус =
		ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенности.ОтправленоЗаявлениеНаОтзыв") Тогда
		Форма.Элементы.НаименованиеЭтапа.Заголовок = НСтр("ru = 'Отправлено заявление на отзыв'");
		Форма.Элементы.БлокСостоянияОтправки.ЦветФона = Форма.ЦветФонаТекущейОтправки; // желтый
	ИначеЕсли Форма.Объект.Статус =
		ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенности.Отозвано") Тогда
		Форма.Элементы.НаименованиеЭтапа.Заголовок = НСтр("ru = 'Отозвана'");
		Форма.Элементы.БлокСостоянияОтправки.ЦветФона = Форма.ЦветФонаОшибкиОтправки; // красный
	ИначеЕсли Форма.Объект.Статус =
		ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенности.ОшибкаОтзыва") Тогда
		Форма.Элементы.НаименованиеЭтапа.Заголовок = НСтр("ru = 'Зарегистрирована, ошибка отзыва'")
			+ ?(ЗначениеЗаполнено(Форма.Объект.ТекстОшибки), ": ", "") + Форма.Объект.ТекстОшибки;
		Форма.Элементы.БлокСостоянияОтправки.ЦветФона = Форма.ЦветФонаУдачнойОтправки; // зеленый
	Иначе // Форма.Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенности.ВРаботе")		
		Форма.Элементы.НаименованиеЭтапа.Заголовок = НСтр("ru = 'Не зарегистрирована'");
		Форма.Элементы.БлокСостоянияОтправки.ЦветФона = Форма.ЦветФонаНеначавшейсяОтправки; // серый
	КонецЕсли;
	
	Форма.Элементы.ФормаКнопкаПодписатьИОтправить.Видимость = Не Форма.ТолькоПросмотр
		И (Форма.Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенности.ВРаботе")
		ИЛИ Форма.Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенности.ОшибкаРегистрации"));
	
	Форма.Элементы.ФормаКнопкаОбновитьОтправку.Видимость = Не Форма.ТолькоПросмотр
		И (Форма.Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенности.Отправлено")
		ИЛИ Форма.Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенности.Зарегистрировано")
		ИЛИ Форма.Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенности.ДатаНачалаДействияНеНаступила")
		ИЛИ Форма.Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенности.ОтправленоЗаявлениеНаОтзыв")
		ИЛИ Форма.Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенности.ОшибкаОтзыва"));
	
	Форма.Элементы.ФормаКнопкаОтменить.Видимость = Не Форма.ТолькоПросмотр
		И (Форма.Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенности.Зарегистрировано")
		ИЛИ Форма.Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенности.ДатаНачалаДействияНеНаступила")
		ИЛИ Форма.Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенности.ОшибкаОтзыва"));
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ТолькоПросмотрФормы(Форма)
	
	Возврат Форма.ТолькоПросмотр
		Или (Форма.Объект.Статус <>
		ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенности.ВРаботе")
		И Форма.Объект.Статус <>
		ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенности.ОшибкаРегистрации"));
	
КонецФункции

&НаКлиенте
Процедура ОтправитьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Прочитать();
	
	Если ЗначениеЗаполнено(Результат.СтатусТранзакции) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			"Идентификатор транзакции (отладочно): " + Объект.ИдентификаторТранзакции);
		УправлениеЭУ(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Посмотреть(Команда)
	
	РезультатВыгрузки = МашиночитаемыеДоверенностиВызовСервера.ВыгрузитьМЧД(Объект.Ссылка);
	Текст = Новый ТекстовыйДокумент();
	Текст.УстановитьТекст(РезультатВыгрузки.Содержимое);
	Текст.Показать();
		 
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат.СтатусТранзакции) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			"Идентификатор транзакции (отладочно): " + Объект.ИдентификаторТранзакции);
		УправлениеЭУ(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтправкуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат.СтатусДоверенности) Тогда
		УправлениеЭУ(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРеквизитыДоверителяНажатиеЗавершение(СтруктураДанных, ДополнительныеПараметры) Экспорт
	
	Если СтруктураДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ДоверительЮЛ_ИностраннаяОрганизация = НЕ СтруктураДанных.ДоверительЮЛ_РоссийскаяОрганизация;
	Объект.ДоверительЮЛ_НаимОрг = СтруктураДанных.ДоверительЮЛ_НаимОрг;
	Объект.ДоверительЮЛ_ИНН = СтруктураДанных.ДоверительЮЛ_ИНН;
	Объект.ДоверительЮЛ_КПП = СтруктураДанных.ДоверительЮЛ_КПП;
	Объект.ДоверительЮЛ_ОГРН = СтруктураДанных.ДоверительЮЛ_ОГРН;
	Объект.ДоверительЮЛ_СтрРег = СтруктураДанных.ДоверительЮЛ_СтрРег;
	Объект.ДоверительЮЛ_НаимРегОрг = СтруктураДанных.ДоверительЮЛ_НаимРегОрг;
	Объект.ДоверительЮЛ_РегНомер = СтруктураДанных.ДоверительЮЛ_РегНомер;
	Объект.ДоверительЮЛ_Адр = СтруктураДанных.ДоверительЮЛ_Адр;
	Объект.ДоверительЮЛ_АдрXML = СтруктураДанных.ДоверительЮЛ_АдрXML;
	
	СубъектДоверенности = ?(Доверитель_ЮридическоеЛицо,
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ДоверительРук"),
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ДоверительФЛ"));
	СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенности));
	Если СтрокиФИО.Количество() = 0 Тогда
		СтрокаФИО = Объект.ФИО.Добавить();
		СтрокаФИО.Владелец = СубъектДоверенности;
	Иначе
		СтрокаФИО = СтрокиФИО[0];
	КонецЕсли;
	СтрокаФИО.Фамилия = СтруктураДанных.ДоверительФЛ_Фамилия;
	СтрокаФИО.Имя = СтруктураДанных.ДоверительФЛ_Имя;
	СтрокаФИО.Отчество = СтруктураДанных.ДоверительФЛ_Отчество;
	
	СтрокиУдостоверений = Объект.УдостоверенияЛичности.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенности));
	Если СтрокиУдостоверений.Количество() = 0 Тогда
		СтрокаУдостоверения = Объект.УдостоверенияЛичности.Добавить();
		СтрокаУдостоверения.Владелец = СубъектДоверенности;
	Иначе
		СтрокаУдостоверения = СтрокиУдостоверений[0];
	КонецЕсли;
	СтрокаУдостоверения.ВидДок = СтруктураДанных.ДоверительФЛ_ВидДок;
	СтрокаУдостоверения.СерДок = СтруктураДанных.ДоверительФЛ_СерДок;
	СтрокаУдостоверения.НомДок = СтруктураДанных.ДоверительФЛ_НомДок;
	СтрокаУдостоверения.ДатаДок = СтруктураДанных.ДоверительФЛ_ДатаДок;
	СтрокаУдостоверения.ВыдДок = СтруктураДанных.ДоверительФЛ_ВыдДок;
	СтрокаУдостоверения.КодВыдДок = СтруктураДанных.ДоверительФЛ_КодВыдДок;
	
	Объект.ДоверительФЛ_ИНН = СтруктураДанных.ДоверительФЛ_ИНН;
	Объект.ДоверительФЛ_ОГРН = СтруктураДанных.ДоверительФЛ_ОГРН;
	Объект.ДоверительФЛ_СНИЛС = СтруктураДанных.ДоверительФЛ_СНИЛС;
	Объект.ДоверительФЛ_Гражданство = СтруктураДанных.ДоверительФЛ_Гражданство;
	Объект.ДоверительФЛ_Пол = СтруктураДанных.ДоверительФЛ_Пол;
	Объект.ДоверительФЛ_ДатаРождения = СтруктураДанных.ДоверительФЛ_ДатаРождения;
	Объект.ДоверительФЛ_МестоРожд = СтруктураДанных.ДоверительФЛ_МестоРожд;
	
	Модифицированность = Истина;
	
	УправлениеЭУ(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРеквизитыЛицаБезДоверенностиЮЛНажатиеЗавершение(СтруктураДанных, ДополнительныеПараметры) Экспорт
	
	Если СтруктураДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ЛицоБезДовЮЛ_НаимОрг = СтруктураДанных.ЛицоБезДовЮЛ_НаимОрг;
	Объект.ЛицоБезДовЮЛ_ИНН = СтруктураДанных.ЛицоБезДовЮЛ_ИНН;
	Объект.ЛицоБезДовЮЛ_КПП = СтруктураДанных.ЛицоБезДовЮЛ_КПП;
	Объект.ЛицоБезДовЮЛ_ОГРН = СтруктураДанных.ЛицоБезДовЮЛ_ОГРН;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРеквизитыЛицаБезДоверенностиФЛНажатиеЗавершение(СтруктураДанных, ДополнительныеПараметры) Экспорт
	
	Если СтруктураДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если Не Доверитель_ЮридическоеЛицо Или Объект.ДоверительЮЛ_ИностраннаяОрганизация Тогда
		СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец", ПредопределенноеЗначение(
			"Перечисление.СубъектыДоверенности.ДоверительФЛ")));
	Иначе
		СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец", ПредопределенноеЗначение(
			"Перечисление.СубъектыДоверенности.ДоверительРук")));	
	КонецЕсли;
	
	Если СтрокиФИО.Количество() = 0 Тогда
		СтрокаФИО = Объект.ФИО.Добавить();
		СтрокаФИО.Владелец = ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ДоверительРук");
	Иначе
		СтрокаФИО = СтрокиФИО[0];
	КонецЕсли;
	СтрокаФИО.Фамилия = СтруктураДанных.ЛицоБезДовФЛ_Фамилия;
	СтрокаФИО.Имя = СтруктураДанных.ЛицоБезДовФЛ_Имя;
	СтрокаФИО.Отчество = СтруктураДанных.ЛицоБезДовФЛ_Отчество;
	
	РеквизитДоверительФизЛицоФИО = ПолучитьПредставлениеФИО(СтрокаФИО);

	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставительФЛ_ФИОНачалоВыбораЗавершение(РезультатРедактирования, ДополнительныеПараметры) Экспорт
	
	Если НЕ ЗначениеЗаполнено(РезультатРедактирования) Тогда
		Возврат;
	КонецЕсли;
	
	СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец",
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ПредставительФЛ")));
	
	КоличествоСтрокФИО = СтрокиФИО.Количество();
	Если КоличествоСтрокФИО = 0 Тогда
		СтрокаФИО = Объект.ФИО.Добавить();
		СтрокаФИО.Владелец = ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ПредставительФЛ");
	Иначе
		СтрокаФИО = СтрокиФИО[0];
	КонецЕсли;
	СтрокаФИО.Фамилия 	= РезультатРедактирования.Фамилия;
	СтрокаФИО.Имя 		= РезультатРедактирования.Имя;
	СтрокаФИО.Отчество 	= РезультатРедактирования.Отчество;
	
	ПредставительФЛ_ФИО = ПолучитьПредставлениеФИО(РезультатРедактирования);
	Объект.Представитель = ПолучитьПредставлениеФИО(СтрокаФИО);
	
	Модифицированность = Истина;	
КонецПроцедуры

&НаКлиенте
Процедура ПредставительФЛ_УдостоверениеНачалоВыбораЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если НЕ ЗначениеЗаполнено(РезультатВыбора) Тогда
		Возврат;
	КонецЕсли;
	
	СтрокиУдостоверений = Объект.УдостоверенияЛичности.НайтиСтроки(Новый Структура("Владелец",
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ПредставительФЛ")));
	
	КоличествоСтрокУдостоверений = СтрокиУдостоверений.Количество();
	Если КоличествоСтрокУдостоверений = 0 Тогда
		СтрокаУдостоверения = Объект.УдостоверенияЛичности.Добавить();
		СтрокаУдостоверения.Владелец =
			ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ПредставительФЛ");
	Иначе
		СтрокаУдостоверения = СтрокиУдостоверений[0];
	КонецЕсли;
	СтрокаУдостоверения.ВидДок 		= РезультатВыбора.ДокументВид;
	СтрокаУдостоверения.СерДок 		= РезультатВыбора.ДокументСерия;
	СтрокаУдостоверения.НомДок 		= РезультатВыбора.ДокументНомер;
	СтрокаУдостоверения.ДатаДок 	= РезультатВыбора.ДокументДатаВыдачи;
	СтрокаУдостоверения.ВыдДок 		= РезультатВыбора.ДокументКемВыдан;
	СтрокаУдостоверения.КодВыдДок 	= РезультатВыбора.ДокументКодПодразделения;
	
	ПредставительФЛ_Удостоверение = ПолучитьПредставлениеУдостоверение(СтрокаУдостоверения);
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПолномочияПредставителяНажатиеЗавершение(СтруктураДанных, ДополнительныеПараметры) Экспорт
	
	Если СтруктураДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ПолномочияПредставителя.Количество() = 0 Тогда
		ПолномочиеПредставителя = Объект.ПолномочияПредставителя.Добавить();
	Иначе
		ПолномочиеПредставителя = Объект.ПолномочияПредставителя[0];
	КонецЕсли;
	
	ПолномочиеПредставителя.ПризнакПолныеПолномочия = СтруктураДанных.ПризнакПолныеПолномочия;
	Для ВидПолномочия = 1 По КоличествоПолномочий Цикл
		ПредставлениеВида = Формат(ВидПолномочия, "ЧЦ=2; ЧВН=");
		ПолномочиеПредставителя["Признак" + ПредставлениеВида] = СтруктураДанных["Признак" + ПредставлениеВида];
	КонецЦикла;
	
	УправлениеЭУ(ЭтотОбъект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСвойстваОрганизации(Организация)
	
	Результат = Новый Структура;
	Результат.Вставить("ЭтоЮридическоеЛицо", Истина);
	Результат.Вставить("ЭтоРоссийскаяОрганизация", Истина);
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат Результат;
	КонецЕсли;
	
	ДанныеОрганизации = ИнтеграцияЭДО.РегистрационныеДанныеОрганизации(Организация);
	
	Если ЗначениеЗаполнено(ДанныеОрганизации.ЮрФизЛицо) И ДанныеОрганизации.ЮрФизЛицо <> "ЮрЛицо" Тогда
		Результат.ЭтоЮридическоеЛицо = Ложь;
	КонецЕсли;
	
	СтруктураСведений = ЭлектронноеВзаимодействие.СтруктураДанныхЮрФизЛица();
	ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьДанныеЮрФизЛица(Организация, СтруктураСведений);
	Если СтруктураСведений.Свойство("ЮридическийАдресXML") Тогда
		Результат.Вставить("АдресXML", СтруктураСведений.ЮридическийАдресXML);
	ИначеЕсли СтруктураСведений.Свойство("ЗначенияПолейЮридическийАдрес") Тогда // для БП КОРП
		Результат.Вставить("АдресXML", СтруктураСведений.ЗначенияПолейЮридическийАдрес);
	КонецЕсли;
	
	Для каждого ЗначениеРеквизита Из ДанныеОрганизации Цикл
		Результат.Вставить(ЗначениеРеквизита.Ключ, ЗначениеРеквизита.Значение);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьПредставлениеУдостоверение(СтрокаУдостоверения)
	
	Представление = "";
	
	Если ЗначениеЗаполнено(СтрокаУдостоверения.ВидДок) Тогда
		ВидыДокументов = МашиночитаемыеДоверенностиКлиентСервер.ВидыДокументовФизическихЛиц();
		Представление = ВидыДокументов.Получить(СтрокаУдостоверения.ВидДок);
	КонецЕсли;
	Если ЗначениеЗаполнено(СтрокаУдостоверения.СерДок) Тогда
		Представление = Представление + " " + СтрокаУдостоверения.СерДок;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтрокаУдостоверения.НомДок) Тогда
		Представление = Представление + " " + СтрокаУдостоверения.НомДок;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтрокаУдостоверения.ДатаДок) Тогда
		Представление = Представление + " " + НСтр("ru = 'выдан'") + " " + Формат(СтрокаУдостоверения.ДатаДок, "ДЛФ=ДД");
	КонецЕсли;
	Если ЗначениеЗаполнено(СтрокаУдостоверения.ВыдДок) Тогда
		Представление = Представление + " " + СтрокаУдостоверения.ВыдДок;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтрокаУдостоверения.КодВыдДок) Тогда
		Представление = Представление + ", " + НСтр("ru = 'код подразделения'") + ":" + СтрокаУдостоверения.КодВыдДок;
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьПредставлениеФИО(СтрокаФИО)
	
	Представление = "";
	
	Если ЗначениеЗаполнено(СтрокаФИО.Фамилия) Тогда
		Представление = СтрокаФИО.Фамилия;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтрокаФИО.Имя) Тогда
		Представление = Представление + " " + СтрокаФИО.Имя;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтрокаФИО.Отчество) Тогда
		Представление = Представление + " " + СтрокаФИО.Отчество;
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

&НаСервере
Процедура ПолучитьСсылкиНаСтороныДоверенности()
	
	СведенияФизЛица = Новый Структура;
	Если ЗначениеЗаполнено(Объект.ЛицоБезДовФЛ_СНИЛС) Тогда
		СведенияФизЛица.Вставить("ИНН", Объект.ЛицоБезДовФЛ_ИНН);
		РеквизитДоверительФизЛицо = ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьФизЛицоМЧД(
			СведенияФизЛица);
	Иначе
		СведенияФизЛица.Вставить("ИНН", Объект.ДоверительФЛ_ИНН);
		РеквизитДоверительФизЛицо = ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьФизЛицоМЧД(
			СведенияФизЛица);
	КонецЕсли;
	
	СведенияФизЛица = Новый Структура;
	СведенияФизЛица.Вставить("ИНН", Объект.ПредставительФЛ_ИНН);
	РеквизитПредставительФизЛицо = ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьФизЛицоМЧД(
		СведенияФизЛица);
		
	СведенияЮрЛица = Новый Структура;
	СведенияЮрЛица.Вставить("ИНН", Объект.ПредставительЮЛ_ИНН);
	СведенияЮрЛица.Вставить("КПП", Объект.ПредставительЮЛ_КПП);
	СведенияЮрЛица.Вставить("ОГРН", Объект.ПредставительЮЛ_ОГРН);
	РеквизитПредставительОрганизация = ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьОрганизациюМЧД(СведенияЮрЛица);
	
	Элементы.ГруппаЛицоБезДоверенностиФЛ.Видимость = Не ЗначениеЗаполнено(РеквизитДоверительФизЛицо);
	Элементы.ГруппаПредставительФИО.Видимость = Не ЗначениеЗаполнено(РеквизитПредставительФизЛицо);
	Элементы.ПредставительЮЛ_НаимОрг.Видимость = Не ЗначениеЗаполнено(РеквизитПредставительОрганизация) 
		И ЗначениеЗаполнено(Объект.ПредставительЮЛ_ИНН);
		
	Если ЭтоНоваяЗапись Тогда
		Элементы.ГруппаЛицоБезДоверенностиФЛ.Видимость = Ложь;
		Элементы.ГруппаПредставительФИО.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти