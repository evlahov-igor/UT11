#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.СклонениеПредставленийОбъектов
	СклонениеПредставленийОбъектов.ПриСозданииНаСервере(ЭтотОбъект, Объект.Наименование);
	// Конец СтандартныеПодсистемы.СклонениеПредставленийОбъектов
	
	УстановитьПредставлениеОрганизации();
	УстановитьВидомостьОпераций();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.СклонениеПредставленийОбъектов
	СклонениеПредставленийОбъектов.ПриЗаписиФормыОбъектаСклонения(ЭтотОбъект, Объект.Наименование, ТекущийОбъект.Ссылка);
	// Конец СтандартныеПодсистемы.СклонениеПредставленийОбъектов
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	УстановитьВидомостьОпераций();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// Обработчик механизма "Свойства"
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ТекстОшибки = СформироватьТекстОшибкиПоПроверкиПериодаДействия(Объект);
	Если НЕ ТекстОшибки = "" Тогда
		ОбщегоНазначения.СообщитьПользователю(
			ТекстОшибки,, 
			"ДатаНачала",
			"Объект",
			Отказ);
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Организации") Тогда
		Объект.Владелец = ВыбранноеЗначение;
		УстановитьПредставлениеОрганизации();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура УстановитьИнтервалДействия(Команда)
	
	ОписаниеОповещенияПослеИзмененияПериода = Новый ОписаниеОповещения("ПроверитьИнтервалыДействия", ЭтотОбъект);
	ОбщегоНазначенияУТКлиент.РедактироватьПериод(Объект, 
		Новый Структура("ДатаНачала, ДатаОкончания", "ДатаНачала", "ДатаОкончания"), ОписаниеОповещенияПослеИзмененияПериода);

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьИнтервалыДействия(Результат, ДополнительныеДанные) Экспорт
	ОчиститьСообщения();
	ТекстОшибки = СформироватьТекстОшибкиПоПроверкиПериодаДействия(Объект);
	Если НЕ ТекстОшибки = "" Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки,, "Объект.ДатаНачала");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПериодДействияПриИзменении(Элемент)
	ПроверитьИнтервалыДействия(Неопределено, Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура КомандаОформленияЗаявленияОПрекращенииДеятельностиПоПатенту(Команда)
	
	
	Возврат;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОформленияЗаявленияОбУтратеПравНаПатентнуюСистему(Команда)
	
	// При утрате права, спрашиваем у пользователя дату события
	
	ОповещениеОВыборе = Новый ОписаниеОповещения("ВыборДатыУтратыПраваЗаявленияЗавершение", ЭтотОбъект);
	
	ПоказатьВводДаты(ОповещениеОВыборе, ОбщегоНазначенияКлиент.ДатаСеанса(), НСтр("ru = 'Право применения патента утрачено с'"), ЧастиДаты.Дата);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СформироватьТекстОшибкиПоПроверкиПериодаДействия(ОбъектПроверки)
	ТекстОшибки = "";
	Если ЗначениеЗаполнено(ОбъектПроверки.ДатаНачала)
		И ЗначениеЗаполнено(ОбъектПроверки.ДатаОкончания) Тогда
		
		Если ОбъектПроверки.ДатаНачала > ОбъектПроверки.ДатаОкончания Тогда
			ТекстОшибки = НСтр("ru='Дата начала действия патента не может быть больше даты окончания действия'");
		ИначеЕсли НЕ Год(ОбъектПроверки.ДатаНачала) = Год(ОбъектПроверки.ДатаОкончания) Тогда
			ТекстОшибки = НСтр("ru = 'Патент может быть выдан в пределах календарного года. Необходимо исправить либо дату начала, либо дату окончания патента'");
		КонецЕсли;
	КонецЕсли;
	Возврат ТекстОшибки;
КонецФункции

&НаКлиенте
Процедура ОрганизацияПредставлениеНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Объект.Владелец) Тогда
		
		ПоказатьЗначение(Неопределено, Объект.Владелец);
		
	Иначе
		
		СтруктураОтбор = Новый Структура;
		СтруктураОтбор.Вставить("ЮрФизЛицо", ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ИндивидуальныйПредприниматель"));
		
		ОткрытьФорму(
			"Справочник.Организации.Форма.ФормаВыбора",
			Новый Структура("Отбор", СтруктураОтбор),
			ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма);
	
КонецПроцедуры


&НаСервере
Процедура УстановитьПредставлениеОрганизации()
	
	Если НЕ ЗначениеЗаполнено(Объект.Владелец) Тогда
		ОрганизацияПредставление = НСтр("ru='<не выбрана>'");
		Элементы.ОрганизацияПредставление.ЦветТекста = ЦветаСтиля.ЦветОсобогоТекста;
	Иначе
		ОрганизацияПредставление = Объект.Владелец;
		Элементы.ОрганизацияПредставление.ЦветТекста = ЦветаСтиля.ГиперссылкаЦвет;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидомостьОпераций()
	
	Элементы.ГруппаДополнительныхОбработок.Видимость = Не Объект.Ссылка.Пустая();
	
КонецПроцедуры

#КонецОбласти
