#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	СогласоватьЗначенияПризнаков();
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",ЭтоНовый());   
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	РегистрыСведений.НастройкиАдресныхСкладов.УстановитьНастройкиПоУмолчанию(
		Владелец,
		Ссылка,
		ИспользоватьАдресноеХранение,
		ДатаНачалаАдресногоХраненияОстатков,
		ИспользоватьАдресноеХранениеСправочно,
		ИспользованиеРабочихУчастков = Перечисления.ИспользованиеСкладскихРабочихУчастков.Использовать,
		ДополнительныеСвойства.ЭтоНовый);

	// << 08.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
	КР_ПриЗаписи(Отказ);
	// >> 08.11.2022 Марченко С.Н., КРОК, JIRA№A2105505-751	
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(ДанныеЗаполнения)
		ИЛИ НЕ ДанныеЗаполнения.Свойство("Владелец") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	1 КАК Поле1
	|ИЗ
	|	Справочник.СкладскиеПомещения КАК Помещения
	|ГДЕ
	|	НЕ Помещения.ПометкаУдаления
	|	И Помещения.Владелец = &Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиАдресныхСкладов.ИспользоватьАдресноеХранение,
	|	НастройкиАдресныхСкладов.ИспользоватьАдресноеХранениеСправочно,
	|	НастройкиАдресныхСкладов.ИспользоватьРабочиеУчастки,
	|	Склады.ТекущийОтветственный,
	|	Склады.ТекущаяДолжностьОтветственного
	|ИЗ
	|	Справочник.Склады КАК Склады
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиАдресныхСкладов КАК НастройкиАдресныхСкладов
	|		ПО (НастройкиАдресныхСкладов.Склад = Склады.Ссылка)
	|			И (НастройкиАдресныхСкладов.Помещение = &ПустоеПомещение)
	|ГДЕ
	|	Склады.Ссылка = &Владелец";
	Запрос.УстановитьПараметр("Владелец",ДанныеЗаполнения.Владелец);
	Запрос.УстановитьПараметр("ПустоеПомещение",Справочники.СкладскиеПомещения.ПустаяСсылка());
	Результат = Запрос.ВыполнитьПакет();
	Если Результат[0].Пустой() Тогда
		Выборка = Результат[1].Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		Если Выборка.ИспользоватьАдресноеХранение Тогда
			НастройкаАдресногоХранения = Перечисления.НастройкиАдресногоХранения.ЯчейкиОстатки;
		ИначеЕсли Выборка.ИспользоватьАдресноеХранениеСправочно Тогда
			НастройкаАдресногоХранения = Перечисления.НастройкиАдресногоХранения.ЯчейкиСправочно;
		Иначе
			НастройкаАдресногоХранения = Перечисления.НастройкиАдресногоХранения.НеИспользовать;
		КонецЕсли;
		Если Выборка.ИспользоватьРабочиеУчастки Тогда
			ИспользованиеРабочихУчастков = Перечисления.ИспользованиеСкладскихРабочихУчастков.Использовать;
		Иначе
			ИспользованиеРабочихУчастков = Перечисления.ИспользованиеСкладскихРабочихУчастков.НеИспользовать;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

Процедура СогласоватьЗначенияПризнаков() Экспорт
	Если Не ЗначениеЗаполнено(НастройкаАдресногоХранения)
		Или НастройкаАдресногоХранения = Перечисления.НастройкиАдресногоХранения.ОпределяетсяНастройкамиПомещения Тогда
		НастройкаАдресногоХранения = Перечисления.НастройкиАдресногоХранения.НеИспользовать;
	КонецЕсли;
	
	Если НастройкаАдресногоХранения = Перечисления.НастройкиАдресногоХранения.ЯчейкиОстатки Тогда
		ИспользоватьАдресноеХранение          = Истина;
	ИначеЕсли НастройкаАдресногоХранения = Перечисления.НастройкиАдресногоХранения.ЯчейкиСправочно Тогда
		ИспользоватьАдресноеХранение          = Ложь;
		ИспользоватьАдресноеХранениеСправочно = Истина;
	Иначе
		ИспользоватьАдресноеХранение          = Ложь;
		ИспользоватьАдресноеХранениеСправочно = Ложь;
	КонецЕсли;
	
	Если Не ИспользоватьАдресноеХранение
		И Не ИспользоватьАдресноеХранениеСправочно Тогда
		НастройкаАдресногоХранения = Перечисления.НастройкиАдресногоХранения.НеИспользовать;
	КонецЕсли;
	
	Если Не ИспользоватьАдресноеХранение Тогда
		ДатаНачалаАдресногоХраненияОстатков = Дата(1, 1, 1);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область КР_ДобавленныеПроцедурыИФункции

// << 31.10.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
Процедура КР_ПриЗаписи(Отказ)

	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	Если НастройкаАдресногоХранения <> Перечисления.НастройкиАдресногоХранения.ЯчейкиОстатки
		И Владелец.КР_АдресныйСкладБезордернойОтгрузки
		// A2105505-1241
		И Не ДополнительныеСвойства.Свойство(КР_УТ11_ЦБ_Магазин_ЗагрузкаДанныхСервер.СвойствоОбъектБылЗагружен())
		//
		Тогда 
		
		КР_СоздатьОбновитьСкладскуюЯчейку();
		
	КонецЕсли;	

КонецПроцедуры // >> 31.10.2022 Марченко С.Н., КРОК, JIRA№A2105505-751

// << 31.10.2022 Марченко С.Н., КРОК, JIRA№A2105505-751
Процедура КР_СоздатьОбновитьСкладскуюЯчейку() Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МАКСИМУМ(Т.ОбластьХранения) КАК ОбластьХранения,
	|	Т.Приоритет КАК Приоритет
	|ПОМЕСТИТЬ ПравилаРазмещения
	|ИЗ
	|	РегистрСведений.ПравилаРазмещенияТоваровВЯчейках КАК Т
	|ГДЕ
	|	Т.Склад = &Склад
	|	И НЕ Т.КР_ЗапрещеныПродажи
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Приоритет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.ОбластьХранения КАК Ссылка
	|ИЗ
	|	ПравилаРазмещения КАК Т
	|ГДЕ
	|	Т.Приоритет В
	|			(ВЫБРАТЬ
	|				МИНИМУМ(Т.Приоритет) КАК Приоритет
	|			ИЗ
	|				ПравилаРазмещения КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Т.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.СкладскиеЯчейки КАК Т
	|ГДЕ
	|	Т.Помещение = &Помещение
	|	И Т.Владелец = &Склад"); 
	
	Если ОбщегоНазначения.СсылкаСуществует(Владелец) Тогда 
		Запрос.УстановитьПараметр("Склад", Владелец);
	Иначе
		Запрос.УстановитьПараметр("Склад", Справочники.Склады.ПустаяСсылка());
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Помещение", Ссылка);  
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ИндексПоследнегоРезультата = РезультатЗапроса.ВГраница();           
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса[ИндексПоследнегоРезультата - 1].Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
		ОбластьХранения = ВыборкаДетальныеЗаписи.Ссылка;
	Иначе
		ОбластьХранения = Неопределено;
	КонецЕсли;	
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса[ИндексПоследнегоРезультата].Выбрать(); 
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
		СкладскаяЯчейкаОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		СкладскаяЯчейкаОбъект.ПометкаУдаления = Ложь;
	Иначе
		СкладскаяЯчейкаОбъект = Справочники.СкладскиеЯчейки.СоздатьЭлемент();
		СкладскаяЯчейкаОбъект.Владелец = Владелец;
		СкладскаяЯчейкаОбъект.Помещение = Ссылка;
	КонецЕсли;	
	
	СкладскаяЯчейкаОбъект.Наименование = Наименование;
	СкладскаяЯчейкаОбъект.Код = Наименование;
	СкладскаяЯчейкаОбъект.ТипСкладскойЯчейки = Перечисления.ТипыСкладскихЯчеек.Хранение;
	СкладскаяЯчейкаОбъект.ОбластьХранения = ОбластьХранения;
	СкладскаяЯчейкаОбъект.Типоразмер = КР_ДополнительныеНастройкиПовтИсп.Значение("ТипоразмерБезразмернаяЯчейка");
		
	СкладскаяЯчейкаОбъект.ОбменДанными.Загрузка = Не ОбщегоНазначения.СсылкаСуществует(Владелец);
	СкладскаяЯчейкаОбъект.Записать();	
		
КонецПроцедуры // >> 31.10.2022 Марченко С.Н., КРОК, JIRA№A2105505-751

#КонецОбласти

#КонецЕсли