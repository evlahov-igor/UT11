#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"ПрисоединитьДополнительныеТаблицы
	|ЭтотСписок КАК Т
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИерархияПартнеров КАК Т2 
	|	ПО Т2.Родитель = Т.Партнер
	|;
	|РазрешитьЧтение
	|ГДЕ
	|	ЗначениеРазрешено(Т2.Партнер)
	|;
	|РазрешитьИзменениеЕслиРазрешеноЧтение
	|ГДЕ
	|	ЗначениеРазрешено(Партнер)";
	
	Ограничение.ТекстДляВнешнихПользователей =
	"ПрисоединитьДополнительныеТаблицы
	|ЭтотСписок КАК ЭтотСписок
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИерархияПартнеров КАК ИерархияПартнеров 
	|	ПО ИерархияПартнеров.Родитель = ЭтотСписок.Партнер
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВнешниеПользователи КАК ВнешниеПользователиПартнеры
	|	ПО ВнешниеПользователиПартнеры.ОбъектАвторизации = ИерархияПартнеров.Партнер
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров 
	|	ПО КонтактныеЛицаПартнеров.Владелец = ЭтотСписок.Партнер
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВнешниеПользователи КАК ВнешниеПользователиКонтактныеЛица 
	|	ПО ВнешниеПользователиКонтактныеЛица.ОбъектАвторизации = КонтактныеЛицаПартнеров.Ссылка
	|;
	|РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(ВнешниеПользователиПартнеры.Ссылка)
	|	ИЛИ ЗначениеРазрешено(ВнешниеПользователиКонтактныеЛица.Ссылка)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

Функция СокрЮрНаименованиеНаДату(Контрагент, ДатаСведений) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Контрагент)
		ИЛИ ТипЗнч(Контрагент) <> Тип("СправочникСсылка.Контрагенты") Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаСведений) Тогда
		Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "НаименованиеПолное");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Контрагент", Контрагент);
	Запрос.Параметры.Вставить("ДатаСведений", ДатаСведений);
	Запрос.Текст ="
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ИсторияНаименованийКонтрагентов.НаименованиеПолное КАК НаименованиеПолное
	|ПОМЕСТИТЬ ИсторическоеЗначениеНаименования
	|ИЗ
	|	Справочник.Контрагенты.ИсторияНаименований КАК ИсторияНаименованийКонтрагентов
	|ГДЕ
	|	ИсторияНаименованийКонтрагентов.Ссылка = &Контрагент
	|	И ИсторияНаименованийКонтрагентов.Период <= &ДатаСведений
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИсторияНаименованийКонтрагентов.Период УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ИсторическоеЗначениеНаименования.НаименованиеПолное, Контрагенты.НаименованиеПолное) КАК НаименованиеПолное
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИсторическоеЗначениеНаименования КАК ИсторическоеЗначениеНаименования
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Контрагенты.Ссылка = &Контрагент";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.НаименованиеПолное;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

// Возвращает имена реквизитов, которые не должны отображаться в списке реквизитов обработки ГрупповоеИзменениеОбъектов.
//
//	Возвращаемое значение:
//		Массив - массив имен реквизитов.
//
Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	НеРедактируемыеРеквизиты = Новый Массив;
	НеРедактируемыеРеквизиты.Добавить("ЮридическоеФизическоеЛицо");
	НеРедактируемыеРеквизиты.Добавить("ОбособленноеПодразделение");
	НеРедактируемыеРеквизиты.Добавить("ГоловнойКонтрагент");
	НеРедактируемыеРеквизиты.Добавить("НаименованиеПолное");
	НеРедактируемыеРеквизиты.Добавить("ИсторияНаименований.*");
	ПартнерыИКонтрагентыЛокализация.ДополнитьРеквизитыНеРедактируемыеВГрупповойОбработкеКонтрагент(НеРедактируемыеРеквизиты);
	Возврат НеРедактируемыеРеквизиты;
	
КонецФункции

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	БизнесПроцессы.Задание.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	Справочники.СоглашенияСКлиентами.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Определяет настройки начального заполнения элементов
//
// Параметры:
//  Настройки - Структура - настройки заполнения:
//   * ПриНачальномЗаполненииЭлемента - Булево - Если Истина, то для каждого элемента будет
//      вызвана процедура индивидуального заполнения ПриНачальномЗаполненииЭлемента.
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
	Настройки.ПриНачальномЗаполненииЭлемента = Истина;
	
КонецПроцедуры

// Вызывается при начальном заполнении справочника.
//
// Параметры:
//  КодыЯзыков - Массив - список языков конфигурации. Актуально для мультиязычных конфигураций.
//  Элементы   - ТаблицаЗначений - данные заполнения. Состав колонок соответствует набору реквизитов
//                                 справочника.
//  ТабличныеЧасти - Структура - Ключ - Имя табличной части объекта.
//                               Значение - Выгрузка в таблицу значений пустой табличной части.
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт

	КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
	
	#Область РозничныйПокупатель
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "РозничныйПокупатель";
	Элемент.Наименование = НСтр("ru = 'Розничный покупатель'", КодОсновногоЯзыка);
	Элемент.НаименованиеПолное = НСтр("ru = 'Розничный покупатель'", КодОсновногоЯзыка);
	Элемент.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
	Элемент.ГоловнойКонтрагент = Справочники.Контрагенты.РозничныйПокупатель;
	Элемент.Партнер = Справочники.Партнеры.РозничныйПокупатель;
	Элемент.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо;
	#КонецОбласти

КонецПроцедуры

// Вызывается при начальном заполнении создаваемого элемента.
//
// Параметры:
//  Объект                  - СправочникОбъект.Контрагенты - заполняемый объект.
//  Данные                  - СтрокаТаблицыЗначений - данные заполнения.
//  ДополнительныеПараметры - Структура - Дополнительные параметры.
//
Процедура ПриНачальномЗаполненииЭлемента(Объект, Данные, ДополнительныеПараметры) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ПартнерыИКонтрагентыВызовСервера.КонтрагентыДанныеВыбора(Параметры);
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаВыбора" Тогда
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровКакКонтрагентов") Тогда
			
			ИспользоватьПолнотекстовыйПоиск = ОбщегоНазначенияУТВызовСервера.ИспользуетсяПолнотекстовыйПоиск("ИспользоватьПолнотекстовыйПоиск");
			
			Если ИспользоватьПолнотекстовыйПоиск Тогда
				ВыбраннаяФорма       = "ФормаВыбораИспользуютсяТолькоПартнеры";
			Иначе
				ВыбраннаяФорма       = "ФормаВыбораИспользуютсяТолькоПартнерыБезПолнотекстовогоПоиска";
			КонецЕсли;
			
			СтандартнаяОбработка = Ложь;
			
			Если Параметры.Свойство("Отбор") И Параметры.Отбор.Свойство("Партнер") Тогда
				Параметры.Отбор.Удалить("Партнер");
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВидФормы = "ФормаОбъекта" Тогда
		Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровКакКонтрагентов") Тогда
			СтандартнаяОбработка = Ложь;
			Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
				ПартнерыИКонтрагентыВызовСервера.ДанныеКонтрагентаДляОткрытияФормыПартнера(Параметры);
				ВыбраннаяФорма = "Справочник.Партнеры.Форма.ФормаЭлементаРеквизитыКонтрагента";
			Иначе
				ВыбраннаяФорма = "Справочник.Партнеры.Форма.ПомощникНового";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область ПервоначальноеЗаполнениеИБ

// Заполняет предопределенные элементы справочника "Контрагенты".
//
Процедура ЗаполнитьПредопределенныхКонтрагентов() Экспорт
	
	СправочникОбъект = Справочники.Контрагенты.РозничныйПокупатель.ПолучитьОбъект();
	СправочникОбъект.НаименованиеПолное = НСтр("ru = 'Розничный покупатель'", ОбщегоНазначения.КодОсновногоЯзыка());
	СправочникОбъект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо;
	СправочникОбъект.Партнер = Справочники.Партнеры.РозничныйПокупатель;
	СправочникОбъект.Записать();
	
КонецПроцедуры

#КонецОбласти

#Область Отчеты

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	КомандаОтчет = ВзаиморасчетыСервер.ВедомостьРасчетовСПартнерами_ДобавитьКомандуОтчета(КомандыОтчетов);
	Если КомандаОтчет <> Неопределено Тогда
		КомандаОтчет.ВидимостьВФормах = "ФормаЭлемента,ФормаСписка,ФормаСпискаПараметрическая";
	КонецЕсли;
	
	Если КомандаОтчет <> Неопределено Тогда
		КомандаОтчет.ВидимостьВФормах = "ФормаЭлемента,ФормаСписка,ФормаСпискаПараметрическая";
	КонецЕсли;
	ПартнерыИКонтрагентыЛокализация.ДобавитьКомандыОтчетов_Контрагенты(КомандыОтчетов, Параметры);
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт



КонецПроцедуры

#КонецОбласти

#Область ШаблоныСообщений

// Вызывается при подготовке шаблонов сообщений и позволяет переопределить список реквизитов и вложений.
//
// Параметры:
//  Реквизиты               - ДеревоЗначений - список реквизитов шаблона.
//         ** Имя            - Строка - Уникальное имя общего реквизита.
//         ** Представление  - Строка - Представление общего реквизита.
//         ** Тип            - Тип    - Тип реквизита. По умолчанию строка.
//         ** Формат         - Строка - Формат вывода значения для чисел, дат, строк и булевых значений.
//  Вложения                - ТаблицаЗначений - печатные формы и вложения
//         ** Имя            - Строка - Уникальное имя вложения.
//         ** Представление  - Строка - Представление варианта.
//         ** ТипФайла       - Строка - Тип вложения, который соответствует расширению файла: "pdf", "png", "jpg", mxl"
//                                      и др.
//  ДополнительныеПараметры - Структура - дополнительные сведения о шаблоне сообщений.
//
Процедура ПриПодготовкеШаблонаСообщения(Реквизиты, Вложения, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

// Вызывается в момент создания сообщений по шаблону для заполнения значений реквизитов и вложений.
//
// Параметры:
//  Сообщение - Структура - структура с ключами:
//    * ЗначенияРеквизитов - Соответствие - список используемых в шаблоне реквизитов:
//      ** Ключ     - Строка - имя реквизита в шаблоне;
//      ** Значение - Строка - значение заполнения в шаблоне.
//    * ЗначенияОбщихРеквизитов - Соответствие - список используемых в шаблоне общих реквизитов:
//      ** Ключ     - Строка - имя реквизита в шаблоне;
//      ** Значение - Строка - значение заполнения в шаблоне.
//    * Вложения - Соответствие - значения реквизитов: 
//      ** Ключ     - Строка - имя вложения в шаблоне;
//      ** Значение - ДвоичныеДанные, Строка - двоичные данные или адрес во временном хранилище вложения.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//  ДополнительныеПараметры - Структура -  Дополнительная информация о шаблоне сообщения.
//
Процедура ПриФормированииСообщения(Сообщение, ПредметСообщения, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

// Заполняет список получателей SMS при отправке сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиSMS - ТаблицаЗначений - список получателей SMS:
//     * НомерТелефона - Строка - номер телефона, куда будет отправлено сообщение SMS.
//     * Представление - Строка - представление получателя сообщения SMS.
//     * Контакт       - СправочникСсылка - контакт, которому принадлежит номер телефона.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//
Процедура ПриЗаполненииТелефоновПолучателейВСообщении(ПолучателиSMS, ПредметСообщения) Экспорт
	
КонецПроцедуры

// Заполняет список получателей письма при отправки сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиПисьма - ТаблицаЗначений - список получателей письма:
//     * Адрес           - Строка - адрес электронной почты получателя.
//     * Представление   - Строка - представление получателя письма.
//     * ВариантОтправки - Строка - Варианты отправки письма: "Кому", "Копия", "СкрытаяКопия", "ОбратныйАдреса";
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//
Процедура ПриЗаполненииПочтыПолучателейВСообщении(ПолучателиПисьма, ПредметСообщения) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

#Область ЗаполнитьЭлементыНачальнымиДанными

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Справочники.Контрагенты.ЗаполнитьЭлементыНачальнымиДанными";
	Обработчик.Версия = "11.5.5.51";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("c356959c-33f0-4f7a-94c9-c0d455df60e2");
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Справочники.Контрагенты.ЗарегистрироватьПредопределенныеЭлементыДляОбновления";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Обновление наименований предопределенных элементов.
	|До завершения обработки наименования этих элементов в ряде случаев будет отображаться некорректно.'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Справочники.Контрагенты.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Справочники.Контрагенты.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.Справочники.Контрагенты.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "МультиязычностьСервер.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

#КонецОбласти

#Область СгенерироватьОбъектыРасчетов

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Справочники.Контрагенты.СгенерироватьОбъектыРасчетов";
	Обработчик.Версия = "11.5.8.242";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("b73942fd-51d7-41c6-b70d-312c6f5246f5");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Справочники.Контрагенты.ЗарегистрироватьДанныеКГенерацииОбъектовРасчетов";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.ЗапускатьТолькоВГлавномУзле = Истина;
	Обработчик.Комментарий = НСтр("ru = 'Генерирует элементы справочника Объекты расчетов.'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.РегистрыНакопления.РасчетыСКлиентами.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.РасчетыСКлиентамиПланОплат.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.РасчетыСКлиентамиПланОтгрузок.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.РасчетыСКлиентамиПоДокументам.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.РасчетыСКлиентамиПоСрокам.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.РасчетыСПоставщиками.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.РасчетыСПоставщикамиПланОплат.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.РасчетыСПоставщикамиПланПоставок.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.РасчетыСПоставщикамиПоСрокам.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Справочники.КлючиАналитикиУчетаПоПартнерам.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Справочники.Контрагенты.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Справочники.Организации.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Справочники.Партнеры.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Справочники.ОбъектыРасчетов.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.Справочники.ОбъектыРасчетов.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Справочники.ДоговорыКонтрагентов.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "До";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Справочники.ДоговорыМеждуОрганизациями.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "До";

#КонецОбласти

КонецПроцедуры

Процедура ЗарегистрироватьДанныеКГенерацииОбъектовРасчетов(Параметры = Неопределено) Экспорт
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаОбъектов = "Справочник.Контрагенты,Справочник.Организации,Справочник.Партнеры";
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиСсылки();
	
	Запрос = Новый Запрос(ТекстЗапросаКонтрагентыДляГенерацииОбъектовРасчетов());
	Запрос.УстановитьПараметр("ПустыеЗначенияОбъектРасчетов", ОбъектыРасчетовСервер.ПустыеЗначенияОбъектРасчетов());
	
	ДанныеКРегистрации = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("КонтрагентПартнер");
	ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(ДанныеКРегистрации, Справочники.Контрагенты.ПустаяСсылка());
	ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(ДанныеКРегистрации, Справочники.Партнеры.ПустаяСсылка());
	ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(ДанныеКРегистрации, Справочники.Организации.ПустаяСсылка());
	ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(ДанныеКРегистрации, Неопределено);
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, ДанныеКРегистрации);
	
КонецПроцедуры

Процедура СгенерироватьОбъектыРасчетов(Параметры) Экспорт
	
	МетаданныеСправочника = ПустаяСсылка().Метаданные();
	ПолноеИмяСправочника= МетаданныеСправочника.ПолноеИмя();
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Если Не ОбновляемыеДанные.Количество() Тогда
		Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяСправочника);
		Возврат;
	КонецЕсли;
	
	ПустыеЗначенияКонтрагент = Новый Массив();
	ПустыеЗначенияКонтрагент.Добавить(Справочники.Контрагенты.ПустаяСсылка());
	ПустыеЗначенияКонтрагент.Добавить(Справочники.Организации.ПустаяСсылка());
	ПустыеЗначенияКонтрагент.Добавить(Неопределено);
	
	Запрос = Новый Запрос(ТекстДанныеДляГенерацииОбъектовРасчетов());
	Запрос.УстановитьПараметр("ПустыеЗначенияОбъектРасчетов", ОбъектыРасчетовСервер.ПустыеЗначенияОбъектРасчетов());
	Запрос.УстановитьПараметр("ПустыеЗначенияКонтрагент", ПустыеЗначенияКонтрагент);
	Запрос.УстановитьПараметр("ОбрабатываемыеДанные", ОбновляемыеДанные);
	
	НачатьТранзакцию();
	
	Попытка
	
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаКонтрагент = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаКонтрагент.Следующий() Цикл
			
			ВыборкаДетальныеЗаписи = ВыборкаКонтрагент.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				Если ВыборкаДетальныеЗаписи.ТребуетсяОбработать Тогда
					ПараметрыСоздания = ОбъектыРасчетовСервер.ПолучитьПараметрыОбъектаРасчетов();
					ПараметрыСоздания.Вставить("ВалютаВзаиморасчетов", ВыборкаДетальныеЗаписи.ВалютаВзаиморасчетов);
					ЗаполнитьЗначенияСвойств(ПараметрыСоздания, ВыборкаДетальныеЗаписи);
					НовыйОбъектРасчетов = ОбъектыРасчетовСервер.СоздатьОбъектРасчетовПоАналитикеУчетаПоПартнерам(ПараметрыСоздания);
					
					Если Не ЗначениеЗаполнено(НовыйОбъектРасчетов) Тогда
						Шаблон = НСтр("ru = 'Не удалось создать объект расчетов по аналитике учета по партнерам: ""%1""'");
							ТекстСообщения = 
							СтрШаблон(Шаблон,
								ВыборкаДетальныеЗаписи.Ключ);
								
							ВызватьИсключение ТекстСообщения;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ВыборкаКонтрагент.КонтрагентПартнер);
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
	
		ОтменитьТранзакцию();
		
		Шаблон = НСтр("ru = 'Не удалось сгенерировать объект расчетов для пустого значения по причине: %1'");
		ТекстСообщения = СтрШаблон(Шаблон, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение, МетаданныеСправочника, , ТекстСообщения);
	
	КонецПопытки;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяСправочника);

КонецПроцедуры

Функция ТекстЗапросаКонтрагентыДляГенерацииОбъектовРасчетов()
	
	ТекстыЗапросов = Новый Массив();

	// Генерация Объектов расчетов по расчетным регистрам и регистрам МСФО
	ТекстЗапроса = "
	|//Расчеты с клиентами
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НЕ КлючиАналитикиУчетаПоПартнерам.Контрагент В
	|				(НЕОПРЕДЕЛЕНО,
	|				ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
	|				ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|			ТОГДА КлючиАналитикиУчетаПоПартнерам.Контрагент
	|		ИНАЧЕ 
	|			ВЫБОР КОГДА НЕ КлючиАналитикиУчетаПоПартнерам.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|				ТОГДА КлючиАналитикиУчетаПоПартнерам.Партнер
	|			ИНАЧЕ
	|				КлючиАналитикиУчетаПоПартнерам.Организация
	|			КОНЕЦ
	|	КОНЕЦ КАК КонтрагентПартнер
	|ИЗ
	|	Справочник.КлючиАналитикиУчетаПоПартнерам КАК КлючиАналитикиУчетаПоПартнерам
	|ГДЕ
	|	НЕ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
	|		ГДЕ
	|			КлючиАналитикиУчетаПоПартнерам.Организация = ОбъектыРасчетов.Организация
	|			И КлючиАналитикиУчетаПоПартнерам.Партнер = ОбъектыРасчетов.Партнер
	|			И КлючиАналитикиУчетаПоПартнерам.Контрагент = ОбъектыРасчетов.Контрагент
	|			И КлючиАналитикиУчетаПоПартнерам.Договор = ОбъектыРасчетов.Договор
	|			И КлючиАналитикиУчетаПоПартнерам.НаправлениеДеятельности = ОбъектыРасчетов.НаправлениеДеятельности
	|			И ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом) = ОбъектыРасчетов.ТипРасчетов
	|			И ОбъектыРасчетов.Объект = НЕОПРЕДЕЛЕНО
	|			И ОбъектыРасчетов.ВалютаВзаиморасчетов <> ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка))
	|	И ( 
	|	ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			РегистрНакопления.ДвиженияКонтрагентДоходыРасходы КАК ДвиженияКонтрагентДоходыРасходы
	|		ГДЕ
	|			ДвиженияКонтрагентДоходыРасходы.Организация = КлючиАналитикиУчетаПоПартнерам.Организация
	|			И ДвиженияКонтрагентДоходыРасходы.НаправлениеДеятельностиКонтрагента = КлючиАналитикиУчетаПоПартнерам.НаправлениеДеятельности
	|			И ДвиженияКонтрагентДоходыРасходы.Партнер = КлючиАналитикиУчетаПоПартнерам.Партнер
	|			И ДвиженияКонтрагентДоходыРасходы.Контрагент = КлючиАналитикиУчетаПоПартнерам.Контрагент
	|			И ДвиженияКонтрагентДоходыРасходы.Договор = КлючиАналитикиУчетаПоПартнерам.Договор
	|			И ДвиженияКонтрагентДоходыРасходы.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|			И ДвиженияКонтрагентДоходыРасходы.УдалитьОбъектРасчетов В (&ПустыеЗначенияОбъектРасчетов))
	|	ИЛИ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			РегистрНакопления.ДвиженияКонтрагентКонтрагент КАК ДвиженияКонтрагентКонтрагент
	|		ГДЕ
	|			ДвиженияКонтрагентКонтрагент.Организация = КлючиАналитикиУчетаПоПартнерам.Организация
	|			И ДвиженияКонтрагентКонтрагент.НаправлениеДеятельности = КлючиАналитикиУчетаПоПартнерам.НаправлениеДеятельности
	|			И ДвиженияКонтрагентКонтрагент.Партнер = КлючиАналитикиУчетаПоПартнерам.Партнер
	|			И ДвиженияКонтрагентКонтрагент.Контрагент = КлючиАналитикиУчетаПоПартнерам.Контрагент
	|			И ДвиженияКонтрагентКонтрагент.Договор = КлючиАналитикиУчетаПоПартнерам.Договор
	|			И ДвиженияКонтрагентКонтрагент.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|			И ДвиженияКонтрагентКонтрагент.УдалитьОбъектРасчетов В (&ПустыеЗначенияОбъектРасчетов))
	|	ИЛИ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДвиженияДенежныеСредстваКонтрагент
	|		ГДЕ
	|			ДвиженияДенежныеСредстваКонтрагент.Организация = КлючиАналитикиУчетаПоПартнерам.Организация
	|			И ДвиженияДенежныеСредстваКонтрагент.НаправлениеДеятельностиКонтрагента = КлючиАналитикиУчетаПоПартнерам.НаправлениеДеятельности
	|			И ДвиженияДенежныеСредстваКонтрагент.Партнер = КлючиАналитикиУчетаПоПартнерам.Партнер
	|			И ДвиженияДенежныеСредстваКонтрагент.Контрагент = КлючиАналитикиУчетаПоПартнерам.Контрагент
	|			И ДвиженияДенежныеСредстваКонтрагент.Договор = КлючиАналитикиУчетаПоПартнерам.Договор
	|			И ДвиженияДенежныеСредстваКонтрагент.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|			И ДвиженияДенежныеСредстваКонтрагент.УдалитьОбъектРасчетов В (&ПустыеЗначенияОбъектРасчетов))
	|	ИЛИ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			РегистрНакопления.РасчетыСКлиентами КАК РасчетыСКлиентами
	|		ГДЕ
	|			РасчетыСКлиентами.АналитикаУчетаПоПартнерам = КлючиАналитикиУчетаПоПартнерам.Ссылка
	|			И РасчетыСКлиентами.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|			И РасчетыСКлиентами.УдалитьЗаказКлиента В (&ПустыеЗначенияОбъектРасчетов))
	|	ИЛИ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			РегистрНакопления.РасчетыСКлиентамиПланОплат КАК РасчетыСКлиентамиПланОплат
	|		ГДЕ
	|			РасчетыСКлиентамиПланОплат.АналитикаУчетаПоПартнерам = КлючиАналитикиУчетаПоПартнерам.Ссылка
	|			И РасчетыСКлиентамиПланОплат.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|			И РасчетыСКлиентамиПланОплат.УдалитьОбъектРасчетов В (&ПустыеЗначенияОбъектРасчетов))
	|	ИЛИ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			РегистрНакопления.РасчетыСКлиентамиПланОтгрузок КАК РасчетыСКлиентамиПланОтгрузок
	|		ГДЕ
	|			РасчетыСКлиентамиПланОтгрузок.АналитикаУчетаПоПартнерам = КлючиАналитикиУчетаПоПартнерам.Ссылка
	|			И РасчетыСКлиентамиПланОтгрузок.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|			И РасчетыСКлиентамиПланОтгрузок.УдалитьОбъектРасчетов В (&ПустыеЗначенияОбъектРасчетов))
	|	ИЛИ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК РасчетыСКлиентамиПоДокументам
	|		ГДЕ
	|			РасчетыСКлиентамиПоДокументам.АналитикаУчетаПоПартнерам = КлючиАналитикиУчетаПоПартнерам.Ссылка
	|			И РасчетыСКлиентамиПоДокументам.ЗаказКлиента = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|			И РасчетыСКлиентамиПоДокументам.УдалитьЗаказКлиента В (&ПустыеЗначенияОбъектРасчетов))
	|	ИЛИ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			РегистрНакопления.РасчетыСКлиентамиПоСрокам КАК РасчетыСКлиентамиПоСрокам
	|		ГДЕ
	|			РасчетыСКлиентамиПоСрокам.АналитикаУчетаПоПартнерам = КлючиАналитикиУчетаПоПартнерам.Ссылка
	|			И РасчетыСКлиентамиПоСрокам.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|			И РасчетыСКлиентамиПоСрокам.УдалитьОбъектРасчетов В (&ПустыеЗначенияОбъектРасчетов))
	|	)
	|
	|ОБЪЕДИНИТЬ
	|
	|//Расчеты с поставщиками
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НЕ КлючиАналитикиУчетаПоПартнерам.Контрагент В
	|				(НЕОПРЕДЕЛЕНО,
	|				ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
	|				ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|			ТОГДА КлючиАналитикиУчетаПоПартнерам.Контрагент
	|		ИНАЧЕ 
	|			ВЫБОР КОГДА НЕ КлючиАналитикиУчетаПоПартнерам.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|				ТОГДА КлючиАналитикиУчетаПоПартнерам.Партнер
	|			ИНАЧЕ
	|				КлючиАналитикиУчетаПоПартнерам.Организация
	|			КОНЕЦ
	|	КОНЕЦ КАК КонтрагентПартнер
	|ИЗ
	|	Справочник.КлючиАналитикиУчетаПоПартнерам КАК КлючиАналитикиУчетаПоПартнерам
	|ГДЕ
	|	НЕ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
	|		ГДЕ
	|			КлючиАналитикиУчетаПоПартнерам.Организация = ОбъектыРасчетов.Организация
	|			И КлючиАналитикиУчетаПоПартнерам.Партнер = ОбъектыРасчетов.Партнер
	|			И КлючиАналитикиУчетаПоПартнерам.Контрагент = ОбъектыРасчетов.Контрагент
	|			И КлючиАналитикиУчетаПоПартнерам.Договор = ОбъектыРасчетов.Договор
	|			И КлючиАналитикиУчетаПоПартнерам.НаправлениеДеятельности = ОбъектыРасчетов.НаправлениеДеятельности
	|			И ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком) = ОбъектыРасчетов.ТипРасчетов
	|			И ОбъектыРасчетов.Объект = НЕОПРЕДЕЛЕНО)
	|	И 
	|	(ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			РегистрНакопления.РасчетыСПоставщиками КАК РасчетыСПоставщиками
	|		ГДЕ
	|			РасчетыСПоставщиками.АналитикаУчетаПоПартнерам = КлючиАналитикиУчетаПоПартнерам.Ссылка
	|			И РасчетыСПоставщиками.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|			И РасчетыСПоставщиками.УдалитьЗаказПоставщику В (&ПустыеЗначенияОбъектРасчетов))
	|	ИЛИ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			РегистрНакопления.РасчетыСПоставщикамиПланОплат КАК РасчетыСПоставщикамиПланОплат
	|		ГДЕ
	|			РасчетыСПоставщикамиПланОплат.АналитикаУчетаПоПартнерам = КлючиАналитикиУчетаПоПартнерам.Ссылка
	|			И РасчетыСПоставщикамиПланОплат.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|			И РасчетыСПоставщикамиПланОплат.УдалитьОбъектРасчетов В (&ПустыеЗначенияОбъектРасчетов))
	|	ИЛИ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			РегистрНакопления.РасчетыСПоставщикамиПланПоставок КАК РасчетыСПоставщикамиПланПоставок
	|		ГДЕ
	|			РасчетыСПоставщикамиПланПоставок.АналитикаУчетаПоПартнерам = КлючиАналитикиУчетаПоПартнерам.Ссылка
	|			И РасчетыСПоставщикамиПланПоставок.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|			И РасчетыСПоставщикамиПланПоставок.УдалитьОбъектРасчетов В (&ПустыеЗначенияОбъектРасчетов))
	|	ИЛИ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК РасчетыСПоставщикамиПоДокументам
	|		ГДЕ
	|			РасчетыСПоставщикамиПоДокументам.АналитикаУчетаПоПартнерам = КлючиАналитикиУчетаПоПартнерам.Ссылка
	|			И РасчетыСПоставщикамиПоДокументам.ЗаказПоставщику = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|			И РасчетыСПоставщикамиПоДокументам.УдалитьЗаказПоставщику В (&ПустыеЗначенияОбъектРасчетов))
	|	ИЛИ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК РасчетыСПоставщикамиПоСрокам
	|		ГДЕ
	|			РасчетыСПоставщикамиПоСрокам.АналитикаУчетаПоПартнерам = КлючиАналитикиУчетаПоПартнерам.Ссылка
	|			И РасчетыСПоставщикамиПоСрокам.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|			И РасчетыСПоставщикамиПоСрокам.УдалитьОбъектРасчетов В (&ПустыеЗначенияОбъектРасчетов)))";
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
	// Регистрация контрагентов по пустым значениям поля УдалитьЗаказ в платёжных документах и прочих документах
	ИсточникиПустыхОбъектовРасчетов = Новый Массив();
	ИсточникиПустыхОбъектовРасчетов.Добавить("ПоступлениеБезналичныхДенежныхСредств");
	ИсточникиПустыхОбъектовРасчетов.Добавить("СписаниеБезналичныхДенежныхСредств");
	ИсточникиПустыхОбъектовРасчетов.Добавить("ПриходныйКассовыйОрдер");
	ИсточникиПустыхОбъектовРасчетов.Добавить("РасходныйКассовыйОрдер");
	ИсточникиПустыхОбъектовРасчетов.Добавить("ОперацияПоПлатежнойКарте");
	ИсточникиПустыхОбъектовРасчетов.Добавить("КорректировкаЗадолженности");
	ИсточникиПустыхОбъектовРасчетов.Добавить("ВзаимозачетЗадолженности");
	ИсточникиПустыхОбъектовРасчетов.Добавить("СверкаВзаиморасчетов");
	
	Для Каждого Документ Из ИсточникиПустыхОбъектовРасчетов Цикл
		ТекстыЗапросов.Добавить(Документы[Документ].ТекстЗапросаРегистрацияДанныхДляГенерацииПустогоОбъектаРасчетов());
	КонецЦикла;
	
	ИтоговыйТекстЗапроса = СтрСоединить(ТекстыЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении(Истина));
	
	Возврат ИтоговыйТекстЗапроса;
	
КонецФункции

Функция ТекстДанныеДляГенерацииОбъектовРасчетов()

	ТекстыЗапросов = Новый Массив();
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	ОбрабатываемыеДанные.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОбрабатываемыеДанные
	|ИЗ
	|	&ОбрабатываемыеДанные КАК ОбрабатываемыеДанные
	|;
	|
	|//Расчеты с клиентами
	|ВЫБРАТЬ 
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом) КАК ТипРасчетов,
	|	КлючиАналитикиУчетаПоПартнерам.Организация КАК Организация,
	|	КлючиАналитикиУчетаПоПартнерам.Партнер КАК Партнер,
	|	КлючиАналитикиУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	КлючиАналитикиУчетаПоПартнерам.Договор КАК Договор,
	|	КлючиАналитикиУчетаПоПартнерам.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	РасчетыСКлиентами.Валюта КАК Валюта
	|ПОМЕСТИТЬ ДанныеДляГенерацииПредварительная
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами КАК РасчетыСКлиентами
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК КлючиАналитикиУчетаПоПартнерам
	|		ПО РасчетыСКлиентами.АналитикаУчетаПоПартнерам = КлючиАналитикиУчетаПоПартнерам.Ссылка
	|			И (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ОбрабатываемыеДанные)
	|			ИЛИ (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ПустыеЗначенияКонтрагент)
	|					И КлючиАналитикиУчетаПоПартнерам.Партнер В (&ОбрабатываемыеДанные))
	|			ИЛИ (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ПустыеЗначенияКонтрагент)
	|					И КлючиАналитикиУчетаПоПартнерам.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|					И КлючиАналитикиУчетаПоПартнерам.Организация В (&ОбрабатываемыеДанные)))
	|ГДЕ
	|	РасчетыСКлиентами.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|	И РасчетыСКлиентами.УдалитьЗаказКлиента В (&ПустыеЗначенияОбъектРасчетов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ 
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом),
	|	КлючиАналитикиУчетаПоПартнерам.Организация,
	|	КлючиАналитикиУчетаПоПартнерам.Партнер,
	|	КлючиАналитикиУчетаПоПартнерам.Контрагент,
	|	КлючиАналитикиУчетаПоПартнерам.Договор,
	|	КлючиАналитикиУчетаПоПартнерам.НаправлениеДеятельности,
	|	РасчетыСКлиентамиПланОплат.Валюта
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПланОплат КАК РасчетыСКлиентамиПланОплат
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК КлючиАналитикиУчетаПоПартнерам
	|		ПО РасчетыСКлиентамиПланОплат.АналитикаУчетаПоПартнерам = КлючиАналитикиУчетаПоПартнерам.Ссылка
	|			И (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ОбрабатываемыеДанные)
	|			ИЛИ (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ПустыеЗначенияКонтрагент)
	|					И КлючиАналитикиУчетаПоПартнерам.Партнер В (&ОбрабатываемыеДанные))
	|			ИЛИ (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ПустыеЗначенияКонтрагент)
	|					И КлючиАналитикиУчетаПоПартнерам.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|					И КлючиАналитикиУчетаПоПартнерам.Организация В (&ОбрабатываемыеДанные)))
	|ГДЕ
	|	РасчетыСКлиентамиПланОплат.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|	И РасчетыСКлиентамиПланОплат.УдалитьОбъектРасчетов В (&ПустыеЗначенияОбъектРасчетов)
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ 
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом),
	|	КлючиАналитикиУчетаПоПартнерам.Организация,
	|	КлючиАналитикиУчетаПоПартнерам.Партнер,
	|	КлючиАналитикиУчетаПоПартнерам.Контрагент,
	|	КлючиАналитикиУчетаПоПартнерам.Договор,
	|	КлючиАналитикиУчетаПоПартнерам.НаправлениеДеятельности,
	|	РасчетыСКлиентамиПланОтгрузок.Валюта
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПланОтгрузок КАК РасчетыСКлиентамиПланОтгрузок
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК КлючиАналитикиУчетаПоПартнерам
	|		ПО РасчетыСКлиентамиПланОтгрузок.АналитикаУчетаПоПартнерам = КлючиАналитикиУчетаПоПартнерам.Ссылка
	|			И (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ОбрабатываемыеДанные)
	|			ИЛИ (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ПустыеЗначенияКонтрагент)
	|					И КлючиАналитикиУчетаПоПартнерам.Партнер В (&ОбрабатываемыеДанные))
	|			ИЛИ (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ПустыеЗначенияКонтрагент)
	|					И КлючиАналитикиУчетаПоПартнерам.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|					И КлючиАналитикиУчетаПоПартнерам.Организация В (&ОбрабатываемыеДанные)))
	|ГДЕ
	|	РасчетыСКлиентамиПланОтгрузок.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|	И РасчетыСКлиентамиПланОтгрузок.УдалитьОбъектРасчетов В (&ПустыеЗначенияОбъектРасчетов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ 
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом),
	|	КлючиАналитикиУчетаПоПартнерам.Организация,
	|	КлючиАналитикиУчетаПоПартнерам.Партнер,
	|	КлючиАналитикиУчетаПоПартнерам.Контрагент,
	|	КлючиАналитикиУчетаПоПартнерам.Договор,
	|	КлючиАналитикиУчетаПоПартнерам.НаправлениеДеятельности,
	|	РасчетыСКлиентамиПоДокументам.Валюта
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК РасчетыСКлиентамиПоДокументам
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК КлючиАналитикиУчетаПоПартнерам
	|		ПО РасчетыСКлиентамиПоДокументам.АналитикаУчетаПоПартнерам = КлючиАналитикиУчетаПоПартнерам.Ссылка
	|			И (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ОбрабатываемыеДанные)
	|			ИЛИ (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ПустыеЗначенияКонтрагент)
	|					И КлючиАналитикиУчетаПоПартнерам.Партнер В (&ОбрабатываемыеДанные))
	|			ИЛИ (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ПустыеЗначенияКонтрагент)
	|					И КлючиАналитикиУчетаПоПартнерам.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|					И КлючиАналитикиУчетаПоПартнерам.Организация В (&ОбрабатываемыеДанные)))
	|ГДЕ
	|	РасчетыСКлиентамиПоДокументам.ЗаказКлиента = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|	И РасчетыСКлиентамиПоДокументам.УдалитьЗаказКлиента В (&ПустыеЗначенияОбъектРасчетов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ 
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом),
	|	КлючиАналитикиУчетаПоПартнерам.Организация,
	|	КлючиАналитикиУчетаПоПартнерам.Партнер,
	|	КлючиАналитикиУчетаПоПартнерам.Контрагент,
	|	КлючиАналитикиУчетаПоПартнерам.Договор,
	|	КлючиАналитикиУчетаПоПартнерам.НаправлениеДеятельности,
	|	РасчетыСКлиентамиПоСрокам.Валюта
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоСрокам КАК РасчетыСКлиентамиПоСрокам
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК КлючиАналитикиУчетаПоПартнерам
	|		ПО РасчетыСКлиентамиПоСрокам.АналитикаУчетаПоПартнерам = КлючиАналитикиУчетаПоПартнерам.Ссылка
	|			И (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ОбрабатываемыеДанные)
	|			ИЛИ (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ПустыеЗначенияКонтрагент)
	|					И КлючиАналитикиУчетаПоПартнерам.Партнер В (&ОбрабатываемыеДанные))
	|			ИЛИ (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ПустыеЗначенияКонтрагент)
	|					И КлючиАналитикиУчетаПоПартнерам.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|					И КлючиАналитикиУчетаПоПартнерам.Организация В (&ОбрабатываемыеДанные)))
	|ГДЕ
	|	РасчетыСКлиентамиПоСрокам.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|	И РасчетыСКлиентамиПоСрокам.УдалитьОбъектРасчетов В (&ПустыеЗначенияОбъектРасчетов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|//Расчеты с поставщиками
	|ВЫБРАТЬ 
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком),
	|	КлючиАналитикиУчетаПоПартнерам.Организация,
	|	КлючиАналитикиУчетаПоПартнерам.Партнер,
	|	КлючиАналитикиУчетаПоПартнерам.Контрагент,
	|	КлючиАналитикиУчетаПоПартнерам.Договор,
	|	КлючиАналитикиУчетаПоПартнерам.НаправлениеДеятельности,
	|	РасчетыСПоставщиками.Валюта
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками КАК РасчетыСПоставщиками
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК КлючиАналитикиУчетаПоПартнерам
	|		ПО РасчетыСПоставщиками.АналитикаУчетаПоПартнерам = КлючиАналитикиУчетаПоПартнерам.Ссылка
	|			И (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ОбрабатываемыеДанные)
	|			ИЛИ (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ПустыеЗначенияКонтрагент)
	|					И КлючиАналитикиУчетаПоПартнерам.Партнер В (&ОбрабатываемыеДанные))
	|			ИЛИ (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ПустыеЗначенияКонтрагент)
	|					И КлючиАналитикиУчетаПоПартнерам.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|					И КлючиАналитикиУчетаПоПартнерам.Организация В (&ОбрабатываемыеДанные)))
	|ГДЕ
	|	РасчетыСПоставщиками.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|	И РасчетыСПоставщиками.УдалитьЗаказПоставщику В (&ПустыеЗначенияОбъектРасчетов)
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ 
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком),
	|	КлючиАналитикиУчетаПоПартнерам.Организация,
	|	КлючиАналитикиУчетаПоПартнерам.Партнер,
	|	КлючиАналитикиУчетаПоПартнерам.Контрагент,
	|	КлючиАналитикиУчетаПоПартнерам.Договор,
	|	КлючиАналитикиУчетаПоПартнерам.НаправлениеДеятельности,
	|	РасчетыСПоставщикамиПланОплат.Валюта
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПланОплат КАК РасчетыСПоставщикамиПланОплат
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК КлючиАналитикиУчетаПоПартнерам
	|		ПО РасчетыСПоставщикамиПланОплат.АналитикаУчетаПоПартнерам = КлючиАналитикиУчетаПоПартнерам.Ссылка
	|			И (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ОбрабатываемыеДанные)
	|			ИЛИ (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ПустыеЗначенияКонтрагент)
	|					И КлючиАналитикиУчетаПоПартнерам.Партнер В (&ОбрабатываемыеДанные))
	|			ИЛИ (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ПустыеЗначенияКонтрагент)
	|					И КлючиАналитикиУчетаПоПартнерам.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|					И КлючиАналитикиУчетаПоПартнерам.Организация В (&ОбрабатываемыеДанные)))
	|ГДЕ
	|	РасчетыСПоставщикамиПланОплат.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|	И РасчетыСПоставщикамиПланОплат.УдалитьОбъектРасчетов В (&ПустыеЗначенияОбъектРасчетов)
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ 
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком),
	|	КлючиАналитикиУчетаПоПартнерам.Организация,
	|	КлючиАналитикиУчетаПоПартнерам.Партнер,
	|	КлючиАналитикиУчетаПоПартнерам.Контрагент,
	|	КлючиАналитикиУчетаПоПартнерам.Договор,
	|	КлючиАналитикиУчетаПоПартнерам.НаправлениеДеятельности,
	|	РасчетыСПоставщикамиПланПоставок.Валюта
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПланПоставок КАК РасчетыСПоставщикамиПланПоставок
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК КлючиАналитикиУчетаПоПартнерам
	|		ПО РасчетыСПоставщикамиПланПоставок.АналитикаУчетаПоПартнерам = КлючиАналитикиУчетаПоПартнерам.Ссылка
	|			И (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ОбрабатываемыеДанные)
	|			ИЛИ (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ПустыеЗначенияКонтрагент)
	|					И КлючиАналитикиУчетаПоПартнерам.Партнер В (&ОбрабатываемыеДанные))
	|			ИЛИ (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ПустыеЗначенияКонтрагент)
	|					И КлючиАналитикиУчетаПоПартнерам.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|					И КлючиАналитикиУчетаПоПартнерам.Организация В (&ОбрабатываемыеДанные)))
	|ГДЕ
	|	РасчетыСПоставщикамиПланПоставок.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|	И РасчетыСПоставщикамиПланПоставок.УдалитьОбъектРасчетов В (&ПустыеЗначенияОбъектРасчетов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ 
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком),
	|	КлючиАналитикиУчетаПоПартнерам.Организация,
	|	КлючиАналитикиУчетаПоПартнерам.Партнер,
	|	КлючиАналитикиУчетаПоПартнерам.Контрагент,
	|	КлючиАналитикиУчетаПоПартнерам.Договор,
	|	КлючиАналитикиУчетаПоПартнерам.НаправлениеДеятельности,
	|	РасчетыСПоставщикамиПоДокументам.Валюта
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК РасчетыСПоставщикамиПоДокументам
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК КлючиАналитикиУчетаПоПартнерам
	|		ПО РасчетыСПоставщикамиПоДокументам.АналитикаУчетаПоПартнерам = КлючиАналитикиУчетаПоПартнерам.Ссылка
	|			И (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ОбрабатываемыеДанные)
	|			ИЛИ (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ПустыеЗначенияКонтрагент)
	|					И КлючиАналитикиУчетаПоПартнерам.Партнер В (&ОбрабатываемыеДанные))
	|			ИЛИ (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ПустыеЗначенияКонтрагент)
	|					И КлючиАналитикиУчетаПоПартнерам.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|					И КлючиАналитикиУчетаПоПартнерам.Организация В (&ОбрабатываемыеДанные)))
	|ГДЕ
	|	РасчетыСПоставщикамиПоДокументам.ЗаказПоставщику = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|	И РасчетыСПоставщикамиПоДокументам.УдалитьЗаказПоставщику В (&ПустыеЗначенияОбъектРасчетов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ 
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком),
	|	КлючиАналитикиУчетаПоПартнерам.Организация,
	|	КлючиАналитикиУчетаПоПартнерам.Партнер,
	|	КлючиАналитикиУчетаПоПартнерам.Контрагент,
	|	КлючиАналитикиУчетаПоПартнерам.Договор,
	|	КлючиАналитикиУчетаПоПартнерам.НаправлениеДеятельности,
	|	РасчетыСПоставщикамиПоСрокам.Валюта
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК РасчетыСПоставщикамиПоСрокам
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК КлючиАналитикиУчетаПоПартнерам
	|		ПО РасчетыСПоставщикамиПоСрокам.АналитикаУчетаПоПартнерам = КлючиАналитикиУчетаПоПартнерам.Ссылка
	|			И (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ОбрабатываемыеДанные)
	|			ИЛИ (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ПустыеЗначенияКонтрагент)
	|					И КлючиАналитикиУчетаПоПартнерам.Партнер В (&ОбрабатываемыеДанные))
	|			ИЛИ (КлючиАналитикиУчетаПоПартнерам.Контрагент В (&ПустыеЗначенияКонтрагент)
	|					И КлючиАналитикиУчетаПоПартнерам.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|					И КлючиАналитикиУчетаПоПартнерам.Организация В (&ОбрабатываемыеДанные)))
	|ГДЕ
	|	РасчетыСПоставщикамиПоСрокам.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|	И РасчетыСПоставщикамиПоСрокам.УдалитьОбъектРасчетов В (&ПустыеЗначенияОбъектРасчетов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ 
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом),
	|	ДвиженияДенежныеСредстваКонтрагент.Организация,
	|	ДвиженияДенежныеСредстваКонтрагент.Партнер,
	|	ДвиженияДенежныеСредстваКонтрагент.Контрагент,
	|	ДвиженияДенежныеСредстваКонтрагент.Договор,
	|	ДвиженияДенежныеСредстваКонтрагент.НаправлениеДеятельностиКонтрагента,
	|	ДвиженияДенежныеСредстваКонтрагент.ВалютаВзаиморасчетов
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДвиженияДенежныеСредстваКонтрагент
	|ГДЕ
	|	ДвиженияДенежныеСредстваКонтрагент.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|	И ДвиженияДенежныеСредстваКонтрагент.УдалитьОбъектРасчетов В (&ПустыеЗначенияОбъектРасчетов)
	|	И (ДвиженияДенежныеСредстваКонтрагент.Контрагент В (&ОбрабатываемыеДанные)
	|		ИЛИ (ДвиженияДенежныеСредстваКонтрагент.Контрагент В (&ПустыеЗначенияКонтрагент)
	|			И ДвиженияДенежныеСредстваКонтрагент.Партнер В (&ОбрабатываемыеДанные))
	|		ИЛИ (ДвиженияДенежныеСредстваКонтрагент.Контрагент В (&ПустыеЗначенияКонтрагент)
	|			И ДвиженияДенежныеСредстваКонтрагент.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|			И ДвиженияДенежныеСредстваКонтрагент.Организация В (&ОбрабатываемыеДанные)))
	|			
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом),
	|	ДвиженияКонтрагентДоходыРасходы.Организация,
	|	ДвиженияКонтрагентДоходыРасходы.Партнер,
	|	ДвиженияКонтрагентДоходыРасходы.Контрагент,
	|	ДвиженияКонтрагентДоходыРасходы.Договор,
	|	ДвиженияКонтрагентДоходыРасходы.НаправлениеДеятельностиКонтрагента,
	|	ДвиженияКонтрагентДоходыРасходы.ВалютаВзаиморасчетов
	|ИЗ
	|	РегистрНакопления.ДвиженияКонтрагентДоходыРасходы КАК ДвиженияКонтрагентДоходыРасходы
	|ГДЕ
	|	ДвиженияКонтрагентДоходыРасходы.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|	И ДвиженияКонтрагентДоходыРасходы.УдалитьОбъектРасчетов В (&ПустыеЗначенияОбъектРасчетов)
	|	И (ДвиженияКонтрагентДоходыРасходы.Контрагент В (&ОбрабатываемыеДанные)
	|		ИЛИ (ДвиженияКонтрагентДоходыРасходы.Контрагент В (&ПустыеЗначенияКонтрагент)
	|			И ДвиженияКонтрагентДоходыРасходы.Партнер В (&ОбрабатываемыеДанные))	
	|		ИЛИ (ДвиженияКонтрагентДоходыРасходы.Контрагент В (&ПустыеЗначенияКонтрагент)
	|			И ДвиженияКонтрагентДоходыРасходы.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|			И ДвиженияКонтрагентДоходыРасходы.Организация В (&ОбрабатываемыеДанные)))
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом),
	|	ДвиженияКонтрагентКонтрагент.Организация,
	|	ДвиженияКонтрагентКонтрагент.Партнер,
	|	ДвиженияКонтрагентКонтрагент.Контрагент,
	|	ДвиженияКонтрагентКонтрагент.Договор,
	|	ДвиженияКонтрагентКонтрагент.НаправлениеДеятельности,
	|	ДвиженияКонтрагентКонтрагент.ВалютаВзаиморасчетов
	|ИЗ
	|	РегистрНакопления.ДвиженияКонтрагентКонтрагент КАК ДвиженияКонтрагентКонтрагент
	|ГДЕ
	|	ДвиженияКонтрагентКонтрагент.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|	И ДвиженияКонтрагентКонтрагент.УдалитьОбъектРасчетов В (&ПустыеЗначенияОбъектРасчетов)
	|	И (ДвиженияКонтрагентКонтрагент.Контрагент В (&ОбрабатываемыеДанные)
	|		ИЛИ (ДвиженияКонтрагентКонтрагент.Контрагент В (&ПустыеЗначенияКонтрагент)
	|			И ДвиженияКонтрагентКонтрагент.Партнер В (&ОбрабатываемыеДанные))
	|		ИЛИ (ДвиженияКонтрагентКонтрагент.Контрагент В (&ПустыеЗначенияКонтрагент)
	|			И ДвиженияКонтрагентКонтрагент.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|			И ДвиженияКонтрагентКонтрагент.Организация В (&ОбрабатываемыеДанные)))
	|";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
	ИсточникиПустыхОбъектовРасчетов = Новый Массив();
	ИсточникиПустыхОбъектовРасчетов.Добавить("ПоступлениеБезналичныхДенежныхСредств");
	ИсточникиПустыхОбъектовРасчетов.Добавить("СписаниеБезналичныхДенежныхСредств");
	ИсточникиПустыхОбъектовРасчетов.Добавить("ПриходныйКассовыйОрдер");
	ИсточникиПустыхОбъектовРасчетов.Добавить("РасходныйКассовыйОрдер");
	ИсточникиПустыхОбъектовРасчетов.Добавить("ОперацияПоПлатежнойКарте");
	ИсточникиПустыхОбъектовРасчетов.Добавить("КорректировкаЗадолженности");
	ИсточникиПустыхОбъектовРасчетов.Добавить("ВзаимозачетЗадолженности");
	ИсточникиПустыхОбъектовРасчетов.Добавить("СверкаВзаиморасчетов");
	ИсточникиПустыхОбъектовРасчетов.Добавить("АвансовыйОтчет");
	
	Для Каждого Документ Из ИсточникиПустыхОбъектовРасчетов Цикл
		ТекстыЗапросов.Добавить(Документы[Документ].ТекстЗапросаПолучениеДанныхДляГенерацииПустогоОбъектаРасчетов());
	КонецЦикла;
	
	ТекстЗапросаПодвал = "
	|;
	|ВЫБРАТЬ
	|	ДанныеДляГенерацииПредварительная.ТипРасчетов КАК ТипРасчетов,
	|	ДанныеДляГенерацииПредварительная.Организация КАК Организация,
	|	ДанныеДляГенерацииПредварительная.Партнер КАК Партнер,
	|	ДанныеДляГенерацииПредварительная.Контрагент КАК Контрагент,
	|	ДанныеДляГенерацииПредварительная.Договор КАК Договор,
	|	ДанныеДляГенерацииПредварительная.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДляГенерацииПредварительная.Валюта КАК Валюта
	|ПОМЕСТИТЬ
	|	ДанныеДляГенерации
	|ИЗ
	|	ДанныеДляГенерацииПредварительная КАК ДанныеДляГенерацииПредварительная
	|ГДЕ
	|	НЕ (ИСТИНА В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
	|			ГДЕ
	|				ДанныеДляГенерацииПредварительная.Организация = ОбъектыРасчетов.Организация
	|				И ДанныеДляГенерацииПредварительная.Партнер = ОбъектыРасчетов.Партнер
	|				И ДанныеДляГенерацииПредварительная.Контрагент = ОбъектыРасчетов.Контрагент
	|				И ДанныеДляГенерацииПредварительная.Договор = ОбъектыРасчетов.Договор
	|				И ДанныеДляГенерацииПредварительная.НаправлениеДеятельности = ОбъектыРасчетов.НаправлениеДеятельности
	|				И ДанныеДляГенерацииПредварительная.ТипРасчетов = ОбъектыРасчетов.ТипРасчетов
	|				И ДанныеДляГенерацииПредварительная.Валюта = ОбъектыРасчетов.ВалютаВзаиморасчетов
	|				И ОбъектыРасчетов.Объект = НЕОПРЕДЕЛЕНО))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбрабатываемыеДанные.Ссылка КАК КонтрагентПартнер,
	|	ВЫБОР
	|		КОГДА ДанныеДляГенерации.Контрагент ЕСТЬ NULL ТОГДА
	|			ЛОЖЬ
	|		ИНАЧЕ
	|			ИСТИНА
	|	КОНЕЦ КАК ТребуетсяОбработать,
	|	ДанныеДляГенерации.ТипРасчетов КАК ТипРасчетов,
	|	ДанныеДляГенерации.Организация КАК Организация,
	|	ДанныеДляГенерации.Партнер КАК Партнер,
	|	ДанныеДляГенерации.Контрагент КАК Контрагент,
	|	ДанныеДляГенерации.Договор КАК Договор,
	|	ДанныеДляГенерации.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДляГенерации.Валюта КАК ВалютаВзаиморасчетов
	|
	|ИЗ
	|	ОбрабатываемыеДанные КАК ОбрабатываемыеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеДляГенерации КАК ДанныеДляГенерации
	|		ПО (ОбрабатываемыеДанные.Ссылка = ДанныеДляГенерации.Контрагент
	|				ИЛИ (ОбрабатываемыеДанные.Ссылка = ДанныеДляГенерации.Партнер
	|						И ДанныеДляГенерации.Контрагент В (&ПустыеЗначенияКонтрагент))
	|				ИЛИ (ОбрабатываемыеДанные.Ссылка = ДанныеДляГенерации.Организация
	|						И ДанныеДляГенерации.Контрагент В (&ПустыеЗначенияКонтрагент)
	|						И ДанныеДляГенерации.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)))
	|
	|ИТОГИ ПО
	|	КонтрагентПартнер
	|";
	
	ИтоговыйТекстЗапроса = СтрСоединить(ТекстыЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении(Истина));
	ИтоговыйТекстЗапроса = ИтоговыйТекстЗапроса + Символы.ПС + ТекстЗапросаПодвал;
	
	Возврат ИтоговыйТекстЗапроса;
	
КонецФункции

Процедура ЗарегистрироватьПредопределенныеЭлементыДляОбновления(Параметры) Экспорт
	
	ОбновлениеИнформационнойБазыУТ.ЗарегистрироватьПредопределенныеЭлементыДляОбновления(Параметры, Метаданные.Справочники.Контрагенты);
	
КонецПроцедуры

Процедура ЗаполнитьЭлементыНачальнымиДанными(Параметры) Экспорт
	
	ОбновлениеИнформационнойБазыУТ.ЗаполнитьЭлементыНачальнымиДанными(Параметры,  Метаданные.Справочники.Контрагенты, Ложь, "Наименование");
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
