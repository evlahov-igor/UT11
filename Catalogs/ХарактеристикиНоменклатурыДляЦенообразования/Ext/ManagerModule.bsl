#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Получить характеристику номенклатуры для ценообразования.
// 
// Параметры:
//  РеквизитыДляПоиска - Структура - Реквизиты для поиска
// 
// Возвращаемое значение:
//  СправочникСсылка.ХарактеристикиНоменклатурыДляЦенообразования - Получить характеристику номенклатуры для ценообразования
Функция ПолучитьХарактеристикуНоменклатурыДляЦенообразования(РеквизитыДляПоиска) Экспорт

	ТаблицаРезультата = НайтиХарактеристикиПоНаборуРеквизитов(РеквизитыДляПоиска);
	
	Если ТаблицаРезультата.количество()>0 Тогда
		Возврат ТаблицаРезультата[0].ХарактеристикаНоменклатуры;
	КонецЕсли;

	УстановитьПривилегированныйРежим(Истина);
	
	МассивДляФормированияНаименования = Новый Массив();
		
	ХарактеристикаЦенообразования = Справочники.ХарактеристикиНоменклатурыДляЦенообразования.СоздатьЭлемент();
	ХарактеристикаЦенообразования.ВидНоменклатуры = РеквизитыДляПоиска.ВидНоменклатуры;
	Для Каждого Строка Из РеквизитыДляПоиска.РеквизитыДляКлючаЦен Цикл
		Если Строка.ЭтоДопРеквизит Тогда
			НоваяСтрокаДополнительныхРеквизитов = ХарактеристикаЦенообразования.ДополнительныеРеквизитыЦенообразования.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаДополнительныхРеквизитов, Строка);
		Иначе
			ХарактеристикаЦенообразования[Строка.ИмяРеквизита] = Строка.Значение;
		КонецЕсли;
		
		МассивДляФормированияНаименования.Добавить(Строка.Значение);
	КонецЦикла;
		
	Если Не ЗначениеЗаполнено(ХарактеристикаЦенообразования.Наименование) Тогда
		ХарактеристикаЦенообразования.Наименование = СтрСоединить(МассивДляФормированияНаименования, ", ");
	КонецЕсли;
	
	ХарактеристикаЦенообразования.КоличествоРеквизитов = РеквизитыДляПоиска.РеквизитыДляКлючаЦен.Количество();
	
	ХарактеристикаЦенообразования.Записать();
	
	Возврат ХарактеристикаЦенообразования.Ссылка;
	
КонецФункции

// Синхронизировать пометку удаления.
// 
// Параметры:
//  ПараметрыСинхронизации - Структура - Параметры синхронизации
// 
// Возвращаемое значение:
//  Булево - Синхронизировать пометку удаления
Функция СинхронизироватьПометкуУдаления(ПараметрыСинхронизации) Экспорт

	ОперацияВыполнена = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХарактеристикиНоменклатуры.Ссылка
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатурыДляЦенообразования КАК
	|			ХарактеристикиНоменклатурыДляЦенообразования
	|		ПО ХарактеристикиНоменклатуры.ХарактеристикаНоменклатурыДляЦенообразования = ХарактеристикиНоменклатурыДляЦенообразования.Ссылка
	|ГДЕ
	|	ХарактеристикиНоменклатурыДляЦенообразования.Ссылка = &Ссылка
	|	И НЕ ХарактеристикиНоменклатуры.ПометкаУдаления
	|	И НЕ ХарактеристикиНоменклатуры.Ссылка = &ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХарактеристикиНоменклатурыДляЦенообразования.ПометкаУдаления КАК ПометкаУдаления
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатурыДляЦенообразования КАК ХарактеристикиНоменклатурыДляЦенообразования
	|ГДЕ
	|	ХарактеристикиНоменклатурыДляЦенообразования.Ссылка = &Ссылка
	|	И НЕ ХарактеристикиНоменклатурыДляЦенообразования.ПометкаУдаления = &ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры", ПараметрыСинхронизации.ХарактеристикаНоменклатуры);
	Запрос.УстановитьПараметр("Ссылка", ПараметрыСинхронизации.ХарактеристикаНоменклатурыДляЦенообразования);
	Запрос.УстановитьПараметр("ПометкаУдаления",  ПараметрыСинхронизации.ПометкаУдаления);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	// если пометки на удаление не отличаются
	Если Результаты[1].Выгрузить().Количество() = 0 Тогда
		Возврат ОперацияВыполнена;
	КонецЕсли;
	
	// если нет больше ссылок на характеристику ценообразования, изменяем пометку
	Если Результаты[0].Выгрузить().Количество() = 0 Тогда
		Попытка
			СпрОбъект = ПараметрыСинхронизации.ХарактеристикаНоменклатурыДляЦенообразования.ПолучитьОбъект();
			СпрОбъект.ПометкаУдаления = ПараметрыСинхронизации.ПометкаУдаления;
			СпрОбъект.Записать();
		Исключение
			ОперацияВыполнена = Ложь;
		КонецПопытки;
	КонецЕсли;
	
	Возврат ОперацияВыполнена;

КонецФункции


#КонецОбласти
	
#Область СлужебныеПроцедурыИФункции

Функция НайтиХарактеристикиПоНаборуРеквизитов(РеквизитыДляПоиска)
	
	ТаблицаНайдено = Новый ТаблицаЗначений();
	
	РеквизитыДляКлючаЦен = РеквизитыДляПоиска.РеквизитыДляКлючаЦен;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидНоменклатуры", РеквизитыДляПоиска.ВидНоменклатуры);
	
	ИмяТаблицы = "ТаблицаХарактеристик";
	
	ТекстЗапросаПоДопРеквизитам = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаХарактеристик.Ссылка КАК ХарактеристикаНоменклатуры
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатурыДляЦенообразования.ДополнительныеРеквизитыЦенообразования КАК ТаблицаХарактеристик";
	
	ТекстУсловияПоДопРеквизитам = "
	|ГДЕ
	|	ТаблицаХарактеристик.Ссылка.ВидНоменклатуры = &ВидНоменклатуры
	|	И ТаблицаХарактеристик.Ссылка.КоличествоРеквизитов = &КоличествоРеквизитов";
	
	ТекстУсловияПоДопРеквизитамВ = "
	|	И ТаблицаХарактеристик.Ссылка В ";
	
	ТекстЗапросаПоРеквизитам = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаХарактеристик.Ссылка КАК ХарактеристикаНоменклатуры
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатурыДляЦенообразования КАК ТаблицаХарактеристик";
	
	ТекстУсловияПоРеквизитам = "
	|ГДЕ
	|	ТаблицаХарактеристик.ВидНоменклатуры = &ВидНоменклатуры
	|	И ТаблицаХарактеристик.КоличествоРеквизитов = &КоличествоРеквизитов";
	
	СчетчикУсловийПоРеквизитам = 0;
	СчетчикУсловийПоДопРеквизитам = 0;
	
	// Генерируем текст условия запроса по дополнительным реквизитам, устанавливаем параметры.
	Для Каждого СтрокаУсловия Из РеквизитыДляКлючаЦен Цикл
		
		Если СтрокаУсловия.ЭтоДопРеквизит Тогда
			СтрокаСчетчикУсловийПоДопРеквизитам = Формат(СчетчикУсловийПоДопРеквизитам,"ЧГ=0");
	
			ИмяТаблицыСУсловием = ИмяТаблицы + "СУсловиемПоДопРеквизиту_" + СтрокаСчетчикУсловийПоДопРеквизитам;
			
			ТекстУсловияПоДопРеквизитам = ТекстУсловияПоДопРеквизитам +
			"
			|  И " + ИмяТаблицыСУсловием + ".Свойство = &СвойствоДоп_" + СтрокаСчетчикУсловийПоДопРеквизитам + 
			"
			|  И " + ИмяТаблицыСУсловием + ".Значение = &ЗначениеДоп_" + СтрокаСчетчикУсловийПоДопРеквизитам +
			"
			|  И " + ИмяТаблицыСУсловием + ".Ссылка.ВидНоменклатуры = &ВидНоменклатуры";
			
			Запрос.УстановитьПараметр("СвойствоДоп_" + СтрокаСчетчикУсловийПоДопРеквизитам, СтрокаУсловия.Свойство);
			Запрос.УстановитьПараметр("ЗначениеДоп_" + СтрокаСчетчикУсловийПоДопРеквизитам, СтрокаУсловия.Значение);
			
			ТекстСоединения = "
			| ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатурыДляЦенообразования.ДополнительныеРеквизитыЦенообразования КАК " + ИмяТаблицыСУсловием + "
			| ПО ТаблицаХарактеристик.Ссылка = " + ИмяТаблицыСУсловием + ".Ссылка";
			
			ТекстЗапросаПоДопРеквизитам = ТекстЗапросаПоДопРеквизитам + ТекстСоединения;
			СчетчикУсловийПоДопРеквизитам = СчетчикУсловийПоДопРеквизитам + 1;
		Иначе
			СтрокаСчетчикУсловийПоРеквизитам = Формат(СчетчикУсловийПоРеквизитам,"ЧГ=0");				
	
			ИмяТаблицыСУсловием = ИмяТаблицы + "СУсловиемПоРеквизиту_" + СтрокаСчетчикУсловийПоРеквизитам;
			
			ТекстУсловияПоРеквизитам = ТекстУсловияПоРеквизитам +
			"
			|  И " + ИмяТаблицыСУсловием + "." + СтрокаУсловия.ИмяРеквизита + " = &Значение_" + СтрокаСчетчикУсловийПоРеквизитам +
			"
			|  И " + ИмяТаблицыСУсловием + ".ВидНоменклатуры = &ВидНоменклатуры";
			
			Запрос.УстановитьПараметр("Значение_" + СтрокаСчетчикУсловийПоРеквизитам, СтрокаУсловия.Значение);
			
			ТекстСоединения = "
			| ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатурыДляЦенообразования КАК " + ИмяТаблицыСУсловием + "
			| ПО ТаблицаХарактеристик.Ссылка = " + ИмяТаблицыСУсловием + ".Ссылка";
			
			ТекстЗапросаПоРеквизитам = ТекстЗапросаПоРеквизитам + ТекстСоединения;
			СчетчикУсловийПоРеквизитам = СчетчикУсловийПоРеквизитам + 1;
		КонецЕсли;
		
	КонецЦикла;
	
	Если СчетчикУсловийПоРеквизитам = 0
		И СчетчикУсловийПоДопРеквизитам  = 0 Тогда
		Возврат ТаблицаНайдено;
	КонецЕсли;
	
	ЧастиЗапроса = Новый Массив;
	Если СчетчикУсловийПоДопРеквизитам > 0 Тогда
		ЧастиЗапроса.Добавить(ТекстЗапросаПоДопРеквизитам + ТекстУсловияПоДопРеквизитам);
	КонецЕсли;
	
	Если СчетчикУсловийПоРеквизитам > 0 Тогда
		ЧастиЗапроса.Добавить(ТекстЗапросаПоРеквизитам + ТекстУсловияПоРеквизитам);
	КонецЕсли;
	
	Если ЧастиЗапроса.Количество()>1 Тогда
		Запрос.Текст	= ЧастиЗапроса[0] + ТекстУсловияПоДопРеквизитамВ + "(" + ЧастиЗапроса[1] + ")";
	иначе
		Запрос.Текст = ЧастиЗапроса[0];
	КонецЕсли;	

	Запрос.УстановитьПараметр("КоличествоРеквизитов", (СчетчикУсловийПоРеквизитам + СчетчикУсловийПоДопРеквизитам));
	
	ТаблицаНайдено	= Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаНайдено;
КонецФункции

#Область ОбновлениеИнформационнойБазы

#КонецОбласти

#КонецОбласти

#КонецЕсли