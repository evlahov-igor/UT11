#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Получает данные МЧД.
// 
// Параметры:
//  МЧД - СправочникСсылка.МашиночитаемыеДоверенностиКонтрагентов - Ссылка на МЧД контрагента
// 
// Возвращаемое значение:
//  Структура см. МашиночитаемыеДоверенности.НовыеДанныеДоверенности
//  
Функция ПолучитьДанныеМЧД(МЧД) Экспорт
	
	РеквизитыМЧД = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(МЧД, "НомерДоверенности, ДоверительИНН");
	ДанныеМЧД = МашиночитаемыеДоверенности.НовыеДанныеДоверенности();
	ДанныеМЧД.НомерДоверенности = РеквизитыМЧД.НомерДоверенности;
	ДанныеМЧД.ИННДоверителя = РеквизитыМЧД.ДоверительИНН;
	
	Возврат ДанныеМЧД;
	
КонецФункции

// Возвращает сведения МЧД.
// 
// Параметры:
//  МЧД - СправочникСсылка.МашиночитаемыеДоверенностиКонтрагентов
// 
// Возвращаемое значение:
//  Структура см. МашиночитаемыеДоверенности.НовыеСведенияМЧД
//  
Функция СведенияМЧД(МЧД) Экспорт
	
	Реквизиты = "ДоверительИНН, ПредставительИНН, СтатусВРеестре, ДатаВыдачи, ДатаОкончания, ДатаЗагрузкиИзРеестра";
	РеквизитыМЧД = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(МЧД, Реквизиты);
	
	Результат = МашиночитаемыеДоверенности.НовыеСведенияМЧД();
	Результат.Ссылка = МЧД;
	Результат.ДатаВыдачи = РеквизитыМЧД.ДатаВыдачи;
	Результат.ДатаОкончания = РеквизитыМЧД.ДатаОкончания;
	Результат.ИННДоверителя = РеквизитыМЧД.ДоверительИНН;
	Результат.ИННПредставителя = РеквизитыМЧД.ПредставительИНН;
	Результат.Статус = РеквизитыМЧД.СтатусВРеестре;
	Результат.ДатаПолученияСведений = РеквизитыМЧД.ДатаЗагрузкиИзРеестра;
	
	Возврат Результат;
	
КонецФункции

// Ищет МЧД контрагента, а в случае неудачного поиска создает новую МЧД
// 
// Параметры:
//  ДанныеДоверенности см. МашиночитаемыеДоверенности.НовыеДанныеДоверенности
// 
// Возвращаемое значение:
//  Структура:
//  * Ссылка - СправочникСсылка.МашиночитаемыеДоверенностиКонтрагентов
//  * Ошибка - Булево
//  * ОписаниеОшибки - Строка
//  
Функция НайтиСоздатьМЧД(ДанныеДоверенности) Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("Ссылка", Справочники.МашиночитаемыеДоверенностиКонтрагентов.ПустаяСсылка());
	Результат.Вставить("Ошибка", Ложь);
	Результат.Вставить("ОписаниеОшибки", "");

	МЧД = Справочники.МашиночитаемыеДоверенностиКонтрагентов.НайтиПоРеквизиту(
		"НомерДоверенности", ДанныеДоверенности.НомерДоверенности);
	
	Если ЗначениеЗаполнено(МЧД) Тогда
		Результат.Ссылка = МЧД;
	Иначе
		
		НачатьТранзакцию();
		
		Попытка
		
			Блокировка = Новый БлокировкаДанных();
			ЭлементБлокировки = Блокировка.Добавить("Справочник.МашиночитаемыеДоверенностиКонтрагентов");
			ЭлементБлокировки.УстановитьЗначение("НомерДоверенности", ДанныеДоверенности.НомерДоверенности);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			МЧД = Справочники.МашиночитаемыеДоверенностиКонтрагентов.НайтиПоРеквизиту(
				"НомерДоверенности", ДанныеДоверенности.НомерДоверенности);
			
			Если ЗначениеЗаполнено(МЧД) Тогда
				Результат.Ссылка = МЧД;
			Иначе

				УстановитьПривилегированныйРежим(Истина);
				МЧД = Справочники.МашиночитаемыеДоверенностиКонтрагентов.СоздатьЭлемент();
				МЧД.НомерДоверенности = ДанныеДоверенности.НомерДоверенности;
				МЧД.ДоверительИНН = ДанныеДоверенности.ИННДоверителя;
				МЧД.Записать();
				Результат.Ссылка = МЧД.Ссылка;
				
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
		
		Исключение
			
			ОтменитьТранзакцию();
			Результат.Ошибка = Истина;
			Результат.ОписаниеОшибки = ОписаниеОшибки();
			
		КонецПопытки;
			
	КонецЕсли;
	
	Возврат Результат;
			
КонецФункции

// Заполняет элемент справочника МЧД сведениями.
// 
// Параметры:
//  МЧД - СправочникСсылка.МашиночитаемыеДоверенностиКонтрагентов - Ссылка на МЧД контагента
//  Сведения - См. МашиночитаемыеДоверенности.ПолучитьСведенияДоверенностиНаСервереМЧД
//
// Возвращаемое значение:  
//  Структура:
//  * Ошибка - Булево - Флаг ошибки
//  * ОписаниеОшибки - Строка - Строка с описанием ошибки
//  * СведенияМЧД - Неопределено, Структура см. МашиночитаемыеДоверенности.НовыеСведенияМЧД
//  
Функция ЗаполнитьМЧД(МЧД, Сведения) Экспорт
	
	Результат = Новый Структура("Ошибка, ОписаниеОшибки, СведенияМЧД", Ложь, "", Неопределено);
	ДанныеПодготовлены = 0;
	КлючевыеРеквизиты = "";

	Попытка
		
		ВходящиеДанные = Сведения.ПолныеДанные.ДанныеВыгрузки;
		ДанныеДоверенности =
			Справочники.МашиночитаемыеДоверенностиОрганизаций.ДанныеИзФайлаОбмена(ВходящиеДанные);

	Исключение
		
		Результат.Ошибка = Истина;
		Результат.ОписаниеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Возврат Результат;
		
	КонецПопытки;
	
	ДанныеДоверенности.Вставить("XMLизРеестра", Новый ХранилищеЗначения(ВходящиеДанные, Новый СжатиеДанных(9)));
	ДанныеДоверенности.Вставить("ДатаЗагрузкиИзРеестра", Сведения.ДатаЗагрузкиИзРеестра);
	
	Если ДанныеДоверенности.ТипОрганизации = "ЮЛ" Тогда
		КлючевыеРеквизиты = "ДоверительЮЛ_ИНН, ДоверительЮЛ_КПП";
	ИначеЕсли ДанныеДоверенности.ТипОрганизации = "ФЛ" Тогда
		КлючевыеРеквизиты = "ДоверительФЛ_ИНН, ДоверительФЛ_СНИЛС";
	Иначе
		КлючевыеРеквизиты = "ДоверительЮЛ_ИНН, ДоверительЮЛ_КПП";
	КонецЕсли;

	КлючевыеРеквизиты = КлючевыеРеквизиты + ", НомерДоверенности, ДатаВыдачи, ДатаОкончания";
	КлючевыеРеквизиты = КлючевыеРеквизиты + ", ПредставительФЛ_ИНН";
	КлючевыеРеквизиты = Новый Структура(КлючевыеРеквизиты);
	
	ТекстОшибки = "";
	Для Каждого СтрокаКлюча Из КлючевыеРеквизиты Цикл
		Если ДанныеДоверенности.Свойство(СтрокаКлюча.Ключ)
			И ЗначениеЗаполнено(ДанныеДоверенности[СтрокаКлюча.Ключ]) Тогда
			ДанныеПодготовлены = ДанныеПодготовлены + 1;
		ИначеЕсли ПустаяСтрока(ТекстОшибки) Тогда
			ТекстОшибки = НСтр("ru = 'Не заполнены реквизиты справочника'") + ":  " + СтрокаКлюча.Ключ;
		Иначе
			ТекстОшибки = ТекстОшибки + ", " + СтрокаКлюча.Ключ;
		КонецЕсли;
	КонецЦикла;

	Если КлючевыеРеквизиты.Количество() <> ДанныеПодготовлены Тогда
		
		Результат.Ошибка = Истина;
		Результат.ОписаниеОшибки = ТекстОшибки;
		Возврат Результат;

	КонецЕсли;
			
	СтатусДоверенности = Сведения.ЧастичныеДанные.СтатусДоверенности;
	РезультатЗаписи = ЗаписатьЭлементСправочника(МЧД, ДанныеДоверенности, СтатусДоверенности);
	ЗаполнитьЗначенияСвойств(Результат, РезультатЗаписи);
		
	Возврат Результат;
	
КонецФункции

// Записывает элемент справочника, заполнив переданными данными.
// 
// Параметры:
//  МЧД - СправочникСсылка.МашиночитаемыеДоверенностиКонтрагентов - МЧД
//  ДанныеДоверенности - Структура см. Справочники.МашиночитаемыеДоверенностиОрганизаций.ДанныеИзФайлаОбмена
//  СтатусДоверенности Статус доверенности
// 
// Возвращаемое значение:
//  Стркутура - Результат записи:
//	* Ошибка - Булево
//	* ОписаниеОшибки - Строка
//	* СведенияМЧД - Неопределено, Структура см. МашиночитаемыеДоверенности.НовыеСведенияМЧД
//	
Функция ЗаписатьЭлементСправочника(МЧД, ДанныеДоверенности, СтатусДоверенности)

	Результат = Новый Структура("Ошибка, ОписаниеОшибки, СведенияМЧД", Ложь, "", Неопределено);
	
	НеочищаемыеРеквизиты = Новый Массив;
	НеочищаемыеРеквизиты.Добавить("НомерДоверенности");
	НеочищаемыеРеквизиты.Добавить("ДоверительИНН");

	ОбъектСправочника = МЧД.ПолучитьОбъект();
	Для Каждого СтрокаРеквизита Из ОбъектСправочника.Метаданные().Реквизиты Цикл
		Если НеочищаемыеРеквизиты.Найти(СтрокаРеквизита.Имя) = Неопределено Тогда
			ОбъектСправочника[СтрокаРеквизита.Имя] = Неопределено;			
		КонецЕсли;
	КонецЦикла;
	
	// здесь переносим значения реквизитов
	ОбъектСправочника.СтатусВРеестре = МашиночитаемыеДоверенностиКлиентСервер.СтатусМЧД(СтатусДоверенности);
	ОбъектСправочника.XMLизРеестра = ДанныеДоверенности.XMLизРеестра;
	ОбъектСправочника.ДатаВыдачи = ДанныеДоверенности.ДатаВыдачи;
	ОбъектСправочника.ДатаОкончания = ДанныеДоверенности.ДатаОкончания;
	ОбъектСправочника.СрокДействия = ДанныеДоверенности.СрокДействия;
	ОбъектСправочника.ПредставительИНН = ДанныеДоверенности.ПредставительФЛ_ИНН;
	ОбъектСправочника.ДатаЗагрузкиИзРеестра = ДанныеДоверенности.ДатаЗагрузкиИзРеестра;
	ОбъектСправочника.ЗагруженаИзРеестра = ЗначениеЗаполнено(ОбъектСправочника.ДатаЗагрузкиИзРеестра);
	
	Если ДанныеДоверенности.Свойство("ДоверительЮЛ_ИНН") И НЕ ПустаяСтрока(ДанныеДоверенности.ДоверительЮЛ_ИНН) Тогда
		ОбъектСправочника.Доверитель = ДанныеДоверенности.ДоверительЮЛ_НаимОрг;
	ИначеЕсли ДанныеДоверенности.Свойство("ДоверительФЛ_ИНН") И НЕ ПустаяСтрока(ДанныеДоверенности.ДоверительФЛ_ИНН) Тогда
		ОбъектСправочника.Доверитель = МашиночитаемыеДоверенности.НайтиФизлицоМЧД(
			ДанныеДоверенности, Перечисления.СубъектыДоверенности.ДоверительФЛ);
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ДанныеДоверенности.ПредставительФЛ_ИНН) Тогда
		ОбъектСправочника.Представитель = МашиночитаемыеДоверенности.НайтиФизлицоМЧД(
			ДанныеДоверенности, Перечисления.СубъектыДоверенности.ПредставительФЛ);
	КонецЕсли;

	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("Справочник.МашиночитаемыеДоверенностиКонтрагентов");
	ЭлементБлокировки.УстановитьЗначение("Ссылка", ОбъектСправочника.Ссылка);

	НачатьТранзакцию();

	Попытка
		
		Блокировка.Заблокировать();
		ОбъектСправочника.Записать();
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ИмяСобытия = НСтр("ru = 'Ошибка изменения МЧД.'", ОбщегоНазначения.КодОсновногоЯзыка());
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка,,, ТекстОшибки);
		Результат.Ошибка = Истина;
		Результат.ОписаниеОшибки = ТекстОшибки;
		Возврат Результат
		
	КонецПопытки;

	СведенияМЧД = МашиночитаемыеДоверенности.НовыеСведенияМЧД();
	СведенияМЧД.Ссылка = МЧД;
	СведенияМЧД.ДатаВыдачи = ОбъектСправочника.ДатаВыдачи;
	СведенияМЧД.ДатаОкончания = ОбъектСправочника.ДатаОкончания;
	СведенияМЧД.ИННДоверителя = ОбъектСправочника.ДоверительИНН;
	СведенияМЧД.ИННПредставителя = ОбъектСправочника.ПредставительИНН;
	СведенияМЧД.Статус = ОбъектСправочника.СтатусВРеестре;
	СведенияМЧД.ДатаПолученияСведений = ОбъектСправочника.ДатаЗагрузкиИзРеестра;
	
	Результат.СведенияМЧД = СведенияМЧД;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли