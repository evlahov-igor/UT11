#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ТипНоменклатурыНабор.Видимость  = ПолучитьФункциональнуюОпцию("ИспользоватьНаборы");
	Элементы.ТипНоменклатурыМногооборотнаяТара.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьМногооборотнуюТару");
	Элементы.ТипНоменклатурыРабота.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВидовНоменклатуры")
												И Не ПолучитьФункциональнуюОпцию("БазоваяВерсия");
	
	СуффиксыИменЭлементов = Новый Массив;
	СуффиксыИменЭлементов.Добавить("Набор");
	СуффиксыИменЭлементов.Добавить("МногооборотнаяТара");
	СуффиксыИменЭлементов.Добавить("Работа");
	СуффиксыИменЭлементов.Добавить("Товар");
	СуффиксыИменЭлементов.Добавить("Услуга");
	
	Для Каждого Суффикс Из СуффиксыИменЭлементов Цикл
		
		ЭлементТипНоменклатуры = ЭлементТипНоменклатурыПоСуффиксу(Суффикс);
		ЭлементТипНоменклатуры.Подсказка = Перечисления.ТипыНоменклатуры.ПодсказкаПоТипуНоменклатуры(
										   ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры." + Суффикс));
	КонецЦикла;
	
	ТипНоменклатуры = Параметры.ТипНоменклатуры;
	
	СвязьОсобенностейУчетаИФО = Перечисления.ОсобенностиУчетаНоменклатуры.СвязьОсобенностейУчетаИФО();
	
	Для Каждого ЗначениеПеречисления Из Перечисления.ОсобенностиУчетаНоменклатуры Цикл
		
		ОсобенностьВключена = Ложь;
		ИменаФО = СвязьОсобенностейУчетаИФО.Получить(ЗначениеПеречисления);
		
		Если ИменаФО <> Неопределено Тогда
			МассивИменФО = СтрРазделить(ИменаФО, ",");
			Для Каждого СтрМас Из МассивИменФО Цикл
				Если Не ПолучитьФункциональнуюОпцию(СтрМас) Тогда
					ОсобенностьВключена = Ложь;
					Прервать;
				Иначе
					ОсобенностьВключена = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ИмяЭлементаОсобенностьУчета = ИмяЭлементаОсобенностьУчетаПоЗначениюПеречисления(ЗначениеПеречисления);
		Если ОсобенностьВключена Тогда
			Элементы[ИмяЭлементаОсобенностьУчета].Подсказка =
											Перечисления.ОсобенностиУчетаНоменклатуры.ПодсказкаПоОсобенностиУчетаНоменклатуры(ЗначениеПеречисления);
		Иначе
			Элементы[ИмяЭлементаОсобенностьУчета].Видимость = Ложь;	
		КонецЕсли;
		
	КонецЦикла;	
	
	ЕстьОсобенностьПоТоварам = Ложь;
	Для Каждого ЭлементУправления Из Элементы.ГруппаОсобенностиТовараЛокализация.ПодчиненныеЭлементы Цикл
		Если ЭлементУправления.Видимость Тогда
			ЕстьОсобенностьПоТоварам = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Элементы.ОсобенностьУчетаБезОсобенностейУчета.Видимость = ЕстьОсобенностьПоТоварам;
	Элементы.ДекорацияОсобенностиТовараОтступ.Видимость     = ЕстьОсобенностьПоТоварам;
	
	ЕстьОсобенностьПоУслугам = Ложь;
	Для Каждого ЭлементУправления Из Элементы.ГруппаОсобенностиУслугиЗначения.ПодчиненныеЭлементы Цикл
		Если ЭлементУправления.Видимость Тогда
			ЕстьОсобенностьПоУслугам = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Элементы.ДекорацияОсобенностиУслугиОтступ.Видимость = ЕстьОсобенностьПоУслугам;
	
	Если ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар Тогда
		Если Не ЗначениеЗаполнено(Параметры.ОсобенностьУчета) Тогда
			ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.БезОсобенностейУчета;
		Иначе
			ОсобенностьУчета = Параметры.ОсобенностьУчета;
		КонецЕсли;
	ИначеЕсли ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда
		Если Не ЗначениеЗаполнено(Параметры.ОсобенностьУчета) Тогда
			ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.ОрганизациейПродавцом;
		Иначе
			ОсобенностьУчета = Параметры.ОсобенностьУчета;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Результат = Новый Структура("ТипНоменклатуры, ОсобенностьУчета");
	
	Результат.ТипНоменклатуры = ТипНоменклатуры;
	
	Если ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Товар") Тогда
		Если ОсобенностьУчета = ПредопределенноеЗначение("Перечисление.ОсобенностиУчетаНоменклатуры.БезОсобенностейУчета") Тогда
			Результат.ОсобенностьУчета = ПредопределенноеЗначение("Перечисление.ОсобенностиУчетаНоменклатуры.ПустаяСсылка");
		Иначе
			Результат.ОсобенностьУчета = ОсобенностьУчета;
		КонецЕсли;
	ИначеЕсли ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга") Тогда
		Результат.ОсобенностьУчета = ОсобенностьУчета;
	Иначе
		Результат.ОсобенностьУчета = ПредопределенноеЗначение("Перечисление.ОсобенностиУчетаНоменклатуры.ПустаяСсылка");
	КонецЕсли;
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТипНоменклатурыПриИзменении(Элемент)
	
	Если ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Товар") Тогда
		ОсобенностьУчета = ПредопределенноеЗначение("Перечисление.ОсобенностиУчетаНоменклатуры.БезОсобенностейУчета");
	ИначеЕсли ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга") Тогда
		ОсобенностьУчета = ПредопределенноеЗначение("Перечисление.ОсобенностиУчетаНоменклатуры.ОрганизациейПродавцом");
	Иначе
		ОсобенностьУчета = ПредопределенноеЗначение("Перечисление.ОсобенностиУчетаНоменклатуры.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОсобенностьУчетаТовараПриИзменении(Элемент)
	
	ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Товар");
	
КонецПроцедуры

&НаКлиенте
Процедура ОсобенностьУчетаУслугиПриИзменении(Элемент)
	
	ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ИмяЭлементаОсобенностьУчетаПоЗначениюПеречисления(ЗначениеПеречисления)
	
	Если ЗначениеПеречисления = Перечисления.ОсобенностиУчетаНоменклатуры.БезОсобенностейУчета Тогда
		Возврат "ОсобенностьУчетаБезОсобенностейУчета";
	ИначеЕсли ЗначениеПеречисления = Перечисления.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукция Тогда
		Возврат "ОсобенностьУчетаАлкогольнаяПродукция";
	ИначеЕсли ЗначениеПеречисления = Перечисления.ОсобенностиУчетаНоменклатуры.СодержитДрагоценныеМатериалы Тогда
		Возврат "ОсобенностьУчетаСодержитДрагоценныеМатериалы";
	ИначеЕсли ЗначениеПеречисления = Перечисления.ОсобенностиУчетаНоменклатуры.ПродукцияМаркируемаяДляГИСМ Тогда
		Возврат "ОсобенностьУчетаПродукцияМаркируемаяДляГИСМ";
	ИначеЕсли ЗначениеПеречисления = Перечисления.ОсобенностиУчетаНоменклатуры.КиЗГИСМ Тогда
		Возврат "ОсобенностьУчетаКиЗГИСМ";
	ИначеЕсли ЗначениеПеречисления = Перечисления.ОсобенностиУчетаНоменклатуры.ПодконтрольнаяПродукцияВЕТИС Тогда
		Возврат "ОсобенностьУчетаПодконтрольнаяПродукцияВЕТИС";
	ИначеЕсли ЗначениеПеречисления = Перечисления.ОсобенностиУчетаНоменклатуры.ОрганизациейПродавцом Тогда
		Возврат "ОсобенностьУчетаОрганизациейПродавцом";
	ИначеЕсли ЗначениеПеречисления = Перечисления.ОсобенностиУчетаНоменклатуры.ОрганизациейПоАгентскойСхеме Тогда
		Возврат "ОсобенностьУчетаОрганизациейПоАгентскойСхеме";
	ИначеЕсли ЗначениеПеречисления = Перечисления.ОсобенностиУчетаНоменклатуры.Партнером Тогда
		Возврат "ОсобенностьУчетаПартнером";
	ИначеЕсли ЗначениеПеречисления = Перечисления.ОсобенностиУчетаНоменклатуры.ТабачнаяПродукция Тогда
		Возврат "ОсобенностьУчетаТабачнаяПродукция";
	ИначеЕсли ЗначениеПеречисления = Перечисления.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция Тогда
		Возврат "ОсобенностьУчетаОбувнаяПродукция";
	ИначеЕсли ЗначениеПеречисления = Перечисления.ОсобенностиУчетаНоменклатуры.ЛегкаяПромышленность Тогда
		Возврат "ОсобенностьУчетаЛегкаяПромышленность";
	ИначеЕсли ЗначениеПеречисления = Перечисления.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС Тогда
		Возврат "ОсобенностьУчетаМолочнаяПродукцияПодконтрольнаяВЕТИС";
	ИначеЕсли ЗначениеПеречисления = Перечисления.ОсобенностиУчетаНоменклатуры.Шины Тогда
		Возврат "ОсобенностьУчетаШины";
	ИначеЕсли ЗначениеПеречисления = Перечисления.ОсобенностиУчетаНоменклатуры.Фотоаппараты Тогда
		Возврат "ОсобенностьУчетаФотоаппараты";
	ИначеЕсли ЗначениеПеречисления = Перечисления.ОсобенностиУчетаНоменклатуры.Духи Тогда
		Возврат "ОсобенностьУчетаДухи";
	ИначеЕсли ЗначениеПеречисления = Перечисления.ОсобенностиУчетаНоменклатуры.Велосипеды Тогда
		Возврат "ОсобенностьУчетаВелосипеды";
	ИначеЕсли ЗначениеПеречисления = Перечисления.ОсобенностиУчетаНоменклатуры.КреслаКоляски Тогда
		Возврат "ОсобенностьУчетаКреслаКоляски";
	ИначеЕсли ЗначениеПеречисления = Перечисления.ОсобенностиУчетаНоменклатуры.АльтернативныйТабак Тогда
		Возврат "ОсобенностьУчетаАльтернативныйТабак";
	ИначеЕсли ЗначениеПеречисления = Перечисления.ОсобенностиУчетаНоменклатуры.УпакованнаяВода Тогда
		Возврат "ОсобенностьУчетаУпакованнаяВода";
	ИначеЕсли ЗначениеПеречисления = Перечисления.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияБезВЕТИС Тогда
		Возврат "ОсобенностьУчетаМолочнаяПродукцияБезВЕТИС";
	ИначеЕсли ЗначениеПеречисления = Перечисления.ОсобенностиУчетаНоменклатуры.Антисептики Тогда
		Возврат "ОсобенностьУчетаАнтисептики";
	ИначеЕсли ЗначениеПеречисления = Перечисления.ОсобенностиУчетаНоменклатуры.БАДы Тогда
		Возврат "ОсобенностьУчетаБАДы";
	ИначеЕсли ЗначениеПеречисления = Перечисления.ОсобенностиУчетаНоменклатуры.НикотиносодержащаяПродукция Тогда
		Возврат "ОсобенностьУчетаНикотиносодержащаяПродукция";
	ИначеЕсли ЗначениеПеречисления = Перечисления.ОсобенностиУчетаНоменклатуры.Пиво Тогда
		Возврат "ОсобенностьУчетаПиво";
	Иначе
		ВызватьИсключение СтрШаблон(НСтр("ru = 'Не определены элемент формы для %1'"), ЗначениеПеречисления);
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ЭлементТипНоменклатурыПоСуффиксу(Суффикс)
	
	Если Суффикс = "Набор" Тогда
		Возврат Элементы.ТипНоменклатурыНабор;
	ИначеЕсли Суффикс = "МногооборотнаяТара" Тогда
		Возврат Элементы.ТипНоменклатурыМногооборотнаяТара;	
	ИначеЕсли Суффикс = "Работа" Тогда
		Возврат Элементы.ТипНоменклатурыРабота;
	ИначеЕсли Суффикс = "Товар" Тогда
		Возврат Элементы.ТипНоменклатурыТовар;
	ИначеЕсли Суффикс = "Услуга" Тогда
		Возврат Элементы.ТипНоменклатурыУслуга;
	Иначе
		ВызватьИсключение СтрШаблон(НСтр("ru = 'Не определены элемент формы для типа номенклатуры %1'"), Суффикс);
	КонецЕсли;
	
КонецФункции

#КонецОбласти


