
#Область СобытияФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьЗначенияПоУмолчаниюПоНастройкеОбмена();
	
КонецПроцедуры

#КонецОбласти

#Область СобытияЭлементовФормы

&НаСервере
Процедура ЗаполнитьЗначенияПоУмолчаниюПоНастройкеОбмена()
	
	СтруктураЗначенийПоУмолчанию = Новый Структура;
	СтруктураЗначенийПоУмолчанию.Вставить("ПротоколПередачи"		, 0);
	СтруктураЗначенийПоУмолчанию.Вставить("ТипСервиса"				, 0);
	СтруктураЗначенийПоУмолчанию.Вставить("АдресСервера"			, "");
	СтруктураЗначенийПоУмолчанию.Вставить("ПортApache"				, "");
	СтруктураЗначенийПоУмолчанию.Вставить("ИмяПубликации"			, "");
	СтруктураЗначенийПоУмолчанию.Вставить("ИмяПользователя"			, "tsduser");
	СтруктураЗначенийПоУмолчанию.Вставить("ПарольПользователя"		, "123");
	СтруктураЗначенийПоУмолчанию.Вставить("ОчищатьСправочникиНаТСД"	, 0);
	
	Для каждого СтрокаНастройки Из СтруктураЗначенийПоУмолчанию Цикл
		
		ИмяРеквизита = СтрокаНастройки.Ключ;
		
		Если Не ЗначениеЗаполнено(ЭтаФорма[ИмяРеквизита]) Тогда
			Если ИмяРеквизита = "АдресСервера" Тогда
				Попытка ЭтаФорма[ИмяРеквизита] = УзнатьIP() Исключение ЭтаФорма[ИмяРеквизита] = "" КонецПопытки; 	
			Иначе 	
				ЭтаФорма[ИмяРеквизита] = СтрокаНастройки.Значение;
			КонецЕсли;	
		КонецЕсли;
		
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьQRкод(Команда)
	
	Протокол 			= ?(ПротоколПередачи = 1, "https", "http");
	Сервис              = ?(ТипСервиса = 1, "ws", "hs");
	Порт        		= Формат(ПортApache, "ЧГ=0");
	ПортДляQR   		= ?(ПустаяСтрока(Порт), Порт, ":" + Порт);
	ИмяБазы     		= ?(ПустаяСтрока(ИмяПубликации), ИмяПубликации + "/" + Сервис + "/DataMobileExch", "/" + ИмяПубликации + "/" + Сервис + "/DataMobileExch");
	ОчищатьСправочники 	= ?(ОчищатьСправочникиНаТСД, 1, 0);
	АдресСервераДляQR 	= СтрЗаменить(СокрЛП(АдресСервера), "https://", "");
	АдресСервераДляQR 	= СтрЗаменить(АдресСервераДляQR, "http://", "");
	
	QRТекст 	= "ConnectSettings;" + Протокол + "://" + АдресСервераДляQR + ПортДляQR + ИмяБазы + ";" + СокрЛП(ИмяПользователя) + ";" + ПарольПользователя + ";" + ОчищатьСправочники;	
	
	СтруктураПроверяемыхРеквизитов = Новый Структура;
	СтруктураПроверяемыхРеквизитов.Вставить("Протокол"		, 	Протокол);
	СтруктураПроверяемыхРеквизитов.Вставить("Адрес"			, 	АдресСервераДляQR);
	СтруктураПроверяемыхРеквизитов.Вставить("Пользователь"	, 	ИмяПользователя);
	СтруктураПроверяемыхРеквизитов.Вставить("Пароль"		, 	ПарольПользователя);
	
	МассивНеЗаполненных = Новый Массив;
	
	Для каждого СтрокаМассива Из СтруктураПроверяемыхРеквизитов Цикл
		Если Не ЗначениеЗаполнено(СтрокаМассива.Значение) Тогда
			МассивНеЗаполненных.Добавить(СтрокаМассива.Ключ);	
		КонецЕсли; 	
	КонецЦикла; 
	
	Если МассивНеЗаполненных.Количество() <> 0 Тогда
		Для каждого СтрокаНеЗаполненных Из МассивНеЗаполненных Цикл
			Сообщить("Параметр " + СтрокаНеЗаполненных + " не заполнен!" + Символы.ПС);	
		КонецЦикла;
		ВывестиQRКод("");
		Возврат;
	КонецЕсли;
	
	#Если ВебКлиент Тогда
	#Иначе
		ПроверитьДоступностьПубликации(АдресСервераДляQR + ":" + Порт + ИмяБазы);
	#КонецЕсли
	
	ВывестиQRКод(QRТекст);	 
	
КонецПроцедуры

&НаСервере 
Функция ВывестиQRКод(ДанныеПечати)
	
	QRСтрока = ДанныеПечати;
	
	Модуль_ОбщегоНазначенияКлиентСервер = ДатаМобайл_ОбщийМодуль.ОбщийМодуль("ОбщегоНазначенияКлиентСервер");
	
	Если Не ПустаяСтрока(QRСтрока) Тогда
		
		Модуль_ГенерацияШтрихкодаВызовСервера = ДатаМобайл_ОбщийМодуль.ОбщийМодуль("ГенерацияШтрихкодаВызовСервера");
		Модуль_ГенерацияШтрихкода = ДатаМобайл_ОбщийМодуль.ОбщийМодуль("ГенерацияШтрихкода");	
		Модуль_УправлениеПечатью = ДатаМобайл_ОбщийМодуль.ОбщийМодуль("УправлениеПечатью");
		
		Попытка
			
			Попытка 
				ДанныеQRКода = Модуль_ГенерацияШтрихкода.ДанныеQRКода(QRСтрока, 0, 190);	
			Исключение
				Попытка
					ДанныеQRКода = Модуль_ГенерацияШтрихкодаВызовСервера.ДанныеQRКода(QRСтрока, 0, 190);
				Исключение
					ДанныеQRКода = Модуль_УправлениеПечатью.ДанныеQRКода(QRСтрока, 0, 190);
				КонецПопытки;			
			КонецПопытки;
			
			Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
				КартинкаQRКода = Новый Картинка(ДанныеQRКода);
				Адрес = ПоместитьВоВременноеХранилище(КартинкаQRКода);
				ШтрихкодQR = Адрес;	
			Иначе
				ТекстСообщения = "Не удалось сформировать QR-код.";
				Модуль_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
			
		Исключение
			ТекстСообщения = "Не удалось сформировать QR-код.
			|По причине:" + ОписаниеОшибки();
			Модуль_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецПопытки;
		
	Иначе
		ТекстСообщения = "Не удалось сформировать QR-код.
		|Не указаны все данные для подключения.";
		Модуль_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	КонецЕсли;
	
	Возврат КартинкаQRКода;
	
КонецФункции

&НаСервере
Функция УзнатьIP()
	
	strComputer = ".";
	objWMIService = ПолучитьCOMОбъект("winmgmts:\\" + strComputer + "\root\CIMV2");
	colItems = objWMIService.ExecQuery("Select * from Win32_NetworkAdapterConfiguration Where IPEnabled=TRUE",,48);
	
	Для каждого objItem Из colItems Цикл
		Для каждого Стр Из objItem.IPAddress Цикл
			Возврат(Стр);
		КонецЦикла;
	КонецЦикла;	
	
КонецФункции

&НаКлиенте
Процедура ПроверитьДоступностьПубликации(Адрес) 
	
	ОчиститьСообщения();
	
	ЗащищенноеСоединение = Неопределено;
	
	Если ПротоколПередачи = 1 Тогда
		ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL;	
	КонецЕсли;
	
	Соединение = Новый HTTPСоединение(Адрес, , ИмяПользователя, ПарольПользователя, , 5, ЗащищенноеСоединение);
	HTTPЗапрос = Новый HTTPЗапрос("/");
	
	Ошибка = "Не удалось проверить доступность публикации из текущей сети.";
	
	Попытка
		Ответ = Соединение.Получить(HTTPЗапрос);	
	Исключение
		Протокол = ?(ПротоколПередачи, "https://", "http://");
		Порт = Формат(ПортApache, "ЧГ=0");
		Если Не ЗначениеЗаполнено(Порт) Тогда
			Адрес = СтрЗаменить(Адрес,":","");
		КонецЕсли;    
		ОписаниеОшибки = ОписаниеОшибки();
		Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
			Ошибка = Ошибка + Символы.ПС + "Строка подключения: " + Протокол + Адрес + Символы.ПС + "По причине: " + Символы.ПС + ОписаниеОшибки;
		Иначе
			Ошибка = Ошибка + Символы.ПС + "Строка подключения: " + Протокол + Адрес;
		КонецЕсли;	
		Сообщить(Ошибка, СтатусСообщения.ОченьВажное);
		Возврат;
	КонецПопытки;
	
	Если Ответ.КодСостояния <> 200 тогда
		Протокол = ?(ПротоколПередачи, "https://", "http://");
		Порт = Формат(ПортApache, "ЧГ=0");
		Если Не ЗначениеЗаполнено(Порт) Тогда
			Адрес = СтрЗаменить(Адрес, ":", "");
		КонецЕсли;    
		ОписаниеОшибки = Ответ.ПолучитьТелоКакСтроку(); 
		Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
			Ошибка = Ошибка + Символы.ПС + "Строка подключения: " + Протокол + Адрес + Символы.ПС + "Код ответа сервера: " + Ответ.КодСостояния + Символы.ПС + "По причине: " + Ответ.ПолучитьТелоКакСтроку();
		Иначе
			Ошибка = Ошибка + Символы.ПС + "Строка подключения: " + Протокол + Адрес + Символы.ПС + "Код ответа сервера: " + Ответ.КодСостояния;	
		КонецЕсли;	
		Сообщить(Ошибка, СтатусСообщения.ОченьВажное);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
