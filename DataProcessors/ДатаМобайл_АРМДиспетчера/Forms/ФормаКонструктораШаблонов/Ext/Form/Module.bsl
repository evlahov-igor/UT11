
#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Создание и заполнение "обычного" объекта прикладного типа ДеревоЗначений,
	// который будет отображен на управляемой форме
	ДеревоОбъект = Новый ДеревоЗначений;
	МассивШ = Параметры.МассивШаблонов; 
	
	ДеревоОбъект.Колонки.Добавить("П", Новый ОписаниеТипов("Число"));
	ДеревоОбъект.Колонки.Добавить("Название", Новый ОписаниеТипов("Строка"));
	ВсеШаблоны = ДеревоОбъект.Строки.Добавить();
	
	ВсеШаблоны.Название = "Все шаблоны";
	// Обычные шаблоны
	ШаблоныОбычные = ВсеШаблоны.Строки.Добавить();
	ШаблоныОбычные.Название = "Обычные";
	
	ШаблоныО = ШаблоныОбычные.Строки.Добавить();
	ШаблоныО.Название = "Перемещение по ячейкам";
	Если Параметры.МассивШаблонов.Найти("Перемещение по ячейкам") <> Неопределено Тогда
		ШаблоныО.П = 1;
		ШаблоныОбычные.П = 2;
	КонецЕсли;
	
	ШаблоныО = ШаблоныОбычные.Строки.Добавить();
	ШаблоныО.Название = "Инвентаризация";
	
	Если Параметры.МассивШаблонов.Найти("Инвентаризация") <> Неопределено Тогда
		ШаблоныО.П = 1;
		ШаблоныОбычные.П = 2;
	КонецЕсли;
	
	ШаблоныО = ШаблоныОбычные.Строки.Добавить();
	ШаблоныО.Название = "Заказ клиента";
	
	Если Параметры.МассивШаблонов.Найти("Заказ клиента") <> Неопределено Тогда
		ШаблоныО.П = 1;
		ШаблоныОбычные.П = 2;
	КонецЕсли;
	
	ШаблоныО = ШаблоныОбычные.Строки.Добавить();
	ШаблоныО.Название = "Сборка товаров";
	
	Если Параметры.МассивШаблонов.Найти("Сборка товаров") <> Неопределено Тогда
		ШаблоныО.П = 1;
		ШаблоныОбычные.П = 2;
	КонецЕсли;	
	
	ШаблоныО = ШаблоныОбычные.Строки.Добавить();
	ШаблоныО.Название = "Проверка отгрузки";
	
	Если Параметры.МассивШаблонов.Найти("Проверка отгрузки") <> Неопределено Тогда
		ШаблоныО.П = 1;
		ШаблоныОбычные.П = 2;
	КонецЕсли;
	
	ШаблоныО = ШаблоныОбычные.Строки.Добавить();
	ШаблоныО.Название = "Расходный ордер";
	
	Если Параметры.МассивШаблонов.Найти("Расходный ордер") <> Неопределено Тогда
		ШаблоныО.П = 1;
		ШаблоныОбычные.П = 2;
	КонецЕсли;
	
	ШаблоныО = ШаблоныОбычные.Строки.Добавить();
	ШаблоныО.Название = "Возврат от клиента";
	
	Если Параметры.МассивШаблонов.Найти("Возврат от клиента") <> Неопределено Тогда
		ШаблоныО.П = 1;
		ШаблоныОбычные.П = 2;
	КонецЕсли;
	
	ШаблоныО = ШаблоныОбычные.Строки.Добавить();
	ШаблоныО.Название = "Поступление товаров";
	
	Если Параметры.МассивШаблонов.Найти("Поступление товаров") <> Неопределено Тогда
		ШаблоныО.П = 1;
		ШаблоныОбычные.П = 2;
	КонецЕсли;
	
	ШаблоныО = ШаблоныОбычные.Строки.Добавить();
	ШаблоныО.Название = "Приходный ордер";
	
	Если Параметры.МассивШаблонов.Найти("Приходный ордер") <> Неопределено Тогда
		ШаблоныО.П = 1;
		ШаблоныОбычные.П = 2;
	КонецЕсли;
	
	ШаблоныО = ШаблоныОбычные.Строки.Добавить();
	ШаблоныО.Название = "Быстрое перемещение";
	
	Если Параметры.МассивШаблонов.Найти("Быстрое перемещение") <> Неопределено Тогда
		ШаблоныО.П = 1;
		ШаблоныОбычные.П = 2;
	КонецЕсли;
	
	Сч = 0;
	ОбщКоличество = ШаблоныОбычные.Строки.Количество();
	Для каждого Стр Из ШаблоныОбычные.Строки Цикл
		Если Стр.П = 1 Тогда
			Сч = Сч + 1;					
		КонецЕсли;
		
		Если Сч = ОбщКоличество Тогда
			ШаблоныОбычные.П = 1;								
		КонецЕсли;
	КонецЦикла;
	
	// Шаблоны ЕГАИС
	Если ДатаМобайл_ОбщийМодуль.ЕстьЕГАИС() Тогда
		
		ШаблоныЕГАИС = ВсеШаблоны.Строки.Добавить();
		ШаблоныЕГАИС.Название = "ЕГАИС";
		
		ШаблоныЕ = ШаблоныЕГАИС.Строки.Добавить();
		ШаблоныЕ.Название = "[Е] Исходящая ТТН";
		
		Если Параметры.МассивШаблонов.Найти("[Е] Исходящая ТТН") <> Неопределено Тогда
			ШаблоныЕ.П = 1;
			ШаблоныЕГАИС.П = 2;
		КонецЕсли;
		
		ШаблоныЕ = ШаблоныЕГАИС.Строки.Добавить();
		ШаблоныЕ.Название = "[Е] Входящая ТТН";
		
		Если Параметры.МассивШаблонов.Найти("[Е] Входящая ТТН") <> Неопределено Тогда
			ШаблоныЕ.П = 1;	
			ШаблоныЕГАИС.П = 2;
		КонецЕсли;
				
		Сч = 0;
		ОбщКоличество = ШаблоныЕГАИС.Строки.Количество();
		Для каждого Стр Из ШаблоныЕГАИС.Строки Цикл
			Если Стр.П = 1 Тогда
				Сч = Сч + 1;					
			КонецЕсли;
			
			Если Сч = ОбщКоличество Тогда
				ШаблоныЕГАИС.П = 1;								
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;	
	// Шаблоны Маркировки
	Если ДатаМобайл_ОбщийМодуль.ЕстьМаркировка() Тогда
		ШаблоныМаркировки = ВсеШаблоны.Строки.Добавить();
		ШаблоныМаркировки.Название = "Маркировка";
		
		ШаблоныМ = ШаблоныМаркировки.Строки.Добавить();
		ШаблоныМ.Название = "[М] Приемка";
		Если Параметры.МассивШаблонов.Найти("[М] Приемка") <> Неопределено Тогда
			ШаблоныМ.П = 1;
			ШаблоныМаркировки.П = 2;
		КонецЕсли;
				
		ШаблоныМ = ШаблоныМаркировки.Строки.Добавить();
		ШаблоныМ.Название = "[М] В оборот";
		Если Параметры.МассивШаблонов.Найти("[М] В оборот") <> Неопределено Тогда
			ШаблоныМ.П = 1;
			ШаблоныМаркировки.П = 2;
		КонецЕсли;
				
		ШаблоныМ = ШаблоныМаркировки.Строки.Добавить();
		ШаблоныМ.Название = "[М] Упаковка";
		Если Параметры.МассивШаблонов.Найти("[М] Упаковка") <> Неопределено Тогда
			ШаблоныМ.П = 1;
			ШаблоныМаркировки.П = 2;	
		КонецЕсли;		
		
		ШаблоныМ = ШаблоныМаркировки.Строки.Добавить();
		ШаблоныМ.Название = "[М] Отгрузка";
		Если Параметры.МассивШаблонов.Найти("[М] Отгрузка") <> Неопределено Тогда
			ШаблоныМ.П = 1;	
			ШаблоныМаркировки.П = 2;
		КонецЕсли;		
		
		ШаблоныМ = ШаблоныМаркировки.Строки.Добавить();
		ШаблоныМ.Название = "[М] Чек ККМ";
		Если Параметры.МассивШаблонов.Найти("[М] Чек ККМ") <> Неопределено Тогда
			ШаблоныМ.П = 1;	
			ШаблоныМаркировки.П = 2;
		КонецЕсли;		
		
		ШаблоныМ = ШаблоныМаркировки.Строки.Добавить();
		ШаблоныМ.Название = "[М] Возврат в оборот";
		Если Параметры.МассивШаблонов.Найти("[М] Возврат в оборот") <> Неопределено Тогда
			ШаблоныМ.П = 1;	
			ШаблоныМаркировки.П = 2;
		КонецЕсли;		
		
		ШаблоныМ = ШаблоныМаркировки.Строки.Добавить();
		ШаблоныМ.Название = "[М] Вывод из оборота";
		Если Параметры.МассивШаблонов.Найти("[М] Вывод из оборота") <> Неопределено Тогда
			ШаблоныМ.П = 1;	
			ШаблоныМаркировки.П = 2;
		КонецЕсли;		
		
		ШаблоныМ = ШаблоныМаркировки.Строки.Добавить();
		ШаблоныМ.Название = "[М] Перемаркировка ИС МП";
		Если Параметры.МассивШаблонов.Найти("[М] Перемаркировка ИС МП") <> Неопределено Тогда
			ШаблоныМ.П = 1;	
			ШаблоныМаркировки.П = 2;
		КонецЕсли;
				
		Сч = 0;
		ОбщКоличество = ШаблоныМаркировки.Строки.Количество();
		Для каждого Стр Из ШаблоныМаркировки.Строки Цикл
			Если Стр.П = 1 Тогда
				Сч = Сч + 1;					
			КонецЕсли;
			
			Если Сч = ОбщКоличество Тогда
				ШаблоныМаркировки.П = 1;								
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Если ДатаМобайл_ОбщийМодуль.ЕстьМДЛП() Тогда	
		ШаблоныМДЛП = ВсеШаблоны.Строки.Добавить();
		ШаблоныМДЛП.Название = "МДЛП";
				
		ШаблоныМД = ШаблоныМДЛП.Строки.Добавить();
		ШаблоныМД.Название = "[МДЛП] Приемка (п/а)";
		
		Если Параметры.МассивШаблонов.Найти("[МДЛП] Приемка (п/а)") <> Неопределено Тогда
			ШаблоныМД.П = 1;
			ШаблоныМДЛП.П = 2;
		КонецЕсли;
				
		ШаблоныМД = ШаблоныМДЛП.Строки.Добавить();
		ШаблоныМД.Название = "[МДЛП] Приемка (о/а киз)";
		
		Если Параметры.МассивШаблонов.Найти("[МДЛП] Приемка (о/а киз)") <> Неопределено Тогда
			ШаблоныМД.П = 1;
			ШаблоныМДЛП.П = 2;
		КонецЕсли;
		
		ШаблоныМД = ШаблоныМДЛП.Строки.Добавить();
		ШаблоныМД.Название = "[МДЛП] Приемка (о/а упак)";
		
		Если Параметры.МассивШаблонов.Найти("[МДЛП] Приемка (о/а упак)") <> Неопределено Тогда
			ШаблоныМД.П = 1;
			ШаблоныМДЛП.П = 2;
		КонецЕсли;		
		
		ШаблоныМД = ШаблоныМДЛП.Строки.Добавить();
		ШаблоныМД.Название = "[МДЛП] Приход (схема 702)";
		
		Если Параметры.МассивШаблонов.Найти("[МДЛП] Приход (схема 702)") <> Неопределено Тогда
			ШаблоныМД.П = 1;
			ШаблоныМДЛП.П = 2;
		КонецЕсли;
					
		ШаблоныМД = ШаблоныМДЛП.Строки.Добавить();
		ШаблоныМД.Название = "[МДЛП] Отгрузка";
		
		Если Параметры.МассивШаблонов.Найти("[МДЛП] Отгрузка") <> Неопределено Тогда
			ШаблоныМД.П = 1;
			ШаблоныМДЛП.П = 2;
		КонецЕсли;
				
		ШаблоныМД = ШаблоныМДЛП.Строки.Добавить();
		ШаблоныМД.Название = "[МДЛП] Выбытие";
		
		Если Параметры.МассивШаблонов.Найти("[МДЛП] Выбытие") <> Неопределено Тогда
			ШаблоныМД.П = 1;
			ШаблоныМДЛП.П = 2;
		КонецЕсли;		
		
		ШаблоныМД = ШаблоныМДЛП.Строки.Добавить();
		ШаблоныМД.Название = "[МДЛП] Агрегация";
		
		Если Параметры.МассивШаблонов.Найти("[МДЛП] Агрегация") <> Неопределено Тогда
			ШаблоныМД.П = 1;
			ШаблоныМДЛП.П = 2;
		КонецЕсли;
				
		ШаблоныМД = ШаблоныМДЛП.Строки.Добавить();
		ШаблоныМД.Название = "[МДЛП] Расформирование";
		
		Если Параметры.МассивШаблонов.Найти("[МДЛП] Расформирование") <> Неопределено Тогда
			ШаблоныМД.П = 1;
			ШаблоныМДЛП.П = 2;
		КонецЕсли;
		
		ШаблоныМД = ШаблоныМДЛП.Строки.Добавить();
		ШаблоныМД.Название = "[МДЛП] Реализация";
		
		Если Параметры.МассивШаблонов.Найти("[МДЛП] Реализация") <> Неопределено Тогда
			ШаблоныМД.П = 1;
			ШаблоныМДЛП.П = 2;
		КонецЕсли;
		
		Сч = 0;
		ОбщКоличество = ШаблоныМДЛП.Строки.Количество();
		Для каждого Стр Из ШаблоныМДЛП.Строки Цикл
			Если Стр.П = 1 Тогда
				Сч = Сч + 1;					
			КонецЕсли;
			
			Если Сч = ОбщКоличество Тогда
				ШаблоныМДЛП.П = 1;								
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Создание Реквизита формы типа ДанныеФормыДерево
	МассивДобавляемыхРеквизитов = Новый Массив;
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Дерево", Новый ОписаниеТипов("ДеревоЗначений")));
	Для каждого Колонка Из ДеревоОбъект.Колонки Цикл
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "Дерево"));
	КонецЦикла;
	ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
	
	// Преобразование объекта прикладного типа ДеревоЗначений
	// в реквизит управляемой формы (данные формы)
	ЗначениеВРеквизитФормы(ДеревоОбъект, "Дерево");
	
	// Создание элемента формы типа ТаблицаФормы для отображения дерева
	ЭлементДерево = Элементы.Добавить("Дерево", Тип("ТаблицаФормы"));
	ЭлементДерево.ПутьКДанным = "Дерево";
	ЭлементДерево.Отображение = ОтображениеТаблицы.Дерево;
	
	Для каждого Колонка Из ДеревоОбъект.Колонки Цикл
		НовыйЭлемент = Элементы.Добавить(Колонка.Имя, Тип("ПолеФормы"), ЭлементДерево);
		НовыйЭлемент.ПутьКДанным = "Дерево." + Колонка.Имя;
		Если Не Колонка.Имя = "П" Тогда
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		Иначе
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
			НовыйЭлемент.ТриСостояния = Истина;
			НовыйЭлемент.УстановитьДействие("ПриИзменении", "ФлажокПриИзменении");
		КонецЕсли;
	КонецЦикла;
	
	Элементы.Название.Ширина = 20;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.Дерево.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни;
	Элементы.Дерево.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;  
	
КонецПроцедуры

 #КонецОбласти
 
 #Область СобытияЭлементовФормы

&НаКлиенте
Процедура ФлажокПриИзменении(Элемент)
	
	ИДТекущейСтроки = Элементы["Дерево"].ТекущаяСтрока;
	
	Если ИДТекущейСтроки <> Неопределено Тогда
		
		ЭлементКоллекции = ЭтаФорма["Дерево"].НайтиПоИдентификатору(ИДТекущейСтроки);
		
		Если ЭлементКоллекции.П = 2 Тогда
			ЭлементКоллекции.П = 0;
		КонецЕсли;
		
		УстановкаФлажков(ЭлементКоллекции, ЭлементКоллекции.П);
		
		Родитель = ЭлементКоллекции.ПолучитьРодителя();
		
		Пока Родитель <> Неопределено Цикл
			Родитель.П = ?(УстановленноДляВсех(ЭлементКоллекции), ЭлементКоллекции.П, 2);
			ЭлементКоллекции = Родитель;
			Родитель = ЭлементКоллекции.ПолучитьРодителя();
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановкаФлажков(ЭлементКоллекции, ЗначениеПометки)
	
	ПодчинЭлементы = ЭлементКоллекции.ПолучитьЭлементы();
	
	Для каждого ТекЭлемент Из ПодчинЭлементы Цикл
		ТекЭлемент.П = ЗначениеПометки;
		УстановкаФлажков(ТекЭлемент, ТекЭлемент.П);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция УстановленноДляВсех(ЭлементКоллекции)
	
	СоседниеЭлементы = ЭлементКоллекции.ПолучитьРодителя().ПолучитьЭлементы();
	
	Для каждого ТекЭлемент Из СоседниеЭлементы Цикл
		Если ТекЭлемент.П <> ЭлементКоллекции.П Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура Сохранить(Команда)
	
	МассивШаблонов = Новый Массив;
	ЭлементыДерева = ЭтаФорма.Дерево.ПолучитьЭлементы();
	
	Для каждого ЭлементДерева Из ЭлементыДерева Цикл
		Элементы.Дерево.Развернуть(ЭлементДерева.ПолучитьИдентификатор(), Истина);
		ЭлементыУр2 = ЭлементДерева.ПолучитьЭлементы();
		
		Для каждого ЭлементУр2 Из ЭлементыУр2 Цикл
			Элементы.Дерево.Развернуть(ЭлементДерева.ПолучитьИдентификатор(), Истина);
			ЭлементыУр3 = ЭлементУр2.ПолучитьЭлементы(); 
			
			Для каждого Стр Из ЭлементыУр3 Цикл
				Если Стр.П = 1 Тогда
					МассивШаблонов.Добавить(Стр.Название);	
				КонецЕсли;				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
		
	СоздатьНовыеШаблоны(МассивШаблонов);
	ЭтаФорма.Закрыть();
	ОбновитьИнтерфейс();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьНовыеШаблоны(Шаблоны)
	
	Если ДатаМобайл_ОбщийМодуль.ЕстьМДЛП() Тогда	
		
		//ПРИЕМКА
		ИндексПоиска = Шаблоны.Найти("[МДЛП] Приемка (п/а)");
		Если ИндексПоиска <> Неопределено Тогда	
			Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("[МДЛП] Приемка (п/а)", Истина).Пустая() Тогда
				
				НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
				НовыйШаблон.Наименование = "[МДЛП] Приемка (п/а)";
				НовыйШаблон.ВидДокумента = "УведомлениеОПриемкеМДЛП";
				НовыйШаблон.ИспользоватьМаркировку = Истина;
				НовыйШаблон.ТабличнуюЧастьПриЗагрузкеПодбор = 0;
				НовыйШаблон.ОбновлятьТоварыСДокументом = Истина;
				
				НовыйШаблон.ИспользоватьПодбор = Истина;
				НовыйШаблон.ПриСканированииТовараПодбор = 1;
				НовыйШаблон.ИмяТабличнойЧастиПодбор = "Товары";
				НовыйШаблон.ПриСканированииНовогоТовара = 1;
				НовыйШаблон.ШтрихкодыТолькоПоШаблонам = Истина;
				НовыйШаблон.РазрешитьВыгрузкуНеполногоДокумента = 1;
				НовыйШаблон.ОповеститьОНовомДокументе = Истина;
				НовыйШаблон.ПриПревышенииЗаданияПодбор = 1;
				НовыйШаблон.ТипБизнесПроцесса = 1;
				НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
				НовыйШаблон.РежимСозданияДокументов = 1;
				
				НовыйШаблон.Записать();
				
			КонецЕсли;
		КонецЕсли;
		
		ИндексПоиска = Шаблоны.Найти("[МДЛП] Приемка (о/а киз)");
		Если ИндексПоиска <> Неопределено Тогда						
			Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("[МДЛП] Приемка (о/а киз)", Истина).Пустая() Тогда
				
				НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
				НовыйШаблон.Наименование = "[МДЛП] Приемка (о/а киз)";
				НовыйШаблон.ВидДокумента = "УведомлениеОПриемкеМДЛП";
				НовыйШаблон.ИспользоватьМаркировку = Истина;
				НовыйШаблон.ТабличнуюЧастьПриЗагрузкеПодбор = 3;
				НовыйШаблон.ОбновлятьТоварыСДокументом = Истина;
				НовыйШаблон.ИспользоватьПодбор = Истина;
				НовыйШаблон.ПриСканированииТовараПодбор = 2;
				НовыйШаблон.ИмяТабличнойЧастиПодбор = "Товары";
				НовыйШаблон.ПриСканированииНовогоТовара = 1;
				НовыйШаблон.ШтрихкодыТолькоПоШаблонам = Истина;
				НовыйШаблон.РазрешитьВыгрузкуНеполногоДокумента = 1;
				НовыйШаблон.ОповеститьОНовомДокументе = Истина;
				НовыйШаблон.ПриПревышенииЗаданияПодбор = 1;
				НовыйШаблон.ТипБизнесПроцесса = 1;
				НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
				НовыйШаблон.РежимСозданияДокументов = 1;
				
				НовыйШаблон.Записать();
				
			КонецЕсли;
		КонецЕсли;
		
		ИндексПоиска = Шаблоны.Найти("[МДЛП] Приемка (о/а упак)");
		Если ИндексПоиска <> Неопределено Тогда						
			Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("[МДЛП] Приемка (о/а упак)", Истина).Пустая() Тогда
				
				НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
				НовыйШаблон.Наименование = "[МДЛП] Приемка (о/а упак)";
				НовыйШаблон.ВидДокумента = "УведомлениеОПриемкеМДЛП";
				НовыйШаблон.ИспользоватьМаркировку = Истина;
				НовыйШаблон.ТабличнуюЧастьПриЗагрузкеПодбор = 3;
				НовыйШаблон.ОбновлятьТоварыСДокументом = Истина;
				НовыйШаблон.ИспользоватьПодбор = Истина;
				НовыйШаблон.ИмяТабличнойЧастиПодбор = "Товары";
				НовыйШаблон.ОповеститьОНовомДокументе = Истина;
				НовыйШаблон.ТипБизнесПроцесса = 1;
				НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
				НовыйШаблон.РежимСозданияДокументов = 1;
				
				НовыйШаблон.Записать();
				
			КонецЕсли;
		КонецЕсли;
				
		//ОПРИХОДОВАНИЕ
		ИндексПоиска = Шаблоны.Найти("[МДЛП] Приход (схема 702)");
		Если ИндексПоиска <> Неопределено Тогда						
			Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("[МДЛП] Приход (схема 702)", Истина).Пустая() Тогда
				
				НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
				НовыйШаблон.Наименование = "[МДЛП] Приход (схема 702)";
				НовыйШаблон.ВидДокумента = "УведомлениеОбОприходованииМДЛП";
				НовыйШаблон.ИспользоватьМаркировку = Истина;
				НовыйШаблон.МаркировкаСканироватьEAN = 1;
				НовыйШаблон.ТабличнуюЧастьПриЗагрузкеПодбор = 3;
				НовыйШаблон.ОбновлятьТоварыСДокументом = Истина;
				НовыйШаблон.ИспользоватьПодбор = Истина;
				НовыйШаблон.ПриСканированииТовараПодбор = 2;
				НовыйШаблон.ИмяТабличнойЧастиПодбор = "Товары";
				НовыйШаблон.ПриСканированииНовогоТовара = 1;
				НовыйШаблон.ШтрихкодыТолькоПоШаблонам = Истина;
				НовыйШаблон.РазрешитьВыгрузкуНеполногоДокумента = 1;
				НовыйШаблон.ОповеститьОНовомДокументе = Истина;
				НовыйШаблон.ПриПревышенииЗаданияПодбор = 1;
				НовыйШаблон.ТипБизнесПроцесса = 1;
				НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
				НовыйШаблон.РежимСозданияДокументов = 1;
				
				НовыйШаблон.Записать();
				
			КонецЕсли;
		КонецЕсли;	
		
		//ОТГРУЗКА
		ИндексПоиска = Шаблоны.Найти("[МДЛП] Отгрузка");
		Если ИндексПоиска <> Неопределено Тогда		
			Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("[МДЛП] Отгрузка", Истина).Пустая() Тогда		
				НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
				НовыйШаблон.Наименование = "[МДЛП] Отгрузка";
				НовыйШаблон.ВидДокумента = "УведомлениеОбОтгрузкеМДЛП";
				НовыйШаблон.ИспользоватьМаркировку = Истина;
				НовыйШаблон.ТабличнуюЧастьПриЗагрузкеПодбор = 3;
				НовыйШаблон.ОбновлятьТоварыСДокументом = Истина;	
				НовыйШаблон.ИспользоватьПодбор = Истина;
				НовыйШаблон.ПриСканированииТовараПодбор = 2;
				НовыйШаблон.ИмяТабличнойЧастиПодбор = "Товары";
				НовыйШаблон.ПриСканированииНовогоТовара = 2;
				НовыйШаблон.ШтрихкодыТолькоПоШаблонам = Истина;
				НовыйШаблон.РазрешитьВыгрузкуНеполногоДокумента = 1;
				НовыйШаблон.ОповеститьОНовомДокументе = Истина;
				НовыйШаблон.ПриПревышенииЗаданияПодбор = 1;
				НовыйШаблон.ТипБизнесПроцесса = 2;
				НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
				НовыйШаблон.РежимСозданияДокументов = 1;
				
				НовыйШаблон.Записать();	
			КонецЕсли;
		КонецЕсли;
		
		//ВЫБЫТИЕ
		ИндексПоиска = Шаблоны.Найти("[МДЛП] Выбытие");
		Если ИндексПоиска <> Неопределено Тогда		
			Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("[МДЛП] Выбытие", Истина).Пустая() Тогда		
				НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
				НовыйШаблон.Наименование = "[МДЛП] Выбытие";
				НовыйШаблон.ВидДокумента = "УведомлениеОВыбытииМДЛП";
				НовыйШаблон.ИспользоватьМаркировку = Истина;
				НовыйШаблон.ТабличнуюЧастьПриЗагрузкеПодбор = 3;
				НовыйШаблон.ОбновлятьТоварыСДокументом = Истина;	
				НовыйШаблон.ИспользоватьПодбор = Истина;
				НовыйШаблон.ПриСканированииТовараПодбор = 2;
				НовыйШаблон.ИмяТабличнойЧастиПодбор = "Товары";
				НовыйШаблон.ПриСканированииНовогоТовара = 2;
				НовыйШаблон.ШтрихкодыТолькоПоШаблонам = Истина;
				НовыйШаблон.РазрешитьВыгрузкуНеполногоДокумента = 1;
				НовыйШаблон.ОповеститьОНовомДокументе = Истина;
				НовыйШаблон.ПриПревышенииЗаданияПодбор = 1;
				НовыйШаблон.ТипБизнесПроцесса = 0;
				НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
				НовыйШаблон.РежимСозданияДокументов = 1;
				
				НовыйШаблон.Записать();	
			КонецЕсли;
		КонецЕсли;
		
		//АГРЕГАЦИЯ
		ИндексПоиска = Шаблоны.Найти("[МДЛП] Агрегация");
		Если ИндексПоиска <> Неопределено Тогда			
			Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("[МДЛП] Агрегация", Истина).Пустая() Тогда
				
				НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
				НовыйШаблон.Наименование = "[МДЛП] Агрегация";
				НовыйШаблон.ВидДокумента = "УведомлениеОбАгрегированииИТрансформацииУпаковокМДЛП";
				НовыйШаблон.ИспользоватьМаркировку = Истина;
				НовыйШаблон.ТабличнуюЧастьПриЗагрузкеПодбор = 2; 
				
				НовыйШаблон.ИспользоватьПодбор = Истина;
				НовыйШаблон.ПриСканированииТовараПодбор = 2;
				НовыйШаблон.ИмяТабличнойЧастиПодбор = "Товары";
				НовыйШаблон.ПриСканированииНовогоТовара = 2;
				НовыйШаблон.ШтрихкодыТолькоПоШаблонам = Истина;
				НовыйШаблон.РазрешитьВыгрузкуНеполногоДокумента = 0;
				НовыйШаблон.ПриПревышенииЗаданияПодбор = 0;
				
				НовыйШаблон.ИспользованиеУпаковочныхЛистовПодбор = 1;
				НовыйШаблон.ТипБизнесПроцесса = 8;
				
				НоваяСтрокаАвтовыгрузки = НовыйШаблон.НовыеЗначенияРеквизитов.Добавить();
				НоваяСтрокаАвтовыгрузки.ИмяРеквизита = "Операция"; 
				НоваяСтрокаАвтовыгрузки.ЗначениеРеквизита = Перечисления.ОперацииАгрегированияИТрансформацииУпаковокМДЛП.Агрегирование;
				НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
				НовыйШаблон.РежимСозданияДокументов = 1;
				
				НовыйШаблон.Записать();				
				
			КонецЕсли;
		КонецЕсли;
		
		ИндексПоиска = Шаблоны.Найти("[МДЛП] Расформирование");
		Если ИндексПоиска <> Неопределено Тогда			
			Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("[МДЛП] Расформирование", Истина).Пустая() Тогда
				
				НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
				НовыйШаблон.Наименование = "[МДЛП] Расформирование";
				НовыйШаблон.ВидДокумента = "УведомлениеОбАгрегированииИТрансформацииУпаковокМДЛП";
				НовыйШаблон.ИспользоватьМаркировку = Истина;
				НовыйШаблон.ТабличнуюЧастьПриЗагрузкеПодбор = 2; 
				
				НовыйШаблон.ИспользоватьПодбор = Истина;
				НовыйШаблон.ПриСканированииТовараПодбор = 0;
				НовыйШаблон.ИмяТабличнойЧастиПодбор = "Товары";
				НовыйШаблон.ПриСканированииНовогоТовара = 0;
				НовыйШаблон.РазрешитьВыгрузкуНеполногоДокумента = 0;
				НовыйШаблон.ПриПревышенииЗаданияПодбор = 0;
				НовыйШаблон.ТипБизнесПроцесса = 8;
				
				НоваяСтрокаАвтовыгрузки = НовыйШаблон.НовыеЗначенияРеквизитов.Добавить();
				НоваяСтрокаАвтовыгрузки.ИмяРеквизита = "Операция"; 
				НоваяСтрокаАвтовыгрузки.ЗначениеРеквизита = Перечисления.ОперацииАгрегированияИТрансформацииУпаковокМДЛП.Расформирование;   
				
				НоваяСтрокаАвтовыгрузки = НовыйШаблон.НовыеЗначенияРеквизитов.Добавить();
				НоваяСтрокаАвтовыгрузки.ИмяРеквизита = "Отдельная ТЧ упаковок"; 
				НоваяСтрокаАвтовыгрузки.ЗначениеРеквизита = Ложь; 
				НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
				НовыйШаблон.РежимСозданияДокументов = 1;
				
				НовыйШаблон.Записать();
								
			КонецЕсли;
		КонецЕсли;
		
		//РТУ
		ИндексПоиска = Шаблоны.Найти("[МДЛП] Реализация");
		Если ИндексПоиска <> Неопределено Тогда			
			Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("[МДЛП] Реализация", Истина).Пустая() Тогда		
				НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
				НовыйШаблон.Наименование = "[МДЛП] Реализация";
				НовыйШаблон.ВидДокумента = "РеализацияТоваровУслуг";
				НовыйШаблон.ИспользоватьМаркировку = Истина;
				НовыйШаблон.ТабличнуюЧастьПриЗагрузкеПодбор = 3;
				НовыйШаблон.ОбновлятьТоварыСДокументом = Истина;	
				НовыйШаблон.ИспользоватьПодбор = Истина;
				НовыйШаблон.ПриСканированииТовараПодбор = 2;
				НовыйШаблон.ИмяТабличнойЧастиПодбор = "Товары";
				НовыйШаблон.ПриСканированииНовогоТовара = 2;
				НовыйШаблон.ШтрихкодыТолькоПоШаблонам = Истина;
				НовыйШаблон.РазрешитьВыгрузкуНеполногоДокумента = 1;
				НовыйШаблон.ОповеститьОНовомДокументе = Истина;
				НовыйШаблон.ПриПревышенииЗаданияПодбор = 1;
				НовыйШаблон.ИспользованиеСерийниковПодбор = 1;
				НовыйШаблон.ТипБизнесПроцесса = 2;
				НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
				НовыйШаблон.РежимСозданияДокументов = 1;
				
				НовыйШаблон.Записать();	
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;	
				
	Если ДатаМобайл_ОбщийМодуль.ЕстьМаркировка() Тогда
		
		ИндексПоиска = Шаблоны.Найти("[М] Приемка");
		Если ИндексПоиска <> Неопределено Тогда			
			Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("[М] Приемка", Истина).Пустая() Тогда
				
				НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
				НовыйШаблон.Наименование = "[М] Приемка";
				НовыйШаблон.ВидДокумента = "ПриобретениеТоваровУслуг";
				НовыйШаблон.ИспользоватьМаркировку = Истина;
				НовыйШаблон.ОбновлятьТоварыСДокументом = Истина;
				НовыйШаблон.ИспользоватьПодбор = Истина;
				НовыйШаблон.ПриСканированииТовараПодбор = 2;
				НовыйШаблон.ИмяТабличнойЧастиПодбор = Метаданные.Документы.ПриобретениеТоваровУслуг.ТабличныеЧасти.Товары.Имя;
				НовыйШаблон.ПриСканированииНовогоТовара = 1;
				НовыйШаблон.МаркировкаСоздаватьСправочникКМЕслиНеНайден = Истина;
				НовыйШаблон.ТипБизнесПроцесса = 1;
				НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
				НовыйШаблон.РежимСозданияДокументов = 1;
				НовыйШаблон.МаркировкаРежимОСУ = 1;
				
				НовыйШаблон.Записать();
				
			КонецЕсли;
		КонецЕсли;
				
		ИндексПоиска = Шаблоны.Найти("[М] Отгрузка");
		Если ИндексПоиска <> Неопределено Тогда			
			Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("[М] Отгрузка", Истина).Пустая() Тогда
				
				НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
				НовыйШаблон.Наименование = "[М] Отгрузка";
				НовыйШаблон.ВидДокумента = "РеализацияТоваровУслуг";
				НовыйШаблон.ИспользоватьМаркировку = Истина;
				НовыйШаблон.ОбновлятьТоварыСДокументом = Истина;
				НовыйШаблон.ИспользоватьПодбор = Истина;
				НовыйШаблон.ПриСканированииТовараПодбор = 2;
				НовыйШаблон.ИмяТабличнойЧастиПодбор = Метаданные.Документы.РеализацияТоваровУслуг.ТабличныеЧасти.Товары.Имя;
				НовыйШаблон.ПриСканированииНовогоТовара = 2;
				НовыйШаблон.МаркировкаСоздаватьСправочникКМЕслиНеНайден = Истина;
				НовыйШаблон.ТипБизнесПроцесса = 2;
				НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
				НовыйШаблон.РежимСозданияДокументов = 1;
				НовыйШаблон.МаркировкаРежимОСУ = 1;
				
				НовыйШаблон.Записать();
				
			КонецЕсли;
		КонецЕсли;		
		
		ИндексПоиска = Шаблоны.Найти("[М] Чек ККМ");
		Если ИндексПоиска <> Неопределено Тогда			
			Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("[М] Чек ККМ", Истина).Пустая() Тогда
				
				НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
				НовыйШаблон.Наименование = "[М] Чек ККМ";
				НовыйШаблон.ВидДокумента = "ЧекККМ";
				НовыйШаблон.ИспользоватьМаркировку = Истина;
				НовыйШаблон.ОбновлятьТоварыСДокументом = Истина;
				НовыйШаблон.ИспользоватьПодбор = Истина;
				НовыйШаблон.ПриСканированииТовараПодбор = 2;
				НовыйШаблон.ИмяТабличнойЧастиПодбор = Метаданные.Документы.ЧекККМ.ТабличныеЧасти.Товары.Имя;
				НовыйШаблон.ПриСканированииНовогоТовара = 2;
				НовыйШаблон.МаркировкаСоздаватьСправочникКМЕслиНеНайден = Истина;
				НовыйШаблон.ТипБизнесПроцесса = 0;
				НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
				НовыйШаблон.РежимСозданияДокументов = 1;
				НовыйШаблон.МаркировкаРежимОСУ = 1;
				
				НовыйШаблон.Записать();
				
			КонецЕсли;
		КонецЕсли;
				
		ИндексПоиска = Шаблоны.Найти("[М] Вывод из оборота");
		Если ИндексПоиска <> Неопределено Тогда			
			Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("[М] Вывод из оборота", Истина).Пустая() Тогда
				
				НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
				НовыйШаблон.Наименование = "[М] Вывод из оборота";
				НовыйШаблон.ВидДокумента = "РеализацияТоваровУслуг";
				НовыйШаблон.ВидДокументаНового = "ВыводИзОборотаИСМП";
				НовыйШаблон.ИспользоватьМаркировку = Истина;			
				НовыйШаблон.ОбновлятьТоварыСДокументом = Истина;			
				НовыйШаблон.ИспользоватьПодбор = Истина;
				НовыйШаблон.ПриСканированииТовараПодбор = 2;
				НовыйШаблон.ИмяТабличнойЧастиПодбор = Метаданные.Документы.РеализацияТоваровУслуг.ТабличныеЧасти.Товары.Имя;
				НовыйШаблон.ИмяТабличнойЧастиНовойПодбор = Метаданные.Документы.ВыводИзОборотаИСМП.ТабличныеЧасти.Товары.Имя;
				НовыйШаблон.ПриСканированииНовогоТовара = 2;
				НовыйШаблон.ТипБизнесПроцесса = 0;
				НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
				НовыйШаблон.РежимСозданияДокументов = 1;
				НовыйШаблон.МаркировкаРежимОСУ = 1;
				
				НовыйШаблон.Записать();
				
			КонецЕсли;
		КонецЕсли;
		
		ИндексПоиска = Шаблоны.Найти("[М] Возврат в оборот");
		Если ИндексПоиска <> Неопределено Тогда			
			Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("[М] Возврат в оборот", Истина).Пустая() Тогда
				
				НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
				НовыйШаблон.Наименование = "[М] Возврат в оборот";
				НовыйШаблон.ВидДокумента = "ВозвратТоваровОтКлиента";
				НовыйШаблон.ВидДокументаНового = "ВозвратВОборотИСМП";
				НовыйШаблон.ИспользоватьМаркировку = Истина;				
				НовыйШаблон.ОбновлятьТоварыСДокументом = Истина;		
				НовыйШаблон.ИспользоватьПодбор = Истина;
				НовыйШаблон.ПриСканированииТовараПодбор = 2;
				НовыйШаблон.ИмяТабличнойЧастиПодбор = Метаданные.Документы.ВозвратТоваровОтКлиента.ТабличныеЧасти.Товары.Имя;
				НовыйШаблон.ИмяТабличнойЧастиНовойПодбор = Метаданные.Документы.ВозвратВОборотИСМП.ТабличныеЧасти.Товары.Имя;
				НовыйШаблон.ПриСканированииНовогоТовара = 2;
				НовыйШаблон.ТипБизнесПроцесса = 0;
				НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
				НовыйШаблон.РежимСозданияДокументов = 1;
				НовыйШаблон.МаркировкаРежимОСУ = 1;
				
				НовыйШаблон.Записать();
				
			КонецЕсли;
		КонецЕсли;
		
		ИндексПоиска = Шаблоны.Найти("[М] Упаковка");
		Если ИндексПоиска <> Неопределено Тогда			
			Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("[М] Упаковка", Истина).Пустая() Тогда
				
				НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
				
				НовыйШаблон.Наименование = "[М] Упаковка";
				НовыйШаблон.ВидДокумента = "ДатаМобайл_УпаковочныйЛист";
				НовыйШаблон.ИспользоватьМаркировку = Истина;	
				НовыйШаблон.ГенерацияПаклистаНаСервере = 2;
				НовыйШаблон.ИспользованиеУпаковочныхЛистовПодбор = 1;				
				НовыйШаблон.ИспользоватьПодбор = Истина;
				НовыйШаблон.ПриСканированииТовараПодбор = 2;
				НовыйШаблон.ИмяТабличнойЧастиПодбор = Метаданные.Документы.ДатаМобайл_УпаковочныйЛист.ТабличныеЧасти.Товары.Имя;
				НовыйШаблон.ПриСканированииНовогоТовара = 2;
				НовыйШаблон.МаркировкаСоздаватьСправочникКМЕслиНеНайден = Истина;
				НовыйШаблон.ТипБизнесПроцесса = 8;
				НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
				НовыйШаблон.РежимСозданияДокументов = 1;
				НовыйШаблон.МаркировкаРежимОСУ = 1;
				
				НовыйШаблон.Записать();
				
			КонецЕсли;
		КонецЕсли;
		
		ИндексПоиска = Шаблоны.Найти("[М] В оборот");
		Если ИндексПоиска <> Неопределено Тогда			
			Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("[М] В оборот", Истина).Пустая() Тогда
				
				НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
				
				НовыйШаблон.Наименование = "[М] В оборот";
				НовыйШаблон.ВидДокумента = "МаркировкаТоваровИСМП";
				НовыйШаблон.ИспользоватьМаркировку = Истина;				
				НовыйШаблон.ИспользоватьПодбор = Истина;
				НовыйШаблон.ПриСканированииТовараПодбор = 2;
				НовыйШаблон.ИмяТабличнойЧастиПодбор = Метаданные.Документы.МаркировкаТоваровИСМП.ТабличныеЧасти.Товары.Имя;
				НовыйШаблон.ПриСканированииНовогоТовара = 2;
				НовыйШаблон.МаркировкаСоздаватьСправочникКМЕслиНеНайден = Истина;
				НовыйШаблон.ТипБизнесПроцесса = 0;
				НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
				НовыйШаблон.РежимСозданияДокументов = 1;
				НовыйШаблон.МаркировкаРежимОСУ = 1;
				
				НовыйШаблон.Записать();
				
			КонецЕсли;
			
		КонецЕсли;
		
		ИндексПоиска = Шаблоны.Найти("[М] Перемаркировка ИС МП");
		Если ИндексПоиска <> Неопределено Тогда			
			Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("[М] Перемаркировка ИС МП", Истина).Пустая() Тогда
				
				НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
				НовыйШаблон.Наименование = "[М] Перемаркировка ИС МП";
				НовыйШаблон.ВидДокумента = "ПеремаркировкаТоваровИСМП";
				
				НовыйШаблон.ОповеститьОНовомДокументе 	= Истина;
				НовыйШаблон.ОбновлятьТоварыСДокументом  = Истина;
				НовыйШаблон.ВводТовараБезСканирования   = Истина;
				НовыйШаблон.ПриСканированииНовогоТовара = 2;
				
				НовыйШаблон.ИспользоватьПодбор 				= Истина;
				НовыйШаблон.ИмяТабличнойЧастиПодбор 		= Метаданные.Документы.РеализацияТоваровУслуг.ТабличныеЧасти.Товары.Имя;
				НовыйШаблон.ТабличнуюЧастьПриЗагрузкеПодбор = 2;
				НовыйШаблон.ПриСканированииТовараПодбор 	= 2;
				
				НовыйШаблон.ИспользоватьМаркировку 						= Истина;
				НовыйШаблон.МаркировкаСканироватьEAN    				= 1;				
				НовыйШаблон.МаркировкаСоздаватьСправочникКМЕслиНеНайден = Истина;
				НовыйШаблон.МаркировкаПроверкаБезСертификатаИС          = Истина;
				НовыйШаблон.ТипБизнесПроцесса = 12;
				НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
				НовыйШаблон.РежимСозданияДокументов = 1;
				НовыйШаблон.МаркировкаРежимОСУ = 1;
				
				НовыйШаблон.Записать();
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ДатаМобайл_ОбщийМодуль.ЕстьЕГАИС() Тогда
		ИндексПоиска = Шаблоны.Найти("[Е] Исходящая ТТН");
		Если ИндексПоиска <> Неопределено Тогда
			Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("[Е] Исходящая ТТН", Истина).Пустая() Тогда 	
				НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
				НовыйШаблон.Наименование = "[Е] Исходящая ТТН";
				НовыйШаблон.ВидДокумента = "ТТНИсходящаяЕГАИС";		
				НовыйШаблон.ПриСканированииНовогоТовара = 2;
				НовыйШаблон.РазрешитьВыгрузкуНеполногоДокумента = 1;
				
				НовыйШаблон.ИспользоватьПодбор = Истина;
				НовыйШаблон.ВсеШтрихкодыТовара= Истина;
				НовыйШаблон.ИмяТабличнойЧастиПодбор = Метаданные.Документы.ТТНИсходящаяЕГАИС.ТабличныеЧасти.Товары.Имя;
				НовыйШаблон.ОтсылатьГотовуюЗаписьНаСерверПодбор = Истина;
				НовыйШаблон.ТабличнуюЧастьПриЗагрузкеПодбор = 1;
				НовыйШаблон.ПечатьЭтикеткиПриПодборе = 0;
				НовыйШаблон.ПриСканированииТовараПодбор = 2;
				НовыйШаблон.ПриПревышенииЗаданияПодбор = 0;
				НовыйШаблон.ПриПревышенииЛимитаПодбор = 0;
				НовыйШаблон.РучнойВводКоличестваПодбор = Истина;
				НовыйШаблон.ПодтверждатьЭнтеромПодбор = Истина;
				НовыйШаблон.ЕГАИС = Истина;
				НовыйШаблон.СопоставлениеЕГАИС = Истина;
				НовыйШаблон.ТипБизнесПроцесса = 2;
				НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
				НовыйШаблон.РежимСозданияДокументов = 1;
				
				НовыйШаблон.Записать();
			КонецЕсли;
		КонецЕсли;
		
		ИндексПоиска = Шаблоны.Найти("[Е] Входящая ТТН");
		Если ИндексПоиска <> Неопределено Тогда			
			Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("[Е] Входящая ТТН", Истина).Пустая() Тогда 
				НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
				НовыйШаблон.Наименование = "[Е] Входящая ТТН";
				НовыйШаблон.ВидДокумента = "ТТНВходящаяЕГАИС";		
				НовыйШаблон.ПриСканированииНовогоТовара = 2;
				НовыйШаблон.РазрешитьВыгрузкуНеполногоДокумента = 1;
				
				НовыйШаблон.ИспользоватьПодбор = Истина;
				НовыйШаблон.ВсеШтрихкодыТовара= Истина;
				НовыйШаблон.ИмяТабличнойЧастиПодбор = Метаданные.Документы.ТТНВходящаяЕГАИС.ТабличныеЧасти.Товары.Имя;
				НовыйШаблон.ОтсылатьГотовуюЗаписьНаСерверПодбор = Истина;
				НовыйШаблон.ТабличнуюЧастьПриЗагрузкеПодбор = 1;
				НовыйШаблон.ПечатьЭтикеткиПриПодборе = 0;
				НовыйШаблон.ПриСканированииТовараПодбор = 2;
				НовыйШаблон.ПриПревышенииЗаданияПодбор = 0;
				НовыйШаблон.ПриПревышенииЛимитаПодбор = 0;
				НовыйШаблон.РучнойВводКоличестваПодбор = Истина;
				НовыйШаблон.ПодтверждатьЭнтеромПодбор = Истина;
				НовыйШаблон.ЕГАИС = Истина;
				НовыйШаблон.СопоставлениеЕГАИС = Истина;
				НовыйШаблон.ТипБизнесПроцесса = 1;
				НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
				НовыйШаблон.РежимСозданияДокументов = 1;
				
				НовыйШаблон.Записать();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ИндексПоиска = Шаблоны.Найти("Перемещение по ячейкам");
	Если ИндексПоиска <> Неопределено Тогда		
		Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("Перемещение по ячейкам", Истина).Пустая() Тогда 
			НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
			НовыйШаблон.Наименование = "Перемещение по ячейкам";
			НовыйШаблон.ВидДокумента = "ОтборРазмещениеТоваров";
			
			НовыйШаблон.ПриСканированииНовогоТовара = 2;
			НовыйШаблон.РазрешитьВыгрузкуНеполногоДокумента = 0;
			НовыйШаблон.ВсеШтрихкодыТовара = Истина;
			НовыйШаблон.ИспользоватьПодбор = Истина;
			НовыйШаблон.ИмяТабличнойЧастиПодбор = Метаданные.Документы.ОтборРазмещениеТоваров.ТабличныеЧасти.ТоварыОтбор.Имя;
			НовыйШаблон.ТабличнуюЧастьПриЗагрузкеПодбор = 0;
			НовыйШаблон.ОтсылатьГотовуюЗаписьНаСерверПодбор = Истина;
			НовыйШаблон.ПечатьЭтикеткиПриПодборе = 0;
			НовыйШаблон.ПриСканированииТовараПодбор = 2;
			НовыйШаблон.ПриПревышенииЗаданияПодбор = 1;
			НовыйШаблон.ПриПревышенииЛимитаПодбор = 0;
			НовыйШаблон.РучнойВводКоличестваПодбор = Истина;
			НовыйШаблон.ПодтверждатьЭнтеромПодбор = Истина;
			НовыйШаблон.ИспользованиеЯчеекПодбор = 2;
			НовыйШаблон.УчитыватьЯчеекВЗаданииПодбор = Истина;
			
			НовыйШаблон.ИспользоватьПриемку = Истина;
			НовыйШаблон.ИмяТабличнойЧастиПриемка = Метаданные.Документы.ОтборРазмещениеТоваров.ТабличныеЧасти.ТоварыРазмещение.Имя;
			НовыйШаблон.ОтсылатьГотовуюЗаписьНаСерверПриемка = Истина;
			НовыйШаблон.ТабличнуюЧастьПриЗагрузкеПриемка = 2;
			НовыйШаблон.ПечатьЭтикеткиПриПриемке = 0;
			НовыйШаблон.ПриСканированииТовараПриемка = 2;
			НовыйШаблон.ПриПревышенииЗаданияПриемка = 1;
			НовыйШаблон.ПриПревышенииЛимитаПриемка = 0;
			НовыйШаблон.РучнойВводКоличестваПриемка = Истина;
			НовыйШаблон.ПодтверждатьЭнтеромПриемка = Истина;	
			НовыйШаблон.ИспользованиеЯчеекПриемка = 2;
			НовыйШаблон.УчитыватьЯчеекВЗаданииПриемка = Истина;
			НовыйШаблон.ТипБизнесПроцесса = 9;
			НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
			НовыйШаблон.РежимСозданияДокументов = 1;
			
			НовыйШаблон.Записать();
		КонецЕсли;
		
	КонецЕсли;
	
	ИндексПоиска = Шаблоны.Найти("Сборка товаров");
	Если ИндексПоиска <> Неопределено Тогда		
		Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("Сборка товаров", Истина).Пустая() Тогда 
			НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
			НовыйШаблон.Наименование = "Сборка товаров";
			НовыйШаблон.ВидДокумента = "СборкаТоваров";		
			НовыйШаблон.ОбновлятьТоварыСДокументом = Истина; 
			НовыйШаблон.РазрешитьВыгрузкуНеполногоДокумента = 0;
			НовыйШаблон.ВводТовараБезСканирования = Истина;
			НовыйШаблон.ПриСканированииНовогоТовара = 2;
			НовыйШаблон.СоздаватьСерииЕслиНеНайдены = Истина;
			
			НовыйШаблон.ИспользоватьПодбор = Истина;
			НовыйШаблон.ИмяТабличнойЧастиПодбор = Метаданные.Документы.СборкаТоваров.ТабличныеЧасти.Товары.Имя;
			НовыйШаблон.ТабличнуюЧастьПриЗагрузкеПодбор = 1;
			НовыйШаблон.ОтсылатьГотовуюЗаписьНаСерверПодбор = Истина;
			НовыйШаблон.ПриСканированииТовараПодбор = 2;
			НовыйШаблон.ПриПревышенииЗаданияПодбор = 0;
			НовыйШаблон.ПриПревышенииЛимитаПодбор = 1;
			НовыйШаблон.РучнойВводКоличестваПодбор = Истина;
			НовыйШаблон.ПодтверждатьЭнтеромПодбор = Истина;
			НовыйШаблон.ИспользованиеСерийниковПодбор = 1;
			
			НовыйШаблон.ИспользоватьПриемку = Истина;
			НовыйШаблон.ИмяТабличнойЧастиПриемка = Метаданные.Документы.СборкаТоваров.ТабличныеЧасти.Товары.Имя;
			НовыйШаблон.ТабличнуюЧастьПриЗагрузкеПриемка = 2;
			НовыйШаблон.ОтсылатьГотовуюЗаписьНаСерверПриемка = Истина;
			НовыйШаблон.ПриСканированииТовараПриемка = Истина;
			НовыйШаблон.ПриПревышенииЗаданияПриемка = 0;
			НовыйШаблон.ПриПревышенииЛимитаПриемка = 0;
			НовыйШаблон.РучнойВводКоличестваПриемка = Истина;
			НовыйШаблон.ПодтверждатьЭнтеромПриемка = Истина;
			НовыйШаблон.ИспользованиеСерийниковПриемка = 1;
			НовыйШаблон.ТипБизнесПроцесса = 0;
			НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
			НовыйШаблон.РежимСозданияДокументов = 1;
			
			СтрАвтозагрузки = НовыйШаблон.НовыеЗначенияРеквизитов.Добавить();
			СтрАвтозагрузки.ИмяРеквизита = "ВариантПриемкиТоваров";
			СтрАвтозагрузки.ЗначениеРеквизита = Перечисления.ВариантыПриемкиТоваров.МожетПроисходитьБезЗаказовИНакладных;
			
			СтрАвтозагрузки = НовыйШаблон.НовыеЗначенияРеквизитов.Добавить();
			СтрАвтозагрузки.ИмяРеквизита = "ХозяйственнаяОперация";                           	
			СтрАвтозагрузки.ЗначениеРеквизита = Перечисления.ХозяйственныеОперации.СборкаТоваров;
			
			СтрАвтозагрузки = НовыйШаблон.НовыеЗначенияРеквизитов.Добавить();
			СтрАвтозагрузки.ИмяРеквизита = "СборкаПодДеятельность";
			СтрАвтозагрузки.ЗначениеРеквизита = Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ;
			
			НовыйШаблон.Записать();
		КонецЕсли;
	КонецЕсли;
	
	ИндексПоиска = Шаблоны.Найти("Инвентаризация");
	Если ИндексПоиска <> Неопределено Тогда		
		Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("Инвентаризация", Истина).Пустая() Тогда 
			НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
			НовыйШаблон.Наименование = "Инвентаризация";
			НовыйШаблон.ВидДокумента = "ПересчетТоваров";		
			НовыйШаблон.ПриСканированииНовогоТовара = 1;
			НовыйШаблон.РазрешитьВыгрузкуНеполногоДокумента = 0;
			НовыйШаблон.ВсеШтрихкодыТовара = Истина;
			НовыйШаблон.ИспользоватьПодбор = Истина;
			НовыйШаблон.ИмяТабличнойЧастиПодбор = Метаданные.Документы.ПересортицаТоваров.ТабличныеЧасти.Товары.Имя;
			НовыйШаблон.ОтсылатьГотовуюЗаписьНаСерверПодбор = Истина;
			НовыйШаблон.ТабличнуюЧастьПриЗагрузкеПодбор = 1;
			НовыйШаблон.ПечатьЭтикеткиПриПодборе = 0;
			НовыйШаблон.ПриСканированииТовараПодбор = 2;
			НовыйШаблон.ПриПревышенииЗаданияПодбор = 0;
			НовыйШаблон.ПриПревышенииЛимитаПодбор = 0;
			НовыйШаблон.РучнойВводКоличестваПодбор = Истина;
			НовыйШаблон.ПодтверждатьЭнтеромПодбор = Истина;
			НовыйШаблон.ТипБизнесПроцесса = 3;
			НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
			НовыйШаблон.РежимСозданияДокументов = 1;
			
			НовыйШаблон.Записать();
		КонецЕсли;
	КонецЕсли;		

	ИндексПоиска = Шаблоны.Найти("Заказ клиента");
	Если ИндексПоиска <> Неопределено Тогда		
		Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("Заказ клиента", Истина).Пустая() Тогда 
			НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
			НовыйШаблон.Наименование = "Заказ клиента";
			НовыйШаблон.ВидДокумента = "ЗаказКлиента";
			НовыйШаблон.ВсеШтрихкодыТовара = Истина;
			НовыйШаблон.ПриСканированииНовогоТовара = 2;
			НовыйШаблон.РазрешитьВыгрузкуНеполногоДокумента = 0;
			НовыйШаблон.ВсеШтрихкодыТовара = Истина;		
			НовыйШаблон.ИспользоватьПодбор = Истина;
			НовыйШаблон.ИмяТабличнойЧастиПодбор = Метаданные.Документы.ЗаказКлиента.ТабличныеЧасти.Товары.Имя;
			НовыйШаблон.ОтсылатьГотовуюЗаписьНаСерверПодбор = Истина;
			НовыйШаблон.ПечатьЭтикеткиПриПодборе = 0;
			НовыйШаблон.ТабличнуюЧастьПриЗагрузкеПодбор = 2;
			НовыйШаблон.ПриСканированииТовараПодбор = 2;
			НовыйШаблон.ПриПревышенииЗаданияПодбор = 0;
			НовыйШаблон.ПриПревышенииЛимитаПодбор = 1;
			НовыйШаблон.РучнойВводКоличестваПодбор = Истина;
			НовыйШаблон.ПодтверждатьЭнтеромПодбор = Истина;
			НовыйШаблон.ТипБизнесПроцесса = 6;
			НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
			НовыйШаблон.РежимСозданияДокументов = 1;
			
			НовыйШаблон.Записать();
		КонецЕсли;
	КонецЕсли;
			
	ИндексПоиска = Шаблоны.Найти("Проверка отгрузки");
	Если ИндексПоиска <> Неопределено Тогда				
		Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("Проверка отгрузки", Истина).Пустая() Тогда 
			НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
			НовыйШаблон.Наименование = "Проверка отгрузки";
			НовыйШаблон.ВидДокумента = "РеализацияТоваровУслуг";
			НовыйШаблон.ПриСканированииНовогоТовара = 2;
			НовыйШаблон.РазрешитьВыгрузкуНеполногоДокумента = 1;
			НовыйШаблон.ВсеШтрихкодыТовара = Истина;
			НовыйШаблон.ИспользоватьПодбор = Истина;
			НовыйШаблон.ИмяТабличнойЧастиПодбор = Метаданные.Документы.РеализацияТоваровУслуг.ТабличныеЧасти.Товары.Имя;
			НовыйШаблон.ТабличнуюЧастьПриЗагрузкеПодбор = 2;
			НовыйШаблон.ОтсылатьГотовуюЗаписьНаСерверПодбор = Истина;
			НовыйШаблон.ПечатьЭтикеткиПриПодборе = 0;
			НовыйШаблон.ПриСканированииТовараПодбор = 2;
			НовыйШаблон.ПриПревышенииЗаданияПодбор = 1;
			НовыйШаблон.ПриПревышенииЛимитаПодбор = 0;
			НовыйШаблон.РучнойВводКоличестваПодбор = Истина;
			НовыйШаблон.ПодтверждатьЭнтеромПодбор = Истина;
			НовыйШаблон.ТипБизнесПроцесса = 11;
			НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
			НовыйШаблон.РежимСозданияДокументов = 1;
			
			НовыйШаблон.Записать();
		КонецЕсли;
	КонецЕсли;
			
	ИндексПоиска = Шаблоны.Найти("Расходный ордер");
	Если ИндексПоиска <> Неопределено Тогда		
		Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("Расходный ордер", Истина).Пустая() Тогда 
			НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
			НовыйШаблон.Наименование = "Расходный ордер";
			НовыйШаблон.ВидДокумента = "РасходныйОрдерНаТовары";
			НовыйШаблон.ПриСканированииНовогоТовара = 2;
			НовыйШаблон.РазрешитьВыгрузкуНеполногоДокумента = 1;
			НовыйШаблон.ВсеШтрихкодыТовара = Истина;
			НовыйШаблон.ИспользоватьПодбор = Истина;
			НовыйШаблон.ИмяТабличнойЧастиПодбор = Метаданные.Документы.РасходныйОрдерНаТовары.ТабличныеЧасти.ОтгружаемыеТовары.Имя;
			НовыйШаблон.ОтсылатьГотовуюЗаписьНаСерверПодбор = Истина;
			НовыйШаблон.ТабличнуюЧастьПриЗагрузкеПодбор = 2;
			НовыйШаблон.ПечатьЭтикеткиПриПодборе = 0;
			НовыйШаблон.ПриСканированииТовараПодбор = 2;
			НовыйШаблон.ПриПревышенииЗаданияПодбор = 1;
			НовыйШаблон.ПриПревышенииЛимитаПодбор = 0;
			НовыйШаблон.РучнойВводКоличестваПодбор = Истина;
			НовыйШаблон.ПодтверждатьЭнтеромПодбор = Истина;
			НовыйШаблон.ТипБизнесПроцесса = 2;
			НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
			НовыйШаблон.РежимСозданияДокументов = 1;
			
			НовыйШаблон.Записать();
		КонецЕсли;
	КонецЕсли;
	
	ИндексПоиска = Шаблоны.Найти("Возврат от клиента");
	Если ИндексПоиска <> Неопределено Тогда			
		Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("Возврат от клиента", Истина).Пустая() Тогда 
			
			НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
			НовыйШаблон.Наименование = "Возврат от клиента";
			НовыйШаблон.ВидДокумента = "ВозвратТоваровОтКлиента";
			НовыйШаблон.ПриСканированииНовогоТовара = 2;
			НовыйШаблон.РазрешитьВыгрузкуНеполногоДокумента = 0;
			НовыйШаблон.ИспользоватьПодбор = Истина;
			НовыйШаблон.ВсеШтрихкодыТовара = Истина;
			НовыйШаблон.ИмяТабличнойЧастиПодбор = Метаданные.Документы.ВозвратТоваровОтКлиента.ТабличныеЧасти.Товары.Имя;
			НовыйШаблон.ОтсылатьГотовуюЗаписьНаСерверПодбор = Истина;
			НовыйШаблон.ТабличнуюЧастьПриЗагрузкеПодбор = 2;
			НовыйШаблон.ПечатьЭтикеткиПриПодборе = 0;
			НовыйШаблон.ПриСканированииТовараПодбор = 2;
			НовыйШаблон.ПриПревышенииЗаданияПодбор = 0;
			НовыйШаблон.ПриПревышенииЛимитаПодбор = 0;
			НовыйШаблон.РучнойВводКоличестваПодбор = Истина;
			НовыйШаблон.ПодтверждатьЭнтеромПодбор = Истина;
			НовыйШаблон.ТипБизнесПроцесса = 7;
			НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
			НовыйШаблон.РежимСозданияДокументов = 1;
			
			НовыйШаблон.Записать();
		КонецЕсли;
	КонецЕсли;
		
	ИндексПоиска = Шаблоны.Найти("Поступление товаров");
	Если ИндексПоиска <> Неопределено Тогда						
		Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("Поступление товаров", Истина).Пустая() Тогда 
			НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
			
			Попытка 
				НовыйШаблон.ИмяТабличнойЧастиПодбор = Метаданные.Документы.ПриобретениеТоваровУслуг.ТабличныеЧасти.Товары.Имя;
				НовыйШаблон.Наименование = "Поступление товаров";
				НовыйШаблон.ВидДокумента = "ПриобретениеТоваровУслуг";
			Исключение
				НовыйШаблон.ИмяТабличнойЧастиПодбор = Метаданные.Документы.ПоступлениеТоваровУслуг.ТабличныеЧасти.Товары.Имя;
				НовыйШаблон.Наименование = "Поступление товаров";
				НовыйШаблон.ВидДокумента = "ПоступлениеТоваровУслуг";
			КонецПопытки;
			
			НовыйШаблон.ОбновлятьПриКаждомОткрытии = Истина;
			НовыйШаблон.ПриСканированииНовогоТовара = 1;
			НовыйШаблон.ВсеШтрихкодыТовара = Истина;
			НовыйШаблон.ШтрихкодыТолькоПоШаблонам = Истина;
			НовыйШаблон.РазрешитьВыгрузкуНеполногоДокумента = 1;
			НовыйШаблон.ИспользоватьПодбор = Истина;
			НовыйШаблон.ОтсылатьГотовуюЗаписьНаСерверПодбор = Истина;
			НовыйШаблон.ПечатьЭтикеткиПриПодборе = 0;
			НовыйШаблон.ПриСканированииТовараПодбор = 2;
			НовыйШаблон.ПриПревышенииЗаданияПодбор = 1;
			НовыйШаблон.ПриПревышенииЛимитаПодбор = 0;
			НовыйШаблон.РучнойВводКоличестваПодбор = Истина;
			НовыйШаблон.ПодтверждатьЭнтеромПодбор = Истина;
			НовыйШаблон.ТипБизнесПроцесса = 1;
			НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
			НовыйШаблон.РежимСозданияДокументов = 1;
			
			НовыйШаблон.Записать();
		КонецЕсли;
		
	КонецЕсли;
			
	ИндексПоиска = Шаблоны.Найти("Приходный ордер");
	Если ИндексПоиска <> Неопределено Тогда		
		Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("Приходный ордер", Истина).Пустая() Тогда 
			НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
			НовыйШаблон.Наименование = "Приходный ордер";
			НовыйШаблон.ВидДокумента = "ПриходныйОрдерНаТовары";      
			НовыйШаблон.ОбновлятьПриКаждомОткрытии = Истина;
			НовыйШаблон.ПриСканированииНовогоТовара = 1;
			НовыйШаблон.ВсеШтрихкодыТовара = Истина;
			НовыйШаблон.ШтрихкодыТолькоПоШаблонам = Истина;
			НовыйШаблон.РазрешитьВыгрузкуНеполногоДокумента = 1;
			НовыйШаблон.ИспользоватьПодбор = Истина;
			НовыйШаблон.ИмяТабличнойЧастиПодбор = Метаданные.Документы.ПриходныйОрдерНаТовары.ТабличныеЧасти.Товары.Имя;
			НовыйШаблон.ОтсылатьГотовуюЗаписьНаСерверПодбор = Истина;
			НовыйШаблон.ПечатьЭтикеткиПриПодборе = 0;
			НовыйШаблон.ПриСканированииТовараПодбор = 2;
			НовыйШаблон.ПриПревышенииЗаданияПодбор = 1;
			НовыйШаблон.ПриПревышенииЛимитаПодбор = 0;
			НовыйШаблон.РучнойВводКоличестваПодбор = Истина;
			НовыйШаблон.ПодтверждатьЭнтеромПодбор = Истина;
			НовыйШаблон.ТипБизнесПроцесса = 1;
			НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
			НовыйШаблон.РежимСозданияДокументов = 1;
			
			НовыйШаблон.Записать();
		КонецЕсли;
	КонецЕсли;
	
	ИндексПоиска = Шаблоны.Найти("Быстрое перемещение");
	Если ИндексПоиска <> Неопределено Тогда		
		Если Справочники.ДатаМобайл_ШаблоныДокументов.НайтиПоНаименованию("Быстрое перемещение", Истина).Пустая() Тогда 
			НовыйШаблон = Справочники.ДатаМобайл_ШаблоныДокументов.СоздатьЭлемент();
			НовыйШаблон.Наименование = "Быстрое перемещение";
			НовыйШаблон.ВидДокумента = "ПеремещениеТоваров";
			
			НовыйШаблон.БыстроеПеремещение = 1;
			НовыйШаблон.ВводТовараБезСканирования = Истина;
			НовыйШаблон.ВводЯчейкиБезСканирования = Истина;
			НовыйШаблон.ПриСканированииНовогоТовара = 2;
			НовыйШаблон.ВсеШтрихкодыТовара = Истина;
			НовыйШаблон.ШтрихкодыТолькоПоШаблонам = Истина;
			НовыйШаблон.ИспользоватьВторойСклад = Истина;
			
			НовыйШаблон.ИспользоватьПодбор = Истина;
			НовыйШаблон.ИмяТабличнойЧастиПодбор = Метаданные.Документы.ПеремещениеТоваров.ТабличныеЧасти.Товары.Имя;
			НовыйШаблон.ТабличнуюЧастьПриЗагрузкеПодбор = 2;
			НовыйШаблон.ПриСканированииТовараПодбор = 2;
			НовыйШаблон.ПриПревышенииЛимитаПодбор = 1;
			НовыйШаблон.РучнойВводКоличестваПодбор = Истина;
			НовыйШаблон.ПодтверждатьЭнтеромПодбор = Истина;
			НовыйШаблон.ИспользованиеЯчеекПодбор = 3;
			НовыйШаблон.ЗагружатьСписокЯчеекССервераПодбор = Истина;
			НовыйШаблон.ВыгрузкаЯчеекПодбор = 1;
			НовыйШаблон.ТипБизнесПроцесса = 9;
			НовыйШаблон.РазрешеноСозданиеНаТСД = Истина;
			НовыйШаблон.РежимСозданияДокументов = 1;
			
			НовыйШаблон.Записать();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

 #КонецОбласти
