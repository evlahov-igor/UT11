
#Область ОписаниеПеременных

&НаКлиенте
Перем ГрупповаяРабота;
&НаКлиенте
Перем ИспользоватьСписокДокументов;
&НаКлиенте
Перем ВидДокумента; 
&НаКлиенте
Перем МножествоДокументовКакЗадание; 
&НаКлиенте
Перем ГрупповойДокумент; 

#КонецОбласти

#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ДокументКопирования") Тогда
		ДокументКопирования = Параметры.ДокументКопирования;
		Если ЗначениеЗаполнено(ДокументКопирования) Тогда
			ШаблонДокумента = ДокументКопирования.Шаблон;
			ИсходныйДокумент = ДокументКопирования.ИсходныйДокумент;
			
			Если ДокументКопирования.Шаблон.РаспределениеТоваров = 2 Тогда				
				СписокДокументов.Загрузить(ДокументКопирования.СписокДокументов.Выгрузить());
			ИначеЕсли ДокументКопирования.Шаблон.РаспределениеТоваров = 1 Тогда
				Для каждого Строка Из ДокументКопирования.Задания Цикл
					НоваяСтрока = СписокДокументов.Добавить();
					НоваяСтрока.ИсходныйДокумент = Строка.Задание;	
				КонецЦикла;	
			КонецЕсли;
			
			Приоритет = ДокументКопирования.Приоритет;
			ТСД = ДокументКопирования.ТСД;
			Попытка СписокТерминалов.Загрузить(ДокументКопирования.СписокТерминалов.Выгрузить()); Исключение КонецПопытки;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.ШаблонДокумента.СписокВыбора.ЗагрузитьЗначения(ПолучитьШаблоны().ВыгрузитьЗначения());
	ИспользоватьСписокДокументов = Истина;
	
	Если ЗначениеЗаполнено(ШаблонДокумента) Тогда
		СтруктураДанных = ШаблонДокументаПриИзмененииСервер(ШаблонДокумента);
		ГрупповаяРабота = СтруктураДанных.ГрупповаяРабота;
		МножествоДокументовКакЗадание = СтруктураДанных.МножествоДокументовКакЗадание;
		ГрупповойДокумент = СтруктураДанных.ГрупповойДокумент;
		ВидДокумента = СтруктураДанных.ВидДокумента;
	Иначе
		ГрупповаяРабота = Ложь;
		ВидДокумента = "";
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		ОбработкаВыбораСервер(ВыбранноеЗначение, ИспользоватьСписокДокументов, ГрупповаяРабота);
	Иначе
		Если Не ТипЗнч(ВыбранноеЗначение) = Тип("ПланОбменаСсылка.ДатаМобайл_СписокТСД") Тогда
			Если Не СписокДокументов.НайтиПоЗначению(ВыбранноеЗначение) = Неопределено Тогда Возврат; КонецЕсли;
			
			СписокДокументов.Добавить(ВыбранноеЗначение); 
		Иначе
			Если ГрупповаяРабота Тогда
				Если Не СписокТерминалов.НайтиПоЗначению(ВыбранноеЗначение) = Неопределено Тогда Возврат; КонецЕсли;
				СписокТерминалов.Добавить(ВыбранноеЗначение);
				
			Иначе
				СписокТерминалов.Очистить();
				СписокТерминалов.Вставить(0, ВыбранноеЗначение);				
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	
	Попытка Элементы.СписокДокументов.Обновить(); Исключение КонецПопытки;
	Попытка Элементы.СписокТерминалов.Обновить(); Исключение КонецПопытки;
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОтредактированСписокЗначений" Тогда
		Выполнить("" + Источник + ".ЗагрузитьЗначения(Параметр);");
	КонецЕсли;    
	
КонецПроцедуры

#КонецОбласти

#Область СобытияЭлементовФормы

&НаСервере
Процедура СохранитьДокументНаСервере(ИспользоватьСписокДокументов, ГрупповойДокумент, МножествоДокументовКакЗадание, ГрупповаяРабота, ВыбранныйВидДокумента)    
	
	Если ГрупповойДокумент Или МножествоДокументовКакЗадание Тогда
		
		ДокументТСД = Справочники.ДатаМобайл_ДокументыТСД.СоздатьЭлемент();		
		
		Если ВыбранныйВидДокумента = "ЗаданиеНаПеревозку" И СписокДокументов.Количество() > 0 Тогда
			//ВЫБЕРЕМ ЗАКАЗЫ В ЗАДАНИИ НА ПЕРЕВОЗКУ
			СписокДокументовЗаказов = ДатаМобайл_ОбщийМодуль.ПолучитьСписокЗаказовЗаданияНаПеревозку(СписокДокументов[0].Значение);
			Если Не МножествоДокументовКакЗадание Тогда
				Для каждого док Из СписокДокументовЗаказов Цикл
					нстр = ДокументТСД.СписокДокументов.Добавить();
					нстр.ИсходныйДокумент = док; 
				КонецЦикла;
			Иначе
				Для каждого док Из СписокДокументовЗаказов Цикл
					НоваяСтрока = ДокументТСД.Задания.Добавить();
					НоваяСтрока.Задание = док;
					Попытка НоваяСтрока.Контрагент = док.Контрагент Исключение КонецПопытки;
					Попытка НоваяСтрока.Склад = док.Склад Исключение КонецПопытки; 
				КонецЦикла;	
			КонецЕсли;
		Иначе
			//ОБЫЧНЫА РАБОТА
			Если Не МножествоДокументовКакЗадание Тогда
				Для каждого док Из СписокДокументов Цикл
					нстр = ДокументТСД.СписокДокументов.Добавить();
					нстр.ИсходныйДокумент = док.Значение; 
				КонецЦикла;
			Иначе
				Для каждого док Из СписокДокументов Цикл
					НоваяСтрока = ДокументТСД.Задания.Добавить();
					НоваяСтрока.Задание = док.Значение;
					Попытка НоваяСтрока.Контрагент = док.Значение.Контрагент Исключение КонецПопытки;
					Попытка НоваяСтрока.Склад = док.Значение.Склад Исключение КонецПопытки; 
				КонецЦикла;	
			КонецЕсли;
		КонецЕсли;
										
		Если СписокТерминалов.Количество() = 1 И Не ГрупповаяРабота Тогда
			ДокументТСД.ТСД = СписокТерминалов.Получить(0).Значение; 
		Иначе
			Для каждого стрТСД Из СписокТерминалов Цикл
				нстр = ДокументТСД.СписокТерминалов.Добавить();
				нстр.ТСД = стрТСД.Значение;
			КонецЦикла;
		КонецЕсли;	
		
		ТекстКомментария = ""; 					
		Для каждого СтрокаСписка Из ДокументТСД.СписокДокументов Цикл				
			Попытка ТекстКомментария = ТекстКомментария + Строка(СтрокаСписка.ИсходныйДокумент.Номер) + " от " + Строка(СтрокаСписка.ИсходныйДокумент.Дата) +" "; Исключение КонецПопытки;
		КонецЦикла;
		Для каждого СтрокаСписка Из ДокументТСД.Задания Цикл				
			Попытка ТекстКомментария = ТекстКомментария + Строка(СтрокаСписка.Задание.Номер) + " от " + Строка(СтрокаСписка.Задание.Дата) +" "; Исключение КонецПопытки;
		КонецЦикла;	 
		
		ДокументТСД.Комментарий = ТекстКомментария;			
		ДокументТСД.Шаблон = ШаблонДокумента;
		ДокументТСД.Приоритет = Приоритет;
		
		Попытка
			ДокументТСД.Записать();
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
		
	Иначе		
		Если СписокДокументов.Количество() Тогда
			Для каждого док Из СписокДокументов Цикл
				ДокументТСД = Справочники.ДатаМобайл_ДокументыТСД.СоздатьЭлемент();
				ДокументТСД.ИсходныйДокумент = док.Значение;
				
				Если СписокТерминалов.Количество() = 1 И Не ГрупповаяРабота Тогда
					ДокументТСД.ТСД = СписокТерминалов.Получить(0).Значение; 
				Иначе
					Для каждого стрТСД Из СписокТерминалов Цикл
						нстр = ДокументТСД.СписокТерминалов.Добавить();
						нстр.ТСД = стрТСД.Значение;
					КонецЦикла;
				КонецЕсли;
				
				ТекстКомментария = "";
				Попытка ТекстКомментария = ДокументТСД.ИсходныйДокумент.Комментарий; Исключение КонецПопытки;
				
				ДокументТСД.Комментарий = ТекстКомментария;			
				ДокументТСД.Шаблон = ШаблонДокумента;
				ДокументТСД.Приоритет = Приоритет;
				
				Попытка
					ДокументТСД.Записать();
				Исключение
					Сообщить(ОписаниеОшибки());
				КонецПопытки;
			КонецЦикла;
		Иначе
			ДокументТСД = Справочники.ДатаМобайл_ДокументыТСД.СоздатьЭлемент();
			
			Если СписокТерминалов.Количество() = 1 И Не ГрупповаяРабота Тогда
				ДокументТСД.ТСД = СписокТерминалов.Получить(0).Значение; 
			Иначе
				Для каждого стрТСД Из СписокТерминалов Цикл
					нстр = ДокументТСД.СписокТерминалов.Добавить();
					нстр.ТСД = стрТСД.Значение;
				КонецЦикла;
			КонецЕсли;
			
			ТекстКомментария = "";
			
			ДокументТСД.Комментарий = ТекстКомментария;			
			ДокументТСД.Шаблон = ШаблонДокумента;
			ДокументТСД.Приоритет = Приоритет;
			
			Попытка
				ДокументТСД.Записать();
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;		
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДокумент(Команда, ПараметрыЗаписи)
	
	ВключенаГрупповаяРабота = РеквизитГрупповаяРабота(ШаблонДокумента);
	ВыбранныйВидДокумента = РеквизитВидДокумента(ШаблонДокумента);
	
	Если Не ВключенаГрупповаяРабота И СписокДокументов.Количество() = 0 Тогда
		Сообщить("Укажите исходный документ!");
		Возврат;
	КонецЕсли;	
	
	Если ПараметрыЗаписи = Неопределено Тогда
		ПараметрыЗаписи = Новый Структура;	
	КонецЕсли; 
	
	Если ПараметрыЗаписи.Свойство("ВопросЗадан") Тогда
		ЭтаФорма.ПроверитьЗаполнение();	
		СохранитьДокументНаСервере(ИспользоватьСписокДокументов, ГрупповойДокумент, МножествоДокументовКакЗадание, ГрупповаяРабота, ВыбранныйВидДокумента);
		ЭтаФорма.ВладелецФормы.Элементы.СписокДокументов.Обновить();
		ЭтаФорма.Закрыть();
	Иначе	
		ПередЗаписью(ПараметрыЗаписи);		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблонДокументаПриИзменении(Элемент)
	
	СтруктураДанных = ШаблонДокументаПриИзмененииСервер(ШаблонДокумента);
	МножествоДокументовКакЗадание = СтруктураДанных.МножествоДокументовКакЗадание;
	ГрупповойДокумент = СтруктураДанных.ГрупповойДокумент; 
	ВидДокумента = СтруктураДанных.ВидДокумента;
	ГрупповаяРабота = СтруктураДанных.ГрупповаяРабота;
	
	Если Не ГрупповаяРабота И СписокТерминалов.Количество() > 1 Тогда
		СписокТерминалов.Очистить();	
	КонецЕсли;	
	
	СписокДокументов.Очистить();
	СписокДокументов.ТипЗначения = Новый ОписаниеТипов("ДокументСсылка." + ВидДокумента);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ШаблонДокументаПриИзмененииСервер(ШаблонДокумента)
	
	СтруктураДанных = Новый Структура;
	
	СтруктураДанных.Вставить("ГрупповаяРабота", ШаблонДокумента.ГрупповаяРабота);
	ИспользоватьСписокДокументов = Истина;
	СтруктураДанных.Вставить("ИспользоватьСписокДокументов", ИспользоватьСписокДокументов);
	СтруктураДанных.Вставить("ВидДокумента", ШаблонДокумента.ВидДокумента);
	СтруктураДанных.Вставить("МножествоДокументовКакЗадание", ШаблонДокумента.РаспределениеТоваров = 1);
	СтруктураДанных.Вставить("ГрупповойДокумент", ШаблонДокумента.РаспределениеТоваров = 2);
	
	Возврат СтруктураДанных;
	
КонецФункции

&НаСервере
Процедура ОбработкаВыбораСервер(ВыбранноеЗначение, ИспользоватьСписокДокументов, ГрупповаяРабота)
	
	Для каждого Значение Из ВыбранноеЗначение Цикл
		Если Не ТипЗнч(Значение) = Тип("ПланОбменаСсылка.ДатаМобайл_СписокТСД") Тогда
			Если Не СписокДокументов.НайтиПоЗначению(Значение) = Неопределено Тогда Продолжить; КонецЕсли;
			
			СписокДокументов.Добавить(Значение);
			
		Иначе
			Если ГрупповаяРабота Тогда
				Если Не СписокТерминалов.НайтиПоЗначению(Значение) = Неопределено Тогда Продолжить; КонецЕсли;
				СписокТерминалов.Добавить(Значение);
				
			Иначе
				СписокТерминалов.Очистить();
				СписокТерминалов.Вставить(0, Значение);				
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИсходныеДокументы(Команда)
	
	Если Не ЗначениеЗаполнено(ШаблонДокумента) Тогда
		Сообщить("Выберите шаблон!");
		Возврат;
	КонецЕсли;	
	
	ПараметрыПодбора = Новый Структура; 
	ПараметрыПодбора.Вставить("МножественныйВыбор", Истина);
	ПараметрыПодбора.Вставить("РежимВыбора", Истина);
	Подбор=Получитьформу("Документ." + ВидДокумента + ".ФормаВыбора", ПараметрыПодбора, ЭтаФорма);
	Подбор.ЗакрыватьПриВыборе = Истина;
	Подбор.Открыть();    		
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьТерминалы(Команда)
	
	ПараметрыПодбора = Новый Структура; 
	ПараметрыПодбора.Вставить("МножественныйВыбор", Истина);
	ПараметрыПодбора.Вставить("РежимВыбора", Истина);
	Подбор = Получитьформу("ПланОбмена.ДатаМобайл_СписокТСД.Форма.ФормаСпискаУправляемая", ПараметрыПодбора, ЭтаФорма);
	Подбор.ЗакрыватьПриВыборе = Истина;
	Подбор.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	Подбор.Открыть(); 
	
КонецПроцедуры

&НаСервере
Функция ПолучитьШаблоны()
	
	СписокШаблоныДокументов = Новый СписокЗначений();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДатаМобайл_ШаблоныДокументов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ДатаМобайл_ШаблоныДокументов КАК ДатаМобайл_ШаблоныДокументов
	|ГДЕ
	|	НЕ ДатаМобайл_ШаблоныДокументов.ПометкаУдаления";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СписокШаблоныДокументов.Добавить(Выборка.Ссылка);		
	КонецЦикла; 		
	
	Возврат СписокШаблоныДокументов;
	
КонецФункции

&НаКлиенте
Процедура СписокДокументовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если СписокДокументов.Количество() = 0 Тогда
		Если Не ЗначениеЗаполнено(ШаблонДокумента) Тогда
			Сообщить("Выберите шаблон!");
			Возврат;
		КонецЕсли;	
		
		ПараметрыПодбора = Новый Структура; 
		ПараметрыПодбора.Вставить("МножественныйВыбор", Истина);
		ПараметрыПодбора.Вставить("РежимВыбора", Истина);
		Подбор = Получитьформу("Документ." + ВидДокумента + ".ФормаВыбора", ПараметрыПодбора, ЭтаФорма);
		Подбор.ЗакрыватьПриВыборе = Истина;
		Подбор.Открыть(); 
		
	Иначе
		ПараметрыФормыСписка = Новый Структура;
		ПараметрыФормыСписка.Вставить("ЗначенияСписка"   , СписокДокументов.ВыгрузитьЗначения());
		ПараметрыФормыСписка.Вставить("ИмяСпискаЗначений", "СписокДокументов");
		ПараметрыФормыСписка.Вставить("ОписаниеТипов"    , СписокДокументов.ТипЗначения);
		ПараметрыФормыСписка.Вставить("ИмяФормыВыбора"   , "Документ." + ВидДокумента + ".ФормаВыбора");
		
		ОткрытьФорму("Обработка.ДатаМобайл_АРМДиспетчера.Форма.ФормаРедактированияСписка", ПараметрыФормыСписка, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокТерминаловНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если СписокТерминалов.Количество() = 0 Тогда
		Если Не ЗначениеЗаполнено(ШаблонДокумента) Тогда
			Сообщить("Выберите шаблон!");
			Возврат;
		КонецЕсли;	
		
		ПараметрыПодбора = Новый Структура; 
		ПараметрыПодбора.Вставить("МножественныйВыбор", Истина);
		ПараметрыПодбора.Вставить("РежимВыбора", Истина);
		Подбор = Получитьформу("ПланОбмена.ДатаМобайл_СписокТСД.ФормаВыбора", ПараметрыПодбора, ЭтаФорма);
		Подбор.ЗакрыватьПриВыборе = Истина;
		
		Попытка
			Если ГрупповаяРабота Тогда
				Подбор.ТекущийЭлемент.РежимВыделения = РежимВыделенияТаблицы.Множественный;
			Иначе
				Подбор.ТекущийЭлемент.РежимВыделения = РежимВыделенияТаблицы.Одиночный;
			КонецЕсли;
		Исключение КонецПопытки;
		
		Подбор.Открыть(); 
		
	Иначе
		Если ГрупповаяРабота Тогда
			ПараметрыФормыСписка = Новый Структура;
			ПараметрыФормыСписка.Вставить("ЗначенияСписка"   , СписокТерминалов.ВыгрузитьЗначения());
			ПараметрыФормыСписка.Вставить("ИмяСпискаЗначений", "СписокТерминалов");
			ПараметрыФормыСписка.Вставить("ОписаниеТипов"    , СписокТерминалов.ТипЗначения);
			ПараметрыФормыСписка.Вставить("ИмяФормыВыбора"   , "ПланОбмена.ДатаМобайл_СписокТСД.ФормаВыбора");
			
			ОткрытьФорму("Обработка.ДатаМобайл_АРМДиспетчера.Форма.ФормаРедактированияСписка", ПараметрыФормыСписка, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Иначе
			ПараметрыПодбора = Новый Структура; 
			ПараметрыПодбора.Вставить("МножественныйВыбор", Ложь);
			ПараметрыПодбора.Вставить("РежимВыбора", Истина);
			Подбор = Получитьформу("ПланОбмена.ДатаМобайл_СписокТСД.ФормаВыбора", ПараметрыПодбора, ЭтаФорма);
			Подбор.ЗакрыватьПриВыборе = Истина;
			Попытка Подбор.ТекущийЭлемент.РежимВыделения = РежимВыделенияТаблицы.Одиночный; Исключение КонецПопытки;
			Подбор.Открыть();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(ПараметрыЗаписи)
	
	МассивПовторяющихся = УжеЕсть(СписокДокументов.ВыгрузитьЗначения());
	КоличествоПовторяющихся = МассивПовторяющихся.Количество();
	
	Если КоличествоПовторяющихся > 0 Тогда
		Оповещение = Новый ОписаниеОповещения("ПоказатьВопросЗавершение", ЭтаФорма, ПараметрыЗаписи);
		
		ТекстВопроса = "";
		Сч = 0;
		
		Для каждого СтрокаМассива Из МассивПовторяющихся Цикл
			Сч = Сч + 1;
			ЭтоПоследний = Сч = КоличествоПовторяющихся;
			
			ТекстВопроса = ТекстВопроса + "Для документа " + СтрокаМассива + " уже создан документ ТСД." + ?(ЭтоПоследний, " Продолжить?", "") + Символы.ПС;
		КонецЦикла; 
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 20, КодВозвратаДиалога.Нет,, КодВозвратаДиалога.Нет);
	Иначе
		ПараметрыЗаписи.Вставить("ВопросЗадан", Истина);		
		СохранитьДокумент( , ПараметрыЗаписи);	
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция УжеЕсть(МассивДокументов)
	
	МассивПовторяющихся = Новый Массив;
	
	Если МассивДокументов <> Неопределено Тогда
		Если МассивДокументов.Количество() > 0 Тогда
			Запрос = Новый Запрос("ВЫБРАТЬ
			|	ДатаМобайл_ДокументыТСД.ИсходныйДокумент КАК ИсходныйДокумент
			|ИЗ
			|	Справочник.ДатаМобайл_ДокументыТСД КАК ДатаМобайл_ДокументыТСД
			|ГДЕ
			|	ДатаМобайл_ДокументыТСД.ИсходныйДокумент В(&ИсходныйДокумент)
			|
			|СГРУППИРОВАТЬ ПО
			|	ДатаМобайл_ДокументыТСД.ИсходныйДокумент");
			
			Запрос.УстановитьПараметр("ИсходныйДокумент", МассивДокументов);
			Рез = Запрос.Выполнить().Выбрать();
			Пока Рез.Следующий() Цикл
				МассивПовторяющихся.Добавить(Рез.ИсходныйДокумент);		
			КонецЦикла; 	
		КонецЕсли;	
	КонецЕсли;
	
	Возврат МассивПовторяющихся;
	
КонецФункции

&НаКлиенте
Процедура ПоказатьВопросЗавершение(Результат, ПараметрыЗаписи) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПараметрыЗаписи.Вставить("ВопросЗадан", Истина);		
		СохранитьДокумент( , ПараметрыЗаписи);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция РеквизитГрупповаяРабота(Шаблон)
	
	Возврат Шаблон.ИспользоватьГрупповойДокумент;
	
КонецФункции

&НаСервереБезКонтекста
Функция РеквизитВидДокумента(Шаблон)
	
	Возврат Шаблон.ВидДокумента;
	
КонецФункции

#КонецОбласти