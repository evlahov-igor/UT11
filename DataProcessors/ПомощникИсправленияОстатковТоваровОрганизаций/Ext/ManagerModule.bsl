#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Выполняет методы модуля объекта обработки помощника исправления.
//
// Параметры:
//  Параметры - Структура - Структура с полями:
//		* СтруктураОбъектаОбработки - Структура - Структура, из которой будет восстановлен объект обработки. Поля структуры должны совпадать с
//			полями метаданных обработки ПомощникИсправленияОстатковТоваровОрганизаций.
//		* ИменаМетодов - Массив - Массив строк с именами методов, которые нужно выполнить.
//		* ПараметрыМетодов - Структура - Структура, где ключи совпадают с именами методов, а значения содержат массивы параметров этих методов.
//  АдресРезультата - Строка - Адрес во временное хранилище, по которому нужно поместить структуру объекта после выполнения всех методов.
//  ОбработкаОбъект	- ОбработкаОбъект.ПомощникИсправленияОстатковТоваровОрганизаций - объект обработки, если его не нужно восстанавливать из
//		структуры.
//
Процедура ВыполнитьМетодыОбъекта(Параметры, АдресРезультата = Неопределено, ОбработкаОбъект = Неопределено) Экспорт
	
	Если ОбработкаОбъект = Неопределено Тогда
		ОбработкаОбъект = ОбработкаОбъект(Параметры.СтруктураОбъектаОбработки);
	КонецЕсли;
	
	КраткоеПредставлениеОшибки = "";
	
	Методы = СтрРазделить(Параметры.ИменаМетодов, ",");
	Для Каждого Метод Из Методы Цикл
		Попытка
			Метод = СокрЛП(Метод);
			Если Метод = "ОбновитьДанныеПоОтрицательнымОстаткамИСальдо" Тогда
				ОбработкаОбъект.ОбновитьДанныеПоОтрицательнымОстаткамИСальдо();
			ИначеЕсли Метод = "ЗаполнитьМесяцИсправления" Тогда
				ОбработкаОбъект.ЗаполнитьМесяцИсправления();
			ИначеЕсли Метод = "СформироватьНовыеРезервы" Тогда
				ОбработкаОбъект.СформироватьНовыеРезервы();
			ИначеЕсли Метод = "СформироватьНовыеРезервыПоНовымНастройкам" Тогда
				ОбработкаОбъект.СформироватьНовыеРезервыПоНовымНастройкам();
			ИначеЕсли Метод = "СформироватьИсправленияРазвернутогоСальдо" Тогда
				ОбработкаОбъект.СформироватьИсправленияРазвернутогоСальдо();
			ИначеЕсли Метод = "ТипыЗачетаОстатковРазвернутогоСальдо" Тогда
				ОбработкаОбъект.ТипыЗачетаОстатковРазвернутогоСальдо();
			ИначеЕсли Метод = "ПерезаполнитьВидыЗапасов" Тогда
				ОбработкаОбъект.ПерезаполнитьВидыЗапасов();
			ИначеЕсли Метод = "ЗаполнитьНовыеНастройкиПередачи" Тогда
				ОбработкаОбъект.ЗаполнитьНовыеНастройкиПередачи();
			ИначеЕсли Метод = "ЗаполнитьРаспоряженияНаОформлениеОприходований" Тогда
				ОбработкаОбъект.ЗаполнитьРаспоряженияНаОформлениеОприходований();
			ИначеЕсли Метод = "ЗаполнитьТребуетсяПереформированиеРезервов" Тогда
				ОбработкаОбъект.ЗаполнитьТребуетсяПереформированиеРезервов();
			ИначеЕсли Метод = "ЗаполнитьТребуетсяИсправлениеРазвернутогоСальдо" Тогда
				ОбработкаОбъект.ЗаполнитьТребуетсяИсправлениеРазвернутогоСальдо();
			ИначеЕсли Метод = "СформироватьИсправительныеСчетаФактуры" Тогда
				ОбработкаОбъект.СформироватьИсправительныеСчетаФактуры();
			ИначеЕсли Метод = "СформироватьРезультатКонтроляОформленияДокументовТовародвижения" Тогда
				ОбработкаОбъект.СформироватьРезультатКонтроляОформленияДокументовТовародвижения(
					Параметры.ПараметрыМетодов.СформироватьРезультатКонтроляОформленияДокументовТовародвижения[0],
					Параметры.ПараметрыМетодов.СформироватьРезультатКонтроляОформленияДокументовТовародвижения[1]);
			ИначеЕсли Метод = "Инициализировать" Тогда
				ОбработкаОбъект.Инициализировать();
			Иначе
				ТекстИсключения = НСтр("ru = 'Работа с методом %Метод% не поддерживается'");
				ТекстИсключения = СтрЗаменить(ТекстИсключения, "%Метод%", Метод);
				ВызватьИсключение ТекстИсключения;
			КонецЕсли;
		Исключение
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			КраткоеПредставлениеОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
			Прервать;
		КонецПопытки;	
	КонецЦикла;
	
	Если ЗначениеЗаполнено(АдресРезультата) Тогда
		ПоместитьВоВременноеХранилище(ОбработкаОбъект.СтруктураДанных(), АдресРезультата);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КраткоеПредставлениеОшибки) Тогда
		ВызватьИсключение КраткоеПредставлениеОшибки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОбработкаОбъект(СтруктураОбъектаОбработки)
	
	ОбработкаОбъект = Обработки.ПомощникИсправленияОстатковТоваровОрганизаций.Создать();
	Для Каждого ПолеСтруктуры Из СтруктураОбъектаОбработки Цикл
		Если ТипЗнч(ПолеСтруктуры.Значение) = Тип("ТаблицаЗначений") Тогда
			ОбработкаОбъект[ПолеСтруктуры.Ключ].Загрузить(ПолеСтруктуры.Значение);
		Иначе
			ОбработкаОбъект[ПолеСтруктуры.Ключ] = ПолеСтруктуры.Значение;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ОбработкаОбъект;
	
КонецФункции

#КонецОбласти

#КонецЕсли