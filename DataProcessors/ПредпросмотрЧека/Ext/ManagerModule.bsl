#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если НЕ Параметры.Свойство("ПараметрыОперации")
		ИЛИ НЕ Параметры.ПараметрыОперации.Свойство("ДокументСсылка") Тогда
		
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ВыбраннаяФорма = "Форма";
	
	Параметры.Вставить(
		"ПодключенноеОборудованиеПечатиЧеков",
		ФормированиеФискальныхЧековСервер.ПодключенноеОборудованиеПечатиЧеков(Параметры.ПараметрыОперации));
	
	Если НЕ ПодключенноеОборудованиеНастроено(Параметры.ПодключенноеОборудованиеПечатиЧеков) Тогда
		ВыбраннаяФорма = "ОшибкаПодключенияККТ";
	КонецЕсли;
	
	Если НЕ ВалютаДокументаВалютаРеглУчета(Параметры.ПараметрыОперации) Тогда
		ВыбраннаяФорма = "ОшибкаИспользуемойВалюты";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВалютаДокументаВалютаРеглУчета(ОсновыеПараметрыОперации)
	
	ВалютаДокументаВалютаРеглУчета = Истина;
	
	#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
		ВалютаРегл = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(ОсновыеПараметрыОперации.ДокументСсылка.Организация);
		
		Если ЗначениеЗаполнено(ОсновыеПараметрыОперации.Валюта)
			И ЗначениеЗаполнено(ОсновыеПараметрыОперации.ВалютаВзаиморасчетов) Тогда
			
			Если ОсновыеПараметрыОперации.Валюта <> ВалютаРегл
				ИЛИ ОсновыеПараметрыОперации.ВалютаВзаиморасчетов <> ВалютаРегл Тогда
				
				ВалютаДокументаВалютаРеглУчета = Ложь;
			КонецЕсли;
			
		ИначеЕсли ЗначениеЗаполнено(ОсновыеПараметрыОперации.Валюта) Тогда
			
			Если ОсновыеПараметрыОперации.Валюта <> ВалютаРегл Тогда
				ВалютаДокументаВалютаРеглУчета = Ложь;
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(ОсновыеПараметрыОперации.ДокументСсылка) = Тип("ДокументСсылка.ВзаимозачетЗадолженности") Тогда
			
			// ОК
			
		Иначе
			
			ВалютаДокументаВалютаРеглУчета = Ложь;
			
		КонецЕсли;
	
	#КонецЕсли
	
	Возврат ВалютаДокументаВалютаРеглУчета;
	
КонецФункции

Функция ПодключенноеОборудованиеНастроено(ПодключенноеОборудованиеПечатиЧеков)
	
	Возврат ПодключенноеОборудованиеПечатиЧеков.Количество() > 0;
	
КонецФункции

#Область Печать

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СогласиеНаОбработкуПерсональныхДанных") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"СогласиеНаОбработкуПерсональныхДанных",
			НСтр("ru = 'Согласие на обработку персональных данных'"),
			СформироватьПечатнуюФормуСогласиеНаОбработкуПерсональныхДанных(МассивОбъектов, ПараметрыПечати, ПараметрыПечати),
			,
			"Обработка.ПредпросмотрЧека.СогласиеНаОбработкуПерсональныхДанных");
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуСогласиеНаОбработкуПерсональныхДанных(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПредпросмотрЧека.ПФ_MXL_СогласиеНаОбработкуПерсональныхДанных");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПредпросмотрЧека_СогласиеНаОбработкуПерсональныхДанных";
	
	Область = Макет.ПолучитьОбласть("Шапка");
	ТабличныйДокумент.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("ОписаниеСогласия");
	ТабличныйДокумент.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("ПостояннаяЧастьПерсональныхДанных");
	ТабличныйДокумент.Вывести(Область);
	
	Если ПараметрыПечати.ТипПерсональныхДанных = "ИНН" Тогда
		Область = Макет.ПолучитьОбласть("ПерсональныеДанныеИНН");
		ТабличныйДокумент.Вывести(Область);
	Иначе
		Область = Макет.ПолучитьОбласть("ПерсональныеДанныеПаспортныеДанные");
		ТабличныйДокумент.Вывести(Область);
	КонецЕсли;
	
	Область = Макет.ПолучитьОбласть("Подвал");
	ТабличныйДокумент.Вывести(Область);
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли