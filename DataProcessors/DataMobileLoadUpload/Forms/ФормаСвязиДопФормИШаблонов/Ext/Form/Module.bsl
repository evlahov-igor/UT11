&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// первоначальные настройки
	Если Параметры.Свойство("ВидДокумента") Тогда
		ВидДокумента = Параметры.ВидДокумента;
	КонецЕсли;
	
	Если Параметры.Свойство("ИД") Тогда
		ИД = Параметры.ИД;
	КонецЕсли;
	
	Если Параметры.Свойство("Использование") Тогда
		Использование = Параметры.Использование;
		Элементы.Использование.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("ПодборРазмещение") Тогда
		ПодборРазмещение = Параметры.ПодборРазмещение;
		Элементы.ПодборРазмещение.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("Название") Тогда
		Название = Параметры.Название;
	КонецЕсли;
	
	Если Параметры.Свойство("ИмяТабЧастиПодбор") Тогда
		ИмяТабЧастиПодбор = Параметры.ИмяТабЧастиПодбор;
	КонецЕсли;
	
	Если Параметры.Свойство("ИмяТабЧастиПриемка") Тогда
		ИмяТабЧастиПриемка = Параметры.ИмяТабЧастиПриемка;
	КонецЕсли;
	
	Если Параметры.Свойство("НеобходимостьЗаполнения") Тогда
		НеобходимостьЗаполнения = Параметры.НеобходимостьЗаполнения;
	КонецЕсли;
	
	Если Параметры.Свойство("РежимВвода") Тогда
		РежимВвода = Параметры.РежимВвода;
	КонецЕсли;
	
	Если Параметры.Свойство("ТипДанных") Тогда
		ТипДанных = Параметры.ТипДанных;
	КонецЕсли;
	
	Если Параметры.Свойство("ЗаполняемыйРеквизит") Тогда
		ЗаполняемыйРеквизит = Параметры.ЗаполняемыйРеквизит;
	КонецЕсли;
	
	Если Параметры.Свойство("ПроверкаПоЗаданию") Тогда
		ПроверкаПоЗаданию = Параметры.ПроверкаПоЗаданию;
	КонецЕсли;
	
	Если Параметры.Свойство("ИспользоватьВПоискеСтрок") Тогда
		ИспользоватьВПоискеСтрок = Параметры.ИспользоватьВПоискеСтрок;
	КонецЕсли;
	
	// для строк доп. режим
	Если Использование = "Строка" Тогда
		Элементы.РежимВвода.СписокВыбора.Добавить(2, "Автоматически");
		Элементы.ПодборРазмещение.Видимость = Истина;
	Иначе
		Элементы.ПодборРазмещение.Видимость = Ложь;
	КонецЕсли; 
	
	ЗаполнитьСписокВыбораТиповДанных();
	ЗаполнитьСписокВыбораРеквизитовДокумента();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЭтаФорма.ОбновитьОтображениеДанных();	
	ВидимостьПроверкиПоЗаданию();
	ВидимостьИспользоватьВПоискеСтрок();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьНазванияОбъектов(ТипОбъекта = "Справочники")
	
	СписокОбъектов = Новый СписокЗначений; 
	
	Для каждого стр Из Метаданные[ТипОбъекта] Цикл
		СписокОбъектов.Добавить(стр.Имя, стр.Имя);
	КонецЦикла; 
	
	Возврат СписокОбъектов;
	
КонецФункции

&НаСервереБезКонтекста
Функция ШагиНаФормеТипДанныхНачалоВыбораНаСервере()
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить("Число", "Число");
	СписокВыбора.Добавить("Текст", "Текст");
	СписокВыбора.Добавить("Дата", "Дата");
	СписокВыбора.Добавить("Булево", "Булево");
	СписокВыбора.Добавить("Справочники", "Справочники");
	СписокВыбора.Добавить("ПланыВидовХарактеристик", "Планы видов характеристик");
	СписокВыбора.Добавить("Перечисления", "Перечисления");
	
	Возврат СписокВыбора;
	
КонецФункции

&НаСервереБезКонтекста
Функция ШагиНаФормеЗаполняемыйРеквизитНачалоВыбораНаСервере(лВидДокумента, лИмяТабЧасти, лИспользование, Знач лТипДанных)
	
	СписокВыбора = Новый СписокЗначений;
	
	Если Не ЗначениеЗаполнено(лТипДанных) Тогда
		Возврат СписокВыбора.ВыгрузитьЗначения();
	КонецЕсли;
	
	ИскомыеРеквизиты = Новый Массив();
	Если лИспользование = "Шапка" Тогда
		Попытка ИскомыеРеквизиты = Метаданные.Документы[лВидДокумента].Реквизиты; Исключение КонецПопытки;
	ИначеЕсли лИспользование = "Строка" Тогда
		Попытка ИскомыеРеквизиты = Метаданные.Документы[лВидДокумента].ТабличныеЧасти[лИмяТабЧасти].Реквизиты; Исключение КонецПопытки;
	КонецЕсли;  
	
	лТипДанных = СтрЗаменить(лТипДанных, "Справочники.","");
	лТипДанных = СтрЗаменить(лТипДанных, "Перечисления.","");
	лТипДанных = СтрЗаменить(лТипДанных, "ПланыВидовХарактеристик.","");
		
	Для каждого реквизитПоиска Из ИскомыеРеквизиты Цикл
		Если лТипДанных = "Текст" Тогда
			Если реквизитПоиска.Тип.СодержитТип(Тип("Строка")) Тогда
				СписокВыбора.Добавить(реквизитПоиска.Имя, реквизитПоиска.Синоним);
			КонецЕсли;
		ИначеЕсли лТипДанных = "Число" Тогда
			Если реквизитПоиска.Тип.СодержитТип(Тип("Строка")) или реквизитПоиска.Тип.СодержитТип(Тип("Число")) Тогда
				СписокВыбора.Добавить(реквизитПоиска.Имя, реквизитПоиска.Синоним);
			КонецЕсли;
		ИначеЕсли лТипДанных = "Дата" Тогда
			Если реквизитПоиска.Тип.СодержитТип(Тип("Строка")) или реквизитПоиска.Тип.СодержитТип(Тип("Дата")) Тогда
				СписокВыбора.Добавить(реквизитПоиска.Имя, реквизитПоиска.Синоним);
			КонецЕсли;
		ИначеЕсли лТипДанных = "Булево" Тогда
			Если реквизитПоиска.Тип.СодержитТип(Тип("Булево")) Тогда
				СписокВыбора.Добавить(реквизитПоиска.Имя, реквизитПоиска.Синоним);
			КонецЕсли;	
		Иначе
			Если Не Метаданные.Справочники.Найти(лТипДанных) = Неопределено Тогда
				ТипЭлемента = "СправочникСсылка." + лТипДанных;
			Иначе
				Если Не Метаданные.ПланыВидовХарактеристик.Найти(лТипДанных) = Неопределено Тогда
					ТипЭлемента = "ПланВидовХарактеристикСсылка." + лТипДанных;
				Иначе
					ТипЭлемента = "ПеречислениеСсылка." + лТипДанных;
				КонецЕсли;
			КонецЕсли;
			
			Если реквизитПоиска.Тип.СодержитТип(Тип("Строка")) или реквизитПоиска.Тип.СодержитТип(Тип(ТипЭлемента)) Тогда
				СписокВыбора.Добавить(реквизитПоиска.Имя, реквизитПоиска.Синоним);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокВыбора.ВыгрузитьЗначения();
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокВыбораРеквизитовДокумента()
	
	Если ПодборРазмещение = 0 Тогда
		ИмяТабЧасти = ИмяТабЧастиПодбор;
	Иначе
		ИмяТабЧасти = ИмяТабЧастиПриемка;
	КонецЕсли;
	
	МассивЗаполняемыхРеквизитов = ШагиНаФормеЗаполняемыйРеквизитНачалоВыбораНаСервере(ВидДокумента,ИмяТабЧасти,Использование,ТипДанных);
	Элементы.ЗаполняемыйРеквизит.СписокВыбора.ЗагрузитьЗначения(МассивЗаполняемыхРеквизитов); 
	
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьСписокВыбораТиповДанных()	
	
	Если ЗначениеЗаполнено(ТипДанных) Тогда		
		МассивТиповЗначений = Новый Массив;
		МассивТиповЗначений.Добавить(СокрЛП(ТипДанных));		
	Иначе
		МассивТиповЗначений = ШагиНаФормеТипДанныхНачалоВыбораНаСервере().ВыгрузитьЗначения();		
	КонецЕсли;

	Элементы.ТипДанных.СписокВыбора.ЗагрузитьЗначения(МассивТиповЗначений); 
	
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	
	Если Не ЗначениеЗаполнено(ЗаполняемыйРеквизит) Тогда
		ПоказатьПредупреждение(, "Не заполнен ''Реквизит документа''!", 2);
		Возврат;
	КонецЕсли;	
	
	ПараметрыСохранения = Новый Структура;
	ПараметрыСохранения.Вставить("Название"                , Название);
	ПараметрыСохранения.Вставить("Использование"           , Использование);
	ПараметрыСохранения.Вставить("ПодборРазмещение"        , ПодборРазмещение);
	ПараметрыСохранения.Вставить("НеобходимостьЗаполнения" , НеобходимостьЗаполнения);
	ПараметрыСохранения.Вставить("РежимВвода"              , РежимВвода);
	ПараметрыСохранения.Вставить("ТипДанных"               , ТипДанных);
	ПараметрыСохранения.Вставить("ЗаполняемыйРеквизит"     , ЗаполняемыйРеквизит);
	ПараметрыСохранения.Вставить("ИД"                      , ИД);
	ПараметрыСохранения.Вставить("ПроверкаПоЗаданию"       , ПроверкаПоЗаданию);
	ПараметрыСохранения.Вставить("ИспользоватьВПоискеСтрок", ИспользоватьВПоискеСтрок);
	
	Оповестить("ДобавлениеДопФормы", ПараметрыСохранения);
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Функция ВыполнитьПослеЗакрытияВопроса(ВыбранныйЭлемент, ПараметрыОповещения) Экспорт
	
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		Если Не ЗначениеЗаполнено(Название) Тогда
			Название = СокрЛП(ВыбранныйЭлемент.Значение);
		КонецЕсли;
		
		лТипДанных = "" + ПараметрыОповещения.ТипЗн + "." + СокрЛП(ВыбранныйЭлемент.Значение);
		Элементы.ТипДанных.СписокВыбора.Добавить(лТипДанных);
		ТипДанных = лТипДанных;
		
		ЗаполняемыйРеквизит = "";
		ЗаполнитьСписокВыбораРеквизитовДокумента();
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ТипДанныхОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	Если ВыбранноеЗначение = "Справочники" ИЛИ ВыбранноеЗначение = "Перечисления" 
		ИЛИ ВыбранноеЗначение = "ПланыВидовХарактеристик" Тогда 
		СтандартнаяОбработка = Ложь;
		Оп = Новый ОписаниеОповещения("ВыполнитьПослеЗакрытияВопроса", ЭтотОбъект, Новый Структура("ТипЗн", ВыбранноеЗначение));
		ПоказатьВыборИзСписка(Оп,ПолучитьНазванияОбъектов(ВыбранноеЗначение),Элемент);		
	Иначе
		ТипДанных = ВыбранноеЗначение;
		Если Не ЗначениеЗаполнено(Название) Тогда
			Название = СокрЛП(ТипДанных);
		КонецЕсли;		
		
		ЗаполняемыйРеквизит = "";
		ЗаполнитьСписокВыбораРеквизитовДокумента();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипДанныхНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	МассивТиповЗначений = ШагиНаФормеТипДанныхНачалоВыбораНаСервере().ВыгрузитьЗначения();
	Элементы.ТипДанных.СписокВыбора.ЗагрузитьЗначения(МассивТиповЗначений);
	СтандартнаяОбработка = Истина;
	
КонецПроцедуры 

&НаКлиенте
Процедура ВидимостьПроверкиПоЗаданию()
	
	Элементы.ПроверкаПоЗаданию.Видимость = ((Использование = "Строка") И (РежимВвода <> 1));
	
	Если РежимВвода = 1 И ПроверкаПоЗаданию Тогда
		ПроверкаПоЗаданию = Ложь;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьИспользоватьВПоискеСтрок()
	
	ДляСтроки = (Использование = "Строка");
	
	Элементы.ИспользоватьВПоискеСтрок.Видимость = ДляСтроки;
	
	Если Не ДляСтроки И ИспользоватьВПоискеСтрок Тогда
		ИспользоватьВПоискеСтрок = Ложь;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РежимВводаПриИзменении(Элемент)
	
	ВидимостьПроверкиПоЗаданию(); 
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборРазмещениеПриИзменении(Элемент)
	
	ЗаполнитьСписокВыбораРеквизитовДокумента();
	
КонецПроцедуры


