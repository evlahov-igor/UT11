

&НаСервере
Процедура ЗаполнитьИнформациюВПодсказках()
	
	Элементы.ПодсказкаУтверждениеРекомендаций.Заголовок = "Вам необходимо проверить рекомендации о соответствии карточек товаров Яндекс.Маркета Вашему товару. Если рекомендация кажется Вам подходящей - утвердите рекомендацию, иначе - отклоните. После утверждения рекоменации выбранные позиции будут исключены из перечня для утверждения и отправятся на модерацию в Яндекс.Маркет. После успешного завершения модерации товарная позиция будет привязана к карточке товара площадки. В случае отклонения выбранные позиции будут исключены из перечня для утверждения и пересены в раздел ""Исправление ошибок публикации"" с комментарием ""Неверно подобранная рекомендация"".";
	Элементы.ПодсказкаПросмотрИРедактированиеАссортимента.Заголовок = "Выгрузка товарного каталога осуществляется в четыре этапа:
	|	Шаг 1. Получите рекомендованные SKU на Яндексе для ваших товаров. Добавьте публикуемые товары в таблицу ниже и дождитесь статуса ""Получена рекомендация"". Вы можете использовать базовый прайс-лист для заполнения данных об ассортименте.
	|	Шаг 2. Сверьте информацию от Маркета с вашим ассортиментом. Перейдите на закладку ""Утверждение рекомендаций"" и ознакомтесь с полученнной информацией. Утвердите рекомендации, которые считаете верными, отклоните, если рекомендация ошибочна.
	|	Шаг 3. При необходимости обработайте проблемные позиции на закладке ""Исправление ошибок при публикации"".
	|	Шаг 4. Дождитесь результатов модерации товаров (обработка может занимать до двух дней). Статус публикации ""Модерация пройдена"" означает, что вы можете переходить к установке цен на товар в личном кабинете Яндекс.Маркет.";
	
	Элементы.ПодсказкаИсправлениеОшибок.Заголовок = "Ознакомьтесь с описанием ошибок, уточните данные о товаре при необходимости. После отработки замечаний вы можете отправить данные о товаре повторно на получение рекомендации или на создание связи. В случае, если проблему устранить невозможно (например, товары указаннной категории не размещаются на площадке), вы можете удалить товар из ассортимента.";
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПросмотрИРедактированиеАссортимента;
	ЗаполнитьИнформациюВПодсказках();
	УстановитьПривилегированныйРежим(Истина);
	ВидЦен = Константы.БазовыйПрайсЛистЯндексМаркет.Получить(); 
	ИсточникКатегории = Константы.ИсточникКатегорииЯндексМаркет.Получить();
	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

&НаСервере
Процедура ПриАктивацииГиперСсылкиНаПанели(ИмяАктивнойКнопки)
	
	МассивИменКнопокПанели = Новый Массив;
	МассивИменКнопокПанели.Добавить("КнопкаПросмотрИРедактированиеАссортимента");
	МассивИменКнопокПанели.Добавить("КнопкаУтверждениеРекомендаций");
	МассивИменКнопокПанели.Добавить("КнопкаИсправлениеОшибок");
	МассивИменКнопокПанели.Добавить("КнопкаПросмотрУдаленныхПубликаций");
	
	Для Каждого Эл Из МассивИменКнопокПанели Цикл
		Если Эл = ИмяАктивнойКнопки Тогда
			Элементы[Эл].ЦветТекста =  Новый Цвет(160,160,160); 	
		Иначе
			Элементы[Эл].ЦветТекста =  Новый Цвет(28,85,174); 
		КонецЕсли;
	КонецЦикла;
	
	ИмяСтраницы = СтрЗаменить(ИмяАктивнойКнопки,"Кнопка","Группа");
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы[ИмяСтраницы];
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотрИРедактированиеАссортимента(Команда)
	
	ПриАктивацииГиперСсылкиНаПанели("КнопкаПросмотрИРедактированиеАссортимента");
	Элементы.Ассортимент.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура УтверждениеРекомендаций(Команда)
	
	ПриАктивацииГиперСсылкиНаПанели("КнопкаУтверждениеРекомендаций");
	Элементы.УтверждениеАссортимента.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсправлениеОшибок(Команда)
	
	ПриАктивацииГиперСсылкиНаПанели("КнопкаИсправлениеОшибок");
	Элементы.ИсправлениеОшибок.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура ПросмотрУдаленныхПубликаций(Команда)
	
	ПриАктивацииГиперСсылкиНаПанели("КнопкаПросмотрУдаленныхПубликаций");

КонецПроцедуры

&НаКлиенте
Процедура СкрытьПодсказку(Команда)
	
	ИмяЭлементаПодсказки = СтрЗаменить(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя,"Группа","Подсказка");
	ИмяЭлементаОтступ =  СтрЗаменить(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя,"Группа","ДекорацияОтступ");
	ИмяКнопкиСкрыть = СтрЗаменить(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя,"Группа","СкрытьПодсказку"); 
	ИмяКнопкиПоказать = СтрЗаменить(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя,"Группа","ПоказатьПодсказку");
	
	Элементы[ИмяЭлементаПодсказки].Видимость = Ложь;
	Элементы[ИмяЭлементаОтступ].Видимость = Ложь;
	Элементы[ИмяКнопкиСкрыть].Видимость = Ложь;
	Элементы[ИмяКнопкиПоказать].Видимость = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПодсказку(Команда)
	
	ИмяЭлементаПодсказки = СтрЗаменить(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя,"Группа","Подсказка");
	ИмяЭлементаОтступ =  СтрЗаменить(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя,"Группа","ДекорацияОтступ");
	ИмяКнопкиСкрыть = СтрЗаменить(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя,"Группа","СкрытьПодсказку"); 
	ИмяКнопкиПоказать = СтрЗаменить(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя,"Группа","ПоказатьПодсказку");
	
	Элементы[ИмяЭлементаПодсказки].Видимость = Истина;
	Элементы[ИмяЭлементаОтступ].Видимость = Истина;
	Элементы[ИмяКнопкиСкрыть].Видимость = Истина;
	Элементы[ИмяКнопкиПоказать].Видимость = Ложь;
	
КонецПроцедуры

//==============================================================================
//==============================================================================

&НаКлиенте
Процедура ПолучитьРекомендацииТест(Команда)
	ПолучитьРекомендацииТестНаСервере();
	//ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.ИдентификаторыПубликацийТоваровЯндексМаркет"));
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруИзЗапроса() 
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	   СтатусыПубликацииТоваровЯндексМаркет.ИдентификаторПубликации КАК shopSku,
	|	   СтатусыПубликацииТоваровЯндексМаркет.ПредставлениеТовара КАК name,
	|	   СтатусыПубликацииТоваровЯндексМаркет.ТоварнаяКатегория КАК category,
	|	   СтатусыПубликацииТоваровЯндексМаркет.Номенклатура.Марка.Наименование КАК vendor,
	|	   СтатусыПубликацииТоваровЯндексМаркет.Номенклатура.Артикул КАК vendorCode
	|	   ИЗ
	|	   РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет КАК СтатусыПубликацииТоваровЯндексМаркет
	|ГДЕ
	|	СтатусыПубликацииТоваровЯндексМаркет.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыВыгрузкиТоваровЯндексМаркет.Новый)";
	
	//добавить price и barcodes
	Результат = Запрос.Выполнить().Выбрать();
	СтруктураПредложения = Новый Структура("shopSku, name, category, vendor, vendorCode");
	
	Пока Результат.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(СтруктураПредложения,Результат);			
	КонецЦикла;
	
	offers = Новый Массив();
	offers.Добавить(СтруктураПредложения);
	
	СтруктураДляJSON = Новый Структура();
	СтруктураДляJSON.Вставить("offers",offers);
		
	Возврат СтруктураДляJSON;
КонецФункции

&НаСервере
Процедура ПолучитьРекомендацииТестНаСервере()
	
	Организация = ИнтеграцияСЯндексМаркетСервер.ТекущиеДанныеАвторизацииОрганизация();
	
	Если Организация <> Неопределено И ТипЗнч(Организация) = Тип("СправочникСсылка.Организации") Тогда
		ДанныеАвторизации = ИнтеграцияСЯндексМаркетСервер.ТекущиеДанныеАвторизации(Организация);
	КонецЕсли;
	
	IDПриложения = "cc9b7be075074e6caaff515a3c5ef0e5";
	
	Сервер = ИнтеграцияСЯндексМаркетСервер.СерверПартнерскогоAPI();
	ИмяМетода = "/offer-mapping-entries/suggestions.json";	
	campaign_id = ДанныеАвторизации.campaign_id;
	Адрес ="/" + campaign_id + ИмяМетода;
	СтруктураИзЗапроса = ПолучитьСтруктуруИзЗапроса();
	ТелоЗапроса = ИнтеграцияСЯндексМаркетСервер.ВJSON(СтруктураИзЗапроса);
	
	Попытка	
	    HTTPСоединение = Новый HTTPСоединение(Сервер,,,,,,Новый ЗащищенноеСоединениеOpenSSL(Неопределено, Новый СертификатыУдостоверяющихЦентровОС()),Истина);
	Исключение
		ТекстОшибки = НСтр("ru = 'Отсутствует соединение с сервером '" + Сервер);		
		ТекстОписанияСобытия = НСтр("ru = 'Отсутствует соединение с сервером '"+Сервер);
		ЗаписьЖурналаРегистрации(ТекстОписанияСобытия, УровеньЖурналаРегистрации.Ошибка,,,ТекстОшибки);
	КонецПопытки;
		
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/json");
	Заголовки.Вставить("Authorization", "OAuth oauth_token=" + ДанныеАвторизации.access_token + ", oauth_client_id=" + IDПриложения);
	
	HTTPЗапрос = Новый HTTPЗапрос(Адрес,Заголовки);
	HTTPЗапрос.УстановитьТелоИзСтроки(ТелоЗапроса, "UTF-8");
	Попытка
		Результат =  HTTPСоединение.ВызватьHTTPМетод("POST",HTTPЗапрос);
	Исключение
	КонецПопытки;
	
	Попытка
		HTTPОтвет = HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);  
		СтрокаОтвета = HTTPОтвет.ПолучитьТелоКакСтроку();
    	СтруктураОтвета = ИнтеграцияСЯндексМаркетСервер.ИзJSON(СтрокаОтвета);
		КодСостояния = HTTPОтвет.КодСостояния;
		
	Исключение 
		ТекстОшибки = НСтр("ru = 'Ошибка выполнения запроса '");	
		ТекстОписанияСобытия = НСтр("ru = 'Ошибка выполнения запроса '; "+ HTTPЗапрос.ПолучитьТелоКакСтроку());
		ЗаписьЖурналаРегистрации(ТекстОписанияСобытия, УровеньЖурналаРегистрации.Ошибка,,,ТекстОшибки);
	КонецПопытки;	
	
	Если КодСостояния= 200 И СтруктураОтвета.status = "OK" Тогда
		ОбновитьСтатусыПубликации(СтруктураОтвета.result);
	Иначе
		//обработать ошибку
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ОбновитьСтатусыПубликации(Рекомендации)
	
	Для каждого СтруктураПредложения Из Рекомендации.offers Цикл
		Если СтруктураПредложения.Свойство("shopSku") Тогда
			Набор = РегистрыСведений.СтатусыПубликацииТоваровЯндексМаркет.СоздатьНаборЗаписей();
			СтруктураИзмерений = ИнтеграцияСЯндексМаркетСервер.ПолучитьСтруктуруИзмерений(СтруктураПредложения.shopSku);
			Набор.Отбор.Номенклатура.Установить(СтруктураИзмерений.Номенклатура);
			Набор.Отбор.Характеристика.Установить(СтруктураИзмерений.Характеристика);
			Набор.Отбор.Упаковка.Установить(СтруктураИзмерений.Упаковка);
			Набор.Прочитать();
			Если Набор.Количество() Тогда
				Запись = Набор[0];
				Если СтруктураПредложения.Свойство("marketSku") Тогда 
					marketSku = СокрЛП(СтрЗаменить(СтруктураПредложения.marketSku,Символ(160),""));  
					Запись.ИдентификаторТовараПлощадки = marketSku; 
				КонецЕсли;
				Если СтруктураПредложения.Свойство("marketSkuName") Тогда 
					Запись.НаименованиеТовараПлощадки = СтруктураПредложения.marketSkuName;
					Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.ПолученаРекомендация;
				Иначе
					Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.РекомендацияНеНайдена;
				КонецЕсли;
				Если СтруктураПредложения.Свойство("marketCategoryName") Тогда 
					Запись.НаименованиеКатегорииПлощадки = СтруктураПредложения.marketCategoryName;
				КонецЕсли;
				Если СтруктураПредложения.Свойство("marketModelName") Тогда 
					Запись.НаименованиеМоделиПлощадки = СтруктураПредложения.marketModelName;
				КонецЕсли;
				Набор.Записать();
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзменениеФлагаВыбран(ВыбраннаяСтрока)
	
	Набор = РегистрыСведений.СтатусыПубликацииТоваровЯндексМаркет.СоздатьНаборЗаписей();
	Набор.Отбор.Номенклатура.Установить(ВыбраннаяСтрока.Номенклатура);
	Набор.Отбор.Характеристика.Установить(ВыбраннаяСтрока.Характеристика);
	Набор.Отбор.Упаковка.Установить(ВыбраннаяСтрока.Упаковка);
	Набор.Прочитать();
	Если Набор.Количество() Тогда
		Запись = Набор[0];
		Запись.Выбран = НЕ Запись.Выбран; 
		Набор.Записать();
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура УтверждениеАссортиментаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущийЭлемент.Имя = "УтверждениеАссортиментаВыбран" Тогда
		СтандартнаяОбработка = Ложь;
		ЗаписатьИзменениеФлагаВыбран(ВыбраннаяСтрока);
		Элементы.УтверждениеАссортимента.Обновить();
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "УтверждениеАссортиментаЕстьИдентификаторПлощадки" Тогда
		СтандартнаяОбработка = Ложь;
		Если Элемент.ТекущиеДанные.ЕстьИдентификаторПлощадки Тогда
			ПерейтиПоНавигационнойСсылке("https://pokupki.market.yandex.ru/product/"+СокрЛП(СтрЗаменить(Элемент.ТекущиеДанные.ИдентификаторТовараПлощадки,Символ(160),"")));
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ИзменитьФлагиНаСервере(МассивСтрок, ЗначениеФлага)
	
	Для каждого ВыбраннаяСтрока Из МассивСтрок Цикл
		
		Набор = РегистрыСведений.СтатусыПубликацииТоваровЯндексМаркет.СоздатьНаборЗаписей();
		Набор.Отбор.Номенклатура.Установить(ВыбраннаяСтрока.Номенклатура);
		Набор.Отбор.Характеристика.Установить(ВыбраннаяСтрока.Характеристика);
		Набор.Отбор.Упаковка.Установить(ВыбраннаяСтрока.Упаковка);
		
		Набор.Прочитать();
		Если Набор.Количество() Тогда
			Запись = Набор[0];
			Запись.Выбран = ЗначениеФлага; 
			Набор.Записать();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура ВыбратьВсе(Команда)
	
	ВыделенныеСтроки = Элементы.УтверждениеАссортимента.ВыделенныеСтроки;
	
	Если ВыделенныеСтроки.Количество()<=1 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Выделите все строки, для которых надо установить флаги.'"));
	Иначе
	    ИзменитьФлагиНаСервере(ВыделенныеСтроки, Истина);
		Элементы.УтверждениеАссортимента.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьВсе(Команда)
	
	ВыделенныеСтроки = Элементы.УтверждениеАссортимента.ВыделенныеСтроки;
	
	Если ВыделенныеСтроки.Количество()<=1 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Выделите все строки, для которых надо снять флаги.'"));
	Иначе
	    ИзменитьФлагиНаСервере(ВыделенныеСтроки, Ложь);
		Элементы.УтверждениеАссортимента.Обновить();
	КонецЕсли;

КонецПроцедуры


&НаСервереБезКонтекста
Процедура УтвердитьОтклонитьВыбранныеНаСервере(ПоложительноеРешение)
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтатусыПубликацииТоваровЯндексМаркет.Номенклатура КАК Номенклатура,
	               |	СтатусыПубликацииТоваровЯндексМаркет.Характеристика КАК Характеристика,
	               |	СтатусыПубликацииТоваровЯндексМаркет.Упаковка КАК Упаковка
	               |ИЗ
	               |	РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет КАК СтатусыПубликацииТоваровЯндексМаркет
	               |ГДЕ
	               |	СтатусыПубликацииТоваровЯндексМаркет.Выбран
	               |	И СтатусыПубликацииТоваровЯндексМаркет.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыВыгрузкиТоваровЯндексМаркет.ПолученаРекомендация)";
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл 
		Набор = РегистрыСведений.СтатусыПубликацииТоваровЯндексМаркет.СоздатьНаборЗаписей();
		Набор.Отбор.Номенклатура.Установить(Результат.Номенклатура);
		Набор.Отбор.Характеристика.Установить(Результат.Характеристика);
		Набор.Отбор.Упаковка.Установить(Результат.Упаковка);
		Набор.Прочитать();
		Если Набор.Количество() Тогда
			Запись = Набор[0];
			Если ПоложительноеРешение Тогда
				Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.УтвержденаРекомендация;
			Иначе
				Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.НевернаяРекомендация;
				Запись.ОписаниеОшибки = "Если товар определен неправильно: 
					|Проверьте, что товар относится к одной из категорий, представленных на Маркете.
					|Убедитесь, что вы предоставили наиболее полные и точные данные о товаре. 
					|Если вы не указали какую-либо информацию, уточните входные данные запроса (например, добавьте цвет или размер в характеристики товара или добавьте описание модели, скорректировав данные в поле ""Представление"" на закладке ""Данные о товаре"", укажите базовую цену товара, если она не заполнена).
					|После заполненения данных отправьте повторно публикацию на получение рекомендации (кнопка ""Получить рекомендацию""). 
					|Попробуйте найти товар в поиске по разделу «Покупки» на Маркете. Если товар найдется, SKU на Яндексе можно взять из URL его страницы. Например, если URL страницы товара — https://pokupki.market.yandex.ru/product/7715752, то его SKU на Яндексе — 7715752.Если советы не помогли - отправьте информацию о товаре без SKU на Яндексе (кнопка ""Отправить на модерацию"") - сотрудники Маркета могут подобрать или создать карточки для ваших товаров в личном кабинете, если товар еще не продается на Маркете.";				
			КонецЕсли;
			Запись.Выбран = Ложь;
			Набор.Записать();
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры


&НаКлиенте
Процедура УтвердитьВыбранные(Команда)
	
	УтвердитьОтклонитьВыбранныеНаСервере(Истина);
	Элементы.УтверждениеАссортимента.Обновить();
	
КонецПроцедуры


&НаКлиенте
Процедура ОтклонитьВыбранные(Команда)
	
	УтвердитьОтклонитьВыбранныеНаСервере(Ложь);
	Элементы.УтверждениеАссортимента.Обновить();
	
КонецПроцедуры


&НаКлиенте
Процедура АссортиментВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
		
	Если Элемент.ТекущийЭлемент.Имя = "АссортиментЕстьИдентификаторПлощадки" Тогда
		СтандартнаяОбработка = Ложь;
		Если Элемент.ТекущиеДанные.ЕстьИдентификаторПлощадки Тогда
			ПерейтиПоНавигационнойСсылке("https://pokupki.market.yandex.ru/product/"+СокрЛП(СтрЗаменить(Элемент.ТекущиеДанные.ИдентификаторТовараПлощадки,Символ(160),"")));
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьШрихКоды(Номенклатура, Характеристика)
	
	Запрос = Новый Запрос ();
	Запрос.Параметры.Вставить("Номенклатура",Номенклатура);
	Запрос.Параметры.Вставить("Характеристика",Характеристика);
	Запрос.Текст = "ВЫБРАТЬ
	|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод,
	|	ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура,
	|	ШтрихкодыНоменклатуры.Характеристика КАК Характеристика
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|
	|ГДЕ
	|	ШтрихкодыНоменклатуры.Номенклатура = &Номенклатура
	|	И ШтрихкодыНоменклатуры.Характеристика = &Характеристика";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	ШтрихКоды = новый Массив;
	
	Если Результат.Количество()>0 Тогда
		ШтрихКоды = Результат.ВыгрузитьКолонку("Штрихкод");
	КонецЕсли;	
	
	Возврат ШтрихКоды;
КонецФункции

&НаСервере
Функция ПолучитьСтруктуруДляОтправкиНаМодерацию()
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
				   |	СтатусыПубликацииТоваровЯндексМаркет.Номенклатура.Ссылка Как Номенклатура,
				   |	СтатусыПубликацииТоваровЯндексМаркет.Характеристика.Ссылка Как Характеристика,
	               |	СтатусыПубликацииТоваровЯндексМаркет.ИдентификаторПубликации КАК shopSku,
	               |	СтатусыПубликацииТоваровЯндексМаркет.Номенклатура.Марка.Наименование КАК vendor,
	               |	СтатусыПубликацииТоваровЯндексМаркет.Номенклатура.Артикул КАК vendorCode,
				   |	СтатусыПубликацииТоваровЯндексМаркет.Номенклатура.Производитель.Наименование КАК manufacturer,
				   //|	ИдентификаторыПубликацийТоваровЯндексМаркет.Номенклатура.Производитель КАК НоменклатураПроизводитель
				   |	""Китай"" как manufacturerCountry, 
	               |	СтатусыПубликацииТоваровЯндексМаркет.ИдентификаторТовараПлощадки КАК marketSku,
	               |	СтатусыПубликацииТоваровЯндексМаркет.НаименованиеТовараПлощадки КАК name,
	               |	СтатусыПубликацииТоваровЯндексМаркет.НаименованиеКатегорииПлощадки КАК category
	               |ИЗ
	               |	РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет КАК СтатусыПубликацииТоваровЯндексМаркет
	               |ГДЕ
	               |	СтатусыПубликацииТоваровЯндексМаркет.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыВыгрузкиТоваровЯндексМаркет.УтвержденаРекомендация)";
				   

	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Количество()>0 Тогда 
		СтруктураОписанияТовара = Новый Структура("shopSku,name,category,manufacturer,manufacturerCountries,urls,vendor,vendorCode");
		
		Пока Результат.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(СтруктураОписанияТовара,Результат);			
		КонецЦикла;
		
	    urls = Новый Массив;
		urls.Добавить("https://pokupki.market.yandex.ru/product/"+СокрЛП(СтрЗаменить(Результат.marketSku,Символ(160),"")));
		СтруктураОписанияТовара.urls = urls;
		
		barcodes = ПолучитьШрихКоды(Результат.Номенклатура, Результат.Характеристика);
		Если barcodes.Количество()>0 Тогда
			СтруктураОписанияТовара.barcodes = barcodes; 
			СтруктураОписанияТовара.Вставить("barcodes", barcodes);
		КонецЕсли;
		
		manufacturerCountries = Новый Массив;
		manufacturerCountries.Добавить(Результат.manufacturerCountry);
		СтруктураОписанияТовара.manufacturerCountries = manufacturerCountries;
		
		СтруктураСвязи = Новый Структура("offer,mapping");
		СтруктураСвязи.mapping = Новый Структура("marketSku",Результат.marketSku);
		СтруктураСвязи.offer = СтруктураОписанияТовара; 
		
		offerMappingEntries = Новый Массив();
		offerMappingEntries.Добавить(СтруктураСвязи);
		
		СтруктураДляJSON = Новый Структура();
		СтруктураДляJSON.Вставить("offerMappingEntries",offerMappingEntries);
		
	Иначе
		СтруктураДляJSON = Неопределено;
	КонецЕсли;
	
	//ввести проверки по обязательным полям
	
	Возврат СтруктураДляJSON;
			
КонецФункции

&НаСервере
Процедура ОтправитьНаМодерациюТестНаСервере()
	
	Организация = ИнтеграцияСЯндексМаркетСервер.ТекущиеДанныеАвторизацииОрганизация();
	
	Если Организация <> Неопределено И ТипЗнч(Организация) = Тип("СправочникСсылка.Организации") Тогда
		ДанныеАвторизации = ИнтеграцияСЯндексМаркетСервер.ТекущиеДанныеАвторизации(Организация);
	КонецЕсли;
	
	IDПриложения = "cc9b7be075074e6caaff515a3c5ef0e5";
	
	Сервер = ИнтеграцияСЯндексМаркетСервер.СерверПартнерскогоAPI();
	ИмяМетода = "/offer-mapping-entries/updates.json";	
	campaign_id = ДанныеАвторизации.campaign_id;
	Адрес ="/" + campaign_id + ИмяМетода;
	СтруктураИзЗапроса = ПолучитьСтруктуруДляОтправкиНаМодерацию();
	ТелоЗапроса = ИнтеграцияСЯндексМаркетСервер.ВJSON(СтруктураИзЗапроса);
	
	Попытка	
	    HTTPСоединение = Новый HTTPСоединение(Сервер,,,,,,Новый ЗащищенноеСоединениеOpenSSL(Неопределено, Новый СертификатыУдостоверяющихЦентровОС()),Истина);
	Исключение
		ТекстОшибки = НСтр("ru = 'Отсутствует соединение с сервером '" + Сервер);		
		ТекстОписанияСобытия = НСтр("ru = 'Отсутствует соединение с сервером '"+Сервер);
		ЗаписьЖурналаРегистрации(ТекстОписанияСобытия, УровеньЖурналаРегистрации.Ошибка,,,ТекстОшибки);
	КонецПопытки;
		
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/json");
	Заголовки.Вставить("Authorization", "OAuth oauth_token=" + ДанныеАвторизации.access_token + ", oauth_client_id=" + IDПриложения);
	
	HTTPЗапрос = Новый HTTPЗапрос(Адрес,Заголовки);
	HTTPЗапрос.УстановитьТелоИзСтроки(ТелоЗапроса, "UTF-8");
	Попытка
		Результат =  HTTPСоединение.ВызватьHTTPМетод("POST",HTTPЗапрос);
	Исключение
	КонецПопытки;
	
	Попытка
		HTTPОтвет = HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);  
		СтрокаОтвета = HTTPОтвет.ПолучитьТелоКакСтроку();
    	СтруктураОтвета = ИнтеграцияСЯндексМаркетСервер.ИзJSON(СтрокаОтвета);
		КодСостояния = HTTPОтвет.КодСостояния;
		
	Исключение 
		ТекстОшибки = НСтр("ru = 'Ошибка выполнения запроса '");	
		ТекстОписанияСобытия = НСтр("ru = 'Ошибка выполнения запроса '; "+ HTTPЗапрос.ПолучитьТелоКакСтроку());
		ЗаписьЖурналаРегистрации(ТекстОписанияСобытия, УровеньЖурналаРегистрации.Ошибка,,,ТекстОшибки);
	КонецПопытки;	
	
	Если КодСостояния= 200 И СтруктураОтвета.status = "OK" Тогда
		offerMappingEntries = СтруктураИзЗапроса.offerMappingEntries;
		shopSku = offerMappingEntries[0].offer.shopSku;
		ОбновитьСтатусыНаМодерации(shopSku);
	Иначе
		//обработать ошибку
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтатусыНаМодерации(shopSku)
	
	Набор = РегистрыСведений.СтатусыПубликацииТоваровЯндексМаркет.СоздатьНаборЗаписей();
	СтруктураИзмерений = ИнтеграцияСЯндексМаркетСервер.ПолучитьСтруктуруИзмерений(shopSku);
	Набор.Отбор.Номенклатура.Установить(СтруктураИзмерений.Номенклатура);
	Набор.Отбор.Характеристика.Установить(СтруктураИзмерений.Характеристика);
	Набор.Отбор.Упаковка.Установить(СтруктураИзмерений.Упаковка);
	Набор.Прочитать();
	Если Набор.Количество() Тогда
		Запись = Набор[0];
		Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.НаМодерации; 
		Набор.Записать();
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ОтправитьНаМодерациюТест(Команда)
	ОтправитьНаМодерациюТестНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ИсправлениеОшибокВыбратьВыделенные(Команда)
	
	ВыделенныеСтроки = Элементы.ИсправлениеОшибок.ВыделенныеСтроки;
	
	Если ВыделенныеСтроки.Количество()<=1 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Выделите все строки, для которых надо установить флаги.'"));
	Иначе
	    ИзменитьФлагиНаСервере(ВыделенныеСтроки, Истина);
		Элементы.ИсправлениеОшибок.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсправлениеОшибокСброситьВыделенные(Команда)
	
	ВыделенныеСтроки = Элементы.ИсправлениеОшибок.ВыделенныеСтроки;
	
	Если ВыделенныеСтроки.Количество()<=1 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Выделите все строки, для которых надо снять флаги.'"));
	Иначе
	    ИзменитьФлагиНаСервере(ВыделенныеСтроки, Ложь);
		Элементы.ИсправлениеОшибок.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсправлениеОшибокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущийЭлемент.Имя = "ИсправлениеОшибокВыбран" Тогда
		СтандартнаяОбработка = Ложь;
		ЗаписатьИзменениеФлагаВыбран(ВыбраннаяСтрока);
		Элементы.ИсправлениеОшибок.Обновить();
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ИсправлениеОшибокЕстьИдентификаторПлощадки" Тогда
		СтандартнаяОбработка = Ложь;
		Если Элемент.ТекущиеДанные.ЕстьИдентификаторПлощадки Тогда
			ПерейтиПоНавигационнойСсылке("https://pokupki.market.yandex.ru/product/"+СокрЛП(СтрЗаменить(Элемент.ТекущиеДанные.ИдентификаторТовараПлощадки,Символ(160),"")));
		КонецЕсли;	
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура ОтправитьНаПовторноеПолучениеРекомендации(Команда)
	
	ПовторноОтправитьЗапросВыбранныеНаСервере("НаПолучениеРекомендации");
	Элементы.ИсправлениеОшибок.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПовторноНаМодерацию(Команда)
	
	ПовторноОтправитьЗапросВыбранныеНаСервере("НаМодерацию");
	Элементы.ИсправлениеОшибок.Обновить();
	
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ПовторноОтправитьЗапросВыбранныеНаСервере(Действие)
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтатусыПубликацииТоваровЯндексМаркет.ИдентификаторПубликации КАК ИдентификаторПубликации,
	               |	СтатусыПубликацииТоваровЯндексМаркет.Номенклатура КАК Номенклатура,
	               |	СтатусыПубликацииТоваровЯндексМаркет.Характеристика КАК Характеристика,
	               |	СтатусыПубликацииТоваровЯндексМаркет.Упаковка КАК Упаковка
	               |ИЗ
	               |	РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет КАК СтатусыПубликацииТоваровЯндексМаркет
	               |ГДЕ
	               |	СтатусыПубликацииТоваровЯндексМаркет.Выбран
	               |	И СтатусыПубликацииТоваровЯндексМаркет.Статус В(&МассивОшибочныхСтатусов)";
	
	МассивОшибочныхСтатусов = Новый Массив;
	МассивОшибочныхСтатусов.Добавить(Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.ОшибкаПриОтправкеНаМодерацию);
	МассивОшибочныхСтатусов.Добавить(Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.ОшибкаПриПолученииРекомендации);
	//модерация не пройдена - обработать отдельно
	МассивОшибочныхСтатусов.Добавить(Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.МодерацияНеПройдена);
	МассивОшибочныхСтатусов.Добавить(Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.НевернаяРекомендация);
	МассивОшибочныхСтатусов.Добавить(Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.РекомендацияНеНайдена);
	
	Запрос.Параметры.Вставить("МассивОшибочныхСтатусов",МассивОшибочныхСтатусов);
	Результат = Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл 
		Набор = РегистрыСведений.СтатусыПубликацииТоваровЯндексМаркет.СоздатьНаборЗаписей();
		Набор.Отбор.Номенклатура.Установить(Результат.Номенклатура);
		Набор.Отбор.Характеристика.Установить(Результат.Характеристика);
		Набор.Отбор.Упаковка.Установить(Результат.Упаковка);
		Набор.Прочитать();
		Если Набор.Количество() Тогда
			Запись = Набор[0];
			Если Действие = "НаПолучениеРекомендации" Тогда
				Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.Новый;
			ИначеЕсли Действие = "НаМодерацию" Тогда
				Если ЗначениеЗаполнено(Запись.ИдентификаторТовараПлощадки) Тогда
					Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.УтвержденаРекомендация;
				Иначе
					Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.СозданиеНового;
				КонецЕсли;
			КонецЕсли;
			Запись.Выбран = Ложь;
			Набор.Записать();
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры


&НаКлиенте
Процедура ОткрытьФормуНастроек(Команда)
	
	ОткрытьФорму(
	"Обработка.ЯндексМаркетВитринаФулфилмент.Форма.НастройкиВыгрузкиКаталога",,,Истина);

	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Не ЗначениеЗаполнено(ВидЦен) ИЛИ Не ЗначениеЗаполнено(ИсточникКатегории) Тогда
		
		ОткрытьФорму(
		"Обработка.ЯндексМаркетВитринаФулфилмент.Форма.НастройкиВыгрузкиКаталога",,,Истина);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбновитьПоДаннымПрайсЛистаНаСервере()
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|ЦеныНоменклатуры.Характеристика КАК Характеристика,
	|ЦеныНоменклатуры.Упаковка КАК Упаковка,
	|ЦеныНоменклатуры.Цена КАК Цена
	|ИЗ
	|РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ТекущаяДата, ВидЦены = &БазовыйПрайсЛист) КАК ЦеныНоменклатуры
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет КАК СтатусыПубликацииТоваровЯндексМаркет
	|	ПО (ЦеныНоменклатуры.Номенклатура = СтатусыПубликацииТоваровЯндексМаркет.Номенклатура) И 
	|	(ЦеныНоменклатуры.Характеристика = СтатусыПубликацииТоваровЯндексМаркет.Характеристика) 
	//|	(ЦеныНоменклатуры.Упаковка = ИдентификаторыПубликацийТоваровЯндексМаркет.Упаковка)";
	|ГДЕ
	|СтатусыПубликацииТоваровЯндексМаркет.Номенклатура IS NULL";	
	Запрос.Параметры.Вставить("ТекущаяДата",ТекущаяДата());
	Запрос.Параметры.Вставить("БазовыйПрайсЛист",ВидЦен);	
	Результат = Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
		
		Набор = РегистрыСведений.СтатусыПубликацииТоваровЯндексМаркет.СоздатьНаборЗаписей(); 
		Набор.Отбор.Номенклатура.Установить(Результат.Номенклатура);
		Набор.Отбор.Характеристика.Установить(Результат.Характеристика);
		//Набор.Отбор.Упаковка.Установить(Результат.Упаковка);
		Набор.Прочитать();
		Если Набор.Количество() Тогда
			Запись = Набор[0];
			Запись.БазоваяЦена = Результат.Цена;
		Иначе 
			Запись = Набор.Добавить(); 
			Запись.Номенклатура = Результат.Номенклатура; 
			Запись.Характеристика = Результат.Характеристика; 
			Запись.Упаковка = Результат.Номенклатура.ЕдиницаИзмерения; 
			Запись.БазоваяЦена = Результат.Цена;
		КонецЕсли; 
		Набор.Записать();    
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПоДаннымПрайсЛиста(Команда)
	
	ОбновитьПоДаннымПрайсЛистаНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОтобратьПоМаркеруНовыеНаСервере()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СтатусыПубликацииТоваровЯндексМаркет,
	"МаркерСтатуса",
	2,
	ВидСравненияКомпоновкиДанных.Равно);

	
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьПоМаркеруНовые(Команда)
	
	ОтобратьПоМаркеруНовыеНаСервере();   
	Элементы.ОтборПоМаркерам.Картинка = БиблиотекаКартинок.СерыйШарБЭД;
	Элементы.Ассортимент.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура ОтобратьПоМаркеруВПроцессеНаСервере()

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СтатусыПубликацииТоваровЯндексМаркет,
	"МаркерСтатуса",
	1,
	ВидСравненияКомпоновкиДанных.Равно);

	
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьПоМаркеруВПроцессе(Команда)
	
	ОтобратьПоМаркеруВПроцессеНаСервере();
	Элементы.ОтборПоМаркерам.Картинка = БиблиотекаКартинок.ЖелтыйШарБЭД;
	Элементы.Ассортимент.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура ОтобратьПоМаркеруОшибкаНаСервере()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СтатусыПубликацииТоваровЯндексМаркет,
	"МаркерСтатуса",
	0,
	ВидСравненияКомпоновкиДанных.Равно);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьПоМаркеруОшибка(Команда)
	
	ОтобратьПоМаркеруОшибкаНаСервере(); 
	Элементы.ОтборПоМаркерам.Картинка = БиблиотекаКартинок.КрасныйШарБЭД;
	Элементы.Ассортимент.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура ОтобратьПоМаркеруГотовыНаСервере()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СтатусыПубликацииТоваровЯндексМаркет,
	"МаркерСтатуса",
	3,
	ВидСравненияКомпоновкиДанных.Равно);

	
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьПоМаркеруГотовы(Команда)
	
	ОтобратьПоМаркеруГотовыНаСервере();  
	Элементы.ОтборПоМаркерам.Картинка = БиблиотекаКартинок.ЗеленыйШарБЭД;
	Элементы.Ассортимент.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсе(Команда)
	
	ПоказатьВсеНаСервере();    
	Элементы.ОтборПоМаркерам.Картинка = БиблиотекаКартинок.Состояние0Процентов;
	Элементы.Ассортимент.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьВсеНаСервере()
	
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СтатусыПубликацииТоваровЯндексМаркет,
	"МаркерСтатуса");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНоменклатуруПоОтбору(Команда)
	
	ОткрытьФорму(
	"Обработка.ЯндексМаркетВитринаФулфилмент.Форма.ОтборНоменклатуры",,ЭтаФорма,Истина);
	
КонецПроцедуры 

&НаСервере
Процедура ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение)
	
	ТаблицаТоваров   = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресТоваровВХранилище);
	//ТаблицаДокумента = ?(Отгрузка, Объект.Продукция, Объект.Материалы);
	
	СписокСвойств    = "Номенклатура, Характеристика, Упаковка";   
	
	ИспользоватьУпаковкиНоменклатуры       = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры");
		
	// Загрузка сформированного списка товаров.
	Для Каждого СтрокаТЧ Из ТаблицаТоваров Цикл
		Набор = РегистрыСведений.СтатусыПубликацииТоваровЯндексМаркет.СоздатьНаборЗаписей();
		Набор.Отбор.Номенклатура.Установить(СтрокаТЧ.Номенклатура);		
		Если ИспользоватьХарактеристикиНоменклатуры Тогда
			Набор.Отбор.Характеристика.Установить(СтрокаТЧ.Характеристика);
		КонецЕсли;
		
		Набор.Прочитать();
		Если НЕ Набор.Количество() Тогда 
			Запись = Набор.Добавить(); 
			
			Запись.Номенклатура = СтрокаТЧ.Номенклатура;
			
			Если ИспользоватьХарактеристикиНоменклатуры Тогда
				Запись.Характеристика = СтрокаТЧ.Характеристика;
			КонецЕсли;
			
			Если ИспользоватьУпаковкиНоменклатуры Тогда
				Запись.Упаковка = СтрокаТЧ.Номенклатура.ЕдиницаИзмерения;
			КонецЕсли;		
			Набор.Записать();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры


&НаСервере
Процедура УстановитьНастройки(АдресВоВременномХранилище)
	
		Если АдресВоВременномХранилище <> Неопределено Тогда
			
			СтруктураДанных = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище); // см. УстановкаЦенКлиентСервер.НоваяСтруктураНастроекФормы
			
			КомпоновщикНастроекОтбор.ЗагрузитьНастройки(СтруктураДанных.НастройкиКомпоновщика);
			
			ВариантНавигации = СтруктураДанных.ВариантНавигации;
			ВидНоменклатуры = СтруктураДанных.ВидНоменклатуры;
			ВариантНеобходимостиУстановкиЦены = СтруктураДанных.ВариантНеобходимостиУстановкиЦены; 
			
			УстановленыНастройкиОтбора = КомпоновщикНастроекОтбор.Настройки.Отбор.Элементы.Количество() > 0;
			
			
			ИспользоватьЦеновыеГруппы              = ПолучитьФункциональнуюОпцию("ИспользоватьЦеновыеГруппы");
			ИспользоватьУпаковкиНоменклатуры       = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
			ИспользоватьНесколькоВидовЦен          = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВидовЦен");
			ИспользуетсяЦенообразование25          = ЦенообразованиеВызовСервера.ИспользуетсяЦенообразование25(ТекущаяДата());
			
			ИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры");
			ИспользоватьСерииНоменклатуры          = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
			
			СтруктураНастроек = Новый Структура;
			СтруктураНастроек.Вставить("ОбязательныеПоля"   , Новый Массив);
			СтруктураНастроек.Вставить("ПараметрыДанных"    , Новый Структура);
			СтруктураНастроек.Вставить("КомпоновщикНастроек", Неопределено);
			СтруктураНастроек.Вставить("ИмяМакетаСхемыКомпоновкиДанных" , Неопределено);
			СтруктураНастроек.Вставить("ВестиУчетСертификатовНоменклатуры" , Ложь);
			СтруктураНастроек.Вставить("ЦеныНаДату", КонецДня(ТекущаяДата()));
			
			СтруктураНастроек.ОбязательныеПоля.Добавить("Номенклатура");
			Если ИспользуетсяЦенообразование25 Тогда
				Если ИспользоватьХарактеристикиНоменклатуры Тогда
					СтруктураНастроек.ОбязательныеПоля.Добавить("Характеристика");
					СтруктураНастроек.ОбязательныеПоля.Добавить("ХарактеристикаЦО");
				КонецЕсли;
				Если ИспользоватьСерииНоменклатуры Тогда
					СтруктураНастроек.ОбязательныеПоля.Добавить("Серия");
					СтруктураНастроек.ОбязательныеПоля.Добавить("СерияЦО");
				КонецЕсли;
				Если ИспользоватьУпаковкиНоменклатуры Тогда
					СтруктураНастроек.ОбязательныеПоля.Добавить("УпаковкаЦО");
				КонецЕсли;
			Иначе	
				Если ИспользоватьХарактеристикиНоменклатуры Тогда
					СтруктураНастроек.ОбязательныеПоля.Добавить("Характеристика");
				КонецЕсли;
			КонецЕсли;
		
			СтруктураНастроек.КомпоновщикНастроек = Новый Структура("Настройки"	, КомпоновщикНастроекОтбор.Настройки);
			Если ИспользуетсяЦенообразование25 Тогда
				СтруктураНастроек.ИмяМакетаСхемыКомпоновкиДанных = "Макет2_5";
			Иначе	
				СтруктураНастроек.ИмяМакетаСхемыКомпоновкиДанных = "Макет";
			КонецЕсли;
				
			// Загрузка сформированного списка товаров.
			СтруктураРезультата = Обработки.ПодборТоваровПоОтбору.ПодготовитьСтруктуруДанных(СтруктураНастроек);
			Для Каждого СтрокаТЧ Из СтруктураРезультата.ТаблицаТоваров Цикл
				//Попытка	
					Набор = РегистрыСведений.СтатусыПубликацииТоваровЯндексМаркет.СоздатьНаборЗаписей();
					Набор.Отбор.Номенклатура.Установить(СтрокаТЧ.Номенклатура);		
					Если ИспользоватьХарактеристикиНоменклатуры Тогда
						Набор.Отбор.Характеристика.Установить(СтрокаТЧ.Характеристика);
					КонецЕсли;
					
					//Если ИспользоватьУпаковкиНоменклатуры Тогда
					//	Набор.Отбор.Упаковка.Установить(СтрокаТЧ.Упаковка);
					//КонецЕсли;
					Набор.Прочитать();
					Если НЕ Набор.Количество() Тогда 
						Запись = Набор.Добавить(); 
						
						Запись.Номенклатура = СтрокаТЧ.Номенклатура;
						
						Если ИспользоватьХарактеристикиНоменклатуры Тогда
							Запись.Характеристика = СтрокаТЧ.Характеристика;
						КонецЕсли;
						
						Если ИспользоватьУпаковкиНоменклатуры Тогда
							Запись.Упаковка = СтрокаТЧ.Номенклатура.ЕдиницаИзмерения;
						КонецЕсли;
						
						Набор.Записать();
					КонецЕсли;
				//Исключение
				//КонецПопытки
				
				//НоваяСтрока = ТаблицаНоменклатуры.Добавить();
				//НоваяСтрока.Номенклатура = СтрокаТЧ.Номенклатура;
				//
				//Если СтруктураФормы.ИспользуетсяЦенообразование25 Тогда
				//	Если СтруктураФормы.ИспользоватьХарактеристикиНоменклатуры Тогда
				//		НоваяСтрока.ХарактеристикаЦО = СтрокаТЧ.ХарактеристикаЦО;
				//	КонецЕсли;
				//	
				//	Если СтруктураФормы.ИспользоватьСерииНоменклатуры Тогда
				//		НоваяСтрока.СерияЦО = СтрокаТЧ.СерияЦО;
				//	КонецЕсли;
				//	
				//	Если СтруктураФормы.ИспользоватьУпаковкиНоменклатуры Тогда
				//		НоваяСтрока.УпаковкаЦО = СтрокаТЧ.УпаковкаЦО;
				//	КонецЕсли;
				//Иначе	 
				//	Если СтруктураФормы.ИспользоватьХарактеристикиНоменклатуры Тогда
				//		НоваяСтрока.Характеристика   = СтрокаТЧ.Характеристика;
				//	КонецЕсли;
				//КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Обработка.ЯндексМаркетВитринаФулфилмент.Форма.ОтборНоменклатуры" Тогда
		
		УстановитьНастройки(ВыбранноеЗначение); 
		
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Обработка.ЯндексМаркетВитринаФулфилмент.Форма.ПодборНоменклатуры" Тогда
		
		ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение);
		
	КонецЕсли;
	
	Элементы.Ассортимент.Обновить();
	
КонецПроцедуры

&НаСервере
Функция  ТекущиеДанныеАвторизацииОрганизация()
	
	УстановитьПривилегированныйРежим(Истина);
	Организация = ИнтеграцияСЯндексМаркетСервер.ТекущиеДанныеАвторизацииОрганизация();	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецФункции

&НаКлиенте
Процедура ОткрытьПодбор(Команда)
		
	Отказ = Ложь;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрЗаголовок = НСтр("ru = 'Подбор товаров в %Объект%'");
	ПараметрЗаголовок = СтрЗаменить(ПараметрЗаголовок, "%Объект%", НСтр("ru='ассортимент товаров на Яндекс.Маркет'"));
	
	Организация = ТекущиеДанныеАвторизацииОрганизация();
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация",              Организация);
	ПараметрыФормы.Вставить("ПодборВариантовОбеспечения",              Истина);
	ПараметрыФормы.Вставить("ПодборВАссортиментЯндексМаркет",          Истина);
	ПараметрыФормы.Вставить("РежимПодбораБезСуммовыхПараметров",       Истина);
	
	ОткрытьФорму("Обработка.ЯндексМаркетВитринаФулфилмент.Форма.ПодборНоменклатуры", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);
		
КонецПроцедуры






