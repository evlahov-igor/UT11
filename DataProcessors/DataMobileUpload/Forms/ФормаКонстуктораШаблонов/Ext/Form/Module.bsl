	


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

    // Создание и заполнение "обычного" объекта прикладного типа ДеревоЗначений,
	// который будет отображен на управляемой форме
	ДеревоОбъект = Новый ДеревоЗначений;
	МассивШ = параметры.МассивШаблонов; 

	ДеревоОбъект.Колонки.Добавить("П", Новый ОписаниеТипов("Число"));
	ДеревоОбъект.Колонки.Добавить("Название", Новый ОписаниеТипов("Строка"));
	ВсеШаблоны = ДеревоОбъект.Строки.Добавить();

	ВсеШаблоны.Название = "Все шаблоны";
	    // Обычные шаблоны
		ШаблоныОбычные = ВсеШаблоны.Строки.Добавить();
		ШаблоныОбычные.Название = "Обычные";
					
			ШаблоныО = ШаблоныОбычные.Строки.Добавить();
			ШаблоныО.Название = "Перемещение по ячейкам";
			Если Параметры.МассивШаблонов.Найти("Перемещение по ячейкам") <> Неопределено Тогда
				ШаблоныО.П = 1;
				ШаблоныОбычные.П = 2;
			КонецЕсли;
		
			ШаблоныО = ШаблоныОбычные.Строки.Добавить();
			ШаблоныО.Название = "Инвентаризация";
			
			Если Параметры.МассивШаблонов.Найти("Инвентаризация") <> Неопределено Тогда
				ШаблоныО.П = 1;
				ШаблоныОбычные.П = 2;
			КонецЕсли;

			ШаблоныО = ШаблоныОбычные.Строки.Добавить();
			ШаблоныО.Название = "Заказ";
			
			Если Параметры.МассивШаблонов.Найти("Заказ") <> Неопределено Тогда
				ШаблоныО.П = 1;
				ШаблоныОбычные.П = 2;
			КонецЕсли;
			
			ШаблоныО = ШаблоныОбычные.Строки.Добавить();
			ШаблоныО.Название = "Перемещение по складам";
			
			Если Параметры.МассивШаблонов.Найти("Перемещение по складам") <> Неопределено Тогда
				ШаблоныО.П = 1;
				ШаблоныОбычные.П = 2;
			КонецЕсли;
			
			ШаблоныО = ШаблоныОбычные.Строки.Добавить();
			ШаблоныО.Название = "Поступление";
			
			Если Параметры.МассивШаблонов.Найти("Поступление") <> Неопределено Тогда
				ШаблоныО.П = 1;
				ШаблоныОбычные.П = 2;
			КонецЕсли;
			
			ШаблоныО = ШаблоныОбычные.Строки.Добавить();
			ШаблоныО.Название = "Возврат";

			Если Параметры.МассивШаблонов.Найти("Возврат") <> Неопределено Тогда
				ШаблоныО.П = 1;
				ШаблоныОбычные.П = 2;
			КонецЕсли;
			
			ШаблоныО = ШаблоныОбычные.Строки.Добавить();
			ШаблоныО.Название = "Реализация";
			
			Если Параметры.МассивШаблонов.Найти("Реализация") <> Неопределено Тогда
				ШаблоныО.П = 1;
				ШаблоныОбычные.П = 2;
			КонецЕсли;
			
			i = 0;
			ОбщКоличество = ШаблоныОбычные.Строки.Количество();
			Для Каждого Стр из ШаблоныОбычные.Строки Цикл
				Если Стр.П = 1 Тогда
					i = i + 1;					
				КонецЕсли;
				
				Если i = ОбщКоличество Тогда
					ШаблоныОбычные.П = 1;								
				КонецЕсли;
			КонецЦикла;

		// Шаблоны ЕГАИС

			
			ШаблоныЕГАИС = ВсеШаблоны.Строки.Добавить();
			ШаблоныЕГАИС.Название = "ЕГАИС";
			
				ШаблоныЕ = ШаблоныЕГАИС.Строки.Добавить();
				ШаблоныЕ.Название = "[Е] ТТН";
				
				Если Параметры.МассивШаблонов.Найти("[Е] ТТН") <> Неопределено Тогда
					ШаблоныЕ.П = 1;
					ШаблоныЕГАИС.П = 2;
				КонецЕсли;
			
				i = 0;
				ОбщКоличество = ШаблоныЕГАИС.Строки.Количество();
				Для Каждого Стр из ШаблоныЕГАИС.Строки Цикл
					Если Стр.П = 1 Тогда
						i = i + 1;					
					КонецЕсли;
					
					Если i = ОбщКоличество Тогда
						ШаблоныЕГАИС.П = 1;								
					КонецЕсли;
				КонецЦикла;
		// Шаблоны Маркировки

			ШаблоныМаркировки = ВсеШаблоны.Строки.Добавить();
			ШаблоныМаркировки.Название = "Маркировка";
			
				ШаблоныМ = ШаблоныМаркировки.Строки.Добавить();
				ШаблоныМ.Название = "[М] Приемка";
				
				Если Параметры.МассивШаблонов.Найти("[М] Приемка") <> Неопределено Тогда
					ШаблоныМ.П = 1;
					ШаблоныМаркировки.П = 2;
				КонецЕсли;
				
				ШаблоныМ = ШаблоныМаркировки.Строки.Добавить();
				ШаблоныМ.Название = "[М] Отгрузка";
				
				Если Параметры.МассивШаблонов.Найти("[М] Отгрузка") <> Неопределено Тогда
					ШаблоныМ.П = 1;	
					ШаблоныМаркировки.П = 2;					
				КонецЕсли;
				
				ШаблоныМ = ШаблоныМаркировки.Строки.Добавить();
				ШаблоныМ.Название = "[М] Чек ККМ";
				
				Если Параметры.МассивШаблонов.Найти("[М] Чек ККМ") <> Неопределено Тогда
					ШаблоныМ.П = 1;	
					ШаблоныМаркировки.П = 2;					
				КонецЕсли;
				
				ШаблоныМ = ШаблоныМаркировки.Строки.Добавить();
				ШаблоныМ.Название = "[М] Возврат в оборот";
				
				Если Параметры.МассивШаблонов.Найти("[М] Возврат в оборот") <> Неопределено Тогда
					ШаблоныМ.П = 1;	
					ШаблоныМаркировки.П = 2;					
				КонецЕсли;
				
				ШаблоныМ = ШаблоныМаркировки.Строки.Добавить();
				ШаблоныМ.Название = "[М] Вывод из оборота";
				
				Если Параметры.МассивШаблонов.Найти("[М] Вывод из оборота") <> Неопределено Тогда
					ШаблоныМ.П = 1;	
					ШаблоныМаркировки.П = 2;					
				КонецЕсли;

				ШаблоныМ = ШаблоныМаркировки.Строки.Добавить();
				ШаблоныМ.Название = "[М] Упаковка";
				
				Если Параметры.МассивШаблонов.Найти("[М] Упаковка") <> Неопределено Тогда
					ШаблоныМ.П = 1;
					ШаблоныМаркировки.П = 2;
					
				КонецЕсли;
				
				ШаблоныМ = ШаблоныМаркировки.Строки.Добавить();
				ШаблоныМ.Название = "[М] В оборот";
				
				Если Параметры.МассивШаблонов.Найти("[М] В оборот") <> Неопределено Тогда
					ШаблоныМ.П = 1;
					ШаблоныМаркировки.П = 2;
					
				КонецЕсли;
				
				i = 0;
				ОбщКоличество = ШаблоныМаркировки.Строки.Количество();
				Для Каждого Стр из ШаблоныМаркировки.Строки Цикл
					Если Стр.П = 1 Тогда
						i = i + 1;					
					КонецЕсли;
					
					Если i = ОбщКоличество Тогда
						ШаблоныМаркировки.П = 1;								
					КонецЕсли;
				КонецЦикла;
				
				
			ШаблоныМДЛП = ВсеШаблоны.Строки.Добавить();
			ШаблоныМДЛП.Название = "МДЛП";
						
				ШаблоныМД = ШаблоныМДЛП.Строки.Добавить();
				ШаблоныМД.Название = "[МДЛП] Приемка (п/а)";
				
				Если Параметры.МассивШаблонов.Найти("[МДЛП] Приемка (п/а)") <> Неопределено Тогда
					ШаблоныМД.П = 1;
					ШаблоныМДЛП.П = 2;
				КонецЕсли;

				ШаблоныМД = ШаблоныМДЛП.Строки.Добавить();
				ШаблоныМД.Название = "[МДЛП] Приемка (о/а киз)";
				
				Если Параметры.МассивШаблонов.Найти("[МДЛП] Приемка (о/а киз)") <> Неопределено Тогда
					ШаблоныМД.П = 1;
					ШаблоныМДЛП.П = 2;
				КонецЕсли;
				
				ШаблоныМД = ШаблоныМДЛП.Строки.Добавить();
				ШаблоныМД.Название = "[МДЛП] Приемка (о/а упак)";
				
				Если Параметры.МассивШаблонов.Найти("[МДЛП] Приемка (о/а упак)") <> Неопределено Тогда
					ШаблоныМД.П = 1;
					ШаблоныМДЛП.П = 2;
				КонецЕсли;
				
				ШаблоныМД = ШаблоныМДЛП.Строки.Добавить();
				ШаблоныМД.Название = "[МДЛП] Отгрузка";
				
				Если Параметры.МассивШаблонов.Найти("[МДЛП] Отгрузка") <> Неопределено Тогда
					ШаблоныМД.П = 1;
					ШаблоныМДЛП.П = 2;
				КонецЕсли;

				
				ШаблоныМД = ШаблоныМДЛП.Строки.Добавить();
				ШаблоныМД.Название = "[МДЛП] Агрегация";
				
				Если Параметры.МассивШаблонов.Найти("[МДЛП] Агрегация") <> Неопределено Тогда
					ШаблоныМД.П = 1;
					ШаблоныМДЛП.П = 2;
				КонецЕсли;
				
				ШаблоныМД = ШаблоныМДЛП.Строки.Добавить();
				ШаблоныМД.Название = "[МДЛП] Расформирование";
				
				Если Параметры.МассивШаблонов.Найти("[МДЛП] Расформирование") <> Неопределено Тогда
					ШаблоныМД.П = 1;
					ШаблоныМДЛП.П = 2;
				КонецЕсли;
				
				i = 0;
				ОбщКоличество = ШаблоныМДЛП.Строки.Количество();
				Для Каждого Стр из ШаблоныМДЛП.Строки Цикл
					Если Стр.П = 1 Тогда
						i = i + 1;					
					КонецЕсли;
					
					Если i = ОбщКоличество Тогда
						ШаблоныМДЛП.П = 1;								
					КонецЕсли;
				КонецЦикла;
		
    // Создание Реквизита формы типа ДанныеФормыДерево
    МассивДобавляемыхРеквизитов = Новый Массив;
    МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Дерево", Новый ОписаниеТипов("ДеревоЗначений")));
    Для Каждого Колонка Из ДеревоОбъект.Колонки Цикл
        МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "Дерево"));
    КонецЦикла;
    ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);

    // Преобразование объекта прикладного типа ДеревоЗначений
    // в реквизит управляемой формы (данные формы)
    ЗначениеВРеквизитФормы(ДеревоОбъект, "Дерево");

    // Создание элемента формы типа ТаблицаФормы для отображения дерева
    ЭлементДерево = Элементы.Добавить("Дерево", Тип("ТаблицаФормы"));
    ЭлементДерево.ПутьКДанным = "Дерево";
    ЭлементДерево.Отображение = ОтображениеТаблицы.Дерево;

    Для Каждого Колонка Из ДеревоОбъект.Колонки Цикл
        НовыйЭлемент = Элементы.Добавить(Колонка.Имя, Тип("ПолеФормы"), ЭлементДерево);
        НовыйЭлемент.ПутьКДанным = "Дерево." + Колонка.Имя;
        Если НЕ Колонка.Имя = "П" Тогда
            НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
        Иначе
            НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
            НовыйЭлемент.ТриСостояния = Истина;
            НовыйЭлемент.УстановитьДействие("ПриИзменении", "ФлажокПриИзменении");
        КонецЕсли;
    КонецЦикла;

	Элементы.Название.Ширина = 20;
КонецПроцедуры

&НаКлиенте
Процедура ФлажокПриИзменении(Элемент)

    ИДТекущейСтроки = Элементы["Дерево"].ТекущаяСтрока;

    Если ИДТекущейСтроки <> Неопределено Тогда

        ЭлементКоллекции = ЭтаФорма["Дерево"].НайтиПоИдентификатору(ИДТекущейСтроки);

        Если ЭлементКоллекции.П = 2 Тогда
            ЭлементКоллекции.П = 0;
        КонецЕсли;

        УстановкаФлажков(ЭлементКоллекции, ЭлементКоллекции.П);

        Родитель = ЭлементКоллекции.ПолучитьРодителя();
        Пока Родитель <> Неопределено Цикл
            Родитель.П = ?(УстановленноДляВсех(ЭлементКоллекции), ЭлементКоллекции.П, 2);
            ЭлементКоллекции = Родитель;
            Родитель = ЭлементКоллекции.ПолучитьРодителя();
        КонецЦикла;

    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановкаФлажков(ЭлементКоллекции, ЗначениеПометки)

    ПодчинЭлементы = ЭлементКоллекции.ПолучитьЭлементы();
    Для Каждого ТекЭлемент Из ПодчинЭлементы Цикл
        ТекЭлемент.П = ЗначениеПометки;
        УстановкаФлажков(ТекЭлемент, ТекЭлемент.П);
    КонецЦикла;

КонецПроцедуры

&НаКлиенте
Функция УстановленноДляВсех(ЭлементКоллекции)

    СоседниеЭлементы = ЭлементКоллекции.ПолучитьРодителя().ПолучитьЭлементы();
    Для Каждого ТекЭлемент Из СоседниеЭлементы Цикл
        Если ТекЭлемент.П <> ЭлементКоллекции.П Тогда
            Возврат Ложь;
        КонецЕсли;
    КонецЦикла;
    Возврат Истина;

КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.Дерево.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни;
	Элементы.Дерево.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
КонецПроцедуры

&НаСервере
Процедура СохранитьНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	МассивШаблонов = Новый Массив;
	СохранитьНаСервере();
	ЭлементыДерева = ЭтаФорма.Дерево.ПолучитьЭлементы();
    Для Каждого ЭлементДерева Из ЭлементыДерева Цикл
        Элементы.Дерево.Развернуть(ЭлементДерева.ПолучитьИдентификатор(), Истина);
        ЭлементыУр2 = ЭлементДерева.ПолучитьЭлементы();
        Для Каждого ЭлементУр2 Из ЭлементыУр2 Цикл
            Элементы.Дерево.Развернуть(ЭлементДерева.ПолучитьИдентификатор(), Истина);
            ЭлементыУр3 = ЭлементУр2.ПолучитьЭлементы();
			//ДанныеФормыВЗначение(ЭлементУр2.ПолучитьЭлементы(), Тип("ТаблицаЗначений")); 
			Для Каждого Стр Из ЭлементыУр3 Цикл
				Если Стр.П = 1 Тогда
					МассивШаблонов.Добавить(Стр.Название);	
				КонецЕсли;				
			КонецЦикла;
        КонецЦикла;
	КонецЦикла;
	
	
//	СоздатьНовыеШаблоны(МассивШаблонов);
	Оповестить("Закрытие конструктора", МассивШаблонов);
	ЭтаФорма.Закрыть();


КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Оповестить("Закрытие конструктора11", "123");
	// Вставить содержимое обработчика.
КонецПроцедуры

