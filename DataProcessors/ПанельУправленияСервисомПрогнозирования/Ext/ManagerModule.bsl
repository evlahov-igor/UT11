
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Начать прогнозирование.
// 
// Параметры:
//  ПараметрыПроцедуры - Структура - 
//  АдресХранилища- Строка - 
Процедура НачатьПрогнозирование(ПараметрыПроцедуры, АдресХранилища) Экспорт
	
	ВидПлана = ПараметрыПроцедуры.ВидПлана;
	ТребуетсяПолнаяВыгрузка = ПараметрыПроцедуры.ТребуетсяПолнаяВыгрузка;
	
	Если ТребуетсяПолнаяВыгрузка Тогда
		НастройкиСервиса = СервисПрогнозирования.ПолучитьНастройкиСервиса();
		Для Каждого Коллекция Из НастройкиСервиса.Коллекции Цикл
			ОписаниеКоллекции = Коллекция.Значение;
			Если Не ОписаниеКоллекции.Выгружать Тогда
				Продолжить;
			КонецЕсли;
			
			Если ОписаниеКоллекции.Выгружать Тогда
				Если НастройкиСервиса.ИзмененияКоллекций.Свойство(ОписаниеКоллекции.ИмяВИсточнике)
					И Не ОписаниеКоллекции.Категориальный Тогда
					// При выгрузке будет автоматически сброшена дата актуальности.
					// Все коллекции так же будут удалены на сервере в методе СоздатьКоллекции при такой настройке.
					НастройкиСервиса.ИзмененияКоллекций[ОписаниеКоллекции.ИмяВИсточнике].ИзмененыОтборы = Истина;
				КонецЕсли;
				НастройкиСервиса.ИзмененияКоллекций[ОписаниеКоллекции.ИмяВИсточнике].ИзмененФормат = Истина;
			КонецЕсли;
		КонецЦикла;
		СервисПрогнозирования.ОбновитьНастройкиСервиса(НастройкиСервиса);
	КонецЕсли;
	
	// 1. Выгрузка данных.
	СервисПрогнозирования.СоздатьКоллекции();
	СервисПрогнозирования.ВыгрузитьКоллекции();
	
	// Индивидуальные для видов планов настройки
	
	// 2. Проверка наличия модели и ее конфигурации, создание.
	СервисПрогнозирования.ПроверитьСоздатьМодель(ВидПлана);
	СервисПрогнозирования.ПроверитьСоздатьКонфигурациюМодели(ВидПлана);
	
	// 3. Запрос прогноза.
	СервисПрогнозирования.ЗапуститьОбучение(ВидПлана);
	
КонецПроцедуры

// Информация о выгрузке коллекций и статусы обучения.
// 
// Параметры:
//  СценарийПрогнозирования - СправочникСсылка.СценарииТоварногоПланирования - 
//  ВидПлана - СправочникСсылка.ВидыПланов - 
// 
// Возвращаемое значение:
//  см. СтруктураВозвратаИнфоОКоллекцияхИСтатусах.
Функция ИнформацияОВыгрузкеКоллекцийИСтатусыОбучения(СценарийПрогнозирования, ВидПлана) Экспорт
	
	ВыгрузкаАктивна = СервисПрогнозирования.ИдетВыгрузка();
	НастройкиСервиса = СервисПрогнозирования.ПолучитьНастройкиСервиса();
	СтатусыОбучения = СервисПрогнозирования.СтатусОбученияМодели(СценарийПрогнозирования, ВидПлана);
	
	СтруктураВозврата = СтруктураВозвратаИнфоОКоллекцияхИСтатусах();
	СтруктураВозврата.ВыгрузкаАктивна = ВыгрузкаАктивна;
	СтруктураВозврата.НастройкиСервиса = НастройкиСервиса;
	СтруктураВозврата.СтатусыОбучения = СтатусыОбучения;
	
	Возврат СтруктураВозврата;
	
КонецФункции

// Запустить обучение прогноза в сервисе прогнозирования продаж.
// 
// Параметры:
//  ВидПлана - СправочникСсылка.ВидыПланов - 
// 
// Возвращаемое значение:
//  Строка
Функция ОбновитьПрогнозНаСервере(ВидПлана) Экспорт
	
	Ответ = СервисПрогнозирования.ПроверитьСоздатьМодель(ВидПлана);
	Если Не ПустаяСтрока(Ответ.ТекстОшибки) Тогда
		Возврат Ответ.ТекстОшибки;
	КонецЕсли;
	
	Ответ = СервисПрогнозирования.ПроверитьСоздатьКонфигурациюМодели(ВидПлана);
	Если Не ПустаяСтрока(Ответ.ТекстОшибки) Тогда
		Возврат Ответ.ТекстОшибки;
	КонецЕсли;
	
	Ответ = СервисПрогнозирования.ЗапуститьОбучение(ВидПлана);
	Если Не ПустаяСтрока(Ответ.ТекстОшибки) Тогда
		Возврат Ответ.ТекстОшибки;
	КонецЕсли;
	
	Возврат Ответ.ТекстОшибки;
	
КонецФункции

// Загрузить прогноз из сервиса прогнозирования продаж.
// 
// Параметры:
//  ВидПлана - СправочникСсылка.ВидыПланов - 
// 
// Возвращаемое значение:
//  Строка
Функция ЗагрузитьДанныеИзСервиса(ВидПлана) Экспорт
	
	ИнфоСтатусаОбучения = СервисПрогнозирования.ПолучитьСтатусОбучения(ВидПлана);
	ТекстОшибки = ИнфоСтатусаОбучения.ТекстОшибки;
	
	Если ИнфоСтатусаОбучения <> Неопределено
		И ИнфоСтатусаОбучения.Статус = СервисПрогнозирования.СтатусГотовКПолучению()
		И ПустаяСтрока(ТекстОшибки) Тогда
		Ответ = СервисПрогнозирования.ПолучитьПрогнозСервиса(ВидПлана, ИнфоСтатусаОбучения.ИдОбучения);
		ТекстОшибки = Ответ.ТекстОшибки;
	КонецЕсли;
	
	Возврат ТекстОшибки;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Структура возврата инфо о коллекциях и статусах.
// 
// Возвращаемое значение:
//  Структура - Структура возврата инфо о коллекциях и статусах:
// * ВыгрузкаАктивна - Булево - 
// * НастройкиСервиса - см. СервисПрогнозирования.ПолучитьНастройкиСервиса.
// * СтатусыОбучения - см. СервисПрогнозирования.СтатусОбученияМодели.
Функция СтруктураВозвратаИнфоОКоллекцияхИСтатусах()
	
	Структура = Новый Структура();
	Структура.Вставить("ВыгрузкаАктивна");
	Структура.Вставить("НастройкиСервиса");
	Структура.Вставить("СтатусыОбучения");
	
	Возврат Структура;
	
КонецФункции

#КонецОбласти

#КонецЕсли

